
/* Copyright (C) 2005-2009 Zimbra Inc. http://www.zimbra.com/ */
if(AjxPackage.define("Startup1_2")){
if(AjxPackage.define("zimbraMail.share.model.ZmObjectHandler")){
ZmObjectHandler=function(e,t){
if(arguments.length>0){
this.init(e,t)
}};
ZmObjectHandler.prototype.constructor=ZmObjectHandler;
ZmObjectHandler.prototype.isZmObjectHandler=true;
ZmObjectHandler.prototype.init=function(e,t){
this._typeName=e;
this._className=t?t:"Object";
this.name=this.toString()
};
ZmObjectHandler.prototype.toString=function(){
if(!this._toString){
var e=""+this.constructor;
e=e.substring(0,e.indexOf("("));
this._toString=e.substring("function ".length)
}
return this._toString
};
ZmObjectHandler.prototype.getEnabled=function(){
return true
};
ZmObjectHandler.prototype.getTypeName=function(){
return this._typeName
};
ZmObjectHandler.prototype.getClassName=function(a,e,t){
return this._className
};
ZmObjectHandler.prototype.getHoveredClassName=function(i,t,a){
var e=this.getClassName(i,t,a);
if(this._cachedClassNameForHovered!==e){
this._cachedClassNameForHovered=e;
this._classNameHovered=e+"-"+DwtCssStyle.HOVER
}
return this._classNameHovered
};
ZmObjectHandler.prototype.getActiveClassName=function(i,t,a){
var e=this.getClassName(i,t,a);
if(this._cachedClassNameForActive!==e){
this._cachedClassNameForActive=e;
this._classNameActive=e+"-"+DwtCssStyle.ACTIVE
}
return this._classNameActive
};
ZmObjectHandler.prototype.findObject=function(e,a,t){
if(a===0){
this._lastMatch=null;
this._noMatch=false
}
if(this._noMatch){
return null
}
if(this._lastMatch&&this._lastMatch.index>=a){
return this._lastMatch
}
this._lastMatch=this.match(e,a,t);
this._noMatch=(this._lastMatch===null);
return this._lastMatch
};
ZmObjectHandler.prototype.match=function(e,t){
return null
};
ZmObjectHandler.prototype._getHtmlContent=function(a,e,o,t,i){
a[e++]=AjxStringUtil.htmlEncode(o,true);
return e
};
ZmObjectHandler.prototype.generateSpan=function(i,e,n,o,a,t){
i[e++]="<span class='";
i[e++]=this.getClassName(n);
i[e++]="' role='link' id='";
i[e++]=o;
i[e++]="'>";
e=this._getHtmlContent(i,e,n,a,o,t);
i[e++]="</span>";
return e
};
ZmObjectHandler.prototype.hasToolTipText=function(t,e){
return true
};
ZmObjectHandler.prototype.getToolTipText=function(t,e){
return AjxStringUtil.htmlEncode(t)
};
ZmObjectHandler.prototype.populateToolTip=function(t,e){};
ZmObjectHandler.prototype.getActionMenu=function(a,t,e){
return null
};
ZmObjectHandler.prototype.selected=function(i,t,a,e){
return this.clicked(t,i,e,a)
};
ZmObjectHandler.prototype.clicked=function(t,i,e,a){};
ZmObjectHandler.prototype.hoverOver=function(t,a,e,r){
var n=this.getToolTipText(t,a)||"",o,s;
if(typeof(n)==="string"){
o=n
}else{
if(n.isAjxCallback||AjxUtil.isFunction(n)){
s=n
}else{
if(typeof(n)==="object"){
o=n.content;
s=n.callback
}}}
if(!o&&s&&n.loading){
o=AjxMsg.loading
}
if(o){
this._showTooltip(t,a,e,r,o)
}
if(s){
var i=new AjxCallback(this,this._showTooltip,[t,a,e,r]);
AjxTimedAction.scheduleAction(new AjxTimedAction(null,function(){
s.run(i)
}
),0)
}};
ZmObjectHandler.prototype._showTooltip=function(t,i,e,s,o){
var a=DwtShell.getShell(window);
var n=a.getToolTip();
n.setContent(o);
n.popup(e,s);
this.populateToolTip(t,i)
};
ZmObjectHandler.prototype.hoverOut=function(e,a){
var t=DwtShell.getShell(window);
var i=t.getToolTip();
i.popdown()
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmObjectManager")){
ZmObjectManager=function(t,e,a){
this._selectCallback=e;
this._uuid=Dwt.getNextId();
this._objectIdPrefix="OBJ_PREFIX_";
this._objectHandlers={};
if(appCtxt.get(ZmSetting.MAIL_ENABLED)&&window.ZmImageAttachmentObjectHandler){
this._imageAttachmentHandler=new ZmImageAttachmentObjectHandler()
}
if(!a){
this.initialized=false;
this._addAutoHandlers()
}else{
this.initialized=true
}
this.sortHandlers();
this.reset();
this.setView(t)
};
ZmObjectManager._TOOLTIP_DELAY=275;
ZmObjectManager.EMAIL="email";
ZmObjectManager.URL="url";
ZmObjectManager.PHONE="phone";
ZmObjectManager.DATE="date";
ZmObjectManager.ADDRESS="address";
ZmObjectManager.TITLE="title";
ZmObjectManager.ATTR_CURRENT_DATE="currentDate";
ZmObjectManager._autohandlers=[];
ZmObjectManager.registerHandler=function(obj,type,priority){
if(typeof obj=="string"){
obj=eval(obj)
}
var c=ZmObjectManager._autohandlers;
if(!obj.__registered){
var id=c.push(obj);
var i=id-1;
if(type){
c[i].useType=type
}
if(priority){
c[i].usePrio=priority
}
obj.__registered=true
}};
ZmObjectManager.unregisterHandler=function(obj){
if(typeof obj=="string"){
obj=eval(obj)
}
var c=ZmObjectManager._autohandlers,i;
for(i=c.length;
--i>=0;
){
if(c[i]===obj){
c.splice(i,1);
break
}}};
ZmObjectManager.prototype.toString=function(){
return"ZmObjectManager"
};
ZmObjectManager.prototype.getHandlers=function(){
if(!this.initialized&&appCtxt.zimletsPresent()){
var e=appCtxt.getZimletMgr();
if(e.isLoaded()){
this.initialized=true;
var a=e.getContentZimlets();
for(var t=0;
t<a.length;
t++){
this.addHandler(a[t],a[t].type,a[t].prio)
}}}
return this._objectHandlers
};
ZmObjectManager.prototype.addHandler=function(a,t,e){
t=t||(a.getTypeName()?a.getTypeName():"none");
e=e?e:-1;
a._prio=e;
var i=this.getHandlers();
if(!i[t]){
i[t]=[]
}
i[t].push(a)
};
ZmObjectManager.prototype.removeHandler=function(a,t){
t=t||(a.getTypeName()?a.getTypeName():"none");
var n=this.getHandlers();
if(n[t]){
for(var e=0,o=n[t].length;
e<o;
e++){
if(n[t][e]==a){
n[t].splice(e,1);
break
}}}};
ZmObjectManager.prototype.sortHandlers=function(){
this._allObjectHandlers=[];
var a=this.getHandlers();
for(var t in a){
a[t].sort(ZmObjectManager.__byPriority);
for(var e=0;
e<a[t].length;
e++){
this._allObjectHandlers.push(a[t][e])
}}
this._allObjectHandlers.sort(ZmObjectManager.__byPriority)
};
ZmObjectManager.prototype._addAutoHandlers=function(){
var s=ZmObjectManager._autohandlers,e,o,n;
for(e=0;
e<s.length;
++e){
o=s[e];
var a=o;
var t=o.TYPE;
if(appCtxt.zimletsPresent()){
if(!(o.isZmObjectHandler)){
a=new o()
}}
if(o.useType){
t=o.useType
}
if(o.usePrio){
n=o.usePrio
}
this.addHandler(a,t,n)
}};
ZmObjectManager.prototype.reset=function(){
this._objects={}
};
ZmObjectManager.prototype.setView=function(e){
if(e!=null&&appCtxt.getZimletMgr().isLoaded()){
e.addListener(DwtEvent.ONMOUSEOVER,new AjxListener(this,this._mouseOverListener));
e.addListener(DwtEvent.ONMOUSEOUT,new AjxListener(this,this._mouseOutListener));
e.addListener(DwtEvent.ONMOUSEDOWN,new AjxListener(this,this._mouseDownListener));
e.addListener(DwtEvent.ONMOUSEUP,new AjxListener(this,this._mouseUpListener));
e.addListener(DwtEvent.ONMOUSEMOVE,new AjxListener(this,this._mouseMoveListener));
e.addListener(DwtEvent.ONCONTEXTMENU,new AjxListener(this,this._rightClickListener));
this._hoverOverListener=new AjxListener(this,this._handleHoverOver);
this._hoverOutListener=new AjxListener(this,this._handleHoverOut)
}
this._view=e
};
ZmObjectManager.prototype.getView=function(){
return this._view
};
ZmObjectManager.prototype.objectsCount=function(){
return(appCtxt.zimletsPresent())?appCtxt.getZimletMgr().getContentZimlets().length:0
};
ZmObjectManager.prototype.getImageAttachmentHandler=function(){
return this._imageAttachmentHandler
};
ZmObjectManager.prototype._getAjxEmailAddress=function(e){
if(appCtxt.isChildWindow&&e.isAjxEmailAddress){
e=AjxEmailAddress.copy(e)
}
return e
};
ZmObjectManager.prototype.findObjects=function(f,e,o,m,a){
if(!f){
return""
}
var h=[];
var c=0;
var l=f.length;
var b=0;
var n=this.getHandlers();
while(true){
var w=null;
var p=l;
var u=null;
var y;
var d;
var r;
var s=null;
if(o){
d=n[o];
if(d){
for(y=0;
y<d.length;
y++){
s=d[y].findObject(f,b,this);
if(!s){
continue
}
if(s.index>=p){
break
}
w=s;
p=s.index;
u=d[y]
}}
if(o=="email"||f instanceof AjxEmailAddress){
if(u){
f=this._getAjxEmailAddress(f);
this.generateSpan(u,h,c,f,w,a)
}else{
h[c++]=AjxStringUtil.htmlEncode(f.toString())
}
return h.join("")
}}else{
for(var g=0;
g<this._allObjectHandlers.length;
g++){
var t=this._allObjectHandlers[g];
s=t.findObject(f,b,this);
if(s&&s.index<p){
w=s;
p=s.index;
u=t
}}}
if(!w){
r=f.substring(b,l);
if(e){
h[c++]=AjxStringUtil.htmlEncode(r,!!m)
}else{
h[c++]=r
}
break
}
if(p>b){
r=f.substring(b,p);
if(e){
h[c++]=AjxStringUtil.htmlEncode(r,!!m)
}else{
h[c++]=r
}}
if(u){
c=this.generateSpan(u,h,c,w[0],w.context)
}else{
h[c++]=w[0]
}
b=w.index+(w.matchLength||w[0].length)
}
return h.join("")
};
ZmObjectManager.prototype.processObjectsInNode=function(s,n){
var e=this;
s=s||n.ownerDocument;
var a=s.createElement("div");
var o=function(c,d){
var p,g,l,y;
switch(c.nodeType){
case 1:c.normalize();
p=c.tagName.toLowerCase();
if(y==null){
if(/^(img|a)$/.test(p)){
var r;
try{
r=c.href
}
catch(v){}
var u=p==="a"&&ZmMailMsgView._MAILTO_RE.test(r),w=p==="a"&&ZmMailMsgView._URL_RE.test(r);
if((u||w)&&c.target){
var f=u?r:RegExp.$1;
p=s.createElement("div");
p.innerHTML=e.findObjects(AjxStringUtil.trim(f));
p=p.firstChild;
if(p.nodeType==3){
return p.nextSibling
}
c.parentNode.insertBefore(p,c);
p.innerHTML="";
p.appendChild(c);
return p.nextSibling
}
d=false
}}else{
c=y
}
if(parseFloat(c.style.textIndent)<0){
c.style.textIndent=""
}
for(g=c.firstChild;
g;
g=o(g,d)){}
return c.nextSibling;
case 3:case 4:if(d&&/[^\s\xA0]/.test(c.data)){
try{
var j=null,x=null;
if(!AjxEnv.isIE){
var m=/^[\s\xA0]+/.exec(c.data);
if(m){
j=c;
c=c.splitText(m[0].length)
}
m=/[\s\xA0]+$/.exec(c.data);
if(m){
x=c.splitText(c.data.length-m[0].length)
}}
p=a;
var h=e.findObjects(c.data,true,null,false);
var q=false;
if(AjxEnv.isIE){
p.innerHTML=["<pre>",h,"</pre>"].join("");
q=true
}else{
p.innerHTML=h
}
if(j){
p.insertBefore(j,p.firstChild)
}
if(x){
p.appendChild(x)
}
j=c.parentNode;
if(q){
p=p.firstChild
}
while(p.firstChild){
j.insertBefore(p.firstChild,c)
}
p=c.nextSibling;
j.removeChild(c);
return p
}
catch(k){}}}
return c.nextSibling
};
if(n&&n.childNodes&&n.childNodes.length){
for(var t=0;
t<n.childNodes.length;
t++){
o(n.childNodes[t],true)
}}};
ZmObjectManager.prototype.findObjectsInNode=function(a,t,o,n){
var i=this,r=a.ownerDocument,h=r.createElement("div");
if(!t){
t=/^(script|link|object|iframe|applet)$/i
}
var e=function(d,u){
var f,p,c,y;
switch(d.nodeType){
case 1:d.normalize();
f=d.tagName.toLowerCase();
if(n&&n.foreachElement){
y=n.foreachElement(d,f,t,o)
}
if(y==null){
if(/^(img|a)$/.test(f)){
if(f=="a"&&d.target&&(ZmMailMsgView._URL_RE.test(d.href)||ZmMailMsgView._MAILTO_RE.test(d.href))){
var g=RegExp.$1;
f=r.createElement("div");
f.innerHTML=i.findObjects(AjxStringUtil.trim(RegExp.$1));
f=f.firstChild;
if(f.nodeType==3){
return f.nextSibling
}
d.parentNode.insertBefore(f,d);
f.innerHTML="";
f.appendChild(d);
return f.nextSibling
}
u=false
}else{
if(t.test(f)||(o&&!o.test(f))){
f=d.nextSibling;
d.parentNode.removeChild(d);
return f
}}}else{
d=y
}
if(AjxEnv.isIE){
d.style.cssText=d.style.cssText
}
for(p=d.firstChild;
p;
p=e(p,u)){}
return d.nextSibling;
case 3:case 4:if(u&&/[^\s\xA0]/.test(d.data)){
try{
var x=null,v=null;
if(!AjxEnv.isIE){
var m=/^[\s\xA0]+/.exec(d.data);
if(m){
x=d;
d=d.splitText(m[0].length)
}
m=/[\s\xA0]+$/.exec(d.data);
if(m){
v=d.splitText(d.data.length-m[0].length)
}}
f=h;
var l=i.findObjects(d.data,true,null,false);
var k=false;
if(AjxEnv.isIE){
f.innerHTML=["<pre>",l,"</pre>"].join("");
k=true
}else{
f.innerHTML=l
}
if(x){
f.insertBefore(x,f.firstChild)
}
if(v){
f.appendChild(v)
}
x=d.parentNode;
if(k){
f=f.firstChild
}
while(f.firstChild){
x.insertBefore(f.firstChild,d)
}
f=d.nextSibling;
x.removeChild(d);
return f
}
catch(w){}}}
return d.nextSibling
};
var s=r.createDocumentFragment();
while(a.firstChild){
s.appendChild(a.firstChild);
e(s.lastChild,true,this)
}
a.appendChild(s)
};
ZmObjectManager.prototype.setHandlerAttr=function(o,t,n){
var e=this.getHandlers()[o];
if(e){
for(var a=0;
a<e.length;
a++){
e[a][t]=n
}}};
ZmObjectManager.prototype.generateSpan=function(o,i,e,n,a,t){
var s=this._objectIdPrefix+Dwt.getNextId();
if(o&&o.name){
s=s+"_"+o.name
}
this._objects[s]={
object:n,handler:o,id:s,context:a};
return o.generateSpan(i,e,n,s,a,t)
};
ZmObjectManager.prototype._findObjectSpan=function(t){
while(t&&(!t.id||t.id.indexOf(this._objectIdPrefix)!==0)){
t=t.parentNode
}
return t
};
ZmObjectManager.prototype._mouseOverListener=function(o){
var i=this._findObjectSpan(o.target);
if(!i){
return false
}
var e=this._objects[i.id];
if(!e){
return false
}
i.className=e.handler.getHoveredClassName(e.object,e.context,i.id);
if(e.handler.hasToolTipText()){
var a=DwtShell.getShell(window);
var t=a.getHoverMgr();
if((!t.isHovering()||t.getHoverObject()!=e)&&!DwtMenu.menuShowing()){
t.reset();
t.setHoverOverDelay(ZmObjectManager._TOOLTIP_DELAY);
t.setHoverObject(e);
t.setHoverOverData(e);
t.setHoverOverListener(this._hoverOverListener);
t.hoverOver(o.docX,o.docY);
o.hoverStarted=true
}}
o._returnValue=true;
o._dontCallPreventDefault=true;
return false
};
ZmObjectManager.prototype._mouseOutListener=function(o){
var i=this._findObjectSpan(o.target);
var e=i?this._objects[i.id]:null;
if(e){
i.className=e.handler.getClassName(e.object,e.context,i.id);
var a=DwtShell.getShell(window);
var t=a.getHoverMgr();
t.setHoverOutDelay(150);
t.setHoverOutData(e);
t.setHoverOutListener(this._hoverOutListener);
t.hoverOut()
}
return false
};
ZmObjectManager.prototype._mouseMoveListener=function(o){
o._returnValue=true;
o._dontCallPreventDefault=true;
o._stopPropagation=true;
var i=this._findObjectSpan(o.target);
var e=i?this._objects[i.id]:null;
if(e){
var a=DwtShell.getShell(window);
var t=a.getHoverMgr();
if(!t.isHovering()){
t.hoverOver(o.docX,o.docY)
}}
return false
};
ZmObjectManager.prototype._rightClickListener=function(e){
e.button=DwtMouseEvent.RIGHT;
return this._mouseDownListener(e)
};
ZmObjectManager.prototype._mouseDownListener=function(o){
if(!o._authoritative){
o._dontCallPreventDefault=true;
o._returnValue=true;
o._stopPropagation=false
}
var i=this._findObjectSpan(o.target);
if(!i){
return true
}
var e=this._objects[i.id];
if(!e){
return true
}
o._stopPropagation=true;
var a=DwtShell.getShell(window);
var t=a.getHoverMgr();
t.setHoverOutDelay(0);
t.setHoverOutData(e);
t.setHoverOutListener(this._hoverOutListener);
t.hoverOut();
i.className=e.handler.getActiveClassName(e.object,e.context,i.id);
if(o.button==DwtMouseEvent.RIGHT){
var n=e.handler.getActionMenu(e.object,i,e.context,o);
if(n){
n.popup(0,o.docX,o.docY);
o._dontCallPreventDefault=false;
o._returnValue=false;
o._stopPropagation=true;
return true
}}else{
if(o.button==DwtMouseEvent.LEFT){
if(this._selectCallback){
this._selectCallback.run()
}
e.handler.selected(e.object,i,o,e.context);
return true
}}
return false
};
ZmObjectManager.prototype._mouseUpListener=function(a){
a._returnValue=true;
a._dontCallPreventDefault=true;
a._stopPropagation=true;
var t=this._findObjectSpan(a.target);
if(!t){
return false
}
var e=this._objects[t.id];
if(!e){
return false
}
t.className=e.handler.getHoveredClassName(e.object,e.context,t.id);
return false
};
ZmObjectManager.prototype._handleHoverOver=function(n){
if(!(n&&n.object)){
return
}
var o=this._findObjectSpan(n.target);
var i=n.object.handler;
var t=n.object.object;
var a=n.object.context;
var r=n.object.id;
var e=n.x;
var s=n.y;
i.hoverOver(t,a,e,s,o,r)
};
ZmObjectManager.prototype._handleHoverOut=function(o){
if(!(o&&o.object)){
return
}
var i=this._findObjectSpan(o.target);
var a=o.object.handler;
var e=o.object.object;
var t=o.object.context;
var n=o.object.id;
a.hoverOut(e,t,i,n)
};
ZmObjectManager.__byPriority=function(t,e){
return(e._prio<t._prio)-(t._prio<e._prio)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmSettings")){
ZmSettings=function(e){
ZmModel.call(this,ZmEvent.S_SETTINGS);
this._settings={};
this._nameToId={};
this.getInfoResponse=null;
this._handleImplicitChange=new AjxListener(this,this._implicitChangeListener);
if(!e){
this.initialize()
}};
ZmSettings.prototype=new ZmModel;
ZmSettings.prototype.constructor=ZmSettings;
ZmSettings.BASE64_TO_NORMAL_RATIO=1.34;
ZmSettings.prototype.registerSetting=function(a,t){
ZmSetting[a]=a;
var e=this._settings[a]=new ZmSetting(a,t);
if(t.name){
this._nameToId[t.name]=a
}
if(t.isImplicit){
e.addChangeListener(this._handleImplicitChange)
}
return e
};
ZmSettings.prototype.toString=function(){
return"ZmSettings"
};
ZmSettings.prototype.initialize=function(){
this._initialize();
this._setDefaults();
this.userSettingsLoaded=false;
var e=new AjxListener(this,this._changeListener);
if(!appCtxt.multiAccounts){
this.getSetting(ZmSetting.QUOTA_USED).addChangeListener(e)
}
this.getSetting(ZmSetting.POLLING_INTERVAL).addChangeListener(e);
this.getSetting(ZmSetting.SKIN_NAME).addChangeListener(e);
this.getSetting(ZmSetting.SHOW_SELECTION_CHECKBOX).addChangeListener(e);
this.getSetting(ZmSetting.LOCALE_NAME).addChangeListener(e);
this.getSetting(ZmSetting.FONT_NAME).addChangeListener(e);
this.getSetting(ZmSetting.FONT_SIZE).addChangeListener(e);
this.getSetting(ZmSetting.SHORTCUTS).addChangeListener(e);
this.getSetting(ZmSetting.CHILD_ACCTS_VISIBLE).addChangeListener(e);
this.getSetting(ZmSetting.ATTACHMENTS_BLOCKED).addChangeListener(e);
if(appCtxt.isOffline){
this.getSetting(ZmSetting.OFFLINE_IS_MAILTO_HANDLER).addChangeListener(e);
this.getSetting(ZmSetting.OFFLINE_BACKUP_ACCOUNT_ID).addChangeListener(e);
this.getSetting(ZmSetting.OFFLINE_BACKUP_INTERVAL).addChangeListener(e);
this.getSetting(ZmSetting.OFFLINE_BACKUP_PATH).addChangeListener(e);
this.getSetting(ZmSetting.OFFLINE_BACKUP_KEEP).addChangeListener(e);
this.getSetting(ZmSetting.OFFLINE_UPDATE_NOTIFY).addChangeListener(e)
}};
ZmSettings.prototype.get=function(t,e){
return(t&&this._settings[t])?this._settings[t].getValue(e):null
};
ZmSettings.prototype.getSetting=function(e){
return this._settings[e]
};
ZmSettings.prototype.createFromJs=function(s,h,r,c){
c=c==null||c;
for(var o in s){
var t=s[o];
var d=this._settings[this._nameToId[o]];
if(d){
if(d.dataType==ZmSetting.D_HASH){
var e=t.split(",");
var l={};
for(var a=0;
a<e.length;
a++){
var n=e[a].split(":");
l[n[0]]=n[1]
}
t=l
}
d.setValue(t,null,h,r,c);
if(ZmSetting.IS_IMPLICIT[d.id]){
d.origValue=d.copyValue()
}}else{}}};
ZmSettings.prototype.getSettingByName=function(e){
return this._nameToId[e]
};
ZmSettings.prototype.attrExists=function(t){
var e=this.getSetting(t).name;
return(this.getInfoResponse.prefs._attrs[e]||this.getInfoResponse.attrs._attrs[e])
};
ZmSettings.prototype.loadUserSettings=function(r,i,s,a,e){
var o=[r,s];
var n=AjxSoapDoc.create("GetInfoRequest","urn:zimbraAccount");
n.setMethodAttribute("rights","createDistList");
var h=this._handleResponseLoadUserSettings.bind(this,o);
if(e){
e.addNewRequestParams(n,h)
}else{
var t={
soapDoc:(a?null:n),accountName:s,asyncMode:true,callback:h,errorCallback:i,response:a};
appCtxt.getAppController().sendRequest(t)
}};
ZmSettings.prototype._handleResponseLoadUserSettings=function(a,t,e){
this.setUserSettings(e.getResponse().GetInfoResponse,t);
this.userSettingsLoaded=true;
if(a){
a.run(e)
}};
ZmSettings.prototype.setUserSettings=function(y){
y=Dwt.getParams(arguments,["info","accountName","setDefault","skipNotify","skipImplicit","preInit"]);
var f=this.getInfoResponse=y.info;
appCtxt.createDistListAllowed=false;
appCtxt.createDistListAllowedDomains=[];
appCtxt.createDistListAllowedDomainsMap={};
var n=f.rights&&f.rights.targets;
if(n){
for(var d=0;
d<n.length;
d++){
var w=n[d];
if(w.right=="createDistList"){
if(w.target[0].type=="domain"){
appCtxt.createDistListAllowed=true;
appCtxt.createDistListAllowedDomains.push(w.target[0].name);
appCtxt.createDistListAllowedDomainsMap[w.target[0].name]=true;
break
}}}}
this._settings.VOICE_ENABLED.setValue(this._hasVoiceFeature(),null,false,true);
var e=y.accountName;
var g=y.preInit?false:y.setDefault;
var r=y.preInit?true:y.skipNotify;
var a=y.preInit?true:y.skipImplicit;
var m=[ZmSetting.ADMIN_DELEGATED,f.adminDelegated,ZmSetting.MESSAGE_SIZE_LIMIT,this._base64toNormalSize(f.attSizeLimit),ZmSetting.CHANGE_PASSWORD_URL,f.changePasswordURL,ZmSetting.DOCUMENT_SIZE_LIMIT,this._base64toNormalSize(f.docSizeLimit),ZmSetting.LAST_ACCESS,f.accessed,ZmSetting.LICENSE_STATUS,f.license&&f.license.status,ZmSetting.PREVIOUS_SESSION,f.prevSession,ZmSetting.PUBLIC_URL,f.publicURL,ZmSetting.QUOTA_USED,f.used,ZmSetting.RECENT_MESSAGES,f.recent,ZmSetting.REST_URL,f.rest,ZmSetting.USERNAME,f.name,ZmSetting.EMAIL_VALIDATION_REGEX,f.zimbraMailAddressValidationRegex,ZmSetting.DISABLE_SENSITIVE_ZIMLETS_IN_MIXED_MODE,(f.domainSettings&&f.domainSettings.zimbraZimletDataSensitiveInMixedModeDisabled?f.domainSettings.zimbraZimletDataSensitiveInMixedModeDisabled:"FALSE")];
for(var d=0;
d<m.length;
d+=2){
var l=m[d+1];
if(l!=null){
this._settings[m[d]].setValue(l,null,g,r,a)
}}
if(f.attrs&&f.attrs._attrs){
this.createFromJs(f.attrs._attrs,g,r,a)
}
if(this.get(ZmSetting.ADMIN_DELEGATED)&&!this.get(ZmSetting.ADMIN_MAIL_ENABLED)){
this.getSetting(ZmSetting.MAIL_ENABLED).setValue(false);
var p=new ZmMailApp();
p.enableMailPrefs()
}
if(f.communityURL){
this.getSetting(ZmSetting.SOCIAL_EXTERNAL_URL).setValue(f.communityURL,null,g,r)
}
if(y.preInit){
return
}
if(f.prefs&&f.prefs._attrs){
this.createFromJs(f.prefs._attrs,g,r,a)
}
var h;
if(!e){
appCtxt.accountList.createAccounts(this,f);
if(appCtxt.isOffline){
if(AjxEnv.isPrism&&window.platform){
h=this._settings[ZmSetting.OFFLINE_SUPPORTS_MAILTO];
if(h){
h.setValue(true,null,g,r,a)
}
h=this._settings[ZmSetting.OFFLINE_SUPPORTS_DOCK_UPDATE];
if(h){
h.setValue(true,null,g,r,a)
}}
appCtxt.set(ZmSetting.SHARING_ENABLED,true,null,g,r)
}}
h=this._settings[ZmSetting.REPLY_TO_ADDRESS];
if(h){
h.defaultValue=this.get(ZmSetting.USERNAME)
}
if(this.get(ZmSetting.FORCE_CAL_OFF)){
h=this._settings[ZmSetting.CALENDAR_ENABLED];
if(h){
h.setValue(false,null,g,r,a)
}}
if(!this.get(ZmSetting.OPTIONS_ENABLED)){
h=this._settings[ZmSetting.FILTERS_ENABLED];
if(h){
h.setValue(false,null,g,r,a)
}}
if(!e){
if(f.zimlets&&f.zimlets.zimlet){
if(this.get(ZmSetting.ZIMLETS_SYNCHRONOUS)){
var c=new AjxTimedAction(this,this._beginLoadZimlets,[f.zimlets.zimlet,f.props.prop,true]);
AjxTimedAction.scheduleAction(c,0)
}else{
var o=new AjxListener(this,this._beginLoadZimlets,[f.zimlets.zimlet,f.props.prop,false]);
appCtxt.getAppController().addListener(ZmAppEvent.POST_STARTUP,o)
}}else{
appCtxt.allZimletsLoaded()
}}
var l=appCtxt.get(ZmSetting.REPLY_INCLUDE_ORIG);
if(l){
var u=ZmMailApp.INC_MAP[l];
appCtxt.set(ZmSetting.REPLY_INCLUDE_WHAT,u[0],null,g,r);
appCtxt.set(ZmSetting.REPLY_USE_PREFIX,u[1],null,g,r);
appCtxt.set(ZmSetting.REPLY_INCLUDE_HEADERS,u[2],null,g,r)
}
var l=appCtxt.get(ZmSetting.FORWARD_INCLUDE_ORIG);
if(l){
var u=ZmMailApp.INC_MAP[l];
appCtxt.set(ZmSetting.FORWARD_INCLUDE_WHAT,u[0],null,g,r);
appCtxt.set(ZmSetting.FORWARD_USE_PREFIX,u[1],null,g,r);
appCtxt.set(ZmSetting.FORWARD_INCLUDE_HEADERS,u[2],null,g,r)
}
var t=ZmSettings.DEFAULT_SORT_PREF;
t[ZmId.VIEW_CONVLIST]=ZmSearch.DATE_DESC;
t[ZmId.VIEW_CONV]=ZmSearch.DATE_DESC;
t[ZmId.VIEW_TRAD]=ZmSearch.DATE_DESC;
t[ZmId.VIEW_CONTACT_SRC]=ZmSearch.NAME_ASC;
t[ZmId.VIEW_CONTACT_TGT]=ZmSearch.NAME_ASC;
t[ZmId.VIEW_CONTACT_SIMPLE]=ZmSearch.NAME_ASC;
t[ZmId.VIEW_CAL]=ZmSearch.DATE_ASC;
t[ZmId.VIEW_TASKLIST]=ZmSearch.DUE_DATE_ASC;
t[ZmId.VIEW_BRIEFCASE_DETAIL]=ZmSearch.SUBJ_ASC;
var s=this._settings[ZmSetting.SORTING_PREF];
if(s){
for(var b in t){
if(!s.getValue(b)){
s.setValue(t[b],b,false,true)
}}
s.defaultValue=AjxUtil.hashCopy(t)
}
DwtControl.useBrowserTooltips=this.get(ZmSetting.BROWSER_TOOLTIPS_ENABLED);
this._updateUserFontPrefsRule()
};
ZmSettings.prototype._base64toNormalSize=function(e){
if(!e||e===-1){
return e
}
return e/ZmSettings.BASE64_TO_NORMAL_RATIO
};
ZmSettings.prototype._beginLoadZimlets=function(e,i,t){
var a=new AjxCallback(this,this._loadZimletPackage,[e,i,t]);
AjxDispatcher.require(["Startup2"],false,a)
};
ZmSettings.prototype._loadZimletPackage=function(e,i,t){
var a=new AjxCallback(this,this._loadZimlets,[e,i,t]);
AjxDispatcher.require("Zimlet",false,a)
};
ZmSettings.prototype._loadZimlets=function(t,r,l){
t=t||[];
this.registerSetting("ZIMLETS",{
type:ZmSetting.T_CONFIG,defaultValue:t,isGlobal:true}
);
this.registerSetting("USER_PROPS",{
type:ZmSetting.T_CONFIG,defaultValue:r}
);
var i=this._getCheckedZimlets(t);
var a=appCtxt.getZimletMgr();
a.loadZimlets(i,r,null,null,l);
if(i&&i.length){
var e=appCtxt.getCurrentApp();
if(e){
var d;
if(appCtxt.multiAccounts){
var n=e.getOverviewContainer().containerId;
var c=ZmOrganizer.LABEL[ZmOrganizer.ZIMLET];
var o=[n,c].join("_");
d=appCtxt.getOverviewController().getOverview(o)
}else{
d=e.getOverview()
}}
if(d){
d.setTreeView(ZmOrganizer.ZIMLET);
if(appCtxt.multiAccounts&&a.getPanelZimlets().length==0){
e.getOverviewContainer().removeZimletSection()
}}
if(appCtxt.get(ZmSetting.PORTAL_ENABLED)){
var s=appCtxt.getApp(ZmApp.PORTAL).getPortletMgr();
var h=s.createPortlets(true)
}}};
ZmSettings.prototype._getCheckedZimlets=function(a){
var o=[];
for(var t=0;
t<a.length;
t++){
var e=a[t];
if(e.zimletContext[0].presence!="disabled"){
o.push(e)
}}
return o
};
ZmSettings.prototype.loadPreferenceData=function(r){
var s=new ZmBatchCommand(null,appCtxt.accountList.mainAccount.name);
var n=AjxSoapDoc.create("GetAvailableSkinsRequest","urn:zimbraAccount");
var o=new AjxCallback(this,this._handleResponseLoadAvailableSkins);
s.addNewRequestParams(n,o);
var e=AjxSoapDoc.create("GetAvailableLocalesRequest","urn:zimbraAccount");
var i=new AjxCallback(this,this._handleResponseGetAllLocales);
s.addNewRequestParams(e,i);
var t=AjxSoapDoc.create("GetAvailableCsvFormatsRequest","urn:zimbraAccount");
var a=new AjxCallback(this,this._handleResponseGetAvailableCsvFormats);
s.addNewRequestParams(t,a);
s.run(r)
};
ZmSettings.prototype._handleResponseLoadAvailableSkins=function(e){
var n=e.getResponse().GetAvailableSkinsResponse;
var o=n.skin;
if(o&&o.length){
var a=appCtxt.accountList.mainAccount.settings.getSetting(ZmSetting.AVAILABLE_SKINS);
for(var t=0;
t<o.length;
t++){
a.setValue(o[t].name)
}}};
ZmSettings.prototype._handleResponseGetAllLocales=function(a){
var t=a._data.GetAvailableLocalesResponse.locale;
if(t&&t.length){
for(var o=0,n=t.length;
o<n;
o++){
var e=t[o];
e.id=e.id.replace(/^in/,"id");
ZmLocale.create(e.id,e.name,ZmMsg["localeName_"+e.id]||e.localName)
}
if(t.length===1){
this.getSetting(ZmSetting.LOCALE_CHANGE_ENABLED).setValue(true)
}else{
this.getSetting(ZmSetting.LOCALE_CHANGE_ENABLED).setValue(ZmLocale.hasChoices())
}}};
ZmSettings.prototype._handleResponseGetAvailableCsvFormats=function(t){
var e=t.getResponse().GetAvailableCsvFormatsResponse.csv;
if(e&&e.length){
var o=appCtxt.accountList.mainAccount.settings.getSetting(ZmSetting.AVAILABLE_CSVFORMATS);
for(var a=0;
a<e.length;
a++){
o.setValue(e[a].name)
}}};
ZmSettings.prototype.save=function(y,o,s,t,m){
if(!(y&&y.length)){
return
}
var r=t||appCtxt.getActiveAccount();
var b=AjxSoapDoc.create("ModifyPrefsRequest","urn:zimbraAccount");
var n=false;
var p=[],h={}
,c;
for(var g=0;
g<y.length;
g++){
c=y[g];
if(h[c.id]){
continue
}
if(c.type==ZmSetting.T_METADATA){
p.push(c);
r.metaData.update(c.section,c.name,c.getValue());
continue
}else{
if(c.type!=ZmSetting.T_PREF){
continue
}}
if(!c.name){
continue
}
if(c.dataType==ZmSetting.D_LIST){
var d=c.getValue();
if(d&&d.length){
for(var f=0;
f<d.length;
f++){
var u=b.set("pref",d[f]);
u.setAttribute("name",c.name)
}}else{
var u=b.set("pref","");
u.setAttribute("name",c.name)
}}else{
var d=c.getValue(null,true);
var u=b.set("pref",d);
u.setAttribute("name",c.name)
}
h[c.id]=true;
n=true
}
if(appCtxt.isOffline&&ZmSetting.IS_IMPLICIT[c.id]&&ZmSetting.IS_GLOBAL[c.id]){
r=appCtxt.accountList.mainAccount
}
if(p.length>0){
var e=new AjxCallback(this,this._handleResponseSaveMetaData,[p]);
var l=[ZmSetting.M_IMPLICIT,ZmSetting.M_OFFLINE];
r.metaData.save(l,e)
}
if(n){
var a;
if(o||s){
a=new AjxCallback(this,this._handleResponseSave,[y,o])
}
if(s){
s.addNewRequestParams(b,a)
}else{
appCtxt.getAppController().sendRequest({
soapDoc:b,asyncMode:true,callback:a,accountName:r.name,noBusyOverlay:m}
)
}}};
ZmSettings.prototype._handleResponseSaveMetaData=function(o,e){
for(var t=0;
t<o.length;
t++){
var a=o[t];
if(!ZmSetting.IS_IMPLICIT[a.id]){
a.origValue=a.copyValue();
a._notify(ZmEvent.E_MODIFY)
}}};
ZmSettings.prototype._handleResponseSave=function(o,s,e){
var n=e.getResponse();
if(n.ModifyPrefsResponse!=null){
for(var t=0;
t<o.length;
t++){
var a=o[t];
a.origValue=a.copyValue();
if(!ZmSetting.IS_IMPLICIT[a.id]){
a._notify(ZmEvent.E_MODIFY)
}}
this._notify(ZmEvent.E_MODIFY,{
settings:o}
)
}
if(s){
s.run(e)
}};
ZmSettings.DEFAULT_SORT_PREF={};
ZmSettings.prototype._setDefaults=function(){
var t=AjxUtil.formatUrl({
host:location.hostname,path:"/service/soap/",qsReset:true}
);
this._settings[ZmSetting.CSFE_SERVER_URI].setValue(t,null,false,true);
t=AjxUtil.formatUrl({
host:location.hostname,path:"/service/home/~/",qsReset:true,qsArgs:{
auth:"co"}}
);
this._settings[ZmSetting.CSFE_MSG_FETCHER_URI].setValue(t,null,false,true);
t=AjxUtil.formatUrl({
host:location.hostname,path:"/service/upload",qsReset:true,qsArgs:{
lbfums:""}}
);
this._settings[ZmSetting.CSFE_UPLOAD_URI].setValue(t,null,false,true);
t=AjxUtil.formatUrl({
host:location.hostname,path:"/service/upload",qsReset:true}
);
this._settings[ZmSetting.CSFE_ATTACHMENT_UPLOAD_URI].setValue(t,null,false,true);
t=AjxUtil.formatUrl({
host:location.hostname,path:"/service/home/~/",qsReset:true,qsArgs:{
auth:"co",id:"{0}",fmt:"csv"}}
);
this._settings[ZmSetting.CSFE_EXPORT_URI].setValue(t,null,false,true);
var e=location.hostname;
var a=((e.indexOf(".zimbra.com")!=-1)||(window.appDevMode&&(/\.local$/.test(e)||(!appCtxt.isOffline&&e=="localhost"))));
this._settings[ZmSetting.IS_DEV_SERVER].setValue(a);
if(a||window.isScriptErrorOn){
this._settings[ZmSetting.SHOW_SCRIPT_ERRORS].setValue(true,null,false,true)
}
this.setReportScriptErrorsSettings(AjxException,ZmController.handleScriptError)
};
ZmSettings.prototype.persistImplicitSortPrefs=function(e){
return ZmSettings.DEFAULT_SORT_PREF[e]
};
ZmSettings.prototype.setReportScriptErrorsSettings=function(t,a){
var e=t.reportScriptErrors=this._settings[ZmSetting.SHOW_SCRIPT_ERRORS].getValue();
if(e){
t.setScriptErrorHandler(a)
}};
ZmSettings.prototype._initialize=function(){
this.registerSetting("ADMIN_DELEGATED",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("AC_TIMER_INTERVAL",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_INT,defaultValue:300}
);
this.registerSetting("ASYNC_MODE",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("BRANCH",{
type:ZmSetting.T_CONFIG,defaultValue:"JUDASPRIEST"}
);
this.registerSetting("CLIENT_DATETIME",{
type:ZmSetting.T_CONFIG,defaultValue:"20190402-0629"}
);
this.registerSetting("CLIENT_RELEASE",{
type:ZmSetting.T_CONFIG,defaultValue:"20190402060140"}
);
this.registerSetting("CLIENT_VERSION",{
type:ZmSetting.T_CONFIG,defaultValue:"8.6.0_GA_1242"}
);
this.registerSetting("CONFIG_PATH",{
type:ZmSetting.T_CONFIG,defaultValue:appContextPath+"/js/zimbraMail/config"}
);
this.registerSetting("CSFE_EXPORT_URI",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("CSFE_MSG_FETCHER_URI",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("CSFE_SERVER_URI",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("CSFE_UPLOAD_URI",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("CSFE_ATTACHMENT_UPLOAD_URI",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("DEV",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("FORCE_CAL_OFF",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("HELP_URI",{
name:"zimbraHelpAdvancedURL",type:ZmSetting.T_CONFIG,defaultValue:appContextPath+ZmMsg.helpURI}
);
this.registerSetting("HTTP_PORT",{
type:ZmSetting.T_CONFIG,defaultValue:ZmSetting.HTTP_DEFAULT_PORT}
);
this.registerSetting("HTTPS_PORT",{
type:ZmSetting.T_CONFIG,defaultValue:ZmSetting.HTTPS_DEFAULT_PORT}
);
this.registerSetting("INSTANT_NOTIFY_INTERVAL",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_INT,defaultValue:500}
);
this.registerSetting("INSTANT_NOTIFY_TIMEOUT",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_INT,defaultValue:300}
);
this.registerSetting("IS_DEV_SERVER",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("LOG_REQUEST",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("LOGO_URI",{
type:ZmSetting.T_CONFIG,defaultValue:null}
);
this.registerSetting("PROTOCOL_MODE",{
type:ZmSetting.T_CONFIG,defaultValue:ZmSetting.PROTO_HTTP}
);
this.registerSetting("SERVER_VERSION",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("SHOW_SCRIPT_ERRORS",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("TIMEOUT",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_INT,defaultValue:30}
);
this.registerSetting("USE_XML",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("SMIME_HELP_URI",{
type:ZmSetting.T_CONFIG,defaultValue:appContextPath+ZmMsg.smimeHelpURI}
);
this.registerSetting("CHANGE_PASSWORD_URL",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("PUBLIC_URL",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("DISABLE_SENSITIVE_ZIMLETS_IN_MIXED_MODE",{
type:ZmSetting.T_CONFIG}
);
this.registerSetting("BRIEFCASE_ENABLED",{
name:"zimbraFeatureBriefcasesEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("ATTACHMENTS_BLOCKED",{
name:"zimbraAttachmentsBlocked",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("CALENDAR_ENABLED",{
name:"zimbraFeatureCalendarEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("CALENDAR_UPSELL_ENABLED",{
name:"zimbraFeatureCalendarUpsellEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("CALENDAR_UPSELL_URL",{
name:"zimbraFeatureCalendarUpsellURL",type:ZmSetting.T_COS}
);
this.registerSetting("CONTACTS_ENABLED",{
name:"zimbraFeatureContactsEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("CONTACTS_UPSELL_ENABLED",{
name:"zimbraFeatureContactsUpsellEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("CONTACTS_UPSELL_URL",{
name:"zimbraFeatureContactsUpsellURL",type:ZmSetting.T_COS}
);
this.registerSetting("IM_ENABLED",{
name:"zimbraFeatureIMEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("IMPORT_ENABLED",{
name:"zimbraFeatureImportFolderEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("EXPORT_ENABLED",{
name:"zimbraFeatureExportFolderEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("MAIL_ENABLED",{
name:"zimbraFeatureMailEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("EXTERNAL_USER_MAIL_ADDRESS",{
name:"zimbraExternalUserMailAddress",type:ZmSetting.T_COS,dataType:ZmSetting.D_STRING}
);
this.registerSetting("ADMIN_MAIL_ENABLED",{
name:"zimbraFeatureAdminMailEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("MAIL_UPSELL_ENABLED",{
name:"zimbraFeatureMailUpsellEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("MAIL_UPSELL_URL",{
name:"zimbraFeatureMailUpsellURL",type:ZmSetting.T_COS}
);
this.registerSetting("OPTIONS_ENABLED",{
name:"zimbraFeatureOptionsEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("PORTAL_ENABLED",{
name:"zimbraFeaturePortalEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("SOCIAL_ENABLED",{
name:"zimbraFeatureSocialEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("SOCIAL_EXTERNAL_URL",{
name:"zimbraFeatureSocialExternalURL",type:ZmSetting.T_COS}
);
this.registerSetting("SOCIAL_NAME",{
name:"zimbraFeatureSocialName",type:ZmSetting.T_COS,defaultValue:ZmMsg.communityName}
);
this.registerSetting("TASKS_ENABLED",{
name:"zimbraFeatureTasksEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("VOICE_ENABLED",{
name:"zimbraFeatureVoiceEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("VOICE_UPSELL_ENABLED",{
name:"zimbraFeatureVoiceUpsellEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("VOICE_UPSELL_URL",{
name:"zimbraFeatureVoiceUpsellURL",type:ZmSetting.T_COS}
);
this.registerSetting("DLS_FOLDER_ENABLED",{
name:"zimbraFeatureDistributionListFolderEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("ATTACHMENTS_VIEW_IN_HTML_ONLY",{
name:"zimbraAttachmentsViewInHtmlOnly",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("AVAILABLE_SKINS",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST,isGlobal:true}
);
this.registerSetting("AVAILABLE_CSVFORMATS",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST,isGlobal:true}
);
this.registerSetting("CHANGE_PASSWORD_ENABLED",{
name:"zimbraFeatureChangePasswordEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("DISPLAY_NAME",{
name:"displayName",type:ZmSetting.T_COS}
);
this.registerSetting("DUMPSTER_ENABLED",{
name:"zimbraDumpsterEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("ERROR_REPORT_URL",{
name:"zimbraErrorReportUrl",type:ZmSetting.T_COS,dataType:ZmSetting.D_STRING}
);
this.registerSetting("FILTER_BATCH_SIZE",{
name:"zimbraFilterBatchSize",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:10000}
);
this.registerSetting("FLAGGING_ENABLED",{
name:"zimbraFeatureFlaggingEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("FOLDERS_EXPANDED",{
name:"zimbraPrefFoldersExpanded",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_HASH,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
this.registerSetting("FOLDER_TREE_OPEN",{
name:"zimbraPrefFolderTreeOpen",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isImplicit:true}
);
this.registerSetting("FOLDER_TREE_SASH_WIDTH",{
name:"zimbraPrefFolderTreeSash",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_INT,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
this.registerSetting("GAL_AUTOCOMPLETE_ENABLED",{
name:"zimbraFeatureGalAutoCompleteEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("GAL_ENABLED",{
name:"zimbraFeatureGalEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("GROUP_CALENDAR_ENABLED",{
name:"zimbraFeatureGroupCalendarEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("HTML_COMPOSE_ENABLED",{
name:"zimbraFeatureHtmlComposeEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("IDLE_SESSION_TIMEOUT",{
name:"zimbraMailIdleSessionTimeout",type:ZmSetting.T_COS,dataType:ZmSetting.D_LDAP_TIME,defaultValue:0}
);
this.registerSetting("IMAP_ACCOUNTS_ENABLED",{
name:"zimbraFeatureImapDataSourceEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("IMPORT_ON_LOGIN_ENABLED",{
name:"zimbraDataSourceImportOnLogin",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("INSTANT_NOTIFY",{
name:"zimbraFeatureInstantNotify",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("LOCALE_CHANGE_ENABLED",{
name:"zimbraFeatureLocaleChangeEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("LOCALES",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST}
);
this.registerSetting("LOGIN_URL",{
name:"zimbraWebClientLoginURL",type:ZmSetting.T_COS}
);
this.registerSetting("LOGOUT_URL",{
name:"zimbraWebClientLogoutURL",type:ZmSetting.T_COS}
);
this.registerSetting("MIN_POLLING_INTERVAL",{
name:"zimbraMailMinPollingInterval",type:ZmSetting.T_COS,dataType:ZmSetting.D_LDAP_TIME,defaultValue:120}
);
this.registerSetting("MOBILE_SYNC_ENABLED",{
name:"zimbraFeatureMobileSyncEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("MOBILE_POLICY_ENABLED",{
name:"zimbraFeatureMobilePolicyEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("POP_ACCOUNTS_ENABLED",{
name:"zimbraFeaturePop3DataSourceEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("PORTAL_NAME",{
name:"zimbraPortalName",type:ZmSetting.T_COS,defaultValue:"example"}
);
this.registerSetting("PRIORITY_INBOX_ENABLED",{
name:"zimbraFeaturePriorityInboxEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("PWD_MAX_LENGTH",{
name:"zimbraPasswordMaxLength",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:64}
);
this.registerSetting("PWD_MIN_LENGTH",{
name:"zimbraPasswordMinLength",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:6}
);
this.registerSetting("QUOTA",{
name:"zimbraMailQuota",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:0}
);
this.registerSetting("SAVED_SEARCHES_ENABLED",{
name:"zimbraFeatureSavedSearchesEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("SEARCH_TREE_OPEN",{
name:"zimbraPrefSearchTreeOpen",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isImplicit:true}
);
this.registerSetting("SHARING_ENABLED",{
name:"zimbraFeatureSharingEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SHARING_PUBLIC_ENABLED",{
name:"zimbraPublicSharingEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SHARING_EXTERNAL_ENABLED",{
name:"zimbraExternalSharingEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SHORTCUT_ALIASES_ENABLED",{
name:"zimbraFeatureShortcutAliasesEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SHOW_OFFLINE_LINK",{
name:"zimbraWebClientShowOfflineLink",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SIGNATURES_ENABLED",{
name:"zimbraFeatureSignaturesEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SKIN_CHANGE_ENABLED",{
name:"zimbraFeatureSkinChangeEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SOCIAL_FILTERS_ENABLED",{
name:"zimbraFeatureSocialFiltersEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
this.registerSetting("SPAM_ENABLED",{
name:"zimbraFeatureAntispamEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("TAG_TREE_OPEN",{
name:"zimbraPrefTagTreeOpen",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isImplicit:true}
);
this.registerSetting("TAGGING_ENABLED",{
name:"zimbraFeatureTaggingEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("VIEW_ATTACHMENT_AS_HTML",{
name:"zimbraFeatureViewInHtmlEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("EXPAND_DL_ENABLED",{
name:"zimbraFeatureDistributionListExpandMembersEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("FORCE_CLEAR_COOKIES",{
name:"zimbraForceClearCookies",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("WEBCLIENT_OFFLINE_ENABLED",{
name:"zimbraFeatureWebClientOfflineAccessEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("LICENSE_STATUS",{
type:ZmSetting.T_COS,defaultValue:ZmSetting.LICENSE_GOOD}
);
this.registerSetting("QUOTA_USED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_INT}
);
this.registerSetting("USERID",{
name:"zimbraId",type:ZmSetting.T_COS}
);
this.registerSetting("USERNAME",{
type:ZmSetting.T_COS}
);
this.registerSetting("CN",{
name:"cn",type:ZmSetting.T_COS}
);
this.registerSetting("LAST_ACCESS",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_INT}
);
this.registerSetting("PREVIOUS_SESSION",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_INT}
);
this.registerSetting("RECENT_MESSAGES",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_INT}
);
this.registerSetting("REST_URL",{
name:"rest",type:ZmSetting.T_COS}
);
this.registerSetting("IS_ADMIN",{
name:"zimbraIsAdminAccount",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("IS_EXTERNAL",{
name:"zimbraIsExternalVirtualAccount",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("IS_DELEGATED_ADMIN",{
name:"zimbraIsDelegatedAdminAccount",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("ADMIN_REFERENCE",{
name:"zimbraWebClientAdminReference",type:ZmSetting.T_COS,dataType:ZmSetting.D_STRING}
);
this.registerSetting("MESSAGE_SIZE_LIMIT",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_INT}
);
this.registerSetting("DOCUMENT_SIZE_LIMIT",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_INT}
);
this.registerSetting("ATTACHMENT_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("ATT_VIEW_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("BROWSER_TOOLTIPS_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("EVAL_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("FEED_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("HELP_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("HISTORY_SUPPORT_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:("onhashchange" in window)}
);
this.registerSetting("NOTES_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("PRINT_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SEARCH_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SHORTCUT_LIST_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("OFFLINE_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:appCtxt.isOffline}
);
this.registerSetting("SPELL_CHECK_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:!appCtxt.isOffline&&(!AjxEnv.isSafari||AjxEnv.isSafari3up||AjxEnv.isChrome)}
);
this.registerSetting("SPELL_CHECK_ADD_WORD_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:!AjxEnv.isSafari||AjxEnv.isSafari3up||AjxEnv.isChrome}
);
this.registerSetting("EMAIL_VALIDATION_REGEX",{
name:"zimbraMailAddressValidationRegex",type:ZmSetting.T_DOMAIN,dataType:ZmSetting.D_LIST}
);
this.registerSetting("ACCOUNTS",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH}
);
this.registerSetting("ACCOUNT_TREE_OPEN",{
name:"zimbraPrefAccountTreeOpen",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isImplicit:true}
);
this.registerSetting("CHILD_ACCTS_VISIBLE",{
name:"zimbraPrefChildVisibleAccount",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST}
);
this.registerSetting("CLIENT_TYPE",{
name:"zimbraPrefClientType",type:ZmSetting.T_PREF,defaultValue:ZmSetting.CLIENT_ADVANCED}
);
this.registerSetting("COMPOSE_AS_FORMAT",{
name:"zimbraPrefComposeFormat",type:ZmSetting.T_PREF,defaultValue:ZmSetting.COMPOSE_HTML,isGlobal:true}
);
this.registerSetting("COMPOSE_INIT_FONT_COLOR",{
name:"zimbraPrefHtmlEditorDefaultFontColor",type:ZmSetting.T_PREF,defaultValue:ZmSetting.COMPOSE_FONT_COLOR,isGlobal:true}
);
this.registerSetting("COMPOSE_INIT_FONT_FAMILY",{
name:"zimbraPrefHtmlEditorDefaultFontFamily",type:ZmSetting.T_PREF,defaultValue:ZmSetting.COMPOSE_FONT_FAM,isGlobal:true}
);
this.registerSetting("COMPOSE_INIT_FONT_SIZE",{
name:"zimbraPrefHtmlEditorDefaultFontSize",type:ZmSetting.T_PREF,defaultValue:ZmSetting.COMPOSE_FONT_SIZE,isGlobal:true}
);
this.registerSetting("COMPOSE_INIT_DIRECTION",{
name:"zimbraPrefComposeDirection",type:ZmSetting.T_PREF,defaultValue:ZmSetting.LTR,isGlobal:true}
);
this.registerSetting("SHOW_COMPOSE_DIRECTION_BUTTONS",{
name:"zimbraPrefShowComposeDirection",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("DEFAULT_TIMEZONE",{
name:"zimbraPrefTimeZoneId",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:AjxTimezone.getServerId(AjxTimezone.DEFAULT),isGlobal:true}
);
this.registerSetting("WEBCLIENT_OFFLINE_BROWSER_KEY",{
name:"zimbraPrefWebClientOfflineBrowserKey",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,isImplicit:true}
);
this.registerSetting("DEFAULT_PRINTFONTSIZE",{
name:"zimbraPrefDefaultPrintFontSize",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmSetting.PRINT_FONT_SIZE,isGlobal:true}
);
this.registerSetting("GROUPBY_HASH",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH}
);
this.registerSetting("GROUPBY_LIST",{
name:"zimbraPrefGroupByList",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_HASH,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
this.registerSetting("FILTERS",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH}
);
this.registerSetting("FONT_NAME",{
name:"zimbraPrefFont",type:ZmSetting.T_PREF,defaultValue:ZmSetting.FONT_SYSTEM,isGlobal:true}
);
this.registerSetting("FONT_SIZE",{
name:"zimbraPrefFontSize",type:ZmSetting.T_PREF,defaultValue:ZmSetting.FONT_SIZE_NORMAL,isGlobal:true}
);
this.registerSetting("IDENTITIES",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH}
);
this.registerSetting("INITIALLY_SEARCH_GAL",{
name:"zimbraPrefGalSearchEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("LIST_VIEW_COLUMNS",{
name:"zimbraPrefListViewColumns",type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH,isImplicit:true}
);
this.registerSetting("LOCALE_NAME",{
name:"zimbraPrefLocale",type:ZmSetting.T_PREF,defaultValue:appRequestLocaleId,isGlobal:true}
);
this.registerSetting("SHOW_SELECTION_CHECKBOX",{
name:"zimbraPrefShowSelectionCheckbox",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
this.registerSetting("PAGE_SIZE",{
name:"zimbraPrefItemsPerVirtualPage",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:50,isGlobal:true}
);
this.registerSetting("PASSWORD",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_NONE}
);
this.registerSetting("POLLING_INTERVAL",{
name:"zimbraPrefMailPollingInterval",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LDAP_TIME,defaultValue:300}
);
this.registerSetting("POLLING_INTERVAL_ENABLED",{
name:"zimbraFeatureMailPollingIntervalPreferenceEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SEARCH_INCLUDES_SHARED",{
name:"zimbraPrefIncludeSharedItemsInSearch",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("SEARCH_INCLUDES_SPAM",{
name:"zimbraPrefIncludeSpamInSearch",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("SEARCH_INCLUDES_TRASH",{
name:"zimbraPrefIncludeTrashInSearch",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("SHORT_ADDRESS",{
name:"zimbraPrefShortEmailAddress",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("SHORTCUTS",{
name:"zimbraPrefShortcuts",type:ZmSetting.T_PREF}
);
this.registerSetting("SHOW_SEARCH_STRING",{
name:"zimbraPrefShowSearchString",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("SIGNATURES",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH}
);
this.registerSetting("SIGNATURES_MAX",{
name:"zimbraSignatureMaxNumEntries",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:20}
);
this.registerSetting("SIGNATURES_MIN",{
name:"zimbraSignatureMinNumEntries",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:1}
);
this.registerSetting("SKIN_NAME",{
name:"zimbraPrefSkin",type:ZmSetting.T_PREF,defaultValue:"skin",isGlobal:true}
);
this.registerSetting("SORTING_PREF",{
name:"zimbraPrefSortOrder",type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH,isImplicit:true,isGlobal:true,dontSaveDefault:true}
);
this.registerSetting("USE_KEYBOARD_SHORTCUTS",{
name:"zimbraPrefUseKeyboardShortcuts",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("VIEW_AS_HTML",{
name:"zimbraPrefMessageViewHtmlPreferred",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("VOICE_ACCOUNTS",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_HASH}
);
this.registerSetting("WARN_ON_EXIT",{
name:"zimbraPrefWarnOnExit",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this._registerOfflineSettings();
this._registerZimletsSettings();
this.registerSetting("ZIMLET_TREE_OPEN",{
name:"zimbraPrefZimletTreeOpen",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isImplicit:true}
);
this.registerSetting("MAIL_ALIASES",{
name:"zimbraMailAlias",type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST}
);
this.registerSetting("ALLOW_FROM_ADDRESSES",{
name:"zimbraAllowFromAddress",type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST}
);
ZmApp.runAppFunction("registerSettings",this)
};
ZmSettings.prototype._registerZimletsSettings=function(){
this.registerSetting("CHECKED_ZIMLETS_ENABLED",{
name:"zimbraFeatureManageZimlets",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
this.registerSetting("CHECKED_ZIMLETS",{
name:"zimbraPrefZimlets",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST,isGlobal:true}
);
this.registerSetting("MANDATORY_ZIMLETS",{
name:"zimbraZimletMandatoryZimlets",type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST}
);
this.registerSetting("ZIMLETS_SYNCHRONOUS",{
name:"zimbraZimletLoadSynchronously",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
)
};
ZmSettings.prototype._registerOfflineSettings=function(){
if(!appCtxt.isOffline){
return
}
this.registerSetting("OFFLINE_ACCOUNT_FLAVOR",{
name:"offlineAccountFlavor",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING}
);
this.registerSetting("OFFLINE_COMPOSE_ENABLED",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("OFFLINE_DEBUG_TRACE",{
type:ZmSetting.T_CONFIG,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("OFFLINE_IS_MAILTO_HANDLER",{
name:"zimbraPrefMailtoHandlerEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("OFFLINE_REMOTE_SERVER_URI",{
name:"offlineRemoteServerUri",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING}
);
this.registerSetting("OFFLINE_REPORT_EMAIL",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:"zdesktop-report@zimbra.com",isGlobal:true}
);
this.registerSetting("OFFLINE_SHOW_ALL_MAILBOXES",{
name:"offlineShowAllMailboxes",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,section:ZmSetting.M_OFFLINE,isGlobal:true}
);
this.registerSetting("OFFLINE_ALL_MAILBOXES_TREE_OPEN",{
name:"offlineAllMailboxesTreeOpen",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,section:ZmSetting.M_OFFLINE,isGlobal:true,isImplicit:true}
);
this.registerSetting("OFFLINE_NOTIFY_NEWMAIL_ON_INBOX",{
name:"offlineNotifyNewMailOnInbox",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,section:ZmSetting.M_OFFLINE,isGlobal:true}
);
this.registerSetting("OFFLINE_SAVED_SEARCHES_TREE_OPEN",{
name:"offlineSavedSearchesTreeOpen",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,section:ZmSetting.M_OFFLINE,isGlobal:true,isImplicit:true}
);
this.registerSetting("OFFLINE_SMTP_ENABLED",{
name:"zimbraDataSourceSmtpEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
this.registerSetting("OFFLINE_SUPPORTS_MAILTO",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("OFFLINE_SUPPORTS_DOCK_UPDATE",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("OFFLINE_WEBAPP_URI",{
name:"offlineWebappUri",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING}
);
this.registerSetting("OFFLINE_BACKUP_INTERVAL",{
name:"zimbraPrefOfflineBackupInterval",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:0,isGlobal:true}
);
this.registerSetting("OFFLINE_BACKUP_PATH",{
name:"zimbraPrefOfflineBackupPath",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,isGlobal:true}
);
this.registerSetting("OFFLINE_BACKUP_KEEP",{
name:"zimbraPrefOfflineBackupKeep",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,isGlobal:true}
);
this.registerSetting("OFFLINE_BACKUP_ACCOUNT_ID",{
name:"zimbraPrefOfflineBackupAccountId",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,isGlobal:true}
);
this.registerSetting("OFFLINE_BACKUP_RESTORE",{
name:"zimbraPrefOfflineBackupRestore",dataType:ZmSetting.D_INT,isGlobal:true}
);
this.registerSetting("OFFLINE_BACKUP_NOW_BUTTON",{
name:"zimbraPrefOfflineBackupAccount",dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
this.registerSetting("OFFLINE_ZIMLET_SYNC_ACCOUNT_ID",{
name:"zimbraPrefOfflineZimletSyncAccountId",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,isGlobal:true}
);
this.registerSetting("OFFLINE_WEBAPP_URI",{
name:"offlineWebappUri",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING}
);
this.registerSetting("HELP_URI",{
type:ZmSetting.T_CONFIG,defaultValue:"http://www.zimbra.com/desktop7/"}
);
this.registerSetting("DUMPSTER_ENABLED",{
name:"zimbraDumpsterEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
this.registerSetting("OFFLINE_UPDATE_NOTIFY",{
name:"zimbraPrefOfflineUpdateChannel",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,isGlobal:true}
)
};
ZmSettings.prototype._changeListener=function(i){
if(i.type!==ZmEvent.S_SETTING){
return
}
var n=i.source.id,o=i.source.getValue();
if(n===ZmSetting.QUOTA_USED){
appCtxt.getAppController().setUserInfo()
}else{
if(n===ZmSetting.POLLING_INTERVAL){
appCtxt.getAppController().setPollInterval()
}else{
if(n===ZmSetting.SKIN_NAME){
this._showConfirmDialog(ZmMsg.skinChangeRestart,this._refreshBrowserCallback.bind(this,{
skin:o}
))
}else{
if(n===ZmSetting.SHOW_SELECTION_CHECKBOX){
this._showConfirmDialog(o?ZmMsg.checkboxChangeRestartShow:ZmMsg.checkboxChangeRestartHide,this._refreshBrowserCallback.bind(this))
}else{
if(n===ZmSetting.FONT_NAME||n===ZmSetting.FONT_SIZE){
this._showConfirmDialog(ZmMsg.fontChangeRestart,this._refreshBrowserCallback.bind(this))
}else{
if(n===ZmSetting.LOCALE_NAME){
if(appCtxt.isOffline&&AjxEnv.isPrism){
try{
netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
var t=Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
if(t){
var e=appCtxt.get(ZmSetting.LOCALE_NAME).replace("_","-");
t.setCharPref("general.useragent.locale",e);
t.setCharPref("intl.accept_languages",e)
}}
catch(a){}}
this._showConfirmDialog(ZmMsg.localeChangeRestart,this._refreshBrowserCallback.bind(this))
}else{
if(n===ZmSetting.CHILD_ACCTS_VISIBLE){
this._showConfirmDialog(ZmMsg.accountChangeRestart,this._refreshBrowserCallback.bind(this))
}else{
if(appCtxt.isOffline&&n===ZmSetting.OFFLINE_IS_MAILTO_HANDLER){
appCtxt.getAppController().registerMailtoHandler(true,i.source.getValue())
}else{
if(appCtxt.isOffline&&n===ZmSetting.OFFLINE_UPDATE_NOTIFY){
appCtxt.getAppController()._offlineUpdateChannelPref(i.source.getValue())
}}}}}}}}}};
ZmSettings.prototype._showConfirmDialog=function(a,i,e){
var t=appCtxt.getYesNoMsgDialog();
t.reset();
t.registerCallback(DwtDialog.YES_BUTTON,i);
t.setMessage(a,e||DwtMessageDialog.WARNING_STYLE);
t.popup()
};
ZmSettings.prototype._implicitChangeListener=function(t){
if(!appCtxt.get(ZmSetting.OPTIONS_ENABLED)){
return
}
if(t.type!=ZmEvent.S_SETTING){
return
}
var i=t.source.id;
var e=this.getSetting(i);
if(i==ZmSetting.FOLDERS_EXPANDED&&window.duringExpandAll){
if(!window.afterExpandAllCallback){
window.afterExpandAllCallback=this.save.bind(this,[e],null,null,appCtxt.getActiveAccount(),true)
}
return
}
if(ZmSetting.IS_IMPLICIT[i]&&e){
if(i===ZmSetting.WEBCLIENT_OFFLINE_BROWSER_KEY){
var a=this._offlineSettingsSaveCallback.bind(this,e)
}else{
var a=appCtxt.reloadAppCache.bind(appCtxt,false)
}
this.save([e],a,null,appCtxt.getActiveAccount(),true)
}};
ZmSettings.prototype._refreshBrowserCallback=function(t){
appCtxt.getYesNoMsgDialog().popdown();
window.onbeforeunload=ZmZimbraMail.getConfirmExitMethod();
var e=AjxUtil.formatUrl({
qsArgs:t}
);
window.location.replace(e)
};
ZmSettings.prototype._updateUserFontPrefsRule=function(){
if(this._userFontPrefsRuleIndex!=null){
DwtCssStyle.removeRule(document.styleSheets[0],this._userFontPrefsRuleIndex)
}
var e="."+ZmSetting.USER_FONT_CLASS;
var t="font-family:"+appCtxt.get(ZmSetting.COMPOSE_INIT_FONT_FAMILY)+";font-size:"+appCtxt.get(ZmSetting.COMPOSE_INIT_FONT_SIZE)+";color:"+appCtxt.get(ZmSetting.COMPOSE_INIT_FONT_COLOR)+";";
this._userFontPrefsRuleIndex=DwtCssStyle.addRule(document.styleSheets[0],e,t)
};
ZmSettings.prototype._hasVoiceFeature=function(){
var n=this.getInfoResponse;
var o=n&&n.license;
var t=o&&o.status;
if(!o||!o.attr){
return false
}
if(ZmSetting.LICENSE_MSG[t]){
return false
}
for(var a=0;
o&&a<o.attr.length;
a++){
var e=o.attr[a];
if(e.name=="VOICE"){
return e._content=="TRUE"
}}
return false
};
ZmSettings.prototype._offlineSettingsSaveCallback=function(a){
var e=a.getValue();
var t=localStorage.getItem(ZmSetting.WEBCLIENT_OFFLINE_BROWSER_KEY);
if(e&&e.indexOf(t)!==-1){
this._showConfirmDialog(ZmMsg.offlineChangeRestart,this._refreshBrowserCallback.bind(this))
}else{
ZmOffline.deleteOfflineData();
appCtxt.initWebOffline();
var i=appCtxt.getById(ZmFolder.ID_OUTBOX);
if(i){
i.notifyDelete()
}}
appCtxt.reloadAppCache(true)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmMetaData")){
ZmMetaData=function(e,t){
this._sections={};
this._account=e;
this._itemId=t
};
ZmMetaData.prototype.constructor=ZmMetaData;
ZmMetaData.NAMESPACE="zwc";
ZmMetaData.prototype.toString=function(){
return"ZmMetaData"
};
ZmMetaData.prototype.set=function(u,n,e,m,s,h){
var c;
if(this._itemId){
c=AjxSoapDoc.create("SetCustomMetadataRequest","urn:zimbraMail");
c.getMethod().setAttribute("id",this._itemId)
}else{
c=AjxSoapDoc.create("SetMailboxMetadataRequest","urn:zimbraMail")
}
var f=c.set("meta");
f.setAttribute("section",[ZmMetaData.NAMESPACE,u].join(":"));
for(var o in n){
var r=n[o];
if(AjxUtil.isObject(r)){
r=ZmSetting.serialize(r,ZmSetting.D_HASH)
}
var l=c.set("a",r,f);
l.setAttribute("n",o)
}
if(e){
e.addNewRequestParams(c,m,s)
}else{
var t={
soapDoc:c,asyncMode:true,callback:m,errorCallback:s,accountName:(this._account?this._account.name:null),sensitive:h};
appCtxt.getAppController().sendRequest(t)
}};
ZmMetaData.prototype.get=function(s,e,h,i){
var t=e||(new ZmBatchCommand());
var a=[ZmMetaData.NAMESPACE,s].join(":");
var o=this._sections[a];
if(!o){
var n;
if(this._itemId){
n=AjxSoapDoc.create("GetCustomMetadataRequest","urn:zimbraMail");
n.getMethod().setAttribute("id",this._itemId)
}else{
n=AjxSoapDoc.create("GetMailboxMetadataRequest","urn:zimbraMail")
}
var r=n.set("meta");
r.setAttribute("section",a);
t.addNewRequestParams(n);
if(!e){
t.run(h,i)
}}else{
if(h){
h.run(o)
}else{
return o
}}};
ZmMetaData.prototype.load=function(r,s,t){
if(!r){
return
}
if(!(r instanceof Array)){
r=[r]
}
var a=t||(new ZmBatchCommand());
for(var e=0;
e<r.length;
e++){
if(r[e]==ZmSetting.M_OFFLINE&&!appCtxt.isOffline){
continue
}
this.get(r[e],a)
}
if(!t){
if(a.size()>0){
var n=new AjxCallback(this,this._handleLoad,[s]);
var o=this._handleOfflineLoad.bind(this,n);
a.run(n,null,o)
}}else{
if(s){
s.run(this._sections)
}}};
ZmMetaData.prototype._handleLoad=function(s,e){
this._sections={};
var a=e.getResponse().BatchResponse;
if(a){
var n=(this._itemId!=null)?a.GetCustomMetadataResponse:a.GetMailboxMetadataResponse;
if(n&&n.length){
if(ZmOffline.isOnlineMode()){
localStorage.setItem("MetadataResponse",JSON.stringify(a))
}
for(var t=0;
t<n.length;
t++){
var o=n[t].meta[0];
this._sections[o.section]=o._attrs
}}}
if(s){
s.run(this._sections)
}};
ZmMetaData.prototype._handleOfflineLoad=function(a){
var e=localStorage.getItem("MetadataResponse");
if(e){
var t=new ZmCsfeResult({
BatchResponse:JSON.parse(e)}
);
a.run(t)
}};
ZmMetaData.prototype.modify=function(l,o,e,c,s){
var h=AjxSoapDoc.create("ModifyMailboxMetadataRequest","urn:zimbraMail");
var d=h.set("meta");
d.setAttribute("section",[ZmMetaData.NAMESPACE,l].join(":"));
for(var n in o){
var r=h.set("a",o[n],d);
r.setAttribute("n",n)
}
if(e){
e.addNewRequestParams(h,c,s)
}else{
var t={
soapDoc:h,asyncMode:true,callback:c,errorCallback:s,accountName:(this._account?this._account.name:null)};
appCtxt.getAppController().sendRequest(t)
}};
ZmMetaData.prototype.save=function(h,l,e){
if(!h){
return
}
if(!(h instanceof Array)){
h=[h]
}
var r=this._account?this._account.name:null;
var t=e||(new ZmBatchCommand(null,r));
for(var o=0;
o<h.length;
o++){
var c=h[o];
var a=[ZmMetaData.NAMESPACE,c].join(":");
var n=this._sections[a];
if(n){
this.set(c,n,t)
}}
if(!e){
if(t.size()>0){
t.run(l)
}}else{
if(l){
l.run()
}}};
ZmMetaData.prototype.update=function(o,a,i){
var t=[ZmMetaData.NAMESPACE,o].join(":");
var e=this._sections[t];
if(!e){
e=this._sections[t]={}
}
e[a]=i
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmKeyMap")){
ZmKeyMap=function(){
ZmKeyMap._setPreconditions();
DwtKeyMap.call(this);
this._load(this._map,ZmKeys);
if(appCtxt.get(ZmSetting.DEV)&&this._map[ZmKeyMap.MAP_GLOBAL]){
this._map[ZmKeyMap.MAP_GLOBAL]["Alt+Shift+D,0"]=ZmKeyMap.DBG_NONE;
this._map[ZmKeyMap.MAP_GLOBAL]["Alt+Shift+D,1"]=ZmKeyMap.DBG_1;
this._map[ZmKeyMap.MAP_GLOBAL]["Alt+Shift+D,2"]=ZmKeyMap.DBG_2;
this._map[ZmKeyMap.MAP_GLOBAL]["Alt+Shift+D,3"]=ZmKeyMap.DBG_3;
this._map[ZmKeyMap.MAP_GLOBAL]["Alt+Shift+D,T"]=ZmKeyMap.DBG_TIMING
}};
ZmKeyMap.prototype=new DwtKeyMap(true);
ZmKeyMap.prototype.constructor=ZmKeyMap;
ZmKeyMap.prototype.isZmKeyMap=true;
ZmKeyMap.prototype.toString=function(){
return"ZmKeyMap"
};
ZmKeyMap.MAP_ADDRESS="address";
ZmKeyMap.MAP_BRIEFCASE="briefcase";
ZmKeyMap.MAP_CALENDAR="calendar";
ZmKeyMap.MAP_CALL="call";
ZmKeyMap.MAP_COMPOSE="compose";
ZmKeyMap.MAP_CONTACTS="contacts";
ZmKeyMap.MAP_CONVERSATION="conversation";
ZmKeyMap.MAP_CONVERSATION_LIST="conversationList";
ZmKeyMap.MAP_EDIT_APPOINTMENT="editAppointment";
ZmKeyMap.MAP_EDIT_CONTACT="editContact";
ZmKeyMap.MAP_EDIT_TASK="editTask";
ZmKeyMap.MAP_GLOBAL="global";
ZmKeyMap.MAP_MAIL="mail";
ZmKeyMap.MAP_MESSAGE="message";
ZmKeyMap.MAP_QUICK_REPLY="quickReply";
ZmKeyMap.MAP_OPTIONS="options";
ZmKeyMap.MAP_TASKS="tasks";
ZmKeyMap.MAP_VIEW_APPOINTMENT="viewAppointment";
ZmKeyMap.MAP_VOICEMAIL="voicemail";
ZmKeyMap.ADDRESS_PICKER="AddressPicker";
ZmKeyMap.ADD_EXTERNAL_CALENDAR="AddExternalCalendar";
ZmKeyMap.ATTACHMENT="Attachment";
ZmKeyMap.CAL_DAY_VIEW="DayView";
ZmKeyMap.CAL_FB_VIEW="FBView";
ZmKeyMap.CAL_LIST_VIEW="CalListView";
ZmKeyMap.CAL_MONTH_VIEW="MonthView";
ZmKeyMap.CAL_WEEK_VIEW="WeekView";
ZmKeyMap.CAL_WORK_WEEK_VIEW="WorkWeekView";
ZmKeyMap.CALL_MANAGER="CallManager";
ZmKeyMap.CANCEL="Cancel";
ZmKeyMap.COLLAPSE="Collapse";
ZmKeyMap.COLLAPSE_ALL="CollapseAll";
ZmKeyMap.DBG_NONE="DebugNone";
ZmKeyMap.DBG_1="DebugLevel1";
ZmKeyMap.DBG_2="DebugLevel2";
ZmKeyMap.DBG_3="DebugLevel3";
ZmKeyMap.DBG_TIMING="ToggleDebugTiming";
ZmKeyMap.DEL="Delete";
ZmKeyMap.SHIFT_DEL="ShiftDelete";
ZmKeyMap.DOWNLOAD="Download";
ZmKeyMap.EDIT="Edit";
ZmKeyMap.EXPAND="Expand";
ZmKeyMap.EXPAND_ALL="ExpandAll";
ZmKeyMap.FIRST_UNREAD="FirstUnread";
ZmKeyMap.FIRST_UNREAD_MSG="FirstUnreadMsg";
ZmKeyMap.FLAG="Flag";
ZmKeyMap.FOCUS_CONTENT_PANE="FocusContentPane";
ZmKeyMap.FOCUS_SEARCH_BOX="FocusSearchBox";
ZmKeyMap.FOCUS_TOOLBAR="FocusToolbar";
ZmKeyMap.FORWARD="Forward";
ZmKeyMap.GET_MAIL="GetMail";
ZmKeyMap.GOTO_BRIEFCASE="GoToBriefcase";
ZmKeyMap.GOTO_CALENDAR="GoToCalendar";
ZmKeyMap.GOTO_CONTACTS="GoToContacts";
ZmKeyMap.GOTO_DRAFTS="GoToDrafts";
ZmKeyMap.GOTO_JUNK="GoToJunk";
ZmKeyMap.GOTO_INBOX="GoToInbox";
ZmKeyMap.GOTO_MAIL="GoToMail";
ZmKeyMap.GOTO_OPTIONS="GoToOptions";
ZmKeyMap.GOTO_SENT="GoToSent";
ZmKeyMap.GOTO_TASKS="GoToTasks";
ZmKeyMap.GOTO_TRASH="GoToTrash";
ZmKeyMap.GOTO_VOICE="GoToVoice";
ZmKeyMap.HTML_FORMAT="HtmlFormat";
ZmKeyMap.KEEP_READING="KeepReading";
ZmKeyMap.LAST_UNREAD="LastUnread";
ZmKeyMap.LAST_UNREAD_MSG="LastUnreadMsg";
ZmKeyMap.LOGOFF="LogOff";
ZmKeyMap.MARK_COMPLETE="MarkComplete";
ZmKeyMap.MARK_HEARD="MarkHeard";
ZmKeyMap.MARK_READ="MarkRead";
ZmKeyMap.MARK_UNCOMPLETE="MarkUncomplete";
ZmKeyMap.MARK_UNHEARD="MarkUnheard";
ZmKeyMap.MARK_UNREAD="MarkUnread";
ZmKeyMap.MOVE="Move";
ZmKeyMap.MOVE_TO_INBOX="MoveToInbox";
ZmKeyMap.MOVE_TO_JUNK="MoveToJunk";
ZmKeyMap.MOVE_TO_TRASH="MoveToTrash";
ZmKeyMap.MUTE_UNMUTE_CONV="MuteUnmuteConv";
ZmKeyMap.NEW="New";
ZmKeyMap.NEW_APPT="NewAppointment";
ZmKeyMap.NEW_BRIEFCASE="NewBriefcase";
ZmKeyMap.NEW_CALENDAR="NewCalendar";
ZmKeyMap.NEW_CHAT="NewChat";
ZmKeyMap.NEW_CONTACT="NewContact";
ZmKeyMap.NEW_DOC="NewDocument";
ZmKeyMap.NEW_FILE="NewFile";
ZmKeyMap.NEW_FOLDER="NewFolder";
ZmKeyMap.NEW_MESSAGE="NewMessage";
ZmKeyMap.NEW_MESSAGE_WIN="NewMessageWindow";
ZmKeyMap.NEW_ROSTER_ITEM="NewRosterItem";
ZmKeyMap.NEW_SEARCH="NewSearch";
ZmKeyMap.NEW_TAG="NewTag";
ZmKeyMap.NEW_TASK="NewTask";
ZmKeyMap.NEW_WINDOW="NewWindow";
ZmKeyMap.NEXT_CONV="NextConversation";
ZmKeyMap.NEXT_MSG="NextMessage";
ZmKeyMap.NEXT_PAGE="NextPage";
ZmKeyMap.NEXT_UNREAD="NextUnread";
ZmKeyMap.NEXT_UNREAD_MSG="NextUnreadMsg";
ZmKeyMap.PLAY="Play";
ZmKeyMap.PRESENCE_MENU="PresenceMenu";
ZmKeyMap.PREV_CONV="PreviousConversation";
ZmKeyMap.PREV_MSG="PreviousMessage";
ZmKeyMap.PREV_PAGE="PreviousPage";
ZmKeyMap.PREV_UNREAD="PreviousUnread";
ZmKeyMap.PREV_UNREAD_MSG="PreviousUnreadMsg";
ZmKeyMap.PRINT="Print";
ZmKeyMap.PRINT_ALL="PrintAll";
ZmKeyMap.QUICK_ADD="QuickAdd";
ZmKeyMap.QUICK_REMINDER="QuickReminder";
ZmKeyMap.READING_PANE_BOTTOM="ReadingPaneAtBottom";
ZmKeyMap.READING_PANE_OFF="ReadingPaneOff";
ZmKeyMap.READING_PANE_RIGHT="ReadingPaneOnRight";
ZmKeyMap.REFRESH="Refresh";
ZmKeyMap.REPLY="Reply";
ZmKeyMap.REPLY_ALL="ReplyAll";
ZmKeyMap.SAVE="Save";
ZmKeyMap.SAVED_SEARCH="SavedSearch";
ZmKeyMap.SELECT_ALL="SelectAll";
ZmKeyMap.SEND="Send";
ZmKeyMap.SHORTCUTS="Shortcuts";
ZmKeyMap.SHOW_FRAGMENT="ShowFragment";
ZmKeyMap.SPAM="Spam";
ZmKeyMap.SPELLCHECK="Spellcheck";
ZmKeyMap.TAG="Tag";
ZmKeyMap.TODAY="Today";
ZmKeyMap.TOGGLE="Toggle";
ZmKeyMap.UNDO="Undo";
ZmKeyMap.UNTAG="Untag";
ZmKeyMap.VIEW_BY_CONV="ViewByConversation";
ZmKeyMap.VIEW_BY_MSG="ViewByMessage";
ZmKeyMap.VISIT="Visit";
ZmKeyMap.VISIT_TAG="VisitTag";
ZmKeyMap.ENTITY={};
ZmKeyMap.ENTITY[DwtKeyMap.ARROW_LEFT]="&larr;";
ZmKeyMap.ENTITY[DwtKeyMap.ARROW_RIGHT]="&rarr;";
ZmKeyMap.ENTITY[DwtKeyMap.ARROW_UP]="&uarr;";
ZmKeyMap.ENTITY[DwtKeyMap.ARROW_DOWN]="&darr;";
ZmKeyMap.ENTITY['"']="&quot;";
ZmKeyMap.ENTITY["&"]="&amp;";
ZmKeyMap.ENTITY["<"]="&lt;";
ZmKeyMap.ENTITY[">"]="&gt;";
ZmKeyMap.ENTITY[DwtKeyMap.COMMA]=",";
ZmKeyMap.ENTITY[DwtKeyMap.SEMICOLON]=";";
ZmKeyMap.ENTITY[DwtKeyMap.BACKSLASH]="\\";
ZmKeyMap.MAP_PRECONDITION={};
ZmKeyMap.ACTION_PRECONDITION={};
ZmKeyMap._setPreconditions=function(){
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_COMPOSE]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_MAIL]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_CONVERSATION_LIST]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_CONVERSATION]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_MESSAGE]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_CONTACTS]=ZmSetting.CONTACTS_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_EDIT_CONTACT]=ZmSetting.CONTACTS_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_CALENDAR]=ZmSetting.CALENDAR_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_EDIT_APPOINTMENT]=ZmSetting.CALENDAR_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_OPTIONS]=ZmSetting.OPTIONS_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_BRIEFCASE]=ZmSetting.BRIEFCASE_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_TASKS]=ZmSetting.TASKS_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_EDIT_TASK]=ZmSetting.TASKS_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_VOICEMAIL]=ZmSetting.VOICE_ENABLED;
ZmKeyMap.MAP_PRECONDITION[ZmKeyMap.MAP_CALL]=ZmSetting.VOICE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL]={};
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.FOCUS_SEARCH_BOX]=ZmSetting.SEARCH_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_BRIEFCASE]=ZmSetting.BRIEFCASE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_CALENDAR]=ZmSetting.CALENDAR_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_CONTACTS]=ZmSetting.CONTACTS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_MAIL]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_OPTIONS]=ZmSetting.OPTIONS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_TASKS]=ZmSetting.TASKS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.GOTO_VOICE]=ZmSetting.VOICE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_APPT]=ZmSetting.CALENDAR_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_BRIEFCASEITEM]=ZmSetting.BRIEFCASE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_CALENDAR]=ZmSetting.CALENDAR_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_CHAT]=ZmSetting.IM_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_CONTACT]=ZmSetting.CONTACTS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_FILE]=ZmSetting.BRIEFCASE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_DOC]=ZmSetting.DOCS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_FOLDER]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_MESSAGE]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_MESSAGE_WIN]=ZmSetting.MAIL_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_ROSTER_ITEM]=ZmSetting.IM_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_TAG]=ZmSetting.TAGGING_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.NEW_TASK]=ZmSetting.TASKS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.PRESENCE_MENU]=ZmSetting.IM_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.SAVED_SEARCH]=ZmSetting.SAVED_SEARCHES_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.TAG]=ZmSetting.TAGGING_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_GLOBAL][ZmKeyMap.UNTAG]=ZmSetting.TAGGING_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_COMPOSE]={};
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_COMPOSE][ZmKeyMap.ADDRESS_PICKER]=ZmSetting.CONTACTS_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_COMPOSE][ZmKeyMap.HTML_FORMAT]=ZmSetting.HTML_COMPOSE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_COMPOSE][ZmKeyMap.NEW_WINDOW]=ZmSetting.NEW_WINDOW_COMPOSE;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_COMPOSE][ZmKeyMap.SAVE]=ZmSetting.SAVE_DRAFT_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_EDIT_APPOINTMENT]={};
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_EDIT_APPOINTMENT][ZmKeyMap.HTML_FORMAT]=ZmSetting.HTML_COMPOSE_ENABLED;
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_CALENDAR]={};
ZmKeyMap.ACTION_PRECONDITION[ZmKeyMap.MAP_CALENDAR][ZmKeyMap.CAL_FB_VIEW]=ZmSetting.FREE_BUSY_VIEW_ENABLED
};
ZmKeyMap.prototype._checkMap=function(a){
var t;
var e=ZmKeyMap.MAP_PRECONDITION[a];
if(!e){
t=true
}else{
if(typeof e=="string"||typeof e=="number"){
t=appCtxt.get(e)
}else{
if(typeof e=="function"){
t=e()
}}}
this._checkedMap[a]=t;
return t
};
ZmKeyMap.prototype._checkAction=function(t,a){
if((this._checkedMap[t]===false)||(!this._checkedMap[t]&&!this._checkMap(t))){
return false
}
var e=ZmKeyMap.ACTION_PRECONDITION[t];
if(!e){
return true
}
var i=e[a];
if(!i){
return true
}
if(typeof i=="string"||typeof i=="number"){
return appCtxt.get(i)
}else{
if(typeof i=="function"){
return i()
}}
return true
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmTimezone")){
ZmTimezone=function(){};
ZmTimezone.getDefault=function(){
var t=DwtShell.getShell(window);
var e=appCtxt.get(ZmSetting.DEFAULT_TIMEZONE);
return(e)?AjxTimezone.getClientId(e):AjxTimezone.DEFAULT
};
ZmTimezone.getDefaultRule=function(){
return AjxTimezone.getRule(ZmTimezone.getDefault())
};
ZmTimezone.set=function(o,t,e,i){
var a=AjxTimezone.getRule(t);
if(!a){
return
}
if(a.autoDetected||!i){
if(o instanceof AjxSoapDoc){
ZmTimezone._setSoap(o,t,e,a)
}else{
ZmTimezone._setJson(o,t,a)
}}};
ZmTimezone._setSoap=function(f,r,d,u){
var s=f.set("tz",null,d);
var t=AjxTimezone.getServerId(r);
s.setAttribute("id",t);
if(u.autoDetected){
s.setAttribute("stdoff",u.standard.offset);
if(u.daylight){
s.setAttribute("dayoff",u.daylight.offset);
var m=["standard","daylight"];
var e=["mon","mday","week","wkday","hour","min","sec"];
for(var l=0;
l<m.length;
l++){
var o=m[l];
var c=u[o];
var a=f.set(o,null,s);
for(var h=0;
h<e.length;
h++){
var n=e[h];
if(n in c){
a.setAttribute(n,c[n])
}}}}}};
ZmTimezone._setJson=function(h,s,d){
var t=AjxTimezone.getServerId(s);
var n=h.tz={
id:t};
if(d.autoDetected){
n.stdoff=d.standard.offset;
if(d.daylight){
n.dayoff=d.daylight.offset;
var u=["standard","daylight"];
var e=["mon","mday","week","wkday","hour","min","sec"];
for(var l=0;
l<u.length;
l++){
var a=u[l];
var c=d[a];
n[a]={};
for(var r=0;
r<e.length;
r++){
var o=e[r];
if(o in c){
n[a][o]=c[o]
}}}}}}
}
if(AjxPackage.define("zimbraMail.share.model.ZmItem")){
ZmItem=function(a,o,i,e){
if(arguments.length==0){
return
}
ZmModel.call(this,a);
this.type=a;
this.id=o;
this.list=i;
this._list={};
this.tags=[];
this.tagHash={};
this.folderId=0;
var t=appCtxt.getById(o);
if(t){
this._list=AjxUtil.hashCopy(t._list);
if(!i){
this.list=t.list
}}
if(i){
this._list[i.id]=true
}
if(o&&!e){
appCtxt.cacheSet(o,this)
}};
ZmItem.prototype=new ZmModel;
ZmItem.prototype.constructor=ZmItem;
ZmItem.prototype.isZmItem=true;
ZmItem.prototype.toString=function(){
return"ZmItem"
};
ZmItem.APP={};
ZmItem.MSG_KEY={};
ZmItem.ICON={};
ZmItem.RESULTS_LIST={};
ZmItem.F_ACCOUNT=ZmId.FLD_ACCOUNT;
ZmItem.F_ATTACHMENT=ZmId.FLD_ATTACHMENT;
ZmItem.F_CAPACITY=ZmId.FLD_CAPACITY;
ZmItem.F_COMPANY=ZmId.FLD_COMPANY;
ZmItem.F_DATE=ZmId.FLD_DATE;
ZmItem.F_DEPARTMENT=ZmId.FLD_DEPARTMENT;
ZmItem.F_EMAIL=ZmId.FLD_EMAIL;
ZmItem.F_EXPAND=ZmId.FLD_EXPAND;
ZmItem.F_FILE_TYPE=ZmId.FLD_FILE_TYPE;
ZmItem.F_FLAG=ZmId.FLD_FLAG;
ZmItem.F_FOLDER=ZmId.FLD_FOLDER;
ZmItem.F_FRAGMENT=ZmId.FLD_FRAGMENT;
ZmItem.F_FROM=ZmId.FLD_FROM;
ZmItem.F_HOME_PHONE=ZmId.FLD_HOME_PHONE;
ZmItem.F_ID=ZmId.FLD_ID;
ZmItem.F_INDEX=ZmId.FLD_INDEX;
ZmItem.F_ITEM_ROW=ZmId.FLD_ITEM_ROW;
ZmItem.F_ITEM_ROW_3PANE=ZmId.FLD_ITEM_ROW_3PANE;
ZmItem.F_LOCATION=ZmId.FLD_LOCATION;
ZmItem.F_NAME=ZmId.FLD_NAME;
ZmItem.F_NOTES=ZmId.FLD_NOTES;
ZmItem.F_PARTICIPANT=ZmId.FLD_PARTICIPANT;
ZmItem.F_PCOMPLETE=ZmId.FLD_PCOMPLETE;
ZmItem.F_PRIORITY=ZmId.FLD_PRIORITY;
ZmItem.F_RECURRENCE=ZmId.FLD_RECURRENCE;
ZmItem.F_SELECTION=ZmId.FLD_SELECTION;
ZmItem.F_SELECTION_CELL=ZmId.FLD_SELECTION_CELL;
ZmItem.F_SIZE=ZmId.FLD_SIZE;
ZmItem.F_SORTED_BY=ZmId.FLD_SORTED_BY;
ZmItem.F_STATUS=ZmId.FLD_STATUS;
ZmItem.F_READ=ZmId.FLD_READ;
ZmItem.F_MUTE=ZmId.FLD_MUTE;
ZmItem.F_SUBJECT=ZmId.FLD_SUBJECT;
ZmItem.F_TAG=ZmId.FLD_TAG;
ZmItem.F_TAG_CELL=ZmId.FLD_TAG_CELL;
ZmItem.F_TO=ZmId.FLD_TO;
ZmItem.F_TYPE=ZmId.FLD_TYPE;
ZmItem.F_VERSION=ZmId.FLD_VERSION;
ZmItem.F_WORK_PHONE=ZmId.FLD_WORK_PHONE;
ZmItem.F_LOCK=ZmId.FLD_LOCK;
ZmItem.F_MSG_PRIORITY=ZmId.FLD_MSG_PRIORITY;
ZmItem.SOAP_CMD={};
ZmItem.TAGS_FIELD=1;
ZmItem.FLAG_ATTACH="a";
ZmItem.FLAG_FLAGGED="f";
ZmItem.FLAG_FORWARDED="w";
ZmItem.FLAG_ISDRAFT="d";
ZmItem.FLAG_ISSCHEDULED="c";
ZmItem.FLAG_ISSENT="s";
ZmItem.FLAG_READ_RECEIPT_SENT="n";
ZmItem.FLAG_REPLIED="r";
ZmItem.FLAG_UNREAD="u";
ZmItem.FLAG_MUTE="(";
ZmItem.FLAG_LOW_PRIORITY="?";
ZmItem.FLAG_HIGH_PRIORITY="!";
ZmItem.FLAG_PRIORITY="+";
ZmItem.FLAG_NOTE="t";
ZmItem.FLAG_OFFLINE_CREATED="o";
ZmItem.ALL_FLAGS=[ZmItem.FLAG_FLAGGED,ZmItem.FLAG_ATTACH,ZmItem.FLAG_UNREAD,ZmItem.FLAG_MUTE,ZmItem.FLAG_REPLIED,ZmItem.FLAG_FORWARDED,ZmItem.FLAG_ISSENT,ZmItem.FLAG_READ_RECEIPT_SENT,ZmItem.FLAG_ISDRAFT,ZmItem.FLAG_ISSCHEDULED,ZmItem.FLAG_HIGH_PRIORITY,ZmItem.FLAG_LOW_PRIORITY,ZmItem.FLAG_PRIORITY,ZmItem.FLAG_NOTE,ZmItem.FLAG_OFFLINE_CREATED];
ZmItem.FLAG_PROP={};
ZmItem.FLAG_PROP[ZmItem.FLAG_ATTACH]="hasAttach";
ZmItem.FLAG_PROP[ZmItem.FLAG_FLAGGED]="isFlagged";
ZmItem.FLAG_PROP[ZmItem.FLAG_FORWARDED]="isForwarded";
ZmItem.FLAG_PROP[ZmItem.FLAG_ISDRAFT]="isDraft";
ZmItem.FLAG_PROP[ZmItem.FLAG_ISSCHEDULED]="isScheduled";
ZmItem.FLAG_PROP[ZmItem.FLAG_ISSENT]="isSent";
ZmItem.FLAG_PROP[ZmItem.FLAG_READ_RECEIPT_SENT]="readReceiptSent";
ZmItem.FLAG_PROP[ZmItem.FLAG_REPLIED]="isReplied";
ZmItem.FLAG_PROP[ZmItem.FLAG_UNREAD]="isUnread";
ZmItem.FLAG_PROP[ZmItem.FLAG_MUTE]="isMute";
ZmItem.FLAG_PROP[ZmItem.FLAG_LOW_PRIORITY]="isLowPriority";
ZmItem.FLAG_PROP[ZmItem.FLAG_HIGH_PRIORITY]="isHighPriority";
ZmItem.FLAG_PROP[ZmItem.FLAG_PRIORITY]="isPriority";
ZmItem.FLAG_PROP[ZmItem.FLAG_NOTE]="isNote";
ZmItem.FLAG_PROP[ZmItem.FLAG_OFFLINE_CREATED]="isOfflineCreated";
ZmItem.DND_ACTION_MOVE=1<<0;
ZmItem.DND_ACTION_COPY=1<<1;
ZmItem.DND_ACTION_BOTH=ZmItem.DND_ACTION_MOVE|ZmItem.DND_ACTION_COPY;
ZmItem.NOTES_SEPARATOR="*~*~*~*~*~*~*~*~*~*";
ZmItem.registerItem=function(e,t){
if(t.app){
ZmItem.APP[e]=t.app
}
if(t.nameKey){
ZmItem.MSG_KEY[e]=t.nameKey
}
if(t.icon){
ZmItem.ICON[e]=t.icon
}
if(t.soapCmd){
ZmItem.SOAP_CMD[e]=t.soapCmd
}
if(t.itemClass){
ZmList.ITEM_CLASS[e]=t.itemClass
}
if(t.node){
ZmList.NODE[e]=t.node
}
if(t.organizer){
ZmOrganizer.ITEM_ORGANIZER[e]=t.organizer
}
if(t.searchType){
ZmSearch.TYPE[e]=t.searchType
}
if(t.resultsList){
ZmItem.RESULTS_LIST[e]=t.resultsList
}
if(t.node){
ZmList.ITEM_TYPE[t.node]=e
}
if(t.dropTargets){
if(!ZmApp.DROP_TARGETS[t.app]){
ZmApp.DROP_TARGETS[t.app]={}
}
ZmApp.DROP_TARGETS[t.app][e]=t.dropTargets
}};
ZmItem.getItemId=function(t){
if(!t){
return t
}
if(!ZmItem.SHORT_ID_RE){
var e=DwtShell.getShell(window);
ZmItem.SHORT_ID_RE=new RegExp(appCtxt.get(ZmSetting.USERID)+":","gi")
}
return t.replace(ZmItem.SHORT_ID_RE,"")
};
ZmItem.prototype.create=function(e){};
ZmItem.prototype.modify=function(e){};
ZmItem.prototype.getById=function(e){
if(e==this.id){
return this
}};
ZmItem.prototype.getAccount=function(){
if(!this.account){
var i;
if(this.folderId){
var a=window.parentAppCtxt||window.appCtxt;
var t=a.getById(this.folderId);
i=t&&t.getAccount()
}
if(!i){
var e=ZmOrganizer.parseId(this.id);
i=e&&e.account
}
this.account=i
}
return this.account
};
ZmItem.prototype.clear=function(){
this._evtMgr.removeAll(ZmEvent.L_MODIFY);
if(this.tags.length){
for(var e=0;
e<this.tags.length;
e++){
this.tags[e]=null
}
this.tags=[]
}
for(var e in this.tagHash){
this.tagHash[e]=null
}
this.tagHash={}
};
ZmItem.prototype.cache=function(){
if(this.id){
appCtxt.cacheSet(this.id,this);
return true
}
return false
};
ZmItem.prototype.hasTag=function(e){
return(this.tagHash[e]==true)
};
ZmItem.prototype.canAddTag=function(e){
return !this.hasTag(e)
};
ZmItem.prototype.getFolderId=function(){
return this.folderId
};
ZmItem.prototype.getUrl=function(){
return this.getRestUrl()
};
ZmItem.prototype.getRestUrl=function(){
if(this.restUrl){
return this.restUrl
}
var a=ZmOrganizer.ITEM_ORGANIZER[this.type];
var e=appCtxt.getById(this.folderId);
var t=e?([e.getRestUrl(),"/",AjxStringUtil.urlComponentEncode(this.name)].join("")):null;
return t
};
ZmItem.prototype.getTagImageInfo=function(){
return this.getTagImageFromNames(this.getVisibleTags())
};
ZmItem.prototype.getTagImageFromIds=function(t){
var e;
if(!t||t.length==0){
e="Blank_16"
}else{
if(t.length==1){
e=this.getTagImage(t[0])
}else{
e="TagStack"
}}
return e
};
ZmItem.prototype.getVisibleTags=function(){
if(!appCtxt.get(ZmSetting.TAGGING_ENABLED)){
return[]
}
return this.tags
};
ZmItem.prototype.getTagImageFromNames=function(e){
if(!e||e.length==0){
return"Blank_16"
}
if(e.length==1){
return this.getTagImage(e[0])
}
return"TagStack"
};
ZmItem.prototype.getTagImage=function(t){
var a=appCtxt.getAccountTagList(this);
var e=a.getByNameOrRemote(t);
return e?e.getIconWithColor():"Blank_16"
};
ZmItem.prototype.getDefaultDndAction=function(e){
return(this.isReadOnly()||e)?ZmItem.DND_ACTION_COPY:ZmItem.DND_ACTION_MOVE
};
ZmItem.prototype.isReadOnly=function(){
return false
};
ZmItem.prototype.isShared=function(){
if(this._isShared==null){
if(this.id===-1){
this._isShared=false
}else{
this._isShared=appCtxt.isRemoteId(this.id)
}}
return this._isShared
};
ZmItem.prototype.notifyDelete=function(){
this._notifyDelete();
for(var t in this._list){
var a=appCtxt.getById(t);
if(!a||(this.list&&t==this.list.id)){
continue
}
var e=a.controller;
if(!e||e.inactive||(e.getList().id!=t)){
continue
}
var i=a.getById(this.id);
if(i){
i._notifyDelete()
}}};
ZmItem.prototype._notifyDelete=function(){
this.deleteLocal();
if(this.list){
this.list.deleteLocal([this])
}
this._notify(ZmEvent.E_DELETE)
};
ZmItem.prototype.notifyModify=function(i,n){
this._notifyModify(i,n);
for(var t in this._list){
var a=t?appCtxt.getById(t):null;
if(!a||(this.list&&(t==this.list.id))){
continue
}
var e=a.controller;
if(!e||e.inactive||(e.getList().id!=t)){
continue
}
var o=a.getById(this.id);
if(o){
o._notifyModify(i,n)
}}};
ZmItem.prototype._notifyModify=function(r,h){
if(r.tn!=null){
this._parseTagNames(r.tn);
this._notify(ZmEvent.E_TAGS)
}
if(r.f!=null){
var a=this._getFlags();
var s={};
for(var n=0;
n<a.length;
n++){
s[a[n]]=this[ZmItem.FLAG_PROP[a[n]]]
}
this._parseFlags(r.f);
var t=[];
for(var n=0;
n<a.length;
n++){
var e=this[ZmItem.FLAG_PROP[a[n]]];
if(s[a[n]]!=e){
t.push(a[n])
}}
if(t.length){
this._notify(ZmEvent.E_FLAGS,{
flags:t}
)
}}
if(r.l!=null&&r.l!=this.folderId){
var o={
oldFolderId:this.folderId};
this.moveLocal(r.l);
if(this.list){
this.list.moveLocal([this],r.l)
}
if(h){
delete r.l;
return ZmEvent.E_MOVE
}else{
this._notify(ZmEvent.E_MOVE,o)
}}};
ZmItem.prototype.flagLocal=function(t,e){
this[ZmItem.FLAG_PROP[t]]=e
};
ZmItem.prototype.setFlag=function(a,t){
this.flagLocal(a,t);
var e=this.flags||"";
if(t&&e.indexOf(a)==-1){
e=e+a
}else{
if(!t&&e.indexOf(a)!=-1){
e=e.replace(a,"")
}}
this.flags=e;
return e
};
ZmItem.prototype.tagLocal=function(e,o){
var a=false;
if(o){
if(!this.tagHash[e]){
a=true;
this.tags.push(e);
this.tagHash[e]=true
}}else{
for(var t=0;
t<this.tags.length;
t++){
if(this.tags[t]==e){
this.tags.splice(t,1);
delete this.tagHash[e];
a=true;
break
}}}
return a
};
ZmItem.prototype.removeAllTagsLocal=function(){
this.tags=[];
for(var e in this.tagHash){
delete this.tagHash[e]
}};
ZmItem.prototype.deleteLocal=function(){};
ZmItem.prototype.move=function(e,a,t){
return ZmItem.move(this.id,e,a,t)
};
ZmItem.move=function(n,e,s,t,a){
var i={
ItemActionRequest:{
_jsns:"urn:zimbraMail",action:{
id:n instanceof Array?n.join():n,op:"move",l:e}}};
var o={
jsonObj:i,asyncMode:Boolean(s),callback:s,errorCallback:t,accountName:a};
return appCtxt.getAppController().sendRequest(o)
};
ZmItem.prototype.moveLocal=function(e){
this.folderId=e
};
ZmItem.prototype._parseTags=function(o){
this.tags=[];
this.tagHash={};
if(o&&o.length){
var e=o.split(",");
for(var t=0;
t<e.length;
t++){
var a=Number(e[t]);
if(a>=ZmOrganizer.FIRST_USER_ID[ZmOrganizer.TAG]){
this.tagLocal(a,true)
}}}};
ZmItem.prototype._parseTagNames=function(o){
this.tags=[];
this.tagHash={};
if(!o||!o.length){
return
}
o=o.replace(/\\,/g,"\u001D");
var e=o.split(",");
for(var a=0;
a<e.length;
a++){
var t=e[a].replace("\u001D",",");
this.tagLocal(t,true)
}};
ZmItem.prototype._parseFlags=function(o){
this.flags=o;
for(var a=0;
a<ZmItem.ALL_FLAGS.length;
a++){
var t=ZmItem.ALL_FLAGS[a];
var e=(o&&(o.indexOf(t)!=-1))?true:false;
this.flagLocal(t,e)
}};
ZmItem.prototype._notify=function(t,e){
this._doNotify(t,e)
};
ZmItem.prototype._setupNotify=function(){
this._doNotify()
};
ZmItem.prototype._doNotify=function(t,e){
if(this._evt){
this._evt.item=this;
if(t!=null){
ZmModel.prototype._notify.call(this,t,e)
}}else{
var a="";
if(this.type&&this.id){
a=": item = "+this.type+"("+this.id+")"
}}
if(this.list){
this.list._evt.item=this;
this.list._evt.items=[this];
if(t!=null){
if(e){
e.items=[this]
}else{
e={
items:[this]}
}
this.list._notify(t,e)
}}};
ZmItem.prototype._getFlags=function(){
return[ZmItem.FLAG_FLAGGED,ZmItem.FLAG_ATTACH]
};
ZmItem.prototype.rename=function(e,a,t){
return ZmItem.rename(this.id,e,a,t)
};
ZmItem.rename=function(n,e,s,t,a){
var i={
ItemActionRequest:{
_jsns:"urn:zimbraMail",action:{
id:n instanceof Array?n[0]:n,op:"rename",name:e}}};
var o={
jsonObj:i,asyncMode:Boolean(s),callback:s,errorCallback:t,accountName:a};
return appCtxt.getAppController().sendRequest(o)
};
ZmItem.prototype.getSortedTags=function(){
var o=this.tags&&this.tags.length;
if(o){
var n=appCtxt.getAccountTagList(this);
var t=[];
for(var a=0;
a<o;
a++){
var e=n.getByNameOrRemote(this.tags[a]);
if(!e){
continue
}
t.push(e)
}
t.sort(ZmTag.sortCompare);
return t
}
return null
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmActionStack")){
ZmActionStack=function(e){
this._stack=[];
this._pointer=-1;
this._maxLength=e||0
};
ZmEvent.S_ACTION="ACTION";
ZmActionStack.validTypes=[ZmId.ORG_FOLDER,ZmId.ITEM_MSG,ZmId.ITEM_CONV,ZmId.ITEM_CONTACT,ZmId.ITEM_GROUP,ZmId.ITEM_BRIEFCASE,ZmId.ORG_BRIEFCASE,ZmId.ITEM_TASK,ZmId.ORG_TASKS];
ZmActionStack.prototype.toString=function(){
return"ZmActionStack"
};
ZmActionStack.prototype.logAction=function(n){
var r=n.op,l=[];
if(n.items){
for(var s=0;
s<n.items.length;
s++){
var m=n.items[s];
if(m&&this._isValidType(m.type)){
l.push(m)
}}}else{
if(n.item){
if(n.item&&this._isValidType(n.item.type)){
l.push(n.item)
}}else{
if(n.ids){
for(var s=0;
s<n.ids.length;
s++){
var m=appCtxt.getById(n.ids[s]);
if(m&&this._isValidType(m.type)){
l.push(m)
}}}else{
if(n.id){
var m=appCtxt.getById(n.id);
if(m&&this._isValidType(m.type)){
l.push(m)
}}}}}
var u=n.attrs;
for(var s=0;
s<l.length;
s++){
var m=l[s];
if(m.type===ZmItem.CONV){
var d=u&&u.tcon;
for(var a in m.msgFolder){
var t=m.msgFolder[a],c=ZmFolder.TCON_CODE[t];
if(!d||d.indexOf(c)===-1){
l.push({
isConvMsg:true,id:a,type:ZmItem.MSG,folderId:t,list:{
type:ZmItem.MSG}}
)
}}}}
var h=l.length>1;
var o=null;
var t;
switch(r){
case"trash":t=ZmFolder.ID_TRASH;
break;
case"spam":t=ZmFolder.ID_SPAM;
break;
case"move":case"!spam":t=u.l;
break
}
var e=appCtxt.getById(t);
if(e&&!e.isRemote()){
switch(r){
case"trash":case"move":case"spam":case"!spam":for(var s=0;
s<l.length;
s++){
var m=l[s];
var f;
if(m instanceof ZmItem){
if(!m.isShared()){
f=new ZmItemMoveAction(m,m.getFolderId(),t,r)
}}else{
if(m instanceof ZmOrganizer){
if(!m.isRemote()){
f=new ZmOrganizerMoveAction(m,m.parent.id,t,r)
}}else{
if(m.isConvMsg){
if(!appCtxt.isRemoteId(m.id)){
f=new ZmItemMoveAction(m,m.folderId,t,r)
}}}}
if(f){
if(h){
if(!o){
o=new ZmCompositeAction(t)
}
o.addAction(f)
}else{
o=f
}}}
break
}
if(o){
this._push(o)
}}
return o
};
ZmActionStack.prototype.canUndo=function(){
return this._pointer>=0
};
ZmActionStack.prototype.canRedo=function(){
return this._pointer<this._stack.length-1
};
ZmActionStack.prototype.actionIsComplete=function(){
return this.canUndo()&&this._current().getComplete()
};
ZmActionStack.prototype.onComplete=function(t){
var e=this._current();
if(e){
e.onComplete(t)
}};
ZmActionStack.prototype.undo=function(){
if(this.canUndo()){
var e=this._pop();
e.undo()
}};
ZmActionStack.prototype.redo=function(){
if(this.canRedo()){
var e=this._stack[++this._pointer];
e.redo()
}};
ZmActionStack.prototype._push=function(t){
if(t&&t instanceof ZmAction){
var e=this._pointer+1;
while(this._maxLength&&e>=this._maxLength){
this._stack.shift();
e--
}
this._stack[e]=t;
this._stack.length=e+1;
this._pointer=e
}};
ZmActionStack.prototype._pop=function(){
return this.canUndo()?this._stack[this._pointer--]:null
};
ZmActionStack.prototype._current=function(){
return this.canUndo()?this._stack[this._pointer]:null
};
ZmActionStack.prototype._isValidType=function(e){
return !ZmActionStack.validTypes||AjxUtil.indexOf(ZmActionStack.validTypes,e)!==-1
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmAction")){
ZmAction=function(){
ZmModel.call(this,ZmEvent.S_ACTION);
this._complete=false
};
ZmAction.prototype=new ZmModel;
ZmAction.prototype.constructor=ZmAction;
ZmAction.ACTION_ZMACTION="ZmAction";
ZmAction.ACTION_ZMITEMACTION="ZmItemAction";
ZmAction.ACTION_ZMITEMMOVEACTION="ZmItemMoveAction";
ZmAction.ACTION_ZMITEMTRASHACTION="ZmItemTrashAction";
ZmAction.ACTION_ZMORGANIZERACTION="ZmOrganizerAction";
ZmAction.ACTION_ZMORGANIZERMOVEACTION="ZmOrganizerMoveAction";
ZmAction.ACTION_ZMCOMPOSITEACTION="ZmCompositeAction";
ZmAction.prototype.type=ZmAction.ACTION_ZMITEMACTION;
ZmAction.prototype.toString=function(){
return"ZmAction"
};
ZmAction.prototype.undo=function(){};
ZmAction.prototype.redo=function(){};
ZmAction.prototype.setComplete=function(){
if(!this._complete){
this._complete=true;
this._notify(ZmEvent.E_COMPLETE)
}};
ZmAction.prototype.getComplete=function(){
return this._complete
};
ZmAction.prototype.onComplete=function(e){
if(this._complete){
e.run(this)
}else{
this.addChangeListener(new AjxListener(this,this._handleComplete,[e]))
}};
ZmAction.prototype._handleComplete=function(t,e){
if(e.event===ZmEvent.E_COMPLETE){
t.run(this)
}};
ZmItemAction=function(e,t){
if(!arguments.length){
return
}
ZmAction.call(this);
this._item=e;
this._op=t
};
ZmItemAction.prototype=new ZmAction;
ZmItemAction.prototype.constructor=ZmItemAction;
ZmItemAction.prototype.type=ZmAction.ACTION_ZMITEMACTION;
ZmItemAction.prototype.toString=function(){
return"ZmItemAction"
};
ZmItemAction.prototype.getItem=function(){
return this._item
};
ZmItemAction.prototype.getOp=function(){
return this._op
};
ZmOrganizerAction=function(e,t){
if(!arguments.length){
return
}
ZmAction.call(this);
this._organizer=e;
this._op=t
};
ZmOrganizerAction.prototype=new ZmAction;
ZmOrganizerAction.prototype.constructor=ZmOrganizerAction;
ZmOrganizerAction.prototype.type=ZmAction.ACTION_ZMORGANIZERACTION;
ZmOrganizerAction.prototype.toString=function(){
return"ZmOrganizerAction"
};
ZmOrganizerAction.prototype.getOrganizer=function(){
return this._organizer
};
ZmOrganizerAction.prototype.getOp=function(){
return this._op
};
ZmItemMoveAction=function(t,e,i,a){
ZmItemAction.call(this,t,a);
this._fromFolderId=e;
this._toFolderId=i
};
ZmItemMoveAction.prototype=new ZmItemAction;
ZmItemMoveAction.prototype.constructor=ZmItemMoveAction;
ZmItemMoveAction.prototype.type=ZmAction.ACTION_ZMITEMMOVEACTION;
ZmItemMoveAction.prototype.toString=function(){
return"ZmItemMoveAction"
};
ZmItemMoveAction.UNDO_MSG={
move:ZmMsg.actionUndoMove,trash:ZmMsg.actionUndoTrash,spam:ZmMsg.actionUndoMarkAsJunk,"!spam":ZmMsg.actionUndoMarkAsNotJunk};
ZmItemMoveAction.prototype.getFromFolderId=function(){
return this._fromFolderId
};
ZmItemMoveAction.prototype.getToFolderId=function(){
return this._toFolderId
};
ZmItemMoveAction.prototype._doMove=function(o,a,e){
var t=ZmItemMoveAction._realizeItems(this._item),i=t[0]&&t[0].list;
i.moveItems({
items:t,folder:appCtxt.getById(e),noUndo:true,finalCallback:this._handleDoMove.bind(this,this._item.folderId,e),fromFolderId:this._toFolderId}
)
};
ZmItemMoveAction.prototype._handleDoMove=function(n,a,r){
var e=[];
for(var h in r.idHash){
var o=r.idHash[h];
if(o instanceof ZmConv){
o.folderId=a
}
var s=o&&o.list;
if(AjxUtil.indexOf(e,s)==-1){
e.push(s)
}}
for(var t=0;
t<e.length;
t++){
e[t]._notify(ZmEvent.E_MOVE,{
oldFolderId:n}
)
}
ZmListController.handleProgress({
state:ZmListController.PROGRESS_DIALOG_CLOSE}
);
ZmBaseController.showSummary(r.actionSummary)
};
ZmItemMoveAction.prototype.undo=function(t,e){
this._doMove(t,e,this._fromFolderId)
};
ZmItemMoveAction.prototype.redo=function(t,e){
this._doMove(t,e,this._toFolderId)
};
ZmItemMoveAction.multipleUndo=function(n,h,t){
var e={};
for(var s=0;
s<n.length;
s++){
var o=n[s];
if(o instanceof ZmItemMoveAction){
var d=o.getFromFolderId();
var u=o.getToFolderId();
var m=o.getItem();
var c=(m&&m.list&&m.list.type)||0;
if(!e[d]){
e[d]={}
}
if(!e[d][u]){
e[d][u]={}
}
if(!e[d][u][c]){
e[d][u][c]=[]
}
e[d][u][c].push(o)
}}
for(var d in e){
for(var u in e[d]){
for(var c in e[d][u]){
var a=e[d][u][c];
var l=[];
var r=null;
for(var s=0;
s<a.length;
s++){
var o=a[s];
var m=o.getItem();
l.push(m)
}
l=ZmItemMoveAction._realizeItems(l);
r=l[0]&&l[0].list;
if(r){
r.moveItems({
items:l,folder:appCtxt.getById(h?u:d),noUndo:true,fromFolderId:t}
)
}}}}};
ZmItemMoveAction.multipleRedo=function(e){
ZmItemMoveAction.multipleUndo(e,true)
};
ZmItemMoveAction._realizeItems=function(e){
var t,a;
return AjxUtil.map(AjxUtil.toArray(e),function(i){
if(i.isConvMsg){
t=t||new ZmMailList(ZmItem.MSG);
a=new ZmMailMsg(i.id,t,true);
a.folderId=i.folderId;
return a
}else{
return i
}}
)
};
ZmOrganizerMoveAction=function(e,t,i,a){
ZmOrganizerAction.call(this,e,a);
this._fromFolderId=t;
this._toFolderId=i
};
ZmOrganizerMoveAction.prototype=new ZmOrganizerAction;
ZmOrganizerMoveAction.prototype.constructor=ZmOrganizerMoveAction;
ZmOrganizerMoveAction.prototype.type=ZmAction.ACTION_ZMORGANIZERMOVEACTION;
ZmOrganizerMoveAction.prototype.toString=function(){
return"ZmOrganizerMoveAction"
};
ZmOrganizerMoveAction.prototype.getFromFolderId=function(){
return this._fromFolderId
};
ZmOrganizerMoveAction.prototype.getToFolderId=function(){
return this._toFolderId
};
ZmOrganizerMoveAction.prototype._doMove=function(i,t,e){
var a=appCtxt.getById(e);
if(a){
this._organizer.move(a,true)
}};
ZmOrganizerMoveAction.prototype.undo=function(t,e){
this._doMove(t,e,this._fromFolderId)
};
ZmOrganizerMoveAction.prototype.redo=function(t,e){
this._doMove(t,e,this._toFolderId)
};
ZmOrganizerMoveAction.multipleUndo=function(o,e){
for(var t=0;
t<o.length;
t++){
var a=o[t];
if(a instanceof ZmOrganizerMoveAction){
a._doMove(null,null,e?this._toFolderId:this._fromFolderId)
}}};
ZmOrganizerMoveAction.multipleRedo=function(e){
ZmItemMoveAction.multipleUndo(e,true)
};
ZmCompositeAction=function(e){
ZmAction.call(this);
this._actions={};
this._toFolderId=e
};
ZmCompositeAction.prototype=new ZmAction;
ZmCompositeAction.prototype.constructor=ZmCompositeAction;
ZmCompositeAction.prototype.type=ZmAction.ACTION_ZMCOMPOSITEACTION;
ZmCompositeAction.prototype.toString=function(){
return"ZmCompositeAction"
};
ZmCompositeAction.prototype.addAction=function(t){
if(t&&t!=this&&t instanceof ZmAction){
var e=t.type;
if(!this._actions[e]){
this._actions[e]=[]
}
this._actions[e].push(t)
}};
ZmCompositeAction.prototype.getActions=function(e){
return this._actions[e]||[]
};
ZmCompositeAction.prototype.hasActions=function(e){
return this._actions[e]&&this._actions[e].length>0
};
ZmCompositeAction.prototype.undo=function(o,e){
if(this.hasActions(ZmAction.ACTION_ZMITEMMOVEACTION)){
ZmItemMoveAction.multipleUndo(this.getActions(ZmAction.ACTION_ZMITEMMOVEACTION),null,this._toFolderId)
}
if(this.hasActions(ZmAction.ACTION_ZMORGANIZERMOVEACTION)){
ZmOrganizerMoveAction.multipleUndo(this.getActions(ZmAction.ACTION_ZMORGANIZERMOVEACTION))
}
if(this.hasActions(ZmAction.ACTION_ZMCOMPOSITEACTION)||this.hasActions(ZmAction.ACTION_ZMITEMACTION)){
var a=this.getActions(ZmAction.ACTION_ZMCOMPOSITEACTION).concat(this.getActions(ZmAction.ACTION_ZMITEMACTION));
for(var t=0;
t<a.length;
t++){
a[t].undo()
}}};
ZmCompositeAction.prototype.redo=function(o,e){
if(this.hasActions(ZmAction.ACTION_ZMITEMMOVEACTION)){
ZmItemMoveAction.multipleRedo(this.getActions(ZmAction.ACTION_ZMITEMMOVEACTION))
}
if(this.hasActions(ZmAction.ACTION_ZMORGANIZERMOVEACTION)){
ZmOrganizerMoveAction.multipleRedo(this.getActions(ZmAction.ACTION_ZMORGANIZERMOVEACTION))
}
if(this.hasActions(ZmAction.ACTION_ZMCOMPOSITEACTION)||this.hasActions(ZmAction.ACTION_ZMITEMACTION)||this.hasActions(ZmAction.ACTION_ZMORGANIZERACTION)){
var a=this.getActions(ZmAction.ACTION_ZMCOMPOSITEACTION).concat(this.getActions(ZmAction.ACTION_ZMITEMACTION)).concat(this.getActions(ZmAction.ACTION_ZMORGANIZERACTION));
for(var t=0;
t<a.length;
t++){
a[t].redo()
}}}
}
if(AjxPackage.define("zimbraMail.share.model.ZmOrganizer")){
ZmOrganizer=function(e){
if(arguments.length==0){
return
}
this.type=e.type;
var t=this.id=e.id;
this.nId=ZmOrganizer.normalizeId(t);
this.name=ZmFolder.MSG_KEY[this.nId]?ZmMsg[ZmFolder.MSG_KEY[this.nId]]:e.name;
this._systemName=this.nId<256&&e.name;
this.parent=e.parent;
this.tree=e.tree;
this.numUnread=e.numUnread||0;
this.numTotal=e.numTotal||0;
this.noTooltip=e.noTooltip;
this.sizeTotal=e.sizeTotal||0;
this.url=e.url;
this.owner=e.owner;
this.oname=e.oname;
this.link=e.link||(Boolean(e.zid))||(this.parent&&this.parent.link);
this.isMountpoint=e.link;
this.zid=e.zid;
this.rid=e.rid;
this.restUrl=e.restUrl;
this.account=e.account;
this.perm=e.perm;
this.noSuchFolder=e.broken;
this._isAdmin=this._isReadOnly=this._hasPrivateAccess=null;
this.retentionPolicy=e.retentionPolicy;
this.webOfflineSyncDays=e.webOfflineSyncDays;
this.color=e.color||(this.parent&&this.parent.color)||ZmOrganizer.ORG_COLOR[t]||ZmOrganizer.ORG_COLOR[this.nId]||ZmOrganizer.DEFAULT_COLOR[this.type]||ZmOrganizer.C_NONE;
this.isColorCustom=e.rgb!=null;
this.rgb=e.rgb||ZmOrganizer.COLOR_VALUES[this.color]||ZmOrganizer.COLOR_VALUES[ZmOrganizer.ORG_DEFAULT_COLOR];
if(appCtxt.isOffline&&!this.account&&this.id==this.nId){
this.account=appCtxt.accountList.mainAccount
}
if(t&&e.tree){
appCtxt.cacheSet(t,this);
if(this.link){
appCtxt.cacheSet([this.zid,this.rid].join(":"),this)
}}
this.children=new AjxVector()
};
ZmOrganizer.prototype.isZmOrganizer=true;
ZmOrganizer.prototype.toString=function(){
return"ZmOrganizer"
};
ZmOrganizer.TAG=ZmEvent.S_TAG;
ZmOrganizer.SEARCH=ZmEvent.S_SEARCH;
ZmOrganizer.SHARE=ZmEvent.S_SHARE;
ZmOrganizer.MOUNTPOINT=ZmEvent.S_MOUNTPOINT;
ZmOrganizer.ZIMLET=ZmEvent.S_ZIMLET;
ZmOrganizer.ID_ROOT=1;
ZmOrganizer.ID_INBOX=2;
ZmOrganizer.ID_TRASH=3;
ZmOrganizer.ID_SPAM=4;
ZmOrganizer.ID_ADDRBOOK=7;
ZmOrganizer.ID_CALENDAR=10;
ZmOrganizer.ID_AUTO_ADDED=13;
ZmOrganizer.ID_CHATS=14;
ZmOrganizer.ID_TASKS=15;
ZmOrganizer.ID_BRIEFCASE=16;
ZmOrganizer.ID_ALL_MAILBOXES=249;
ZmOrganizer.ID_NOTIFICATION_MP=250;
ZmOrganizer.ID_SYNC_FAILURES=252;
ZmOrganizer.ID_OUTBOX=254;
ZmOrganizer.ID_ZIMLET=-1000;
ZmOrganizer.ID_ROSTER_LIST=-11;
ZmOrganizer.ID_ROSTER_TREE_ITEM=-13;
ZmOrganizer.ID_ATTACHMENTS=-17;
ZmOrganizer.ID_DLS=-18;
ZmOrganizer.F_NAME="name";
ZmOrganizer.F_UNREAD="unread";
ZmOrganizer.F_TOTAL="total";
ZmOrganizer.F_SIZE="size";
ZmOrganizer.F_COLOR="color";
ZmOrganizer.F_RGB="rgb";
ZmOrganizer.F_QUERY="query";
ZmOrganizer.F_SHARES="shares";
ZmOrganizer.F_FLAGS="flags";
ZmOrganizer.F_REST_URL="rest";
ZmOrganizer.F_PERMS="perms";
ZmOrganizer.F_RNAME="rname";
ZmOrganizer.FLAG_CHECKED="#";
ZmOrganizer.FLAG_DISALLOW_SUBFOLDER="o";
ZmOrganizer.FLAG_EXCLUDE_FREE_BUSY="b";
ZmOrganizer.FLAG_IMAP_SUBSCRIBED="*";
ZmOrganizer.FLAG_OFFLINE_GLOBAL="g";
ZmOrganizer.FLAG_OFFLINE_SYNCABLE="y";
ZmOrganizer.FLAG_OFFLINE_SYNCING="~";
ZmOrganizer.ALL_FLAGS=[ZmOrganizer.FLAG_CHECKED,ZmOrganizer.FLAG_IMAP_SUBSCRIBED,ZmOrganizer.FLAG_EXCLUDE_FREE_BUSY,ZmOrganizer.FLAG_DISALLOW_SUBFOLDER,ZmOrganizer.FLAG_OFFLINE_GLOBAL,ZmOrganizer.FLAG_OFFLINE_SYNCABLE,ZmOrganizer.FLAG_OFFLINE_SYNCING];
ZmOrganizer.FLAG_PROP={};
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_CHECKED]="isChecked";
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_IMAP_SUBSCRIBED]="imapSubscribed";
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_EXCLUDE_FREE_BUSY]="excludeFreeBusy";
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_DISALLOW_SUBFOLDER]="disallowSubFolder";
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_OFFLINE_GLOBAL]="isOfflineGlobalSearch";
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_OFFLINE_SYNCABLE]="isOfflineSyncable";
ZmOrganizer.FLAG_PROP[ZmOrganizer.FLAG_OFFLINE_SYNCING]="isOfflineSyncing";
ZmOrganizer.VALID_NAME_CHARS='[^\\x00-\\x1F\\x7F:\\/\\"]';
ZmOrganizer.VALID_PATH_CHARS='[^\\x00-\\x1F\\x7F:\\"]';
ZmOrganizer.VALID_NAME_RE=new RegExp("^"+ZmOrganizer.VALID_NAME_CHARS+"+$");
ZmOrganizer.MAX_NAME_LENGTH=128;
ZmOrganizer.MAX_DISPLAY_NAME_LENGTH=30;
ZmOrganizer.C_NONE=0;
ZmOrganizer.C_BLUE=1;
ZmOrganizer.C_CYAN=2;
ZmOrganizer.C_GREEN=3;
ZmOrganizer.C_PURPLE=4;
ZmOrganizer.C_RED=5;
ZmOrganizer.C_YELLOW=6;
ZmOrganizer.C_PINK=7;
ZmOrganizer.C_GRAY=8;
ZmOrganizer.C_ORANGE=9;
ZmOrganizer.MAX_COLOR=ZmOrganizer.C_ORANGE;
ZmOrganizer.ORG_DEFAULT_COLOR=ZmOrganizer.C_GRAY;
ZmOrganizer.COLOR_VALUES=[null,ZmMsg.colorBlue,ZmMsg.colorCyan,ZmMsg.colorGreen,ZmMsg.colorPurple,ZmMsg.colorRed,ZmMsg.colorYellow,ZmMsg.colorPink,ZmMsg.colorGray,ZmMsg.colorOrange];
ZmOrganizer.COLOR_TEXT={};
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_NONE]=ZmMsg.none;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_ORANGE]=ZmMsg.orange;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_BLUE]=ZmMsg.blue;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_CYAN]=ZmMsg.cyan;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_GREEN]=ZmMsg.green;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_PURPLE]=ZmMsg.purple;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_RED]=ZmMsg.red;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_YELLOW]=ZmMsg.yellow;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_PINK]=ZmMsg.pink;
ZmOrganizer.COLOR_TEXT[ZmOrganizer.C_GRAY]=ZmMsg.gray;
ZmOrganizer.COLORS=[];
ZmOrganizer.COLOR_CHOICES=[];
(function(){
for(var t=0;
t<=ZmOrganizer.MAX_COLOR;
t++){
var e=ZmOrganizer.COLOR_TEXT[t];
ZmOrganizer.COLORS.push(e);
ZmOrganizer.COLOR_CHOICES.push({
value:t,label:e}
)
}}
)();
ZmOrganizer.MSG_KEY={};
ZmOrganizer.ROOT_MSG_KEY={};
ZmOrganizer.ITEM_ORGANIZER={};
ZmOrganizer.DEFAULT_FOLDER={};
ZmOrganizer.SOAP_CMD={};
ZmOrganizer.FIRST_USER_ID={};
ZmOrganizer.PRECONDITION={};
ZmOrganizer.HAS_COLOR={};
ZmOrganizer.DEFAULT_COLOR={};
ZmOrganizer.ORG_COLOR={};
ZmOrganizer.APP={};
ZmOrganizer.ORG_CLASS={};
ZmOrganizer.ORG_PACKAGE={};
ZmOrganizer.CREATE_FUNC={};
ZmOrganizer.LABEL={};
ZmOrganizer.ITEMS_KEY={};
ZmOrganizer.TREE_TYPE={};
ZmOrganizer.VIEWS={};
ZmOrganizer.VIEW_HASH={};
ZmOrganizer.TYPE={};
ZmOrganizer.FOLDER_KEY={};
ZmOrganizer.MOUNT_KEY={};
ZmOrganizer.DEFERRABLE={};
ZmOrganizer.PATH_IN_NAME={};
ZmOrganizer.OPEN_SETTING={};
ZmOrganizer.NEW_OP={};
ZmOrganizer.DISPLAY_ORDER={};
ZmOrganizer.HIDE_EMPTY={};
ZmOrganizer.SHAREABLE={};
ZmOrganizer.APP2ORGANIZER={};
ZmOrganizer.APP2ORGANIZER_R={};
ZmOrganizer.PERM_READ="r";
ZmOrganizer.PERM_WRITE="w";
ZmOrganizer.PERM_INSERT="i";
ZmOrganizer.PERM_DELETE="d";
ZmOrganizer.PERM_ADMIN="a";
ZmOrganizer.PERM_WORKFLOW="x";
ZmOrganizer.PERM_PRIVATE="p";
ZmOrganizer.RETENTION_KEEP="keep";
ZmOrganizer.RETENTION_PURGE="purge";
ZmOrganizer.registerOrg=function(a,e){
if(e.nameKey){
ZmOrganizer.MSG_KEY[a]=e.nameKey
}
if(e.app){
ZmOrganizer.APP[a]=e.app;
if(!ZmOrganizer.APP2ORGANIZER[e.app]){
ZmOrganizer.APP2ORGANIZER[e.app]=[]
}
ZmOrganizer.APP2ORGANIZER[e.app].push(a);
ZmOrganizer.APP2ORGANIZER_R[a]=e.app
}
if(e.defaultFolder){
ZmOrganizer.DEFAULT_FOLDER[a]=e.defaultFolder
}
if(e.precondition){
ZmOrganizer.PRECONDITION[a]=e.precondition
}
if(e.soapCmd){
ZmOrganizer.SOAP_CMD[a]=e.soapCmd
}
if(e.firstUserId){
ZmOrganizer.FIRST_USER_ID[a]=e.firstUserId
}
if(e.orgClass){
ZmOrganizer.ORG_CLASS[a]=e.orgClass
}
if(e.orgPackage){
ZmOrganizer.ORG_PACKAGE[a]=e.orgPackage
}
if(e.labelKey){
ZmOrganizer.LABEL[a]=e.labelKey
}
if(e.itemsKey){
ZmOrganizer.ITEMS_KEY[a]=e.itemsKey
}
if(e.hasColor){
ZmOrganizer.HAS_COLOR[a]=e.hasColor
}
if(e.views){
ZmOrganizer.VIEWS[a]=e.views
}
if(e.folderKey){
ZmOrganizer.FOLDER_KEY[a]=e.folderKey
}
if(e.mountKey){
ZmOrganizer.MOUNT_KEY[a]=e.mountKey
}
if(e.deferrable){
ZmOrganizer.DEFERRABLE[a]=e.deferrable
}
if(e.pathInName){
ZmOrganizer.PATH_IN_NAME[a]=e.pathInName
}
if(e.openSetting){
ZmOrganizer.OPEN_SETTING[a]=e.openSetting
}
if(e.newOp){
ZmOrganizer.NEW_OP[a]=e.newOp
}
if(e.displayOrder){
ZmOrganizer.DISPLAY_ORDER[a]=e.displayOrder
}
if(e.hideEmpty){
ZmOrganizer.HIDE_EMPTY[a]=e.hideEmpty
}
ZmOrganizer.SHAREABLE[a]=!e.disableShare;
if(!appCtxt.isChildWindow||e.childWindow){
if(e.compareFunc){
ZmTreeView.COMPARE_FUNC[a]=e.compareFunc
}
if(e.treeController){
ZmOverviewController.CONTROLLER[a]=e.treeController
}}
ZmOrganizer.TREE_TYPE[a]=e.treeType||a;
ZmOrganizer.CREATE_FUNC[a]=e.createFunc||"ZmOrganizer.create";
if(e.views){
ZmOrganizer.VIEW_HASH[a]=AjxUtil.arrayAsHash(ZmOrganizer.VIEWS[a])
}
if(e.hasColor){
ZmOrganizer.DEFAULT_COLOR[a]=(e.defaultColor!=null)?e.defaultColor:ZmOrganizer.ORG_DEFAULT_COLOR
}
if(e.orgColor){
for(var t in e.orgColor){
ZmOrganizer.ORG_COLOR[t]=e.orgColor[t]
}}
if(e.dropTargets){
if(!ZmApp.DROP_TARGETS[e.app]){
ZmApp.DROP_TARGETS[e.app]={}
}
ZmApp.DROP_TARGETS[e.app][a]=e.dropTargets
}};
ZmOrganizer.sortCompare=function(t,e){};
ZmOrganizer.getColorValue=function(t,e){
if(t==ZmOrganizer.DEFAULT_COLOR[e]){
return null
}
return t
};
ZmOrganizer.create=function(s){
var h={
CreateFolderRequest:{
_jsns:"urn:zimbraMail"}};
var o=h.CreateFolderRequest.folder={};
var e=s.errorCallback||new AjxCallback(null,ZmOrganizer._handleErrorCreate,s);
var a=s.type;
s.view=s.view||ZmOrganizer.VIEWS[a]?ZmOrganizer.VIEWS[a][0]:null;
for(var t in s){
if(t=="type"||t=="errorCallback"||t=="account"){
continue
}
var n=s[t];
if(n){
o[t]=n
}}
var r=s.asyncMode===undefined?true:s.asyncMode;
return appCtxt.getAppController().sendRequest({
jsonObj:h,asyncMode:r,accountName:(s.account&&s.account.name),callback:s.callback,callbackAfterNotifications:s.callbackAfterNotifications,errorCallback:e}
)
};
ZmOrganizer._handleErrorCreate=function(o,e){
if(!o.url&&!o.name){
return false
}
var i;
if(o.name&&(e.code==ZmCsfeException.MAIL_ALREADY_EXISTS)){
var t=appCtxt.getFolderTree(appCtxt.getActiveAccount()).getFolderTypeByName(o.name);
i=AjxMessageFormat.format(ZmMsg.errorAlreadyExists,[o.name,t.toLowerCase()])
}else{
if(o.url){
var a=(e.code==ZmCsfeException.SVC_RESOURCE_UNREACHABLE)?ZmMsg.feedUnreachable:ZmMsg.feedInvalid;
i=AjxMessageFormat.format(a,o.url)
}}
if(i){
ZmOrganizer._showErrorMsg(i);
return true
}
return false
};
ZmOrganizer._showErrorMsg=function(t){
var e=appCtxt.getMsgDialog();
e.reset();
e.setMessage(AjxStringUtil.htmlEncode(t),DwtMessageDialog.CRITICAL_STYLE);
e.popup()
};
ZmOrganizer.getFolder=function(n,o,e){
var i={
GetFolderRequest:{
_jsns:"urn:zimbraMail"}};
var t=i.GetFolderRequest;
t.folder={
l:n};
var a=new AjxCallback(null,ZmOrganizer._handleResponseGetFolder,[o]);
if(e){
e.addRequestParams(i,a)
}else{
appCtxt.getRequestMgr().sendRequest({
jsonObj:i,asyncMode:true,callback:a}
)
}};
ZmOrganizer._handleResponseGetFolder=function(n,e){
var o=e.getResponse().GetFolderResponse;
var t=(o&&o.folder&&o.folder[0])||(o&&o.link&&o.link[0]);
var i;
if(t){
i=appCtxt.getById(t.id);
if(i){
i.clearShares();
i._setSharesFromJs(t)
}else{
var a=appCtxt.getById(t.l);
i=ZmFolderTree.createFromJs(a,t,appCtxt.getFolderTree(),"folder")
}}
if(n){
n.run(i)
}};
ZmOrganizer.prototype.getFolder=function(t,e){
ZmOrganizer.getFolder(this.id,t,e)
};
ZmOrganizer.getViewName=function(e){
return ZmOrganizer.VIEWS[e][0]
};
ZmOrganizer.checkWebOfflineSyncDays=function(t){
if(isNaN(t)){
return ZmMsg.invalidFolderSyncInterval
}
var e=parseInt(t);
if(e<0||e>30){
return ZmMsg.invalidFolderSyncInterval
}
return null
};
ZmOrganizer.checkName=function(e){
if(e.length==0){
return ZmMsg.nameEmpty
}
if(e.length>ZmOrganizer.MAX_NAME_LENGTH){
return AjxMessageFormat.format(ZmMsg.nameTooLong,ZmOrganizer.MAX_NAME_LENGTH)
}
if(!ZmOrganizer.VALID_NAME_RE.test(e)){
return AjxMessageFormat.format(ZmMsg.errorInvalidName,AjxStringUtil.htmlEncode(e))
}
return null
};
ZmOrganizer.checkUrl=function(e){
if(!e.match(/^[a-zA-Z]+:\/\/.*$/i)){
return ZmMsg.errorUrlMissing
}
return null
};
ZmOrganizer.checkSortArgs=function(e,t){
if(!e&&!t){
return 0
}
if(e&&!t){
return 1
}
if(!e&&t){
return -1
}
return null
};
ZmOrganizer.checkColor=function(e){
return((e!=null)&&(e>=0&&e<=ZmOrganizer.MAX_COLOR))?e:ZmOrganizer.ORG_DEFAULT_COLOR
};
ZmOrganizer.getSystemId=function(a,t,e){
t=t||appCtxt.getActiveAccount();
if((t&&!t.isMain)||e){
return((typeof(a)=="string")&&(a.indexOf(":")!=-1)||!a)?a:([t.id,a].join(":"))
}
return a
};
ZmOrganizer.normalizeId=function(i,a){
if(typeof(i)!="string"){
return i
}
var e=i.indexOf(":");
var t=(e==-1)?i:i.substr(e+1);
return(a&&(t>=ZmOrganizer.FIRST_USER_ID[a]))?i:t
};
ZmOrganizer.parseId=function(i,t){
var a=window.parentAppCtxt||window.appCtxt;
t=t||{};
if(i==null){
return t
}
var e=(typeof i=="string")?i.indexOf(":"):-1;
if(e==-1){
t.account=a.accountList.mainAccount;
t.id=i
}else{
t.acctId=i.substring(0,e);
t.account=a.accountList.getAccount(t.acctId);
t.id=i.substr(e+1)
}
return t
};
ZmOrganizer.prototype.getName=function(r,a,s,t,n,e){
if(this.nId==ZmFolder.ID_ROOT){
var o=e||this.type;
return(ZmOrganizer.LABEL[o])?ZmMsg[ZmOrganizer.LABEL[o]]:""
}
var i=(t&&this._systemName)||(n&&this.oname)||this.name||"";
if(ZmOrganizer.PATH_IN_NAME[this.type]&&this.path){
i=[this.path,i].join("/")
}
i=(a&&i.length>a)?i.substring(0,a-3)+"...":i;
return this._markupName(i,r,s)
};
ZmOrganizer.prototype.getPath=function(a,r,t,s,e,o){
var i=this.parent;
var n=this.getName(r,t,s,e,o);
while(i&&((i.nId!=ZmOrganizer.ID_ROOT)||a)){
n=i.getName(r,t,s,e,o)+ZmFolder.SEP+n;
i=i.parent
}
return n
};
ZmOrganizer.prototype.getToolTip=function(a){
if(this.noTooltip){
return null
}
if(!this._tooltip||a){
var e=this._getItemsText();
var i=this._getUnreadLabel();
var t={
name:this.name,itemText:e,numTotal:this.numTotal,sizeTotal:this.sizeTotal,numUnread:this.numUnread,unreadLabel:i};
this._tooltip=AjxTemplate.expand("share.App#FolderTooltip",t)
}
return this._tooltip
};
ZmOrganizer.prototype.getSearchPath=function(e){
return(this.nId!=ZmOrganizer.ID_ROOT)?this.getPath(null,null,null,true,true,e):"/"
};
ZmOrganizer.prototype.getUrl=function(){
return this.getRestUrl()
};
ZmOrganizer.prototype.getSyncUrl=function(){
return url
};
ZmOrganizer.prototype.getRemoteId=function(){
if(!this._remoteId){
this._remoteId=(this.isRemote()&&this.zid&&this.rid)?(this.zid+":"+this.rid):this.id
}
return this._remoteId
};
ZmOrganizer.prototype.getRestUrl=function(a){
var t=appCtxt.get(ZmSetting.REST_URL);
if(t&&(!this.isRemote()||a)){
var i=AjxStringUtil.urlEncode(this.getSearchPath()).replace("#","%23").replace(";","%3B");
return([t,"/",i].join(""))
}
if(this.restUrl){
return this.restUrl
}
var e=this._generateRestUrl();
return e
};
ZmOrganizer.prototype.getOwnerRestUrl=function(){
var e=this.restUrl;
var t=AjxStringUtil.urlEncode(this.oname).replace("#","%23");
return([e,"/",t].join(""))
};
ZmOrganizer.prototype._generateRestUrl=function(){
var o=document.location;
var t=appCtxt.get(ZmSetting.USERNAME);
var a=o.host;
var e=t.match(/^(.*)@(.*)$/);
a=(e&&e[2])||a;
if(o.port&&o.port!=80){
a=a+":"+o.port
}
var i=AjxStringUtil.urlEncode(this.getSearchPath()).replace("#","%23");
return[o.protocol,"//",a,"/service/user/",t,"/",i].join("")
};
ZmOrganizer.prototype.getAccount=function(){
if(appCtxt.multiAccounts){
if(!this.account){
this.account=ZmOrganizer.parseId(this.id).account
}
if(!this.account){
var e=this.parent;
while(e&&!this.account){
this.account=e.getAccount();
e=e.parent
}}
return this.account
}
return(this.account||appCtxt.accountList.mainAccount)
};
ZmOrganizer.prototype.getShares=function(){
return this.shares
};
ZmOrganizer.prototype.addShare=function(a){
this.shares=this.shares||[];
this.shares.push(a);
var i=appCtxt.getActiveAccount();
var e=i&&i.id;
var t=a.grantee&&a.grantee.id;
if(t&&(t==e)){
this._mainShare=a
}};
ZmOrganizer.prototype.clearShares=function(){
if(this.shares&&this.shares.length){
for(var e=0;
e<this.shares.length;
e++){
this.shares[e]=null
}}
this.shares=null;
this._mainShare=null
};
ZmOrganizer.prototype.getMainShare=function(){
if(!this._mainShare){
var o=appCtxt.getActiveAccount();
var e=o&&o.id;
if(e&&this.shares&&this.shares.length){
for(var t=0;
t<this.shares.length;
t++){
var a=this.shares[t];
var n=a&&a.grantee&&a.grantee.id;
if(n&&n==e){
this._mainShare=a;
break
}}}}
return this._mainShare
};
ZmOrganizer.prototype.supportsSharing=function(){
return true
};
ZmOrganizer.prototype.supportsPublicAccess=function(){
return true
};
ZmOrganizer.prototype.supportsPrivatePermission=function(){
return false
};
ZmOrganizer.prototype.getIcon=function(){};
ZmOrganizer.prototype.getColor=function(){
return this.rgb||ZmOrganizer.COLOR_VALUES[this.color]
};
ZmOrganizer.prototype.getIconWithColor=function(){
var t=this.getIcon()||"";
var e=this.getColor();
return e?[t,e].join(",color="):t
};
ZmOrganizer.prototype.rename=function(a,o,t,e){
if(a==this.name){
return
}
var i={
action:"rename",attrs:{
name:a}
,callback:o,errorCallback:t,batchCmd:e};
this._organizerAction(i)
};
ZmOrganizer.prototype.setOfflineSyncInterval=function(a,i,t,e){
if(this.webOfflineSyncDays==a){
return
}
this._organizerAction({
action:"webofflinesyncdays",attrs:{
numDays:a}
,callback:i,errorCallback:t,batchCmd:e}
)
};
ZmOrganizer.prototype.setColor=function(a,i,t,e){
var a=ZmOrganizer.checkColor(a);
if(!this.isColorChanged(a)){
return
}
this._organizerAction({
action:"color",attrs:{
color:a}
,callback:i,errorCallback:t,batchCmd:e}
)
};
ZmOrganizer.prototype.setRGB=function(a,i,t,e){
if(!this.isColorChanged(a)){
return
}
this._organizerAction({
action:"color",attrs:{
rgb:a}
,callback:i,errorCallback:t,batchCmd:e}
)
};
ZmOrganizer.prototype.getRetentionPolicy=function(e){
var t=null;
if(this.retentionPolicy&&this.retentionPolicy[0]&&this.retentionPolicy[0][e]&&this.retentionPolicy[0][e][0]&&this.retentionPolicy[0][e][0].policy&&this.retentionPolicy[0][e][0].policy[0]){
t=this.retentionPolicy[0][e][0].policy[0]
}
return t
};
ZmOrganizer.prototype.getRetentionPolicyLifetimeMsec=function(o){
if(o){
var e=o.lifetime;
var i=parseInt(e);
var t=e.slice(e.length-1);
var a=0;
switch(t){
case"d":a=i*AjxDateUtil.MSEC_PER_DAY;
break;
case"h":a=i*AjxDateUtil.MSEC_PER_HOUR;
break;
case"m":a=i*AjxDateUtil.MSEC_PER_MINUTE;
break;
case"s":a=i*1000;
break;
case"ms":a=i;
break;
default:a=i*1000;
break
}}
return a
};
ZmOrganizer.prototype.setRetentionPolicy=function(i,l,s,a){
var e=this.getRetentionPolicy(ZmOrganizer.RETENTION_KEEP);
var o=this.getRetentionPolicy(ZmOrganizer.RETENTION_PURGE);
if(!this.policiesDiffer(e,i.keep)&&!this.policiesDiffer(o,i.purge)){
return
}
var t=ZmOrganizer.SOAP_CMD[this.type]+"Request";
var n={
_jsns:"urn:zimbraMail",action:{
op:"retentionpolicy",id:this.id,retentionPolicy:{
keep:{}
,purge:{}}}};
var c={};
c[t]=n;
var h=n.action.retentionPolicy;
if(i.keep){
this._addPolicy(h.keep,i.keep)
}
if(i.purge){
this._addPolicy(h.purge,i.purge)
}
if(a){
a.addRequestParams(c,l,s)
}else{
var r;
if(appCtxt.multiAccounts){
r=(this.account)?this.account.name:appCtxt.accountList.mainAccount.name
}
appCtxt.getAppController().sendRequest({
jsonObj:c,asyncMode:true,accountName:r,callback:l,errorCallback:s}
)
}};
ZmOrganizer.prototype.policiesDiffer=function(t,e){
var a=false;
if((t&&!e)||(!t&&e)){
a=true
}else{
if(t){
if(t.type!=e.type){
a=true
}else{
if(t.type=="user"){
a=t.lifetime!=e.lifetime
}else{
a=t.id!=e.id
}}}}
return a
};
ZmOrganizer.prototype._addPolicy=function(a,i){
var t=a.policy={};
for(var e in i){
if(AjxEnv.isIE){
i[e]+=""
}
t[e]=i[e]
}};
ZmOrganizer.getStandardColorNumber=function(t){
if(String(t).match(/^#/)){
var e=ZmOrganizer.COLOR_VALUES.length;
for(var o=0;
o<e;
o++){
var a=ZmOrganizer.COLOR_VALUES[o];
if(a&&a==t){
return o
}}}else{
if(t<=9&&t>=0){
return t
}}
return -1
};
ZmOrganizer.prototype.isColorChanged=function(t){
var e=ZmOrganizer.getStandardColorNumber(t)===-1,a=this.isColorCustom;
if((e&&!a)||(!e&&a)){
return true
}else{
if(e&&a){
return t!=this.rgb
}else{
if(!e&&!a){
return t!=this.color
}}}
return false
};
ZmOrganizer.prototype.update=function(e){
this._organizerAction({
action:"update",attrs:e}
)
};
ZmOrganizer.prototype.move=function(i,a,e){
var t=(i.nId>0)?i.id:ZmOrganizer.getSystemId(ZmOrganizer.ID_ROOT);
if((t==this.id||t==this.parent.id)||(this.type==ZmOrganizer.FOLDER&&(ZmOrganizer.normalizeId(t,this.type)==ZmFolder.ID_SPAM))||(i.isChildOf(this))){
return
}
var o={};
o.batchCmd=e;
o.actionTextKey="actionMoveOrganizer";
o.orgName=this.getName(false,false,true,false,false,this.type);
if(t==ZmOrganizer.ID_TRASH){
o.actionArg=ZmMsg.trash;
o.action="trash";
o.noUndo=a
}else{
if(i.account&&i.account.isLocal()){
t=[ZmAccount.LOCAL_ACCOUNT_ID,t].join(":")
}
o.actionArg=i.getName(false,false,true,false,false,this.type);
o.action="move";
o.attrs={
l:t};
o.noUndo=a
}
this._organizerAction(o)
};
ZmOrganizer.prototype._delete=function(t){
var e=((this.type==ZmOrganizer.FOLDER||this.type==ZmOrganizer.ADDRBOOK||this.type==ZmOrganizer.BRIEFCASE)&&(this.nId==ZmFolder.ID_SPAM||this.nId==ZmFolder.ID_TRASH));
if(this.isSystem()&&!e){
return
}
var a=e?"empty":"delete";
this._organizerAction({
action:a,batchCmd:t}
)
};
ZmOrganizer.prototype.empty=function(a,t,o){
a=a||false;
var e=((this.type==ZmOrganizer.FOLDER||this.type==ZmOrganizer.ADDRBOOK)&&(this.nId==ZmFolder.ID_SPAM||this.nId==ZmFolder.ID_TRASH||this.nId==ZmFolder.ID_CHATS||this.nId==ZmOrganizer.ID_SYNC_FAILURES));
if(this.isSystem()&&!e){
return
}
var i={
action:"empty",batchCmd:t,callback:o};
i.attrs=(this.nId==ZmFolder.ID_TRASH)?{
recursive:true}
:{
recursive:a};
if(this.isRemote()){
i.id=this.getRemoteId()
}
this._organizerAction(i)
};
ZmOrganizer.prototype.markAllRead=function(e){
var t=this.isRemote()?this.getRemoteId():null;
this._organizerAction({
action:"read",id:t,attrs:{
l:this.id}
,batchCmd:e}
)
};
ZmOrganizer.prototype.sync=function(){
this._organizerAction({
action:"sync"}
)
};
ZmOrganizer.prototype.notifyDelete=function(){
var t=appCtxt.getOverviewController().getTreeController(this.type);
var o=t&&t.getTreeView(appCtxt.getCurrentApp().getOverviewId());
var n=o&&o.getSelected();
if(n){
if(!(n instanceof Array)){
n=[n]
}
for(var r=0;
r<n.length;
r++){
var e=n[r];
if(e&&(e==this||e.isChildOf(this))){
var a=this.parent.id;
if(this.parent.nId==ZmOrganizer.ID_ROOT){
a=ZmOrganizer.getSystemId(ZmOrganizer.DEFAULT_FOLDER[this.type])
}
var s=false;
o.setSelected(a,s)
}}}
this.deleteLocal();
this._notify(ZmEvent.E_DELETE)
};
ZmOrganizer.prototype.notifyCreate=function(){};
ZmOrganizer.prototype.notifyModify=function(obj,details){
var doNotify=false;
var details=details||{};
var fields={};
if(obj.name!=null&&(this.name!=obj.name||this.id!=obj.id)){
if(obj.id==this.id){
details.oldName=this.name;
this.name=obj.name;
fields[ZmOrganizer.F_NAME]=true;
this.parent.children.sort(eval(ZmTreeView.COMPARE_FUNC[this.type]))
}else{
details.newName=obj.name;
fields[ZmOrganizer.F_RNAME]=true
}
doNotify=true
}
if(obj.u!=null&&this.numUnread!=obj.u){
this.numUnread=obj.u;
fields[ZmOrganizer.F_UNREAD]=true;
doNotify=true
}
if(obj.n!=null&&this.numTotal!=obj.n){
this.numTotal=obj.n;
fields[ZmOrganizer.F_TOTAL]=true;
doNotify=true
}
if(obj.s!=null&&this.sizeTotal!=obj.s){
this.sizeTotal=obj.s;
fields[ZmOrganizer.F_SIZE]=true;
doNotify=true
}
if((obj.rgb!=null||obj.color!=null)&&!obj._isRemote){
var color=obj.color||obj.rgb;
if(this.isColorChanged(color)){
this.isColorCustom=obj.rgb!=null;
this.color=obj.color;
this.rgb=obj.rgb||ZmOrganizer.COLOR_VALUES[color];
fields[ZmOrganizer.F_COLOR]=true;
fields[ZmOrganizer.F_RGB]=true
}
doNotify=true
}
if(obj.f!=null&&!obj._isRemote){
var oflags=this._setFlags().split("").sort().join("");
var nflags=obj.f.split("").sort().join("");
if(oflags!=nflags){
this._parseFlags(obj.f);
fields[ZmOrganizer.F_FLAGS]=true;
doNotify=true
}}
if(obj.rest!=null&&this.restUrl!=obj.rest&&!obj._isRemote){
this.restUrl=obj.rest;
fields[ZmOrganizer.F_REST_URL]=true;
doNotify=true
}
if(obj.acl){
this.clearShares();
if(obj.acl.grant&&obj.acl.grant.length){
AjxDispatcher.require("Share");
for(var i=0;
i<obj.acl.grant.length;
i++){
share=ZmShare.createFromJs(this,obj.acl.grant[i]);
this.addShare(share)
}}
fields[ZmOrganizer.F_SHARES]=true;
doNotify=true
}
if(obj.perm&&obj._isRemote){
fields[ZmOrganizer.F_PERMS]=true;
doNotify=true;
this._isAdmin=this._isReadOnly=this._hasPrivateAccess=null
}
if(obj.retentionPolicy){
if(obj.retentionPolicy[0].keep||obj.retentionPolicy[0].purge){
this.retentionPolicy=obj.retentionPolicy
}else{
this.retentionPolicy=null
}}
if(obj.hasOwnProperty("webOfflineSyncDays")){
this.webOfflineSyncDays=obj.webOfflineSyncDays
}
if(doNotify){
details.fields=fields;
this._notify(ZmEvent.E_MODIFY,details)
}
if(this.parent&&obj.l!=null&&obj.l!=this.parent.id){
var newParent=this._getNewParent(obj.l);
if(newParent){
this.reparent(newParent);
this._notify(ZmEvent.E_MOVE);
this.tree=newParent.tree
}}};
ZmOrganizer.prototype.deleteLocal=function(){
this.parent.children.remove(this);
var e=this.children.getArray();
var o=this.children.size();
for(var t=0;
t<o;
t++){
var n=e[t];
if(n){
n.deleteLocal()
}}
this.children.removeAll()
};
ZmOrganizer.prototype.hasChild=function(e){
return(this.getChild(e)!=null)
};
ZmOrganizer.prototype.getChild=function(t){
t=t?t.toLowerCase():"";
var e=this.children.getArray();
var n=this.children.size();
for(var o=0;
o<n;
o++){
if(e[o]&&e[o].name&&(e[o].name.toLowerCase()==t)){
return e[o]
}}
return null
};
ZmOrganizer.prototype.getChildByPath=function(n){
var e=this;
if(n.match(/^\//)){
while(e.nId!=ZmOrganizer.ID_ROOT){
e=e.parent
}
n=n.substr(1)
}
if(n.length==0){
return e
}
var o=n.split("/");
var a=0;
while(a<o.length){
var t=o[a++];
var s=e.getChild(t);
if(s==null){
return null
}
e=s
}
return e
};
ZmOrganizer.prototype.reparent=function(e){
if(this.parent){
this.parent.children.remove(this)
}
if(e){
e.children.add(this)
}
this.parent=e
};
ZmOrganizer.prototype.getById=function(r){
if(this.link&&r&&typeof(r)=="string"){
var n=r.split(":");
if(this.zid==n[0]&&this.rid==n[1]){
return this
}}
if(this.id==r||this.nId==r){
return this
}
var e;
var t=this.children.getArray();
var s=this.children.size();
for(var o=0;
o<s;
o++){
if(e=t[o].getById(r)){
return e
}}
return null
};
ZmOrganizer.prototype.getByName=function(t,e){
return this._getByName(t.toLowerCase(),e)
};
ZmOrganizer.prototype.getByType=function(e){
var t=[];
this._getByType(e,t);
return t
};
ZmOrganizer.prototype._getByType=function(o,n){
if(this.type==o){
n.push(this)
}
var e=this.children.getArray();
for(var t=0;
t<e.length;
t++){
if(e[t]){
e[t]._getByType(o,n)
}}};
ZmOrganizer.prototype.getByPath=function(t,e){
return this._getByPath(t.toLowerCase(),e)
};
ZmOrganizer.prototype._getByPath=function(s,o){
if(this.nId==ZmFolder.ID_TAGS){
return null
}
if(s==this.getPath(false,false,null,true,o).toLowerCase()){
return this
}
var t=this.children.getArray();
for(var n=0;
n<t.length;
n++){
var e=t[n]._getByPath(s,o);
if(e){
return e
}}
return null
};
ZmOrganizer.prototype.size=function(){
return this.children.size()
};
ZmOrganizer.prototype.isChildOf=function(e){
var t=this.parent;
while(t){
if(t==e){
return true
}
t=t.parent
}
return false
};
ZmOrganizer.prototype._getNewParent=function(e){
return appCtxt.getById(e)
};
ZmOrganizer.prototype.isUnder=function(t){
t=t.toString();
if(this.nId==t||(this.isRemote()&&this.rid==t)){
return true
}
var e=this.parent;
while(e&&e.nId!=ZmOrganizer.ID_ROOT){
if(e.nId==t){
return true
}
e=e.parent
}
return false
};
ZmOrganizer.prototype.isInTrash=function(){
return this.isUnder(ZmOrganizer.ID_TRASH)
};
ZmOrganizer.prototype.isPermAllowed=function(t){
if(this.perm){
var e=this.perm.replace(/-./g,"");
return(e.indexOf(t)!=-1)
}
return false
};
ZmOrganizer.prototype.isReadOnly=function(){
if(this._isReadOnly==null){
var e=this.getMainShare();
this._isReadOnly=(e!=null)?(this.isRemote()&&!e.isWrite()):(this.isRemote()&&this.isPermAllowed(ZmOrganizer.PERM_READ)&&!this.isPermAllowed(ZmOrganizer.PERM_WRITE))
}
return this._isReadOnly
};
ZmOrganizer.prototype.isAdmin=function(){
if(this._isAdmin==null){
var e=this.getMainShare();
this._isAdmin=(e!=null)?(this.isRemote()&&e.isAdmin()):(this.isRemote()&&this.isPermAllowed(ZmOrganizer.PERM_ADMIN))
}
return this._isAdmin
};
ZmOrganizer.prototype.hasPrivateAccess=function(){
if(this._hasPrivateAccess==null){
var e=this.getMainShare();
this._hasPrivateAccess=(e!=null)?(this.isRemote()&&e.hasPrivateAccess()):(this.isRemote()&&this.isPermAllowed(ZmOrganizer.PERM_PRIVATE))
}
return this._hasPrivateAccess
};
ZmOrganizer.prototype.isRemote=function(){
if(this._isRemote==null){
if(this.zid!=null){
this._isRemote=true
}else{
if(appCtxt.multiAccounts){
var t=this.account;
var e=ZmOrganizer.parseId(this.id);
if(!t){
if(e.account&&e.account.isMain){
this._isRemote=false;
return this._isRemote
}else{
t=appCtxt.getActiveAccount()
}}
this._isRemote=Boolean(!e.account||(e.account&&(e.account!=t)))
}else{
var a=String(this.id);
this._isRemote=((a.indexOf(":")!=-1)&&(a.indexOf(appCtxt.getActiveAccount().id)!=0))
}}}
return this._isRemote
};
ZmOrganizer.prototype.isRemoteRoot=function(){
return this.isRemote()&&(this.rid==ZmOrganizer.ID_ROOT)
};
ZmOrganizer.prototype.isSystem=function(){
return(this.nId<ZmOrganizer.FIRST_USER_ID[this.type])
};
ZmOrganizer.prototype.isFeed=function(){
return Boolean(this.url)
};
ZmOrganizer.prototype.hasFeeds=function(){
return false
};
ZmOrganizer.prototype.isDataSource=function(t,a){
var e=this.getDataSources(t,a);
return(e&&e.length>0)
};
ZmOrganizer.prototype.getDataSources=function(t,a){
if(!appCtxt.get(ZmSetting.MAIL_ENABLED)){
return null
}
var e=appCtxt.getDataSourceCollection();
var i=e.getByFolderId(this.nId,t);
if(i.length==0){
return(a&&this.parent)?this.parent.getDataSources(t,a):null
}
return i
};
ZmOrganizer.prototype.getOwner=function(){
return this.owner||(this.parent&&this.parent.getOwner())||appCtxt.get(ZmSetting.USERNAME)
};
ZmOrganizer.getSortIndex=function(n,e){
if(!(n&&n.parent&&e)){
return null
}
var a=n.parent.children.getArray();
for(var t=0;
t<a.length;
t++){
var o=e(n,a[t]);
if(o==-1){
return t
}}
return t
};
ZmOrganizer.prototype._organizerAction=function(a){
var t=ZmOrganizer.SOAP_CMD[this.type]+"Request";
var i={
_jsns:"urn:zimbraMail",action:{
op:a.action,id:a.id||this.id}};
var r={};
r[t]=i;
for(var o in a.attrs){
if(AjxEnv.isIE){
a.attrs[o]+=""
}
i.action[o]=a.attrs[o]
}
var s=appCtxt.getActionController();
s.dismiss();
var e=(!a.noUndo&&s&&s.actionPerformed({
op:a.action,id:a.id||this.id,attrs:a.attrs}
))||null;
var h=new AjxCallback(this,this._handleResponseOrganizerAction,[a,e]);
if(a.batchCmd){
a.batchCmd.addRequestParams(r,h,a.errorCallback)
}else{
var n;
if(appCtxt.multiAccounts){
n=(this.account)?this.account.name:appCtxt.accountList.mainAccount.name
}
appCtxt.getAppController().sendRequest({
jsonObj:r,asyncMode:true,accountName:n,callback:h,errorCallback:a.errorCallback}
)
}};
ZmOrganizer.prototype._handleResponseOrganizerAction=function(n,o,e){
if(o){
o.setComplete()
}
if(n.callback){
n.callback.run(e)
}
if(n.actionTextKey){
var i=appCtxt.getActionController();
var a=ZmOrganizer.getActionSummary({
actionTextKey:n.actionTextKey,numItems:n.numItems||1,type:this.type,orgName:n.orgName,actionArg:n.actionArg}
);
var t=o&&i&&i.getUndoLink(o);
if(t&&i){
i.onPopup();
appCtxt.setStatusMsg({
msg:a+t,transitions:i.getStatusTransitions()}
)
}else{
appCtxt.setStatusMsg(a)
}}};
ZmOrganizer.getActionSummary=function(e){
var n=e.type,s=ZmOrganizer.FOLDER_KEY[n],a=ZmMsg[s],i=AjxStringUtil.capitalize(s),t=e.actionTextKey+i,r=ZmMsg[t]||ZmMsg[e.actionTextKey],o=AjxStringUtil.htmlEncode(e.orgName),h=AjxStringUtil.htmlEncode(e.actionArg);
return AjxMessageFormat.format(r,[a,o,h])
};
ZmOrganizer.prototype._getByName=function(n,t){
if(this.name&&n==this.name.toLowerCase()){
return this
}
var e;
var o=this.children.getArray();
var r=this.children.size();
for(var s=0;
s<r;
s++){
if(e=o[s]._getByName(n,t)){
if(t&&e.isDataSource(ZmAccount.TYPE_IMAP,true)){
continue
}
return e
}}
return null
};
ZmOrganizer.prototype._parseFlags=function(a){
for(var t=0;
t<ZmOrganizer.ALL_FLAGS.length;
t++){
var e=ZmOrganizer.ALL_FLAGS[t];
this[ZmOrganizer.FLAG_PROP[e]]=(Boolean(a&&(a.indexOf(e)!=-1)))
}};
ZmOrganizer.prototype._setFlags=function(){
var t="";
for(var a=0;
a<ZmOrganizer.ALL_FLAGS.length;
a++){
var e=ZmOrganizer.ALL_FLAGS[a];
var o=ZmOrganizer.FLAG_PROP[e];
if(this[o]){
t=t+e
}}
return t
};
ZmOrganizer.prototype.addChangeListener=function(e){
this.tree.addChangeListener(e)
};
ZmOrganizer.prototype.removeChangeListener=function(e){
this.tree.removeChangeListener(e)
};
ZmOrganizer.prototype._setSharesFromJs=function(a){
if(a.acl&&a.acl.grant&&a.acl.grant.length>0){
AjxDispatcher.require("Share");
for(var t=0;
t<a.acl.grant.length;
t++){
var e=a.acl.grant[t];
this.addShare(ZmShare.createFromJs(this,e))
}}};
ZmOrganizer.prototype._notify=function(t,e){
if(e){
e.organizers=[this]
}else{
e={
organizers:[this]}
}
this.tree._evt.type=this.type;
this.tree._notify(t,e)
};
ZmOrganizer.prototype._markupName=function(e,a,t){
if(!t){
e=AjxStringUtil.htmlEncode(e,true)
}
if(a&&this.numUnread>0){
e=AjxMessageFormat.format(ZmMsg.folderUnread,[e,this.numUnread]);
if(!t){
e=["<span style='font-weight:bold'>",e,"</span>"].join("")
}}
if(this.noSuchFolder&&!t){
e=["<del>",e,"</del>"].join("")
}
return e
};
ZmOrganizer.prototype._getItemsText=function(){
var e=ZmMsg[ZmOrganizer.ITEMS_KEY[this.type]];
if(!e||(this.nId==ZmFolder.ID_TRASH)){
e=ZmMsg.items
}
return e
};
ZmOrganizer.prototype._getUnreadLabel=function(){
return ZmMsg.unread
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmFolder")){
ZmFolder=function(e){
if(arguments.length==0){
return
}
e.type=e.type||ZmOrganizer.FOLDER;
ZmOrganizer.call(this,e)
};
ZmFolder.prototype=new ZmOrganizer;
ZmFolder.prototype.constructor=ZmFolder;
ZmFolder.prototype.isZmFolder=true;
ZmFolder.prototype.toString=function(){
return"ZmFolder"
};
ZmOrganizer.ORG_CLASS[ZmId.ORG_FOLDER]="ZmFolder";
ZmFolder.SEP="/";
ZmFolder.ID_LOAD_FOLDERS=-3;
ZmFolder.ID_OTHER=-2;
ZmFolder.ID_SEP=-1;
ZmFolder.ID_ROOT=ZmOrganizer.ID_ROOT;
ZmFolder.ID_INBOX=ZmOrganizer.ID_INBOX;
ZmFolder.ID_TRASH=ZmOrganizer.ID_TRASH;
ZmFolder.ID_SPAM=ZmOrganizer.ID_SPAM;
ZmFolder.ID_SENT=5;
ZmFolder.ID_DRAFTS=6;
ZmFolder.ID_CONTACTS=ZmOrganizer.ID_ADDRBOOK;
ZmFolder.ID_AUTO_ADDED=ZmOrganizer.ID_AUTO_ADDED;
ZmFolder.ID_TAGS=8;
ZmFolder.ID_TASKS=ZmOrganizer.ID_TASKS;
ZmFolder.ID_SYNC_FAILURES=ZmOrganizer.ID_SYNC_FAILURES;
ZmFolder.ID_OUTBOX=ZmOrganizer.ID_OUTBOX;
ZmFolder.ID_CHATS=ZmOrganizer.ID_CHATS;
ZmFolder.ID_ATTACHMENTS=ZmOrganizer.ID_ATTACHMENTS;
ZmFolder.ID_DLS=ZmOrganizer.ID_DLS;
ZmFolder.MSG_KEY={};
ZmFolder.MSG_KEY[ZmFolder.ID_INBOX]="inbox";
ZmFolder.MSG_KEY[ZmFolder.ID_TRASH]="trash";
ZmFolder.MSG_KEY[ZmFolder.ID_SPAM]="junk";
ZmFolder.MSG_KEY[ZmFolder.ID_SENT]="sent";
ZmFolder.MSG_KEY[ZmFolder.ID_DRAFTS]="drafts";
ZmFolder.MSG_KEY[ZmFolder.ID_CONTACTS]="contacts";
ZmFolder.MSG_KEY[ZmFolder.ID_AUTO_ADDED]="emailedContacts";
ZmFolder.MSG_KEY[ZmFolder.ID_TASKS]="tasks";
ZmFolder.MSG_KEY[ZmFolder.ID_TAGS]="tags";
ZmFolder.MSG_KEY[ZmOrganizer.ID_CALENDAR]="calendar";
ZmFolder.MSG_KEY[ZmOrganizer.ID_BRIEFCASE]="briefcase";
ZmFolder.MSG_KEY[ZmOrganizer.ID_CHATS]="chats";
ZmFolder.MSG_KEY[ZmOrganizer.ID_ALL_MAILBOXES]="allMailboxes";
ZmFolder.MSG_KEY[ZmFolder.ID_OUTBOX]="outbox";
ZmFolder.MSG_KEY[ZmFolder.ID_SYNC_FAILURES]="errorReports";
ZmFolder.MSG_KEY[ZmFolder.ID_ATTACHMENTS]="attachments";
ZmFolder.ICON={};
ZmFolder.ICON[ZmFolder.ID_INBOX]="Inbox";
ZmFolder.ICON[ZmFolder.ID_TRASH]="Trash";
ZmFolder.ICON[ZmFolder.ID_SPAM]="SpamFolder";
ZmFolder.ICON[ZmFolder.ID_SENT]="SentFolder";
ZmFolder.ICON[ZmFolder.ID_SYNC_FAILURES]="SendReceive";
ZmFolder.ICON[ZmFolder.ID_OUTBOX]="Outbox";
ZmFolder.ICON[ZmFolder.ID_DRAFTS]="DraftFolder";
ZmFolder.ICON[ZmFolder.ID_CHATS]="ChatFolder";
ZmFolder.ICON[ZmFolder.ID_LOAD_FOLDERS]="Plus";
ZmFolder.ICON[ZmFolder.ID_ATTACHMENTS]="Attachment";
ZmFolder.QUERY_NAME={};
ZmFolder.QUERY_NAME[ZmFolder.ID_INBOX]="inbox";
ZmFolder.QUERY_NAME[ZmFolder.ID_TRASH]="trash";
ZmFolder.QUERY_NAME[ZmFolder.ID_SPAM]="junk";
ZmFolder.QUERY_NAME[ZmFolder.ID_SENT]="sent";
ZmFolder.QUERY_NAME[ZmFolder.ID_OUTBOX]="outbox";
ZmFolder.QUERY_NAME[ZmFolder.ID_DRAFTS]="drafts";
ZmFolder.QUERY_NAME[ZmOrganizer.ID_CALENDAR]="calendar";
ZmFolder.QUERY_NAME[ZmFolder.ID_CONTACTS]="contacts";
ZmFolder.QUERY_NAME[ZmFolder.ID_TASKS]="tasks";
ZmFolder.QUERY_NAME[ZmFolder.ID_AUTO_ADDED]="Emailed Contacts";
ZmFolder.QUERY_NAME[ZmOrganizer.ID_BRIEFCASE]="briefcase";
ZmFolder.QUERY_NAME[ZmFolder.ID_CHATS]="chats";
ZmFolder.QUERY_NAME[ZmFolder.ID_SYNC_FAILURES]="Error Reports";
ZmFolder.QUERY_ID=AjxUtil.valueHash(ZmFolder.QUERY_NAME);
ZmFolder.SORT_ORDER={};
ZmFolder.SORT_ORDER[ZmFolder.ID_INBOX]=1;
ZmFolder.SORT_ORDER[ZmFolder.ID_CHATS]=2;
ZmFolder.SORT_ORDER[ZmFolder.ID_SENT]=3;
ZmFolder.SORT_ORDER[ZmFolder.ID_DRAFTS]=4;
ZmFolder.SORT_ORDER[ZmFolder.ID_SPAM]=5;
ZmFolder.SORT_ORDER[ZmFolder.ID_OUTBOX]=6;
ZmFolder.SORT_ORDER[ZmFolder.ID_TRASH]=7;
ZmFolder.SORT_ORDER[ZmFolder.ID_SYNC_FAILURES]=8;
ZmFolder.SORT_ORDER[ZmFolder.ID_SEP]=9;
ZmFolder.SORT_ORDER[ZmFolder.ID_ATTACHMENTS]=99;
ZmFolder.TCON_CODE={};
ZmFolder.TCON_CODE[ZmFolder.ID_TRASH]="t";
ZmFolder.TCON_CODE[ZmFolder.ID_SYNC_FAILURES]="o";
ZmFolder.TCON_CODE[ZmFolder.ID_SPAM]="j";
ZmFolder.TCON_CODE[ZmFolder.ID_SENT]="s";
ZmFolder.TCON_CODE[ZmFolder.ID_DRAFTS]="d";
ZmFolder.TCON_CODE[ZmFolder.ID_OTHER]="o";
ZmFolder.HIDE_ID={};
ZmFolder.HIDE_ID[ZmOrganizer.ID_CHATS]=true;
ZmFolder.HIDE_ID[ZmOrganizer.ID_NOTIFICATION_MP]=true;
ZmFolder.HIDE_NAME={};
ZmFolder.OUTBOUND=[ZmFolder.ID_SENT,ZmFolder.ID_OUTBOX,ZmFolder.ID_DRAFTS];
ZmFolder.SYNC_ISSUES="Sync Issues";
ZmFolder.QUERY_ID={};
(function(){
for(var e in ZmFolder.QUERY_NAME){
ZmFolder.QUERY_ID[ZmFolder.QUERY_NAME[e]]=e
}}
)();
ZmFolder.sortCompare=function(i,a,t){
var e=ZmOrganizer.checkSortArgs(i,a);
if(e!=null){
return e
}
if(appCtxt.isOffline){
if(i.isDataSource(ZmAccount.TYPE_POP)){
if(i.id==ZmFolder.ID_INBOX){
return -1
}
if(a.isDataSource(ZmAccount.TYPE_POP)){
if(i.name.toLowerCase()>a.name.toLowerCase()){
return 1
}
if(i.name.toLowerCase()<a.name.toLowerCase()){
return -1
}
return 0
}
return -1
}else{
if(a.isDataSource(ZmAccount.TYPE_POP)){
return 1
}}}
if(ZmFolder.SORT_ORDER[i.nId]&&ZmFolder.SORT_ORDER[a.nId]){
return(ZmFolder.SORT_ORDER[i.nId]-ZmFolder.SORT_ORDER[a.nId])
}
if(i.link!==a.link){
return i.link?1:-1
}
if(t){
if(i.nId==ZmFolder.ID_TRASH){
return 1
}
if(a.nId==ZmFolder.ID_TRASH){
return -1
}}else{
if(!ZmFolder.SORT_ORDER[i.nId]&&ZmFolder.SORT_ORDER[a.nId]){
return 1
}
if(ZmFolder.SORT_ORDER[i.nId]&&!ZmFolder.SORT_ORDER[a.nId]){
return -1
}}
if(i.name.toLowerCase()>a.name.toLowerCase()){
return 1
}
if(i.name.toLowerCase()<a.name.toLowerCase()){
return -1
}
return 0
};
ZmFolder.sortCompareNonMail=function(t,e){
return ZmFolder.sortCompare(t,e,true)
};
ZmFolder.sortComparePath=function(o,i){
var a=o&&o.getPath(false,false,null,true,true);
var t=i&&i.getPath(false,false,null,true,true);
var e=ZmOrganizer.checkSortArgs(a,t);
if(e!=null){
return e
}
if(ZmFolder.SORT_ORDER[o.nId]&&ZmFolder.SORT_ORDER[i.nId]){
return(ZmFolder.SORT_ORDER[o.nId]-ZmFolder.SORT_ORDER[i.nId])
}
if(!ZmFolder.SORT_ORDER[o.nId]&&ZmFolder.SORT_ORDER[i.nId]){
return 1
}
if(ZmFolder.SORT_ORDER[o.nId]&&!ZmFolder.SORT_ORDER[i.nId]){
return -1
}
if(a.toLowerCase()>t.toLowerCase()){
return 1
}
if(a.toLowerCase()<t.toLowerCase()){
return -1
}
return 0
};
ZmFolder.checkName=function(a,i){
var t=ZmOrganizer.checkName(a);
if(t){
return t
}
i=i||appCtxt.getFolderTree().root;
if(i&&(i.id==ZmFolder.ID_ROOT)){
var e=a.toLowerCase();
for(var n in ZmFolder.MSG_KEY){
var o=ZmMsg[ZmFolder.MSG_KEY[n]];
if(o&&(e==o.toLowerCase())){
return ZmMsg.folderNameReserved
}}}
return null
};
ZmFolder.getIdForName=function(a){
var e=a.toLowerCase();
for(var t in ZmFolder.MSG_KEY){
if(ZmFolder.MSG_KEY[t]==e){
return t
}}
return null
};
ZmFolder.prototype.move=function(o,i,n,e){
var a=this.name;
var t=this.name;
while(o.hasChild(t)){
t=t+"_"
}
if(a!=t){
this.rename(t)
}
ZmOrganizer.prototype.move.call(this,o,i,e)
};
ZmFolder.prototype.toggleSyncOffline=function(n,e){
if(!this.isOfflineSyncable){
return
}
var o=this.isOfflineSyncing?"!syncon":"syncon";
var a=AjxSoapDoc.create("FolderActionRequest","urn:zimbraMail");
var t=a.set("action");
t.setAttribute("op",o);
t.setAttribute("id",this.id);
var i={
soapDoc:a,asyncMode:true,callback:n,errorCallback:e};
appCtxt.getAppController().sendRequest(i)
};
ZmFolder.prototype.hasFeeds=function(){
if(this.type!=ZmOrganizer.FOLDER){
return false
}
var e=this.children.getArray();
var o=this.children.size();
for(var t=0;
t<o;
t++){
if(e[t].isFeed()){
return true
}
if(e[t].children&&e[t].children.size()>0){
return(e[t].hasFeeds&&e[t].hasFeeds())
}}
return false
};
ZmFolder.prototype.hasSearch=function(n){
if(this.type==ZmOrganizer.SEARCH){
return true
}
var e=this.children.getArray();
var o=this.children.size();
for(var t=0;
t<o;
t++){
if(e[t].hasSearch()){
return true
}}
return false
};
ZmFolder.prototype.supportsPublicAccess=function(){
return true
};
ZmFolder.prototype.notifyCreate=function(obj,elementType,skipNotify){
var nId=ZmOrganizer.normalizeId(obj.id);
if(this.isSystem()&&nId<ZmOrganizer.FIRST_USER_ID[this.type]){
return
}
var account=ZmOrganizer.parseId(obj.id).account;
var folder=ZmFolderTree.createFromJs(this,obj,this.tree,elementType,null,account);
if(folder){
var index=ZmOrganizer.getSortIndex(folder,eval(ZmTreeView.COMPARE_FUNC[this.type]));
this.children.add(folder,index);
if(!skipNotify){
folder._notify(ZmEvent.E_CREATE)
}}};
ZmFolder.prototype.notifyModify=function(obj){
var details={};
var fields={};
var doNotify=false;
if(obj.name!=null&&this.name!=obj.name&&obj.id==this.id){
details.oldPath=this.getPath();
this.name=obj.name;
fields[ZmOrganizer.F_NAME]=true;
this.parent.children.sort(eval(ZmTreeView.COMPARE_FUNC[this.type]));
doNotify=true;
obj.name=null
}
if(doNotify){
details.fields=fields;
this._notify(ZmEvent.E_MODIFY,details)
}
if(obj.l!=null&&(!this.parent||(obj.l!=this.parent.id))){
var newParent=this._getNewParent(obj.l);
if(newParent){
details.oldPath=this.getPath();
this.reparent(newParent);
this._notify(ZmEvent.E_MOVE,details);
obj.l=null
}}
ZmOrganizer.prototype.notifyModify.apply(this,[obj])
};
ZmFolder.prototype.createQuery=function(a){
if(!this.isRemote()&&this.isSystem()){
var o=ZmFolder.QUERY_NAME[this.nId]||this.getName(false,null,true,true)||this.name;
var e=/^\w+$/.test(o)?"":'"';
return a?o:("in:"+e+o+e)
}
var n=this.isSystem()?ZmFolder.QUERY_NAME[this.nId]:this.name;
var i=this.parent;
while(i&&(i.nId!=ZmFolder.ID_ROOT)&&i.name.length){
var t=(i.isSystem()&&ZmFolder.QUERY_NAME[i.nId])||i.name;
n=t+"/"+n;
i=i.parent
}
n='"'+n+'"';
return a?n:("in:"+n)
};
ZmFolder.prototype.getName=function(o,t,i,e){
if(this.nId==ZmFolder.ID_DRAFTS||this.nId==ZmFolder.ID_OUTBOX||this.rid==ZmFolder.ID_DRAFTS){
var a=(e&&this._systemName)?this._systemName:this.name;
if(o&&this.numTotal>0){
a=AjxMessageFormat.format(ZmMsg.folderUnread,[a,this.numTotal]);
if(!i){
a=["<span style='font-weight:bold'>",a,"</span>"].join("")
}}
return a
}else{
return ZmOrganizer.prototype.getName.apply(this,arguments)
}};
ZmFolder.prototype.getIcon=function(){
if(this.nId==ZmOrganizer.ID_ROOT){
return null
}
if(ZmFolder.ICON[this.nId]){
return ZmFolder.ICON[this.nId]
}
if(this.isFeed()){
return"RSS"
}
if(this.isRemote()){
return"SharedMailFolder"
}
if(this.isDataSource(ZmAccount.TYPE_POP)){
return"POPAccount"
}
var e=this.getSystemEquivalentFolderId();
if(e){
return ZmFolder.ICON[e]||"Folder"
}
return"Folder"
};
ZmFolder.prototype.getSystemEquivalentFolderId=function(){
if(this.parent&&this.parent.isDataSource(ZmAccount.TYPE_IMAP)){
return ZmFolder.getIdForName(this.name)
}
return null
};
ZmFolder.prototype.isSystemEquivalent=function(){
return this.getSystemEquivalentFolderId()!=null
};
ZmFolder.prototype.mayContainFolderFromAccount=function(e){
var t=this.getAccount();
if(t==e){
return true
}
return t.isLocal()
};
ZmFolder.prototype.mayContain=function(h,c,d){
if(!h){
return true
}
if(this.isFeed()){
return false
}
if(this.id==ZmFolder.ID_LOAD_FOLDERS){
return false
}
var l=c||this.type;
var o=false;
if(h instanceof ZmFolder){
o=((h.parent===this&&!d)||this.isChildOf(h)||this.nId==ZmFolder.ID_DRAFTS||this.nId==ZmFolder.ID_SPAM||(!this.isInTrash()&&this.hasChild(h.name)&&!d)||(h.type!==l&&this.nId!=ZmFolder.ID_TRASH)||(h.id===this.id)||(this.disallowSubFolder)||(appCtxt.multiAccounts&&!this.mayContainFolderFromAccount(h.getAccount()))||(this.isRemote()&&!this._remoteMoveOk(h))||(h.isRemote()&&!this._remoteMoveOk(h)))
}else{
var n=AjxUtil.toArray(h);
var u=n[0];
if((this.nId==ZmOrganizer.ID_ROOT&&(h.type!==ZmOrganizer.CALENDAR))||this.nId==ZmOrganizer.ID_OUTBOX||this.nId==ZmOrganizer.ID_SYNC_FAILURES){
o=true
}else{
if(l===ZmOrganizer.SEARCH){
o=true
}else{
if(u&&(u.type===ZmItem.CONTACT)&&u.isGal){
o=true
}else{
if(u&&(u.type===ZmItem.CONV)&&u.list&&u.list.search&&(u.list.search.folderId===this.id)){
o=true
}else{
for(var t=0;
t<n.length;
t++){
var r=n[t];
if(!r){
o=true;
break
}
if(Dwt.instanceOf(r,"ZmBriefcaseFolderItem")){
if(r.folder&&r.folder.isRemote()&&!r.folder.rid){
o=true;
break
}}else{
if(u.type===ZmItem.MSG&&r.isDraft&&(this.nId!=ZmFolder.ID_TRASH&&this.nId!=ZmFolder.ID_DRAFTS&&this.rid!=ZmFolder.ID_DRAFTS)){
o=true;
break
}else{
if((this.nId==ZmFolder.ID_DRAFTS||this.rid==ZmFolder.ID_DRAFTS)&&!r.isDraft){
o=true;
break
}}}}
if(appCtxt.isOffline&&!o){
var s=this.getAccount();
if(s&&u.getAccount()!=s&&(s.type===ZmAccount.TYPE_MSE||s.type===ZmAccount.TYPE_EXCHANGE)){
o=true
}else{
var a=appCtxt.getCurrentSearch();
var e=a&&appCtxt.getById(a.folderId);
if(e&&e.nId==ZmOrganizer.ID_SYNC_FAILURES){
o=true
}}}
if(appCtxt.multiAccounts&&this.isRemote()&&h.getAccount&&this.getAccount().id!=h.getAccount().id){
o=true
}
if(!o&&!d){
if(u&&u.folderId){
o=true;
for(var t=0;
t<n.length;
t++){
if(n[t].folderId!=this.id){
o=false;
break
}}}}}}}}
if(!o&&this.link){
o=this.isReadOnly()
}}
return !o
};
ZmFolder.prototype.isHardDelete=function(){
return(this.isInTrash()||this.isInSpam()||(appCtxt.isOffline&&this.isUnder(ZmOrganizer.ID_SYNC_FAILURES)))
};
ZmFolder.prototype.isInSpam=function(){
return this.isUnder(ZmFolder.ID_SPAM)
};
ZmFolder.prototype._remoteMoveOk=function(e){
if(!this.isRemote()&&e.isMountpoint&&e.rid){
return true
}
if(!this.link||!e.link||this.getOwner()!==e.getOwner()){
return false
}
if(!this._folderActionOk(this,"isInsert")){
return false
}
return this._folderActionOk(e,"isDelete")
};
ZmFolder.prototype._folderActionOk=function(a,t){
var e=a.shares&&a.shares[0];
if(!e){
return !a.isReadOnly()
}
return e[t]()
};
ZmFolder.prototype.isOutbound=function(){
for(var e=0;
e<ZmFolder.OUTBOUND.length;
e++){
if(this.isUnder(ZmFolder.OUTBOUND[e])){
return true
}}
return false
};
ZmOrganizer.prototype.setGlobalMarkRead=function(a,i,t,e){
if(this.globalMarkRead==a){
return
}}
}
if(AjxPackage.define("zimbraMail.share.model.ZmSearchFolder")){
ZmSearchFolder=function(t){
t.type=ZmOrganizer.SEARCH;
ZmFolder.call(this,t);
if(t.query){
var e={
query:t.query,types:t.types,checkTypes:true,sortBy:t.sortBy,searchId:t.id,accountName:(t.account&&t.account.name)};
this.search=new ZmSearch(e)
}};
ZmSearchFolder.prototype=new ZmFolder;
ZmSearchFolder.prototype.constructor=ZmSearchFolder;
ZmSearchFolder.prototype.toString=function(){
return"ZmSearchFolder"
};
ZmSearchFolder.ID_ROOT=ZmOrganizer.ID_ROOT;
ZmSearchFolder.create=function(o){
o=o||{};
var i=o.search,n={
CreateSearchFolderRequest:{
_jsns:"urn:zimbraMail"}}
,a=n.CreateSearchFolderRequest.search={};
a.name=o.name;
a.query=i.query;
a.l=o.l;
if(o.sortBy){
a.sortBy=o.sortBy
}
a.types=ZmSearchFolder._getSearchTypes(i);
if(o.rgb){
a.rgb=o.rgb
}else{
if(o.color){
var e=ZmOrganizer.getColorValue(o.color,o.type);
if(e){
a.color=e
}}}
var t;
if(o.isGlobal){
a.f="g";
t=appCtxt.accountList.mainAccount.name
}
return appCtxt.getAppController().sendRequest({
jsonObj:n,asyncMode:o.asyncMode!==false,accountName:t,callback:ZmSearchFolder._handleCreate,errorCallback:o.errorCallback||ZmOrganizer._handleErrorCreate.bind(null)}
)
};
ZmSearchFolder._getSearchTypes=function(n){
var e="";
if(n&&n.types){
var t=n.types.getArray();
if(t.length){
var e=[];
for(var o=0;
o<t.length;
o++){
e.push(ZmSearch.TYPE[t[o]])
}
e=e.join(",")
}}
return e
};
ZmSearchFolder._handleCreate=function(e){
appCtxt.setStatusMsg(ZmMsg.searchSaved)
};
ZmSearchFolder.prototype.setQuery=function(n,r,o,t){
if(n===this.search.query){
return
}
var a={
callback:r,errorCallback:o,batchCmd:t};
var e="ModifySearchFolderRequest";
var i={
_jsns:"urn:zimbraMail",search:{
query:n,id:a.id||this.id,types:ZmSearchFolder._getSearchTypes(this.search)}};
var l={};
l[e]=i;
var h=this._handleResponseOrganizerAction.bind(this,a);
if(a.batchCmd){
a.batchCmd.addRequestParams(l,h,a.errorCallback)
}else{
var s;
if(appCtxt.multiAccounts){
s=this.account?this.account.name:appCtxt.accountList.mainAccount.name
}
appCtxt.getAppController().sendRequest({
jsonObj:l,asyncMode:true,accountName:s,callback:h,errorCallback:a.errorCallback}
)
}};
ZmSearchFolder.prototype.getIcon=function(){
return(this.nId==ZmOrganizer.ID_ROOT)?null:(this.isOfflineGlobalSearch?"GlobalSearchFolder":"SearchFolder")
};
ZmSearchFolder.prototype.getToolTip=function(){};
ZmSearchFolder.prototype._getNewParent=function(t){
var e=appCtxt.getById(t);
if(e){
return e
}
return appCtxt.getById(t)
};
ZmSearchFolder.prototype.notifyModify=function(t){
if(t.query&&t.query!==this.search.query&&t.id===this.id){
this.search.query=t.query;
var e={};
e[ZmOrganizer.F_QUERY]=true;
this._notify(ZmEvent.E_MODIFY,{
fields:e}
);
t.query=null
}
ZmFolder.prototype.notifyModify.apply(this,[t])
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmSearch")){
ZmSearch=function(s){
s=s||{};
for(var t in s){
this[t]=s[t]
}
this.galType=this.galType||ZmSearch.GAL_ACCOUNT;
this.join=this.join||ZmSearch.JOIN_AND;
if(this.query||this.queryHint){
if(!this.isGalSearch&&!this.isAutocompleteSearch&&!this.isGalAutocompleteSearch&&!this.isCalResSearch){
var a=this.parsedQuery=new ZmParsedQuery(this.query||this.queryHint);
this._setProperties();
var e=a.getTerm("sort");
if(e){
this.sortBy=e.arg
}}}
this.isGalSearch=false;
this.isCalResSearch=false;
if(ZmSearch._mailEnabled==null){
ZmSearch._mailEnabled=appCtxt.get(ZmSetting.MAIL_ENABLED);
if(ZmSearch._mailEnabled){
AjxDispatcher.require("MailCore")
}}
if(s.checkTypes){
var h=AjxUtil.toArray(this.types);
var n=[];
for(var r=0;
r<h.length;
r++){
var l=h[r];
var o=ZmItem.APP[l];
if(appCtxt.get(ZmApp.SETTING[o])){
n.push(l)
}}
this.types=AjxVector.fromArray(n)
}};
ZmSearch.prototype.isZmSearch=true;
ZmSearch.prototype.toString=function(){
return"ZmSearch"
};
ZmSearch.TYPE={};
ZmSearch.TYPE_ANY="any";
ZmSearch.GAL_ACCOUNT="account";
ZmSearch.GAL_RESOURCE="resource";
ZmSearch.GAL_ALL="";
ZmSearch.JOIN_AND=1;
ZmSearch.JOIN_OR=2;
ZmSearch.TYPE_MAP={};
ZmSearch.DEFAULT_LIMIT=DwtListView.DEFAULT_LIMIT;
ZmSearch.DATE_DESC="dateDesc";
ZmSearch.DATE_ASC="dateAsc";
ZmSearch.SUBJ_DESC="subjDesc";
ZmSearch.SUBJ_ASC="subjAsc";
ZmSearch.NAME_DESC="nameDesc";
ZmSearch.NAME_ASC="nameAsc";
ZmSearch.SIZE_DESC="sizeDesc";
ZmSearch.SIZE_ASC="sizeAsc";
ZmSearch.RCPT_ASC="rcptAsc";
ZmSearch.RCPT_DESC="rcptDesc";
ZmSearch.ATTACH_ASC="attachAsc";
ZmSearch.ATTACH_DESC="attachDesc";
ZmSearch.FLAG_ASC="flagAsc";
ZmSearch.FLAG_DESC="flagDesc";
ZmSearch.MUTE_ASC="muteAsc";
ZmSearch.MUTE_DESC="muteDesc";
ZmSearch.READ_ASC="readAsc";
ZmSearch.READ_DESC="readDesc";
ZmSearch.PRIORITY_ASC="priorityAsc";
ZmSearch.PRIORITY_DESC="priorityDesc";
ZmSearch.SCORE_DESC="scoreDesc";
ZmSearch.DURATION_DESC="durDesc";
ZmSearch.DURATION_ASC="durAsc";
ZmSearch.STATUS_DESC="taskStatusDesc";
ZmSearch.STATUS_ASC="taskStatusAsc";
ZmSearch.PCOMPLETE_DESC="taskPercCompletedDesc";
ZmSearch.PCOMPLETE_ASC="taskPercCompletedAsc";
ZmSearch.DUE_DATE_DESC="taskDueDesc";
ZmSearch.DUE_DATE_ASC="taskDueAsc";
ZmSearch.prototype.execute=function(e){
if(e.batchCmd||this.soapInfo){
return this._executeSoap(e)
}else{
return this._executeJson(e)
}};
ZmSearch.prototype._executeSoap=function(n){
this.isGalSearch=(this.contactSource&&(this.contactSource==ZmId.SEARCH_GAL));
this.isCalResSearch=(!this.contactSource&&this.conds!=null);
if(appCtxt.isOffline&&this.isCalResSearch){
this.isCalResSearch=appCtxt.isZDOnline()
}
if(this.isEmpty){
this._handleResponseExecute(n.callback);
return null
}
var m;
if(!this.response){
if(this.isGalSearch){
m=AjxSoapDoc.create("SearchGalRequest","urn:zimbraAccount");
var e=m.getMethod();
if(this.galType){
e.setAttribute("type",this.galType)
}
m.set("name",this.query);
var h=m.set("searchFilter");
if(this.conds&&this.conds.length){
var r=m.set("conds",null,h);
this._applySoapCond(this.conds,m,r)
}}else{
if(this.isAutocompleteSearch){
m=AjxSoapDoc.create("AutoCompleteRequest","urn:zimbraMail");
var e=m.getMethod();
if(this.limit){
e.setAttribute("limit",this.limit)
}
m.set("name",this.query)
}else{
if(this.isGalAutocompleteSearch){
m=AjxSoapDoc.create("AutoCompleteGalRequest","urn:zimbraAccount");
var e=m.getMethod();
e.setAttribute("limit",this._getLimit());
if(this.galType){
e.setAttribute("type",this.galType)
}
m.set("name",this.query)
}else{
if(this.isCalResSearch){
m=AjxSoapDoc.create("SearchCalendarResourcesRequest","urn:zimbraAccount");
var e=m.getMethod();
if(this.attrs){
var f=[].concat(this.attrs);
AjxUtil.arrayRemove(f,"fullName");
e.setAttribute("attrs",f.join(","))
}
var h=m.set("searchFilter");
if(this.conds&&this.conds.length){
var r=m.set("conds",null,h);
this._applySoapCond(this.conds,m,r)
}}else{
if(this.soapInfo){
m=AjxSoapDoc.create(this.soapInfo.method,this.soapInfo.namespace);
for(var u in this.soapInfo.additional){
var o=m.set(u);
var f=this.soapInfo.additional[u];
for(var l in f){
o.setAttribute(l,f[l])
}}}else{
m=AjxSoapDoc.create("SearchRequest","urn:zimbraMail")
}
var e=this._getStandardMethod(m);
if(this.types){
var d=this.types.getArray();
if(d.length){
var c=[];
for(var s=0;
s<d.length;
s++){
c.push(ZmSearch.TYPE[d[s]])
}
e.setAttribute("types",c.join(","));
if(this.types.contains(ZmItem.MSG)||this.types.contains(ZmItem.CONV)){
var t=this.folderId&&appCtxt.getById(this.folderId);
e.setAttribute("recip",(t&&t.isOutbound())?"1":"0")
}
if(this.types.contains(ZmItem.CONV)){
e.setAttribute("fullConversation",1)
}
if(this.fetch){
e.setAttribute("fetch",(this.fetch=="all")?"all":"1");
if(this.getHtml){
e.setAttribute("html","1")
}}
if(this.markRead){
e.setAttribute("read","1")
}}}
if(this.inDumpster){
e.setAttribute("inDumpster","1")
}}}}}}
var p=this._getStandardMethod(m);
p.setAttribute("needExp",1);
var g=this._handleResponseExecute.bind(this,n.callback);
if(n.batchCmd){
n.batchCmd.addRequestParams(m,g)
}else{
return appCtxt.getAppController().sendRequest({
soapDoc:m,asyncMode:true,callback:g,errorCallback:n.errorCallback,timeout:n.timeout,noBusyOverlay:n.noBusyOverlay,response:this.response}
)
}};
ZmSearch.prototype._executeJson=function(o){
this.isGalSearch=(this.contactSource&&(this.contactSource==ZmId.SEARCH_GAL));
this.isCalResSearch=(!this.contactSource&&this.conds!=null);
if(appCtxt.isOffline&&this.isCalResSearch){
this.isCalResSearch=appCtxt.isZDOnline()
}
if(this.isEmpty){
this._handleResponseExecute(o.callback);
return null
}
var g,n,d;
if(!this.response){
if(this.isGalSearch){
n={
_jsns:"urn:zimbraAccount",needIsOwner:"1",needIsMember:"directOnly"};
g={
SearchGalRequest:n};
if(this.galType){
n.type=this.galType
}
n.name=this.query;
n.offset=this.offset=(this.offset||0);
n.limit=this._getLimit();
n.locale={
_content:AjxEnv.DEFAULT_LOCALE};
if(this.lastId){
n.cursor={
id:this.lastId,sortVal:(this.lastSortVal||"")}
}
if(this.sortBy){
n.sortBy=this.sortBy
}
if(this.conds&&this.conds.length){
n.searchFilter={
conds:{}};
n.searchFilter.conds=ZmSearch.prototype._applyJsonCond(this.conds,n)
}}else{
if(this.isAutocompleteSearch){
g={
AutoCompleteRequest:{
_jsns:"urn:zimbraMail"}};
n=g.AutoCompleteRequest;
if(this.limit){
n.limit=this.limit
}
n.name={
_content:this.query};
if(o.autocompleteType){
n.t=o.autocompleteType
}}else{
if(this.isGalAutocompleteSearch){
g={
AutoCompleteGalRequest:{
_jsns:"urn:zimbraAccount"}};
n=g.AutoCompleteGalRequest;
n.limit=this._getLimit();
n.name=this.query;
if(this.galType){
n.type=this.galType
}}else{
if(this.isCalResSearch){
g={
SearchCalendarResourcesRequest:{
_jsns:"urn:zimbraAccount"}};
n=g.SearchCalendarResourcesRequest;
if(this.attrs){
var f=[].concat(this.attrs);
n.attrs=f.join(",")
}
n.offset=this.offset=(this.offset||0);
n.limit=this._getLimit();
if(this.conds&&this.conds.length){
n.searchFilter={
conds:{}};
n.searchFilter.conds=ZmSearch.prototype._applyJsonCond(this.conds,n)
}}else{
if(this.soapInfo){
d=AjxSoapDoc.create(this.soapInfo.method,this.soapInfo.namespace);
for(var c in this.soapInfo.additional){
var t=d.set(c);
var f=this.soapInfo.additional[c];
for(var r in f){
t.setAttribute(r,f[r])
}}}else{
g={
SearchRequest:{
_jsns:"urn:zimbraMail"}};
n=g.SearchRequest
}
this._getStandardMethodJson(n);
if(this.types){
var l=this.types.getArray();
if(l.length){
var h=[];
for(var s=0;
s<l.length;
s++){
h.push(ZmSearch.TYPE[l[s]])
}
n.types=h.join(",");
if(this.types.contains(ZmItem.MSG)||this.types.contains(ZmItem.CONV)){
var e=this.folderId&&appCtxt.getById(this.folderId);
n.recip=(e&&e.isOutbound())?"2":"0"
}
if(this.types.contains(ZmItem.CONV)){
n.fullConversation=1
}
if(this.fetch){
n.fetch=(this.fetch=="all")?"all":1;
if(this.getHtml){
n.html=1
}}
if(this.markRead){
n.read=1
}
if(this.headers){
for(var m in this.headers){
if(!n.header){
n.header=[]
}
n.header.push({
n:this.headers[m]}
)
}}
if(l.length==1&&l[0]==ZmItem.TASK&&this.allowableTaskStatus){
n.allowableTaskStatus=this.allowableTaskStatus
}}}
if(this.inDumpster){
n.inDumpster=1
}}}}}}
if(n){
n.needExp=1
}
var p=this._handleResponseExecute.bind(this,o.callback);
if(o.batchCmd){
o.batchCmd.addRequestParams(d,p)
}else{
var u={
jsonObj:g,soapDoc:d,asyncMode:true,callback:p,errorCallback:o.errorCallback,offlineCallback:o.offlineCallback,timeout:o.timeout,offlineCache:o.offlineCache,noBusyOverlay:o.noBusyOverlay,response:this.response,accountName:this.accountName,offlineRequest:o.offlineRequest};
return appCtxt.getAppController().sendRequest(u)
}};
ZmSearch.prototype._applySoapCond=function(l,h,s,o){
if(o||this.join==ZmSearch.JOIN_OR){
s.setAttribute("or",1)
}
for(var n=0;
n<l.length;
n++){
var r=l[n];
if(AjxUtil.isArray(r)){
var a=h.set("conds",null,s);
this._applySoapCond(r,h,a,true)
}else{
if(r.attr=="fullName"&&r.op=="has"){
var t=h.set("name",r.value)
}else{
var e=h.set("cond",null,s);
e.setAttribute("attr",r.attr);
e.setAttribute("op",r.op);
e.setAttribute("value",r.value)
}}}};
ZmSearch.prototype._applyJsonCond=function(e,a,o){
var s={};
if(o||this.join==ZmSearch.JOIN_OR){
s.or=1
}
for(var t=0;
t<e.length;
t++){
var n=e[t];
if(AjxUtil.isArray(n)){
if(!s.conds){
s.conds=[]
}
s.conds.push(this._applyJsonCond(n,a,true))
}else{
if(n.attr=="fullName"&&n.op=="has"){
a.name={
_content:n.value}
}else{
if(!s.cond){
s.cond=[]
}
s.cond.push({
attr:n.attr,op:n.op,value:n.value}
)
}}}
return s
};
ZmSearch.prototype._handleResponseExecute=function(i,t){
if(t){
var a=t.getResponse();
if(this.isGalSearch){
a=a.SearchGalResponse
}else{
if(this.isCalResSearch){
a=a.SearchCalendarResourcesResponse
}else{
if(this.isAutocompleteSearch){
a=a.AutoCompleteResponse
}else{
if(this.isGalAutocompleteSearch){
a=a.AutoCompleteGalResponse
}else{
if(this.soapInfo){
a=a[this.soapInfo.response]
}else{
a=a.SearchResponse
}}}}}}else{
a={
_jsns:"urn:zimbraMail",more:false}
}
var e=new ZmSearchResult(this);
e.set(a);
t=t||new ZmCsfeResult();
t.set(e);
if(i){
i.run(t)
}};
ZmSearch.prototype.getConv=function(a){
if((!this.query&&!this.queryHint)||!a.cid){
return
}
var i={
SearchConvRequest:{
_jsns:"urn:zimbraMail"}};
var e=i.SearchConvRequest;
this._getStandardMethodJson(e);
e.cid=a.cid;
if(a.fetch){
e.fetch=a.fetch;
if(a.markRead){
e.read=1
}
if(this.getHtml){
e.html=1
}
if(a.needExp!==false){
e.needExp=1
}}
if(!a.noTruncate){
e.max=appCtxt.get(ZmSetting.MAX_MESSAGE_SIZE)
}
e.recip="2";
var t={
jsonObj:i,asyncMode:true,callback:this._handleResponseGetConv.bind(this,a.callback),accountName:this.accountName};
appCtxt.getAppController().sendRequest(t)
};
ZmSearch.prototype._handleResponseGetConv=function(i,t){
var a=t.getResponse().SearchConvResponse;
var e=new ZmSearchResult(this);
e.set(a,null,true);
t.set(e);
if(i){
i.run(t)
}};
ZmSearch.prototype.clearCursor=function(){
this.lastId=this.lastSortVal=this.endSortVal=null
};
ZmSearch.prototype.getTitle=function(){
var a;
var e=this.parsedQuery;
var t=this.searchId||((e&&(e.getNumTokens()==1))?this.folderId||this.tagId:null);
if(t){
var i=appCtxt.getById(ZmOrganizer.getSystemId(t));
if(i){
a=i.getName(true,ZmOrganizer.MAX_DISPLAY_NAME_LENGTH,true)
}}
return a?([ZmMsg.zimbraTitle,a].join(": ")):([ZmMsg.zimbraTitle,ZmMsg.searchResults].join(": "))
};
ZmSearch.prototype.isMultiAccount=function(){
if(!this._isMultiAccount){
this._isMultiAccount=(this.queryHint&&this.queryHint.length>0&&(this.queryHint.split("inid:").length>1||this.queryHint.split("underid:").length>1))
}
return this._isMultiAccount
};
ZmSearch.prototype._getStandardMethod=function(e){
var i=e.getMethod();
if(this.sortBy){
i.setAttribute("sortBy",this.sortBy)
}
if(this.types.contains(ZmItem.MSG)||this.types.contains(ZmItem.CONV)){
ZmMailMsg.addRequestHeaders(e)
}
ZmTimezone.set(e,AjxTimezone.DEFAULT,null);
e.set("locale",appCtxt.get(ZmSetting.LOCALE_NAME),null);
if(this.lastId!=null&&this.lastSortVal){
var a=e.set("cursor");
a.setAttribute("id",this.lastId);
a.setAttribute("sortVal",this.lastSortVal);
if(this.endSortVal){
a.setAttribute("endSortVal",this.endSortVal)
}}
this.offset=this.offset||0;
i.setAttribute("offset",this.offset);
i.setAttribute("limit",this._getLimit());
var t=this._getQuery();
e.set("query",t);
if(this.field){
i.setAttribute("field",this.field)
}
return i
};
ZmSearch.prototype._getStandardMethodJson=function(e){
if(this.sortBy){
e.sortBy=this.sortBy
}
if(this.types.contains(ZmItem.MSG)||this.types.contains(ZmItem.CONV)){
ZmMailMsg.addRequestHeaders(e)
}
ZmTimezone.set(e,AjxTimezone.DEFAULT);
e.locale={
_content:AjxEnv.DEFAULT_LOCALE};
if(this.lastId!=null&&this.lastSortVal){
e.cursor={
id:this.lastId,sortVal:this.lastSortVal};
if(this.endSortVal){
e.cursor.endSortVal=this.endSortVal
}}
e.offset=this.offset=this.offset||0;
e.limit=this._getLimit();
if(this.idsOnly){
e.resultMode="IDS"
}
e.query=this._getQuery();
if(this.field){
e.field=this.field
}};
ZmSearch.prototype._getQuery=function(){
if(this.queryHint){
var e=this.query?["(",this.query,") "].join(""):"";
return[e,"(",this.queryHint,")"].join("")
}
return this.query
};
ZmSearch.prototype._getLimit=function(){
if(this.limit){
return this.limit
}
var e;
if(this.isGalAutocompleteSearch){
e=appCtxt.get(ZmSetting.AUTOCOMPLETE_LIMIT)
}else{
var t=this.types&&this.types.get(0);
var a=appCtxt.getApp(ZmItem.APP[t])||appCtxt.getCurrentApp();
if(a&&a.getLimit){
e=a.getLimit(this.offset)
}else{
e=appCtxt.get(ZmSetting.PAGE_SIZE)||ZmSearch.DEFAULT_LIMIT
}}
this.limit=e;
return e
};
ZmSearch.prototype.matches=function(e){
if(!this.parsedQuery){
return null
}
if(this.folderId&&!this.parsedQuery.hasOrTerm){
if(e.type===ZmItem.CONV){
if(e.folders&&!e.folders[this.folderId]){
return false
}}else{
if(e.folderId&&e.folderId!==this.folderId){
return false
}}}
var t=this.parsedQuery.getMatchFunction();
return t?t(e):null
};
ZmSearch.prototype.hasFolderTerm=function(e){
return this.parsedQuery&&this.parsedQuery.hasTerm(["in","under"],e)
};
ZmSearch.prototype.replaceFolderTerm=function(a,e){
if(!this.parsedQuery){
return this.query
}
var t=this.parsedQuery.replaceTerm(["in","under"],a,e);
if(t){
this.query=t
}
return Boolean(t)
};
ZmSearch.prototype.hasTagTerm=function(e){
return this.parsedQuery&&this.parsedQuery.hasTerm("tag",e)
};
ZmSearch.prototype.replaceTagTerm=function(t,e){
if(!this.parsedQuery){
return this.query
}
var a=this.parsedQuery.replaceTerm("tag",t,e);
if(a){
this.query=a
}
return Boolean(a)
};
ZmSearch.prototype.hasUnreadTerm=function(){
return(this.parsedQuery&&(this.parsedQuery.hasTerm("is","read")||this.parsedQuery.hasTerm("is","unread")))
};
ZmSearch.prototype.isAnywhere=function(){
return(this.parsedQuery&&this.parsedQuery.hasTerm("is","anywhere"))
};
ZmSearch.prototype.hasContentTerm=function(){
return(this.parsedQuery&&this.parsedQuery.hasTerm("content"))
};
ZmSearch.prototype.isSimple=function(){
var e=this.parsedQuery;
if(e&&(e.getNumTokens()==1)){
return e.hasTerm(["in","inid","tag"])
}
return false
};
ZmSearch.prototype.getTokens=function(){
return this.parsedQuery&&this.parsedQuery.getTokens()
};
ZmSearch.prototype._setProperties=function(){
var t=this.parsedQuery&&this.parsedQuery.getProperties();
for(var e in t){
this[e]=t[e]
}};
ZmParsedQuery=function(e){
this.hasOrTerm=false;
this._tokens=this._parse(AjxStringUtil.trim(e,true))
};
ZmParsedQuery.prototype.isZmParsedQuery=true;
ZmParsedQuery.prototype.toString=function(){
return"ZmParsedQuery"
};
ZmParsedQuery.TERM="TERM";
ZmParsedQuery.COND="COND";
ZmParsedQuery.GROUP="GROUP";
ZmParsedQuery.OP_CONTENT="content";
ZmParsedQuery.OP_LIST=["content","subject","msgid","envto","envfrom","contact","to","from","cc","tofrom","tocc","fromcc","tofromcc","in","under","inid","underid","has","filename","type","attachment","is","date","mdate","day","week","month","year","after","before","size","bigger","larger","smaller","tag","priority","message","my","modseq","conv","conv-count","conv-minm","conv-maxm","conv-start","conv-end","appt-start","appt-end","author","title","keywords","company","metadata","item","sort"];
ZmParsedQuery.IS_OP=AjxUtil.arrayAsHash(ZmParsedQuery.OP_LIST);
ZmParsedQuery.IS_VALUES=["unread","read","flagged","unflagged","draft","sent","received","replied","unreplied","forwarded","unforwarded","invite","solo","tome","fromme","ccme","tofromme","toccme","fromccme","tofromccme","local","remote","anywhere"];
ZmParsedQuery.MULTIPLE={};
ZmParsedQuery.MULTIPLE.to=true;
ZmParsedQuery.MULTIPLE.is=true;
ZmParsedQuery.MULTIPLE.has=true;
ZmParsedQuery.MULTIPLE.tag=true;
ZmParsedQuery.MULTIPLE["appt-start"]=true;
ZmParsedQuery.MULTIPLE["appt-end"]=true;
ZmParsedQuery.MULTIPLE.type=true;
ZmParsedQuery.isMultiple=function(e){
return Boolean(e&&ZmParsedQuery.MULTIPLE[e.op])
};
ZmParsedQuery.EXCLUDE={};
ZmParsedQuery.EXCLUDE.before=["date"];
ZmParsedQuery.EXCLUDE.after=["date"];
ZmParsedQuery.EXCLUDE.is={};
ZmParsedQuery.EXCLUDE.is["read"]=["unread"];
ZmParsedQuery.EXCLUDE.is["flagged"]=["unflagged"];
ZmParsedQuery.EXCLUDE.is["sent"]=["received"];
ZmParsedQuery.EXCLUDE.is["replied"]=["unreplied"];
ZmParsedQuery.EXCLUDE.is["forwarded"]=["unforwarded"];
ZmParsedQuery.EXCLUDE.is["local"]=["remote","anywhere"];
ZmParsedQuery.EXCLUDE.is["tome"]=["tofromme","toccme","tofromccme"];
ZmParsedQuery.EXCLUDE.is["fromme"]=["tofromme","fromccme","tofromccme"];
ZmParsedQuery.EXCLUDE.is["ccme"]=["toccme","fromccme","tofromccme"];
ZmParsedQuery._createExcludeMap=function(n){
var a={};
for(var t in n){
var o=n[t];
if(AjxUtil.isArray1(o)){
o.push(t);
ZmParsedQuery._permuteExcludeMap(a,o)
}else{
for(var i in o){
var e=n[t][i];
e.push(i);
ZmParsedQuery._permuteExcludeMap(a,AjxUtil.map(e,function(s){
return new ZmSearchToken(t,s).toString()
}
))
}}}
return a
};
ZmParsedQuery._permuteExcludeMap=function(s,r){
if(r.length<2){
return
}
for(var n=0;
n<r.length-1;
n++){
var t=r[n];
for(var o=n+1;
o<r.length;
o++){
var e=r[o];
s[t]=s[t]||{};
s[e]=s[e]||{};
s[t][e]=true;
s[e][t]=true
}}};
ZmParsedQuery.areExclusive=function(i,t){
if(!i||!t){
return false
}
var n=ZmParsedQuery.EXCLUDE_MAP;
if(!n){
n=ZmParsedQuery.EXCLUDE_MAP=ZmParsedQuery._createExcludeMap(ZmParsedQuery.EXCLUDE)
}
var e=i.op,s=t.op;
var o=i.toString(),a=t.toString();
return Boolean((n[e]&&n[e][s])||(n[s]&&n[s][e])||(n[o]&&n[o][a])||(n[a]&&n[a][o]))
};
ZmParsedQuery.COND_AND="and";
ZmParsedQuery.COND_OR="or";
ZmParsedQuery.COND_NOT="not";
ZmParsedQuery.GROUP_OPEN="(";
ZmParsedQuery.GROUP_CLOSE=")";
ZmParsedQuery.COND_OP={};
ZmParsedQuery.COND_OP[ZmParsedQuery.COND_AND]=" && ";
ZmParsedQuery.COND_OP[ZmParsedQuery.COND_OR]=" || ";
ZmParsedQuery.COND_OP[ZmParsedQuery.COND_NOT]=" !";
ZmParsedQuery.EOW_LIST=[" ",":",ZmParsedQuery.GROUP_OPEN,ZmParsedQuery.GROUP_CLOSE];
ZmParsedQuery.IS_EOW=AjxUtil.arrayAsHash(ZmParsedQuery.EOW_LIST);
ZmParsedQuery.FLAG={};
ZmParsedQuery.FLAG.unread="item.isUnread";
ZmParsedQuery.FLAG.read="!item.isUnread";
ZmParsedQuery.FLAG.flagged="item.isFlagged";
ZmParsedQuery.FLAG.unflagged="!item.isFlagged";
ZmParsedQuery.FLAG.forwarded="item.isForwarded";
ZmParsedQuery.FLAG.unforwarded="!item.isForwarded";
ZmParsedQuery.FLAG.sent="item.isSent";
ZmParsedQuery.FLAG.draft="item.isDraft";
ZmParsedQuery.FLAG.replied="item.isReplied";
ZmParsedQuery.FLAG.unreplied="!item.isReplied";
ZmParsedQuery.prototype._parse=function(e){
function a(z,T,j){
var j=j||z.charAt(T);
T++;
var v=false,x,k="";
while(T<z.length&&!v){
x=z.charAt(T);
if(x==j){
v=true
}else{
k+=x;
T++
}}
return v?{
str:k,pos:T+1}
:null
}
function n(v,k){
while(k<v.length&&v.charAt(k)==" "){
k++
}
return k
}
function o(k,v){
this.parseFailed=k;
return c
}
var p=e.length;
var c=[],l,w,h,g="",s=false,u=true,b=0,f=0;
var i=n(e,0);
while(i<p){
w=(l!=" ")?l:w;
l=e.charAt(i);
s=ZmParsedQuery.IS_EOW[l];
if(l==":"){
if(ZmParsedQuery.IS_OP[g]){
h=g
}else{
return o("unrecognized op '"+g+"'",e)
}
g="";
i=n(e,i+1);
continue
}
if(s){
var r=g.toLowerCase();
var t=!!ZmParsedQuery.COND_OP[r];
if(h&&g&&!(t&&b>0)){
c.push(new ZmSearchToken(h,r));
if(b==0){
h=""
}
g="";
u=true
}else{
if(!h||(h&&b>0)){
if(t){
c.push(new ZmSearchToken(r));
u=false;
if(r==ZmParsedQuery.COND_OR){
this.hasOrTerm=true
}}else{
if(g){
c.push(new ZmSearchToken(ZmParsedQuery.OP_CONTENT,g))
}}
g=""
}}}
if(l=='"'){
var m=a(e,i);
if(m){
g=m.str;
i=m.pos
}else{
return o("improper use of quotes",e)
}}else{
if(l==ZmParsedQuery.GROUP_OPEN){
var d=false;
if(b>0){
b++
}else{
if(w==":"){
b=1;
var y=e.substr(i,e.indexOf(ZmParsedQuery.GROUP_CLOSE,i+1));
y=y&&y.toLowerCase();
if(y&&(y.indexOf(" "+ZmParsedQuery.COND_OR+" ")==-1)&&(y.indexOf(" "+ZmParsedQuery.COND_AND+" ")==-1)){
var m=a(e,i,ZmParsedQuery.GROUP_CLOSE);
if(m){
g=m.str;
i=m.pos;
b=0
}else{
return o("improper use of paren-based quoting",e)
}
d=true
}}}
if(!d){
c.push(new ZmSearchToken(l));
f++
}
i=n(e,i+1)
}else{
if(l==ZmParsedQuery.GROUP_CLOSE){
if(b>0){
b--
}
if(b==0){
h=""
}
c.push(new ZmSearchToken(l));
i=n(e,i+1)
}else{
if(l=="-"&&!g&&!h){
c.push(new ZmSearchToken(ZmParsedQuery.COND_NOT));
i=n(e,i+1);
u=false
}else{
if(l!=" "){
g+=l
}
i++
}}}}}
if((i>=e.length)&&h&&g){
c.push(new ZmSearchToken(h,g));
u=true
}else{
if(!h&&g){
c.push(new ZmSearchToken(g))
}}
if(c.length>=3&&f==1&&c[0].op==ZmParsedQuery.GROUP_OPEN&&c[c.length-1].op==ZmParsedQuery.GROUP_CLOSE){
c.shift();
c.pop()
}
if(!u){
return o("unexpected end of query",e)
}
return c
};
ZmParsedQuery.prototype.getTokens=function(){
return this._tokens
};
ZmParsedQuery.prototype.getNumTokens=function(){
return this._tokens?this._tokens.length:0
};
ZmParsedQuery.prototype.getProperties=function(){
var n={};
for(var o=0,e=this._tokens.length;
o<e;
o++){
var a=this._tokens[o];
if(a.type==ZmParsedQuery.TERM){
var s=o>0?this._tokens[o-1]:null;
if(!((s&&s.op==ZmParsedQuery.COND_NOT)||this.hasOrTerm)){
if((a.op=="in"||a.op=="inid")){
this.folderId=n.folderId=(a.op=="in")?this._getFolderId(a.arg):a.arg
}else{
if(a.op=="tag"){
this.tagId=n.tagId=this._getTagId(a.arg,true)
}}}}}
return n
};
ZmParsedQuery.prototype.getMatchFunction=function(){
if(this._matchFunction){
return this._matchFunction
}
if(this.parseFailed||this.hasTerm(ZmParsedQuery.OP_CONTENT)){
return null
}
var e,n;
var o=["return Boolean("];
for(var s=0,h=this._tokens.length;
s<h;
s++){
var d=this._tokens[s];
if(d.type===ZmParsedQuery.TERM){
if(d.op==="in"||d.op==="inid"){
e=(d.op==="in")?this._getFolderId(d.arg):d.arg;
if(e){
o.push("((item.type === ZmItem.CONV) ? item.folders && item.folders['"+e+"'] : item.folderId === '"+e+"')")
}}else{
if(d.op==="tag"){
n=this._getTagId(d.arg,true);
if(n){
o.push("item.hasTag('"+d.arg+"')")
}}else{
if(d.op==="is"){
var c=ZmParsedQuery.FLAG[d.arg];
if(c){
o.push(c)
}}else{
if(d.op==="has"&&d.arg==="attachment"){
o.push("item.hasAttach")
}else{
return null
}}}}
var r=this._tokens[s+1];
if(r&&(r.type==ZmParsedQuery.TERM||r==ZmParsedQuery.COND_OP[ZmParsedQuery.COND_NOT]||r==ZmParsedQuery.GROUP_CLOSE)){
o.push(ZmParsedQuery.COND_OP[ZmParsedQuery.COND_AND])
}}else{
if(d.type===ZmParsedQuery.COND){
o.push(ZmParsedQuery.COND_OP[d.op])
}else{
if(d.type===ZmParsedQuery.GROUP){
o.push(d.op)
}}}}
o.push(")");
var a=(appCtxt.multiAccounts&&this.isMultiAccount()&&!this.query&&this.queryHint);
if(!this.hasOrTerm||a){
this.folderId=e;
this.tagId=n
}
try{
this._matchFunction=new Function("item",o.join(""))
}
catch(l){}
return this._matchFunction
};
ZmParsedQuery.prototype.createQuery=function(){
var a=[];
for(var t=0,e=this._tokens.length;
t<e;
t++){
a.push(this._tokens[t].toString())
}
return a.join(" ")
};
ZmParsedQuery.prototype._getFolderId=function(s){
var e=ZmFolder.QUERY_ID[s];
var t=this.accountName;
if(!t){
var n=appCtxt.getActiveAccount();
t=n?n.name:appCtxt.accountList.mainAccount
}
if(!e){
var o=t&&appCtxt.accountList.getAccountByName(t);
var a=appCtxt.getFolderTree(o);
var i=a?a.getByPath(s,true):null;
if(i){
e=i.id
}}
if(t){
e=ZmOrganizer.getSystemId(e,appCtxt.accountList.getAccountByName(t))
}
return e
};
ZmParsedQuery.prototype._getTagId=function(a,i){
var t=appCtxt.getTagTree();
if(t){
var e=t.getByName(a.toLowerCase());
if(e){
return i?e.nId:e.id
}}
return null
};
ZmParsedQuery.prototype.getTerm=function(r,l){
var h=AjxUtil.arrayAsHash(r);
var a=l&&l.toLowerCase();
for(var n=0,e=this._tokens.length;
n<e;
n++){
var o=this._tokens[n];
var s=o.arg&&o.arg.toLowerCase();
if(o.type==ZmParsedQuery.TERM&&h[o.op]&&(!l||s==a)){
return o
}}
return null
};
ZmParsedQuery.prototype.hasTerm=function(e,t){
return Boolean(this.getTerm(e,t))
};
ZmParsedQuery.prototype.replaceTerm=function(n,e,o){
var r=e&&e.toLowerCase();
var a=AjxUtil.arrayAsHash(n);
if(e&&o){
for(var s=0,h=this._tokens.length;
s<h;
s++){
var c=this._tokens[s];
var l=c.arg&&c.arg.toLowerCase();
if(c.type==ZmParsedQuery.TERM&&a[c.op]&&(l==r)){
c.arg=o;
return this.createQuery()
}}}
return""
};
ZmSearchToken=function(a,e){
if(a&&arguments.length==1){
var t=a.split(":");
a=t[0];
e=t[1]
}
this.op=a;
this.arg=e;
if(ZmParsedQuery.IS_OP[a]&&e){
this.type=ZmParsedQuery.TERM
}else{
if(a&&ZmParsedQuery.COND_OP[a.toLowerCase()]){
this.type=ZmParsedQuery.COND;
this.op=a.toLowerCase()
}else{
if(a==ZmParsedQuery.GROUP_OPEN||a==ZmParsedQuery.GROUP_CLOSE){
this.type=ZmParsedQuery.GROUP
}else{
if(a){
this.type=ZmParsedQuery.TERM;
this.op=ZmParsedQuery.OP_CONTENT;
this.arg=a
}}}}};
ZmSearchToken.prototype.isZmSearchToken=true;
ZmSearchToken.prototype.toString=function(t){
if(this.type==ZmParsedQuery.TERM){
var e=this.arg;
if(this.op==ZmParsedQuery.OP_CONTENT){
return/\W/.test(e)?'"'+e.replace(/"/g,'\\"')+'"':e
}else{
e=(e&&(e.indexOf('"')!==0)&&e.indexOf(" ")!=-1)?'"'+e+'"':e;
return[this.op,e].join(":")
}}else{
return(!t&&this.op==ZmParsedQuery.COND_AND)?"":this.op
}}
}
if(AjxPackage.define("zimbraMail.share.model.ZmSearchResult")){
ZmSearchResult=function(e){
if(!e){
return
}
this._results={};
this.search=e;
this.type=e.searchFor
};
ZmSearchResult.prototype.isZmSearchResult=true;
ZmSearchResult.prototype.toString=function(){
return"ZmSearchResult"
};
ZmSearchResult.prototype.getResults=function(e){
e=e||this.type;
if(!this._results){
return ZmItem.RESULTS_LIST[e](this.search)
}else{
if(this.search.idsOnly){
return this._results
}else{
return this._results[e]?this._results[e]:e&&ZmItem.RESULTS_LIST[e](this.search)
}}};
ZmSearchResult.prototype.getAttribute=function(e){
return this._respEl?this._respEl[e]:null
};
ZmSearchResult.prototype.set=function(m){
if(!this.search){
return
}
this._respEl=m;
if(this.search.isAutocompleteSearch){
return
}
var d={};
var r=0;
var f,n;
var a=this.search.isGalSearch;
var o=new Date();
var s=0;
if(a||this.search.isCalResSearch){
f=n=a?ZmItem.CONTACT:ZmItem.RESOURCE;
var w=a?m.cn:m.calresource;
if(w){
if(!this._results[f]){
this._results[f]=ZmItem.RESULTS_LIST[f](this.search)
}
for(var p=0;
p<w.length;
p++){
this._results[f].addFromDom(w[p])
}
if(a){
this._results[f].getArray().sort(ZmSearchResult._sortGalResults)
}
s=w.length
}}else{
if(this.search.idsOnly){
this._results=m.hit||[];
return
}else{
var l=this.search.types.getArray();
n=l[0];
if(!n){
var h=AjxUtil.values(ZmList.NODE);
for(var g=0;
g<h.length;
g++){
var c=h[g];
if(m[c]){
n=ZmList.ITEM_TYPE[c];
if(l&&l.length==0){
l=[n]
}
break
}}}
if(!n){
var b=appCtxt.getCurrentAppName();
var l=ZmApp.SEARCH_TYPES[b];
n=l&&l.length&&l[0]
}
for(var g=0;
g<l.length;
g++){
var e=l[g];
var w=m[ZmList.NODE[e]];
if(!w&&(e==ZmItem.MSG)){
w=m.chat
}
if(!w&&(e==ZmItem.RESOURCE)){
w=m[ZmList.NODE[ZmItem.CONTACT]]
}
if(w&&w.length){
s+=w.length;
if(!this._results[e]){
this._results[e]=ZmItem.RESULTS_LIST[e](this.search)
}
for(var p=0;
p<w.length;
p++){
var y=w[p];
y._type=e;
this._results[e].addFromDom(y)
}
if(!d[e]){
d[e]=true;
r++;
f=e
}}}}}
if(!s&&n){
this._results[n]=ZmItem.RESULTS_LIST[n](this.search)
}
if((a||this.search.isGalAutocompleteSearch)&&this._results[ZmItem.CONTACT]){
this._results[ZmItem.CONTACT].setIsGal(true)
}
if(this.search.isGalAutocompleteSearch){
this.isTokenized=(this._respEl.tokenizeKey!=null)
}
var u=new Date();
f=f||n;
if(r<=1){
this.type=f
}
return this.type
};
ZmSearchResult._sortGalResults=function(t,e){
var i=t.getFileAs&&t.getFileAs().toLowerCase();
var o=e.getFileAs&&e.getFileAs().toLowerCase();
return i<o?-1:(i>o?1:0)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmTag")){
ZmTag=function(e){
e.type=ZmOrganizer.TAG;
ZmOrganizer.call(this,e);
this.notLocal=e.notLocal
};
ZmTag.prototype=new ZmOrganizer;
ZmTag.prototype.constructor=ZmTag;
ZmTag.prototype.isZmTag=true;
ZmTag.prototype.toString=function(){
return"ZmTag"
};
ZmTag.COLOR_ICON=new Object();
ZmTag.COLOR_ICON[ZmOrganizer.C_ORANGE]="TagOrange";
ZmTag.COLOR_ICON[ZmOrganizer.C_BLUE]="TagBlue";
ZmTag.COLOR_ICON[ZmOrganizer.C_CYAN]="TagCyan";
ZmTag.COLOR_ICON[ZmOrganizer.C_GREEN]="TagGreen";
ZmTag.COLOR_ICON[ZmOrganizer.C_PURPLE]="TagPurple";
ZmTag.COLOR_ICON[ZmOrganizer.C_RED]="TagRed";
ZmTag.COLOR_ICON[ZmOrganizer.C_YELLOW]="TagYellow";
ZmTag.ID_ROOT=ZmOrganizer.ID_ROOT;
ZmTag.ID_UNREAD=32;
ZmTag.ID_FLAGGED=33;
ZmTag.ID_FROM_ME=34;
ZmTag.ID_REPLIED=35;
ZmTag.ID_FORWARDED=36;
ZmTag.ID_ATTACHED=37;
ZmTag.createFromJs=function(r,i,h,s,n){
var l;
var e=ZmOrganizer.normalizeId(i.id);
if(e<ZmOrganizer.FIRST_USER_ID[ZmOrganizer.TAG]){
return
}
l=h.getById(i.id);
if(l){
return l
}
var t={
id:i.id,name:i.name,color:ZmTag.checkColor(i.color),rgb:i.rgb,parent:r,tree:h,numUnread:i.u,account:n};
l=new ZmTag(t);
var o=s?ZmOrganizer.getSortIndex(l,ZmTag.sortCompare):null;
r.children.add(l,o);
var a=r.getTagNameMap();
a[i.name]=l;
return l
};
ZmTag.createNotLocalTag=function(a){
var t=ZmTag.notLocalCache=ZmTag.notLocalCache||[];
var e=t[a];
if(e){
return e
}
e=new ZmTag({
notLocal:true,id:"notLocal_"+a,name:a}
);
t[a]=e;
return e
};
ZmTag.sortCompare=function(a,t){
var e=ZmOrganizer.checkSortArgs(a,t);
if(e!=null){
return e
}
if(a.name.toLowerCase()>t.name.toLowerCase()){
return 1
}
if(a.name.toLowerCase()<t.name.toLowerCase()){
return -1
}
return 0
};
ZmTag.checkName=function(e){
var t=ZmOrganizer.checkName(e);
if(t){
return t
}
if(e.indexOf("\\")==0){
return AjxMessageFormat.format(ZmMsg.errorInvalidName,AjxStringUtil.htmlEncode(e))
}
return null
};
ZmTag.checkColor=function(e){
e=Number(e);
return((e!=null)&&(e>=0&&e<=ZmOrganizer.MAX_COLOR))?e:ZmOrganizer.DEFAULT_COLOR[ZmOrganizer.TAG]
};
ZmTag.getIcon=function(e){
var t={
getIcon:ZmTag.prototype.getIcon,getColor:ZmTag.prototype.getColor,color:e};
if(String(e).match(/^#/)){
t.rgb=e;
t.color=null
}
return ZmTag.prototype.getIconWithColor.call(t)
};
ZmTag.create=function(a){
var t={
_jsns:"urn:zimbraMail"};
var i={
CreateTagRequest:t};
t.tag={
name:a.name};
if(a.rgb){
t.tag.rgb=a.rgb
}else{
t.tag.color=ZmOrganizer.checkColor(a.color)||ZmOrganizer.DEFAULT_COLOR[ZmOrganizer.TAG]
}
var e=new AjxCallback(null,ZmTag._handleErrorCreate,a);
appCtxt.getAppController().sendRequest({
jsonObj:i,asyncMode:true,errorCallback:e,accountName:a.accountName}
)
};
ZmTag._handleErrorCreate=function(i,t){
if(t.code==ZmCsfeException.MAIL_INVALID_NAME){
var a=AjxMessageFormat.format(ZmMsg.errorInvalidName,AjxStringUtil.htmlEncode(i.name));
var e=appCtxt.getMsgDialog();
e.setMessage(a,DwtMessageDialog.CRITICAL_STYLE);
e.popup();
return true
}
return false
};
ZmTag.prototype.getIcon=function(){
if(this.notLocal){
return"TagShared"
}
return(this.id==ZmOrganizer.ID_ROOT)?null:"Tag"
};
ZmTag.prototype.getTagNameMap=function(){
if(!this.tagNameMap){
this.tagNameMap={}
}
return this.tagNameMap
};
ZmTag.prototype.createQuery=function(){
return['tag:"',this.name,'"'].join("")
};
ZmTag.prototype.getToolTip=function(){};
ZmTag.prototype.notifyCreate=function(e){
var t=ZmTag.createFromJs(this,e,this.tree,true);
t._notify(ZmEvent.E_CREATE)
};
ZmTag.prototype.notifyModify=function(t){
if(t.name){
var e=this.name;
var a=this.parent.getTagNameMap();
delete a[e];
a[t.name]=this
}
ZmOrganizer.prototype.notifyModify.call(this,t)
};
ZmTag.prototype.notifyDelete=function(){
var e=this.parent.getTagNameMap();
delete e[this.name];
ZmOrganizer.prototype.notifyDelete.call(this)
};
ZmTag.prototype.supportsSharing=function(){
return false
};
ZmTag.prototype.getByNameOrRemote=function(t){
var a=this.getTagNameMap();
var e=a[t];
if(e){
return e
}
return ZmTag.createNotLocalTag(t)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmTree")){
ZmTree=function(e){
if(arguments.length==0){
return
}
ZmModel.call(this,e);
this.type=e;
this.root=null
};
ZmTree.prototype=new ZmModel;
ZmTree.prototype.constructor=ZmTree;
ZmTree.prototype.toString=function(){
return"ZmTree"
};
ZmTree.prototype.asString=function(){
return this.root?this._asString(this.root,""):""
};
ZmTree.prototype.getById=function(e){
return this.root?this.root.getById(e):null
};
ZmTree.prototype.getByName=function(e){
return this.root?this.root.getByName(e):null
};
ZmTree.prototype.getFolderTypeByName=function(t){
var o=t.toLowerCase();
var c=appCtxt.getTree(ZmOrganizer.FOLDER).asList();
var h;
var r;
for(r=0;
r<c.length;
r++){
var d=c[r].name;
if(o==d.toLowerCase()){
return c[r].type
}}
var e=ZmApp.APPS;
for(r=0;
r<e.length;
r++){
var a=appCtxt.getApp(e[r]);
var l=a&&a._deferredFolders;
if(!l){
continue
}
var n;
for(n=0;
n<l.length;
n++){
var s=l[n];
var d=s.obj&&s.obj.name;
if(o==d.toLowerCase()){
return s.type
}}}
h=ZmMsg.folder;
return h
};
ZmTree.prototype.getByType=function(e){
return this.root?this.root.getByType(e):null
};
ZmTree.prototype.size=function(){
return this.root?this.root.size():0
};
ZmTree.prototype.reset=function(){
this.root=null
};
ZmTree.prototype.asList=function(e){
var t=[];
return this.root?this._addToList(this.root,t,e):t
};
ZmTree.prototype.getUnreadHash=function(e){
if(!e){
e={}
}
return this.root?this._getUnreadHash(this.root,e):e
};
ZmTree.prototype._addToList=function(e,r,t){
var s=t&&t.includeRemote;
var h=t&&t.remoteOnly;
var n=e.isRemote();
if((!n&&!h)||(n&&(h||s))){
r.push(e)
}
var o=e.children.getArray();
for(var a=0;
a<o.length;
a++){
this._addToList(o[a],r,t)
}
return r
};
ZmTree.prototype._asString=function(e,o){
if(e.id){
o=o+e.id
}
var a=e.children.clone().getArray();
if(a.length){
a.sort(function(n,i){
return n.id-i.id
}
);
o=o+"[";
for(var t=0;
t<a.length;
t++){
if(a[t].id==ZmFolder.ID_TAGS){
continue
}
if(t>0){
o=o+","
}
o=this._asString(a[t],o)
}
o=o+"]"
}
return o
};
ZmTree.prototype._getUnreadHash=function(e,t){
t[e.id]=e.numUnread;
var o=e.children.getArray();
for(var a=0;
a<o.length;
a++){
this._getUnreadHash(o[a],t)
}
return t
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmTagTree")){
ZmTagTree=function(e){
ZmTree.call(this,ZmOrganizer.TAG);
var t=(e)?([e.id,ZmTag.ID_ROOT].join(":")):ZmTag.ID_ROOT;
this.root=new ZmTag({
id:t,tree:this}
)
};
ZmTagTree.prototype=new ZmTree;
ZmTagTree.prototype.constructor=ZmTagTree;
ZmTagTree.COLOR_LIST=[ZmOrganizer.C_BLUE,ZmOrganizer.C_CYAN,ZmOrganizer.C_GREEN,ZmOrganizer.C_PURPLE,ZmOrganizer.C_RED,ZmOrganizer.C_YELLOW,ZmOrganizer.C_PINK,ZmOrganizer.C_GRAY,ZmOrganizer.C_ORANGE];
ZmTagTree.prototype.toString=function(){
return"ZmTagTree"
};
ZmTagTree.prototype.loadFromJs=function(a,o,n){
if(!a||!a.tag||!a.tag.length){
return
}
for(var t=0;
t<a.tag.length;
t++){
ZmTag.createFromJs(this.root,a.tag[t],this,null,n)
}
var e=this.root.children.getArray();
if(e.length){
e.sort(ZmTag.sortCompare)
}};
ZmTagTree.prototype.getByIndex=function(e){
var t=this.asList();
if(t&&t.length&&(e<t.length)){
return t[e]
}};
ZmTagTree.prototype.reset=function(){
this.root=new ZmTag({
id:ZmTag.ID_ROOT,tree:this}
)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmFolderTree")){
ZmFolderTree=function(e){
ZmTree.call(this,e)
};
ZmFolderTree.prototype=new ZmTree;
ZmFolderTree.prototype.constructor=ZmFolderTree;
ZmFolderTree.IS_PARSED={};
ZmFolderTree.prototype.toString=function(){
return"ZmFolderTree"
};
ZmFolderTree.prototype.loadFromJs=function(a,e,t){
this.root=(e=="zimlet")?ZmZimlet.createFromJs(null,a,this):ZmFolderTree.createFromJs(null,a,this,e,null,t)
};
ZmFolderTree.createFromJs=function(h,d,m,p,f,e){
if(!(d&&d.id)){
return
}
var s;
if(p=="search"){
var l;
var b=d.id.split(":");
if(!b||(b.length<=1)){
if(d.types){
var u=d.types.split(",");
l=[];
var c=appCtxt.get(ZmSetting.MAIL_ENABLED);
for(var y=0;
y<u.length;
y++){
var o=ZmSearch.TYPE_MAP[u[y]];
if(!o||(!c&&(o==ZmItem.CONV||o==ZmItem.MSG))){
continue
}
l.push(o)
}
if(l.length==0){
return null
}}
var w={
id:d.id,name:d.name,parent:h,tree:m,numUnread:d.u,query:d.query,types:l,sortBy:d.sortBy,account:e,color:d.color,rgb:d.rgb};
s=new ZmSearchFolder(w);
ZmFolderTree._fillInFolder(s,d,f);
ZmFolderTree._traverse(s,d,m,(f||[]),p,e)
}}else{
var o=d.view?(ZmOrganizer.TYPE[d.view]):(h?h.type:ZmOrganizer.FOLDER);
if(!o){
return
}
var g=(d.acl&&d.acl.grant&&d.acl.grant.length>0);
if(appCtxt.inStartup&&ZmOrganizer.DEFERRABLE[o]&&!appCtxt.isOffline){
var r=appCtxt.getApp(ZmOrganizer.APP[o]);
var n={
type:o,parent:h,obj:d,tree:m,path:f,elementType:p,account:e};
r.addDeferredFolder(n)
}else{
var a=ZmOrganizer.ORG_PACKAGE[o];
if(a){
AjxDispatcher.require(a)
}
s=ZmFolderTree.createFolder(o,h,d,m,f,p,e);
if(appCtxt.isExternalAccount()&&s.isSystem()&&s.id!=ZmOrganizer.ID_ROOT){
return
}
ZmFolderTree._traverse(s,d,m,(f||[]),p,e)
}}
return s
};
ZmFolderTree.createAllDeferredFolders=function(){
var e=appCtxt.getAppController();
for(var t in ZmApp.ORGANIZER){
var a=e.getApp(t);
a.createDeferred()
}};
ZmFolderTree._traverse=function(e,n,m,u,l,h){
var a=(e.nId==ZmOrganizer.ID_ROOT);
if(n.folder&&n.folder.length){
if(!a){
u.push(n.name)
}
for(var s=0;
s<n.folder.length;
s++){
var r=n.folder[s];
var o=ZmFolderTree.createFromJs(e,r,m,(l||"folder"),u,h);
if(e&&o){
e.children.add(o)
}}
if(!a){
u.pop()
}}
if(n.search&&n.search.length){
if(!a){
u.push(n.name)
}
for(var s=0;
s<n.search.length;
s++){
var d=n.search[s];
var t=ZmFolderTree.createFromJs(e,d,m,"search",u,h);
if(t){
e.children.add(t)
}}
if(!a){
u.pop()
}}
if(n.link&&n.link.length){
for(var s=0;
s<n.link.length;
s++){
var c=n.link[s];
var o=ZmFolderTree.createFromJs(e,c,m,"link",u,h);
if(o){
e.children.add(o)
}}}};
ZmFolderTree.createFolder=function(type,parent,obj,tree,path,elementType,account){
var orgClass=eval(ZmOrganizer.ORG_CLASS[type]);
if(!orgClass){
return null
}
var params={
id:obj.id,name:obj.name,parent:parent,tree:tree,color:obj.color,rgb:obj.rgb,owner:obj.owner,oname:obj.oname,zid:obj.zid,rid:obj.rid,restUrl:obj.rest,url:obj.url,numUnread:obj.u,numTotal:obj.n,sizeTotal:obj.s,perm:obj.perm,link:elementType=="link",broken:obj.broken,account:account,webOfflineSyncDays:obj.webOfflineSyncDays,retentionPolicy:obj.retentionPolicy};
var folder=new orgClass(params);
ZmFolderTree._fillInFolder(folder,obj,path);
ZmFolderTree.IS_PARSED[type]=true;
return folder
};
ZmFolderTree._fillInFolder=function(e,a,t){
if(t&&t.length){
e.path=t.join("/")
}
if(a.f&&e._parseFlags){
e._parseFlags(a.f)
}
e._setSharesFromJs(a)
};
ZmFolderTree.prototype.getByType=function(e){
return this.root?this.root.getByType(e):null
};
ZmFolderTree.prototype.getByPath=function(t,e){
return this.root?this.root.getByPath(t,e):null
};
ZmFolderTree.prototype.handleNoSuchFolderError=function(e,r,l){
var h=this.getByType(e);
var a;
var s=false;
if(h){
for(var n=0;
n<h.length;
n++){
if((h[n].zid==r)&&(h[n].rid==l)){
h[n].noSuchFolder=true;
if(!a){
var o=appCtxt.getAppController().getOverviewId();
a=appCtxt.getOverviewController().getTreeView(o,e)
}
var t=a.getTreeItemById(h[n].id);
t.setText(h[n].getName(true));
this.handleDeleteNoSuchFolder(h[n]);
s=true
}}}
return s
};
ZmFolderTree.prototype.handleDeleteNoSuchFolder=function(e){
var t=appCtxt.getYesNoMsgDialog();
t.reset();
t.registerCallback(DwtDialog.YES_BUTTON,this._deleteOrganizerYesCallback,this,[e,t]);
t.registerCallback(DwtDialog.NO_BUTTON,appCtxt.getAppController()._clearDialog,this,t);
var a=AjxMessageFormat.format(ZmMsg.confirmDeleteMissingFolder,AjxStringUtil.htmlEncode(e.getName(false,0,true)));
t.setMessage(a,DwtMessageDialog.WARNING_STYLE);
t.popup()
};
ZmFolderTree.prototype._deleteOrganizerYesCallback=function(e,t){
e._delete();
appCtxt.getAppController()._clearDialog(t)
};
ZmFolderTree.prototype.getPermissions=function(s){
var o=s.folderIds||this._getItemsWithoutPerms(s.type);
if(o.length>0){
var i=AjxSoapDoc.create("BatchRequest","urn:zimbra");
i.setMethodAttribute("onerror","continue");
var n=i.getDoc();
for(var a=0;
a<o.length;
a++){
var t=i.set("GetFolderRequest",null,null,"urn:zimbraMail");
var e=n.createElement("folder");
e.setAttribute("l",o[a]);
t.appendChild(e)
}
var r=new AjxCallback(this,this._handleResponseGetShares,[s.callback,s.skipNotify]);
appCtxt.getRequestMgr().sendRequest({
soapDoc:i,asyncMode:true,callback:r,noBusyOverlay:s.noBusyOverlay,accountName:s.accountName}
)
}else{
if(s.callback){
s.callback.run()
}}};
ZmFolderTree.prototype._getItemsWithoutPerms=function(n){
var s=[];
var o=n?[n]:[ZmOrganizer.FOLDER,ZmOrganizer.CALENDAR,ZmOrganizer.TASKS,ZmOrganizer.BRIEFCASE,ZmOrganizer.ADDRBOOK];
for(var t=0;
t<o.length;
t++){
var r=o[t];
if(!ZmFolderTree.IS_PARSED[r]){
continue
}
var e=this.getByType(r);
for(var a=0;
a<e.length;
a++){
if(e[a].link&&e[a].shares==null){
s.push(e[a].id)
}}}
return s
};
ZmFolderTree.prototype._handleResponseGetShares=function(h,o,c){
var l=c.getResponse().BatchResponse;
this._handleErrorGetShares(l);
var e=l.GetFolderResponse;
if(e){
for(var a=0;
a<e.length;
a++){
var n=e[a].link?e[a].link[0]:null;
if(n){
var s=appCtxt.getById(n.id);
if(s){
s.perm=n.perm;
if(n.n){
s.numTotal=n.n
}
if(n.u){
s.numUnread=n.u
}
s._setSharesFromJs(n)
}
if(n.folder&&n.folder.length>0){
var r=appCtxt.getById(n.id);
if(r){
for(var t=0;
t<n.folder.length;
t++){
if(appCtxt.getById(n.folder[t].id)){
continue
}
r.notifyCreate(n.folder[t],"link",o)
}}}}}}
if(h){
h.run()
}};
ZmFolderTree.prototype._handleErrorGetShares=function(l){
var n=l.Fault;
if(n){
var a=[];
var t=[];
for(var o=0,e=n.length;
o<e;
o++){
var r=ZmCsfeCommand.faultToEx(n[o]);
if(r.code==ZmCsfeException.MAIL_NO_SUCH_FOLDER){
var h=r.data.itemId[0];
var s=h.lastIndexOf(":");
t.push(h.substring(0,s));
a.push(h.substring(s+1,h.length))
}}
if(t.length){
this._markNoSuchFolder(t,a)
}}};
ZmFolderTree.prototype._markNoSuchFolder=function(t,n){
var s=appCtxt.getFolderTree();
var e=s&&s.root?s.root.children.getArray():null;
for(var o=0;
o<e.length;
o++){
for(var a=0;
a<n.length;
a++){
if((e[o].zid==t[a])&&(e[o].rid==n[a])){
e[o].noSuchFolder=true
}}}};
ZmFolderTree.prototype._sortFolder=function(a){
var t=a.children;
if(t&&t.length){
t.sort(ZmFolder.sortCompare);
for(var e=0;
e<t.length;
e++){
this._sortFolder(t[e])
}}}
}
if(AjxPackage.define("zimbraMail.share.model.ZmList")){
ZmList=function(t,e){
if(arguments.length==0){
return
}
ZmModel.call(this,t);
this.type=t;
this.search=e;
this._vector=new AjxVector();
this._hasMore=false;
this._idHash={};
var a=appCtxt.getTagTree();
if(a){
this._tagChangeListener=new AjxListener(this,this._tagTreeChangeListener);
a.addChangeListener(this._tagChangeListener)
}
this.id="LIST"+ZmList.NEXT++;
appCtxt.cacheSet(this.id,this)
};
ZmList.prototype=new ZmModel;
ZmList.prototype.constructor=ZmList;
ZmList.prototype.isZmList=true;
ZmList.prototype.toString=function(){
return"ZmList"
};
ZmList.NEXT=1;
ZmList.ITEM_CLASS={};
ZmList.NODE={};
ZmList.ITEM_TYPE={};
ZmList.CHUNK_SIZE=100;
ZmList.CHUNK_PAUSE=500;
ZmList.prototype.get=function(e){
return this._vector.get(e)
};
ZmList.prototype.add=function(t,e){
this._vector.add(t,e);
if(t.id){
this._idHash[t.id]=t
}};
ZmList.prototype.remove=function(e){
this._vector.remove(e);
if(e.id){
delete this._idHash[e.id]
}};
ZmList.prototype.create=function(args){
var item;
var obj=eval(ZmList.ITEM_CLASS[this.type]);
if(obj){
item=new obj(this);
item.create(args)
}
return item
};
ZmList.prototype.size=function(){
return this._vector.size()
};
ZmList.prototype.indexOf=function(e){
return this._vector.indexOf(e)
};
ZmList.prototype.hasMore=function(){
return this._hasMore
};
ZmList.prototype.setHasMore=function(e){
this._hasMore=e
};
ZmList.prototype.getArray=function(){
return this._vector.getArray()
};
ZmList.prototype.getVector=function(){
return this._vector
};
ZmList.prototype.getById=function(e){
return this._idHash[e]
};
ZmList.prototype.clear=function(){
var e=this.getArray();
for(var t=0;
t<e.length;
t++){
e[t].clear()
}
this._evtMgr.removeAll(ZmEvent.L_MODIFY);
this._vector.removeAll();
for(var o in this._idHash){
this._idHash[o]=null
}
this._idHash={}
};
ZmList.prototype.set=function(respNode){
this.clear();
var nodes=respNode.childNodes;
var args={
list:this};
for(var i=0;
i<nodes.length;
i++){
var node=nodes[i];
if(node.nodeName==ZmList.NODE[this.type]){
if(parseInt(node.getAttribute("l"))==ZmFolder.ID_TRASH&&(this.type!=ZmItem.CONTACT)){
continue
}
var obj=eval(ZmList.ITEM_CLASS[this.type]);
if(obj){
this.add(obj.createFromDom(node,args))
}}}};
ZmList.prototype.addFromDom=function(node,args){
args=args||{};
args.list=this;
var obj=eval(ZmList.ITEM_CLASS[this.type]);
if(obj){
this.add(obj.createFromDom(node,args))
}};
ZmList.prototype.getSubList=function(i,a){
var o=null;
var t=(i+a>this.size())?this.size():i+a;
var e=this.getArray();
if(i<t){
o=AjxVector.fromArray(e.slice(i,t))
}
return o
};
ZmList.prototype.cache=function(n,t){
this.getVector().merge(n,t);
var o=t.getArray();
for(var e=0;
e<o.length;
e++){
var a=o[e];
a.list=this;
if(a.id){
this._idHash[a.id]=a
}}};
ZmList.prototype.flagItems=function(a){
a=Dwt.getParams(arguments,["items","op","value","callback"]);
a.items=AjxUtil.toArray(a.items);
if(a.op=="update"){
a.action=a.op;
a.attrs={
f:a.value}
}else{
a.action=a.value?a.op:"!"+a.op
}
if(appCtxt.multiAccounts){
var t=this.search.folderId;
var e=t&&appCtxt.getById(t);
if(e&&e.isRemote()){
a.accountName=a.items[0].getAccount().name
}}
this._itemAction(a)
};
ZmList.prototype.tagItems=function(s){
s=Dwt.getParams(arguments,["items","tagId","doTag"]);
var o=s.tagName||(s.tag&&s.tag.name);
var t=AjxUtil.toArray(s.items);
var e=[],r=s.doTag;
if(t[0]&&t[0] instanceof ZmItem){
for(var a=0;
a<t.length;
a++){
var n=t[a];
if((r&&(!n.hasTag(o)||n.type==ZmItem.CONV))||(!r&&n.hasTag(o))){
e.push(n)
}}}else{
e=t
}
s.items=e;
s.attrs={
tn:o};
s.action=r?"tag":"!tag";
s.actionTextKey=r?"actionTag":"actionUntag";
s.actionArg=s.tag&&s.tag.name;
this._itemAction(s)
};
ZmList.prototype.removeAllTags=function(n){
n=(n&&n.items)?n:{
items:n};
var t=AjxUtil.toArray(n.items);
var e=[];
if(t[0]&&t[0] instanceof ZmItem){
for(var a=0;
a<t.length;
a++){
var o=t[a];
if(o.tags&&o.tags.length){
e.push(o)
}}}else{
e=t
}
n.items=e;
n.action="update";
n.attrs={
t:""};
n.actionTextKey="actionRemoveTags";
this._itemAction(n)
};
ZmList.prototype.moveItems=function(o){
o=Dwt.getParams(arguments,["items","folder","attrs","callback","errorCallback","finalCallback","noUndo"]);
var a=AjxUtil.hashCopy(o);
a.items=AjxUtil.toArray(o.items);
a.attrs=o.attrs||{};
a.childWin=o.childWin;
a.closeChildWin=o.closeChildWin;
if(a.folder.id==ZmFolder.ID_TRASH){
a.actionTextKey="actionTrash";
a.action="trash"
}else{
a.actionTextKey="actionMove";
a.actionArg=o.folder.getName(false,false,true);
a.action="move";
a.attrs.l=o.folder.id
}
a.callback=new AjxCallback(this,this._handleResponseMoveItems,[o]);
if(o.noToast){
a.actionTextKey=null
}
if(appCtxt.multiAccounts){
var t=o.items[0].getFolderId&&o.items[0].getFolderId();
if(!t){
var i=o.items[0]&&o.items[0].id;
t=i&&appCtxt.getById(i)&&appCtxt.getById(i).folderId
}
var e=appCtxt.getById(t);
if((o.items[0].isDraft&&o.folder.id==ZmFolder.ID_DRAFTS)||(o.folder.isRemote())||(e&&e.isRemote())){
a.accountName=o.items[0].getAccount().name
}}
a.errorCallback=o.errorCallback;
if(this._handleDeleteFromSharedFolder(o,a)){
return
}
this._itemAction(a)
};
ZmList.prototype._handleDeleteFromSharedFolder=function(e,r){
if(e.folder&&e.folder.id==ZmFolder.ID_TRASH){
var n;
var t=[];
for(var a=0;
a<e.items.length;
a++){
var l=e.items[a];
var o=l.id.indexOf(":");
if(o!=-1){
var h=l.id.substring(0,o);
if(!appCtxt.accountList.getAccount(h)){
n=appCtxt.getById(l.folderId);
if(n&&!n.isReadOnly()){
t.push(l)
}}}}
if(t.length){
var s={
items:t,folder:e.folder,finalCallback:this._itemAction.bind(this,r,null),actionTextKey:null};
this.copyItems(s);
return true
}}};
ZmList.prototype._handleResponseMoveItems=function(s,e){
var r=e.getResponse();
if(r&&r.length&&(r[0] instanceof ZmItem)){
this.moveLocal(r,s.folder.id);
for(var a=0;
a<r.length;
a++){
var o=r[a];
var t={
oldFolderId:o.folderId};
o.moveLocal(s.folder.id)
}
var o=r[0];
var n=o.list;
if(n){
n._evt.batchMode=true;
n._evt.item=o;
n._evt.items=r;
n._notify(ZmEvent.E_MOVE,t)
}}
if(s.callback){
s.callback.run(e)
}};
ZmList.prototype.copyItems=function(e){
e=Dwt.getParams(arguments,["items","folder","attrs","actionTextKey"]);
e.items=AjxUtil.toArray(e.items);
e.attrs=e.attrs||{};
if(!appCtxt.isExternalAccount()){
e.attrs.l=e.folder.id;
e.action="copy";
e.actionTextKey="itemCopied"
}else{
e.action="trash"
}
e.actionArg=e.folder.getName(false,false,true);
e.callback=new AjxCallback(this,this._handleResponseCopyItems,e);
if(appCtxt.multiAccounts&&e.folder.isRemote()){
e.accountName=e.items[0].getAccount().name
}
this._itemAction(e)
};
ZmList.prototype._handleResponseCopyItems=function(i,e){
var a=e.getResponse();
if(a.length>0){
if(i.actionTextKey){
var t=AjxMessageFormat.format(ZmMsg[i.actionTextKey],a.length);
appCtxt.getAppController().setStatusMsg(t)
}}};
ZmList.prototype.deleteItems=function(o){
o=Dwt.getParams(arguments,["items","hardDelete","attrs","childWin"]);
var h=o.items=AjxUtil.toArray(o.items);
var r=[];
var n=[];
if(o.hardDelete){
n=h
}else{
if(h[0]&&h[0] instanceof ZmItem){
for(var s=0;
s<h.length;
s++){
var c=h[s];
var t=c.getFolderId();
var e=appCtxt.getById(t);
if(e&&e.isHardDelete()){
n.push(c)
}else{
r.push(c)
}}}else{
r=h
}}
if(n.length&&!o.confirmDelete){
o.confirmDelete=true;
var l=ZmList.prototype.deleteItems.bind(this,o);
this._popupDeleteWarningDialog(l,r.length,n.length);
return
}
o.callback=o.childWin&&new AjxCallback(this._handleDeleteNewWindowResponse,o.childWin);
if(r.length){
if(appCtxt.multiAccounts){
var a=this._filterItemsByAccount(r);
if(!o.callback){
o.callback=new AjxCallback(this,this._deleteAccountItems,[a,o])
}
this._deleteAccountItems(a,o)
}else{
o.items=r;
o.folder=appCtxt.getById(ZmFolder.ID_TRASH);
this.moveItems(o)
}}
if(n.length){
o.items=n;
o.action="delete";
o.actionTextKey="actionDelete";
this._itemAction(o)
}};
ZmList.prototype._popupDeleteWarningDialog=function(i,t,a){
var e=appCtxt.getOkCancelMsgDialog();
e.reset();
e.setMessage(AjxMessageFormat.format(ZmMsg[t?"confirmDeleteSomeForever":"confirmDeleteForever"],[a]),DwtMessageDialog.WARNING_STYLE);
e.registerCallback(DwtDialog.OK_BUTTON,this._deleteWarningDialogListener.bind(this,i,e));
e.associateEnterWithButton(DwtDialog.OK_BUTTON);
e.popup(null,DwtDialog.OK_BUTTON)
};
ZmList.prototype._deleteWarningDialogListener=function(t,e){
e.popdown();
t()
};
ZmList.prototype._deleteAccountItems=function(o,n){
var e;
for(var t in o){
e=o[t];
break
}
if(e){
delete o[t];
var a=window.parentAppCtxt||window.appCtxt;
n.accountName=a.accountList.getAccount(t).name;
n.items=e;
n.folder=appCtxt.getById(ZmFolder.ID_TRASH);
this.moveItems(n)
}};
ZmList.prototype._filterItemsByAccount=function(e){
var n={};
if(e[0]&&e[0] instanceof ZmItem){
for(var a=0;
a<e.length;
a++){
var o=e[a];
var t=o.getAccount().id;
if(!n[t]){
n[t]=[]
}
n[t].push(o)
}}else{
var s=appCtxt.accountList.mainAccount.id;
n[s]=e
}
return n
};
ZmList.prototype._handleDeleteNewWindowResponse=function(t,e){
if(t){
t.close()
}};
ZmList.prototype.modifyItem=function(t,e,a){
t.modify(e,a)
};
ZmList.prototype.notifyCreate=function(node){
var obj=eval(ZmList.ITEM_CLASS[this.type]);
if(obj){
var item=obj.createFromDom(node,{
list:this}
);
this.add(item,this._sortIndex(item));
this.createLocal(item);
this._notify(ZmEvent.E_CREATE,{
items:[item]}
)
}};
ZmList.prototype.modifyLocal=function(e,t){};
ZmList.prototype.createLocal=function(e){};
ZmList.prototype.flagLocal=function(t,e,a){};
ZmList.prototype.tagLocal=function(t,e,a){};
ZmList.prototype.removeAllTagsLocal=function(e){};
ZmList.prototype.deleteLocal=function(e){
for(var t=0;
t<e.length;
t++){
this.remove(e[t])
}};
ZmList.prototype.moveLocal=function(t,e){
for(var a=0;
a<t.length;
a++){
this.remove(t[a])
}};
ZmList.prototype._itemAction=function(g,h){
var r=this._getIds(g.items);
var p=r.hash;
var c=r.list;
if(!(c&&c.length)){
if(g.callback){
g.callback.run(new ZmCsfeResult([]))
}
if(g.finalCallback){
g.finalCallback(g)
}
return
}
var a;
if(g.items.length==1&&g.items[0]&&g.items[0].type){
a=g.items[0].type
}else{
a=this.type
}
if(!a){
return
}
if(!g.accountName&&appCtxt.multiAccounts){
g.accountName=appCtxt.accountList.mainAccount.name
}
var m=ZmItem.SOAP_CMD[a]+"Request";
var b=h?h._useJson:true;
var i,u;
if(b){
i={};
var t=this._getActionNamespace();
i[m]={
_jsns:t};
var u=i[m].action={};
u.op=g.action;
for(var d in g.attrs){
u[d]=g.attrs[d]
}}else{
i=AjxSoapDoc.create(m,this._getActionNamespace());
u=i.set("action");
u.setAttribute("op",g.action);
for(var d in g.attrs){
u.setAttribute(d,g.attrs[d])
}}
var y=window.parentAppCtxt||appCtxt;
var s=y.getActionController();
var n=!g.noUndo&&(this.type!=ZmItem.CONV||this.search&&this.search.folderId);
var l=(n&&s&&s.actionPerformed({
op:g.action,ids:c,attrs:g.attrs}
))||null;
var e=new AjxCallback(this,this._handleResponseItemAction,[g.callback,l]);
var f={
ids:c,idHash:p,accountName:g.accountName,request:i,action:u,type:a,callback:e,finalCallback:g.finalCallback,errorCallback:g.errorCallback,batchCmd:h,numItems:g.count||0,actionTextKey:g.actionTextKey,actionArg:g.actionArg,actionLogItem:l,childWin:g.childWin,closeChildWin:g.closeChildWin,safeMove:g.safeMove};
if(c.length>=ZmList.CHUNK_SIZE){
var o={
state:ZmListController.PROGRESS_DIALOG_INIT,callback:new AjxCallback(this,this._cancelAction,[f])};
ZmListController.handleProgress(o)
}
this._doAction(f)
};
ZmList.prototype._handleResponseItemAction=function(i,a,t,e){
if(a){
a.setComplete()
}
if(i){
e.set(t);
i.run(e)
}};
ZmList.prototype._doAction=function(i){
var n=i.ids.splice(0,ZmList.CHUNK_SIZE);
var o=n.join(",");
var t=true;
if(i.action.setAttribute){
i.action.setAttribute("id",o);
t=false
}else{
i.action.id=o
}
var s=Boolean(i.ids.length&&!i.cancelled);
var h=new AjxCallback(this,this._handleResponseDoAction,[i]);
var a=this.controller&&this.controller.isOutboxFolder();
var e=this._handleOfflineResponseDoAction.bind(this,i,a);
if(i.batchCmd){
i.batchCmd.addRequestParams(i.request,h,i.errorCallback)
}else{
var r={
asyncMode:true,callback:h,errorCallback:i.errorCallback,offlineCallback:e,accountName:i.accountName,more:s};
if(t){
r.jsonObj=i.request
}else{
r.soapDoc=i.request
}
if(i.safeMove){
r.useChangeToken=true
}
if(a){
r.offlineRequest=true
}
i.reqId=appCtxt.getAppController().sendRequest(r)
}};
ZmList.prototype._handleResponseDoAction=function(t,c){
var s;
var o=c.getResponse();
var a=o[ZmItem.SOAP_CMD[t.type]+"Response"];
if(a&&a.action){
var e=a.action.id.split(",");
if(e){
var r=[];
for(var n=0;
n<e.length;
n++){
var l=t.idHash[e[n]];
if(l){
r.push(l)
}}
t.numItems+=r.length;
if(t.callback){
t.callback.run(r,c)
}
if(t.actionTextKey){
s=ZmList.getActionSummary(t);
var h={
state:ZmListController.PROGRESS_DIALOG_UPDATE,summary:s};
ZmListController.handleProgress(h)
}}}
if(t.ids.length&&!t.cancelled){
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._doAction,[t]),ZmItem.CHUNK_PAUSE)
}else{
t.reqId=null;
t.actionSummary=s;
if(t.finalCallback){
t.finalCallback(t)
}else{
ZmListController.handleProgress({
state:ZmListController.PROGRESS_DIALOG_CLOSE}
);
ZmBaseController.showSummary(t.actionSummary,t.actionLogItem,t.closeChildWin)
}}};
ZmList.prototype._handleOfflineResponseDoAction=function(n,i,a){
var t=n.action,s=this._handleOfflineResponseDoActionCallback.bind(this,n,i,a.callback);
if(i&&t.op==="trash"){
var e={
methodName:"SendMsgRequest",id:t.id.split(",")};
ZmOfflineDB.deleteItemInRequestQueue(e,s)
}else{
var o=a.jsonObj;
o.methodName=ZmItem.SOAP_CMD[n.type]+"Request";
o.id=t.id;
ZmOfflineDB.setItem(o,ZmOffline.REQUESTQUEUE,s)
}};
ZmList.prototype._handleOfflineResponseDoActionCallback=function(o,i,r){
var a={}
,s=this._generateOfflineHeader(o),e,n,t;
a[ZmItem.SOAP_CMD[o.type]+"Response"]=o.request[ZmItem.SOAP_CMD[o.type]+"Request"];
e=new ZmCsfeResult(a,false,s);
n=e.getHeader();
if(r){
r.run(e)
}
if(n){
t=n.context.notify[0];
if(t){
appCtxt._requestMgr._notifyHandler(t);
this._updateOfflineData(o,i,t)
}}};
ZmList.prototype._generateOfflineHeader=function(v){
var p=v.action,s=p.op,f=p.id.split(","),d=f.length,l,a,o,e,n,k,t,h,b,u=[],w=[],r=[],y;
for(var g=0;
g<d;
g++){
l=f[g];
a=this.getById(l);
o=a.flags||"";
e=a.getFolderId();
n=appCtxt.getById(e);
t={
id:l};
h={
id:"-"+t.id};
b={
id:e};
switch(s){
case"flag":t.f=o+"f";
break;
case"!flag":t.f=o.replace("f","");
break;
case"read":t.f=o.replace("u","");
b.u=n.numUnread-1;
break;
case"!read":t.f=o+"u";
b.u=n.numUnread+1;
break;
case"trash":t.l=ZmFolder.ID_TRASH;
break;
case"spam":t.l=ZmFolder.ID_SPAM;
break;
case"!spam":t.l=ZmFolder.ID_INBOX;
break;
case"move":if(p.l){
t.l=p.l
}
b.n=n.numTotal-1;
if(a.isUnread&&n.numUnread>1){
b.u=n.numUnread-1
}
k=appCtxt.getById(t.l);
r.push({
id:k.id,n:k.numTotal+1,u:(a.isUnread?k.numUnread+1:k.numUnread)}
);
break;
case"tag":a.tags.push(p.tn);
t.tn=a.tags.join();
break;
case"!tag":AjxUtil.arrayRemove(a.tags,p.tn);
t.tn=a.tags.join();
break;
case"update":if(p.t===""){
t.tn="";
t.t=""
}
break
}
u.push(t);
w.push(h);
r.push(b)
}
y={
context:{
notify:[{
modified:{
m:u,c:w,folder:r}}
]}};
return y
};
ZmList.prototype._updateOfflineData=function(o,i,a){
var t=a.modified;
if(!t){
return
}
var e=t.m;
if(!e){
return
}
var n=this._updateOfflineDataCallback.bind(this,o,e);
ZmOfflineDB.getItem(o.action.id.split(","),ZmApp.MAIL,n)
};
ZmList.prototype._updateOfflineDataCallback=function(i,t,e){
e=ZmOffline.recreateMsg(e);
var a=[];
e.forEach(function(o){
t.forEach(function(n){
if(n.id===o.id){
a.push($.extend(o,n))
}}
)
}
);
ZmOfflineDB.setItem(a,ZmApp.MAIL)
};
ZmList.getActionSummary=function(t){
var r=t.type,h=ZmItem.MSG_KEY[r],n=ZmMsg[h],s=AjxStringUtil.capitalizeFirstLetter(h),a="type"+s,o=t.numItems,i=t.actionTextKey+s,l=ZmMsg[i]||ZmMsg[t.actionTextKey],e=ZmMsg[a],d=AjxStringUtil.htmlEncode(t.actionArg),u=e?AjxMessageFormat.format(e,o):n,c=e?AjxMessageFormat.format(ZmMsg[a],1):n;
return AjxMessageFormat.format(l,[o,u,d,c])
};
ZmList.prototype._cancelAction=function(e){
e.cancelled=true;
if(e.reqId){
appCtxt.getRequestMgr().cancelRequest(e.reqId)
}
if(e.finalCallback){
e.finalCallback(e)
}
ZmListController.handleProgress({
state:ZmListController.PROGRESS_DIALOG_CLOSE}
)
};
ZmList.prototype._getTypedItems=function(t){
var e={};
for(var a=0;
a<t.length;
a++){
var o=t[a].type;
if(!e[o]){
e[o]=[]
}
e[o].push(t[a])
}
return e
};
ZmList.prototype._getIds=function(n){
var o={};
if(n instanceof ZmItem){
n=[n]
}
var t=[];
if((n&&n.length)){
for(var e=0;
e<n.length;
e++){
var a=n[e];
var s=a.id;
if(s){
t.push(s);
o[s]=a
}}}
return{
hash:o,list:t}
};
ZmList.prototype._sortIndex=function(e){
return 0
};
ZmList.prototype._redoSearch=function(e){
var t=appCtxt.getSearchController();
t.redoSearch(e._currentSearch)
};
ZmList.prototype._getActionNamespace=function(){
return"urn:zimbraMail"
};
ZmList.prototype._folderTreeChangeListener=function(n){
if(n.type!=ZmEvent.S_FOLDER){
return
}
var o=n.getDetail("organizers")[0];
var i=n.getDetail("fields");
var a=appCtxt.getCurrentController();
var t=(appCtxt.getCurrentList()==this);
if(n.event==ZmEvent.E_DELETE&&(n.source instanceof ZmFolder)&&n.source.id==ZmFolder.ID_TRASH){
var e=a.getListView&&a.getListView();
if(e){
e.offset=0
}
a._resetNavToolBarButtons(view)
}else{
if(t&&a&&a._currentSearch&&(n.event==ZmEvent.E_MOVE||(n.event==ZmEvent.E_MODIFY)&&i&&i[ZmOrganizer.F_NAME])){
if(a._currentSearch.replaceFolderTerm(n.getDetail("oldPath"),o.getPath())){
appCtxt.getSearchController().setSearchField(a._currentSearch.query)
}}}};
ZmList.prototype._tagTreeChangeListener=function(d){
if(d.type!=ZmEvent.S_TAG){
return
}
var y=d.getDetail("organizers")[0];
var r=d.getDetail("fields");
var f=appCtxt.getCurrentController();
if(!f){
return
}
var u=this.getArray();
if((d.event==ZmEvent.E_MODIFY)&&r&&r[ZmOrganizer.F_NAME]){
var t=d.getDetail("oldName");
if(f._currentSearch&&f._currentSearch.hasTagTerm(t)){
f._currentSearch.replaceTagTerm(t,y.getName());
appCtxt.getSearchController().setSearchField(f._currentSearch.query)
}
var l=y.name;
for(var s=0;
s<u.length;
s++){
var p=u[s];
if(!p||!p.isZmItem||!p.hasTag(t)){
continue
}
if(p.isShared()){
continue
}
var h=p.tagHash;
var g=p.tags;
delete h[t];
h[l]=true;
for(var o=0;
o<g.length;
o++){
if(g[o]==t){
g[o]=l;
break
}}}}else{
if(d.event==ZmEvent.E_DELETE){
var e=this._evtMgr.isListenerRegistered(ZmEvent.L_MODIFY);
for(var s=0;
s<u.length;
s++){
var p=this.getById(u[s].id);
if(p){
if(p.isShared()){
continue
}
if(p.hasTag(y.name)){
p.tagLocal(y.name,false);
if(e){
this._notify(ZmEvent.E_TAGS,{
items:[p]}
)
}}}}
if(f._currentSearch&&f._currentSearch.hasTagTerm(y.getName())){
var m=appCtxt.getCurrentViewId();
var n=appCtxt.getCurrentViewType();
f.enablePagination(false,m);
var c=f.getListView&&f.getListView();
if(c&&c.sortingEnabled){
c.sortingEnabled=false
}
if(n==ZmId.VIEW_CONVLIST){
f._currentSearch.query="is:read is:unread"
}
f._currentSearch.tagId=null;
appCtxt.getSearchController().setSearchField("")
}}}}
}
if(AjxPackage.define("zimbraMail.share.model.ZmAccountList")){
ZmAccountList=function(){
this._accounts={};
this._count=0;
this.visibleAccounts=[];
this.mainAccount=null;
this.activeAccount=null;
this.defaultAccount=null;
this._evtMgr=new AjxEventMgr()
};
ZmAccountList.prototype.constructor=ZmAccountList;
ZmAccountList.DEFAULT_ID="main";
ZmAccountList.prototype.toString=function(){
return"ZmAccountList"
};
ZmAccountList.prototype.size=function(e){
return(e)?this._count:this.visibleAccounts.length
};
ZmAccountList.prototype.add=function(e){
this._accounts[e.id]=e;
this._count++;
if(e.visible||e.id==ZmAccountList.DEFAULT_ID){
this.visibleAccounts.push(e)
}
if(e.id==ZmAccountList.DEFAULT_ID){
this.mainAccount=e
}};
ZmAccountList.prototype.getAccounts=function(){
return this._accounts
};
ZmAccountList.prototype.getAccount=function(e){
return e?this._accounts[e]:this.mainAccount
};
ZmAccountList.prototype.getAccountByName=function(e){
for(var t in this._accounts){
if(this._accounts[t].name==e){
return this._accounts[t]
}}
return null
};
ZmAccountList.prototype.getAccountByEmail=function(e){
for(var t in this._accounts){
if(this._accounts[t].getEmail()==e){
return this._accounts[t]
}}
return null
};
ZmAccountList.prototype.getItemCount=function(e,n){
var o=0;
for(var t=0;
t<this.visibleAccounts.length;
t++){
var r=this.visibleAccounts[t];
if(r.isMain){
continue
}
var s=ZmOrganizer.getSystemId(e,r);
var a=appCtxt.getById(s);
if(a){
o+=(n?a.numUnread:a.numTotal)
}}
return o
};
ZmAccountList.prototype.generateQuery=function(e,s){
var l=s&&s.get(0);
var h=[];
var r=this.visibleAccounts;
var a=e||ZmOrganizer.ID_ROOT;
var o=e?"inid":"underid";
for(var n=0;
n<r.length;
n++){
var c=r[n];
if((l&&!c.isAppEnabled(ZmItem.APP[l]))||c.isMain){
continue
}
var t=[o,':"',ZmOrganizer.getSystemId(a,c,true),'"'];
h.push(t.join(""))
}
if(a==ZmOrganizer.ID_ROOT){
h.push([o,':"',appCtxt.accountList.mainAccount.id,":",a,'"'].join(""))
}
return(h.join(" OR "))
};
ZmAccountList.prototype.loadAccounts=function(t){
var e=(new Array()).concat(this.visibleAccounts);
this._loadAccount(e,t)
};
ZmAccountList.prototype._loadAccount=function(t,n){
var o=t.shift();
if(o){
var a=new AjxCallback(this,this._loadAccount,[t,n]);
o.load(a)
}else{
ZmOrganizer.HIDE_EMPTY[ZmOrganizer.TAG]=true;
ZmOrganizer.HIDE_EMPTY[ZmOrganizer.SEARCH]=true;
for(var e=0;
e<this.visibleAccounts.length;
e++){
if(appCtxt.get(ZmSetting.OFFLINE_SMTP_ENABLED,null,this.visibleAccounts[e])){
appCtxt.set(ZmSetting.OFFLINE_COMPOSE_ENABLED,true,null,null,true);
break
}}
if(n){
n.run()
}}};
ZmAccountList.prototype.setActiveAccount=function(t,e){
this.activeAccount=t;
this._evt=this._evt||new ZmEvent();
this._evt.account=t;
if(!e){
this._evtMgr.notifyListeners("ACCOUNT",this._evt)
}};
ZmAccountList.prototype.addActiveAcountListener=function(t,e){
return this._evtMgr.addListener("ACCOUNT",t,e)
};
ZmAccountList.prototype.isInitialSyncing=function(){
for(var e=0;
e<this.visibleAccounts.length;
e++){
var t=this.visibleAccounts[e];
if(t.isMain){
continue
}
if(t.isOfflineInitialSync()){
return true
}}
return false
};
ZmAccountList.prototype.isSyncStatus=function(e){
for(var t=0;
t<this.visibleAccounts.length;
t++){
var a=this.visibleAccounts[t];
if(a.isMain){
continue
}
if(a.status==e){
return true
}}
return false
};
ZmAccountList.prototype.accountTypeExists=function(t){
for(var e=0;
e<this.visibleAccounts.length;
e++){
var a=this.visibleAccounts[e];
if(t==ZmAccount.TYPE_ZIMBRA&&a.isMain){
continue
}
if(a.type==t){
return true
}}
return false
};
ZmAccountList.prototype.syncAll=function(t){
var e=(new Array()).concat(this.visibleAccounts);
this._sendSync(e,t)
};
ZmAccountList.prototype._sendSync=function(e,a){
var t=e.shift();
if(t){
if(!t.isMain){
t.sync()
}
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._sendSync,[e,a]),500)
}else{
if(a){
a.run()
}}};
ZmAccountList.prototype.createAccounts=function(t,n){
var o=appCtxt.accountList.mainAccount;
o.id=n.id;
o.name=n.name;
o.isMain=true;
o.isZimbraAccount=true;
o.loaded=true;
o.visible=true;
o.settings=t;
o.type=ZmAccount.TYPE_ZIMBRA;
o.icon="AccountZimbra";
o.active=true;
this._accounts[o.id]=o;
delete this._accounts[ZmAccountList.DEFAULT_ID];
this.setActiveAccount(o);
if(appCtxt.isOffline){
o.displayName=ZmMsg.localFolders
}
var a=n.childAccounts&&n.childAccounts.childAccount;
if(a){
for(var e=0;
e<a.length;
e++){
this.add(ZmZimbraAccount.createFromDom(a[e]))
}
appCtxt.multiAccounts=this.size()>1;
appCtxt.isFamilyMbox=appCtxt.multiAccounts&&!appCtxt.isOffline;
this.defaultAccount=appCtxt.isFamilyMbox?this.mainAccount:this.visibleAccounts[1]
}};
ZmAccountList.prototype.resetTrees=function(){
for(var t=0;
t<this.visibleAccounts.length;
t++){
for(var a in trees){
var e=trees[a];
if(e&&e.reset){
e.reset()
}}}};
ZmAccountList.prototype.saveImplicitPrefs=function(){
for(var e=0;
e<this.visibleAccounts.length;
e++){
this.visibleAccounts[e].saveImplicitPrefs()
}};
ZmAccountList.prototype.getTooltipForVirtualFolder=function(e){
var s=0;
var n=0;
for(var a=0;
a<this.visibleAccounts.length;
a++){
var h=this.visibleAccounts[a];
var r=ZmOrganizer.getSystemId(e,h);
var o=appCtxt.getById(r);
if(o){
s+=o.numTotal;
n+=o.sizeTotal
}}
var t={
itemText:ZmMsg.messages,numTotal:s,sizeTotal:n};
return AjxTemplate.expand("share.App#FolderTooltip",t)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmAccount")){
ZmAccount=function(t,a,e){
if(arguments.length==0){
return
}
this.id=a;
this.name=e;
this.type=t||ZmAccount.TYPE_ZIMBRA
};
ZmAccount.TYPE_AOL="AOL";
ZmAccount.TYPE_GMAIL="Gmail";
ZmAccount.TYPE_IMAP="Imap";
ZmAccount.TYPE_LIVE="Live";
ZmAccount.TYPE_MSE="MSE";
ZmAccount.TYPE_EXCHANGE="Xsync";
ZmAccount.TYPE_PERSONA="PERSONA";
ZmAccount.TYPE_POP="Pop";
ZmAccount.TYPE_YMP="YMP";
ZmAccount.TYPE_ZIMBRA="Zimbra";
ZmAccount.TYPE_CALDAV="CalDAV";
ZmAccount.LOCAL_ACCOUNT_ID="ffffffff-ffff-ffff-ffff-ffffffffffff";
ZmAccount.getTypeName=function(e){
switch(e){
case ZmAccount.TYPE_AOL:return ZmMsg.aol;
case ZmAccount.TYPE_GMAIL:return ZmMsg.gmail;
case ZmAccount.TYPE_IMAP:return ZmMsg.accountTypeImap;
case ZmAccount.TYPE_LIVE:return ZmMsg.msLive;
case ZmAccount.TYPE_MSE:return ZmMsg.msExchange;
case ZmAccount.TYPE_EXCHANGE:return ZmMsg.msExchange;
case ZmAccount.TYPE_PERSONA:return ZmMsg.accountTypePersona;
case ZmAccount.TYPE_POP:return ZmMsg.accountTypePop;
case ZmAccount.TYPE_YMP:return ZmMsg.yahooMail;
case ZmAccount.TYPE_ZIMBRA:return ZmMsg.zimbraTitle
}
return ZmMsg.unknown
};
ZmAccount.prototype.toString=function(){
return"ZmAccount"
};
ZmAccount.prototype.setName=function(e){
this.name=e
};
ZmAccount.prototype.getName=function(){
return this.name
};
ZmAccount.prototype.setEmail=function(e){
throw this.toString()+"#setEmail"
};
ZmAccount.prototype.getEmail=function(){
throw this.toString()+"#getEmail"
};
ZmAccount.prototype.getIdentity=function(){
throw this.toString()+"#getIdentity"
};
ZmAccount.prototype.isLocal=function(){
return this.id==ZmAccount.LOCAL_ACCOUNT_ID
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmZimbraAccount")){
ZmZimbraAccount=function(a,e,t){
ZmAccount.call(this,null,a,e);
this.visible=(t!==false);
this.settings=null;
this.trees={};
this.loaded=false;
this.acl=new ZmAccessControlList();
this.metaData=new ZmMetaData(this)
};
ZmZimbraAccount.prototype=new ZmAccount;
ZmZimbraAccount.prototype.constructor=ZmZimbraAccount;
ZmZimbraAccount.prototype.isZmZimbraAccount=true;
ZmZimbraAccount.prototype.toString=function(){
return"ZmZimbraAccount"
};
ZmZimbraAccount.STATUS_UNKNOWN="unknown";
ZmZimbraAccount.STATUS_OFFLINE="offline";
ZmZimbraAccount.STATUS_ONLINE="online";
ZmZimbraAccount.STATUS_RUNNING="running";
ZmZimbraAccount.STATUS_AUTHFAIL="authfail";
ZmZimbraAccount.STATUS_ERROR="error";
ZmZimbraAccount.prototype.setName=function(t){
var e=this.getIdentity();
if(!e){
return
}
e.name=t
};
ZmZimbraAccount.prototype.getName=function(){
var e=this.getIdentity();
var t=(!e)?this.settings.get(ZmSetting.DISPLAY_NAME):e.name;
if(!t){
t=this.getDisplayName()
}
return e.isDefault&&t==ZmIdentity.DEFAULT_NAME?ZmMsg.accountDefault:t
};
ZmZimbraAccount.prototype.setEmail=function(e){};
ZmZimbraAccount.prototype.getEmail=function(){
return this.name
};
ZmZimbraAccount.prototype.getDisplayName=function(){
if(!this.displayName){
var e=this.isMain?this.settings.get(ZmSetting.DISPLAY_NAME):this._displayName;
this.displayName=(this._accountName||e||this.name)
}
return this.displayName
};
ZmZimbraAccount.prototype.getIdentity=function(){
var e=appCtxt.getIdentityCollection(this).defaultIdentity;
if(!appCtxt.isFamilyMbox||this.isMain){
return e
}
if(!this.dummyIdentity){
this.dummyIdentity=new ZmIdentity(this.name);
AjxUtil.hashUpdate(this.dummyIdentity,e,true,["name","isDefault"])
}
return this.dummyIdentity
};
ZmZimbraAccount.prototype.getToolTip=function(){
if(this.status||this.lastSync||this.isMain){
var a=(this.lastSync&&this.lastSync!=0)?(new Date(parseInt(this.lastSync))):null;
var t=appCtxt.get(ZmSetting.QUOTA_USED,null,this);
var e;
if(!a){
if(t>0&&!this.isMain){
e=ZmMsg.unknown
}}else{
e=AjxDateUtil.computeWordyDateStr(new Date(),a)
}
var i={
lastSync:e,hasNotSynced:this.hasNotSynced(),status:this.getStatusMessage(),quota:AjxUtil.formatSize(t,false,1)};
return AjxTemplate.expand("share.App#ZimbraAccountTooltip",i)
}
return""
};
ZmZimbraAccount.prototype.getDefaultColor=function(){
if(this.isMain){
return ZmOrganizer.C_GRAY
}
switch(this.type){
case ZmAccount.TYPE_GMAIL:return ZmOrganizer.C_RED;
case ZmAccount.TYPE_MSE:return ZmOrganizer.C_GREEN;
case ZmAccount.TYPE_EXCHANGE:return ZmOrganizer.C_GREEN;
case ZmAccount.TYPE_YMP:return ZmOrganizer.C_PURPLE
}
return null
};
ZmZimbraAccount.prototype.hasNotSynced=function(){
return(this.isOfflineInitialSync()&&this.status==ZmZimbraAccount.STATUS_UNKNOWN&&appCtxt.get(ZmSetting.QUOTA_USED,null,this)==0)
};
ZmZimbraAccount.prototype.isOfflineInitialSync=function(){
return(appCtxt.isOffline&&(!this.lastSync||(this.lastSync&&this.lastSync==0)))
};
ZmZimbraAccount.prototype.isCalDavBased=function(){
return(this.type==ZmAccount.TYPE_GMAIL||this.type==ZmAccount.TYPE_YMP)
};
ZmZimbraAccount.prototype.getDefaultCalendar=function(){
var e=appCtxt.getFolderTree(this);
if(this.isCalDavBased()){
var a=e.getByType(ZmOrganizer.CALENDAR);
for(var t=0;
t<a.length;
t++){
if(a[t].nId==ZmOrganizer.ID_CALENDAR){
continue
}
return a[t]
}}
return e.getById(ZmOrganizer.ID_CALENDAR)
};
ZmZimbraAccount.prototype.updateState=function(a){
if(this.isMain){
return
}
var s=false;
if(this.lastSync!=a.lastsync){
this.lastSync=a.lastsync;
if(this.visible){
s=true
}}
var e=false;
if(this.status!=a.status){
this.status=a.status;
if(this.visible){
e=true
}}
var t=appCtxt.getOverviewController()._overviewContainer;
for(var n in t){
var r=t[n];
if(e||s){
r.updateAccountInfo(this,e,s)
}}
if(this.visible&&a.unread!=this.unread){
this.unread=a.unread
}
this.code=a.code;
if(a.error){
var o=a.error[0];
this.errorDetail=o.exception[0]._content;
this.errorMessage=o.message
}};
ZmZimbraAccount.prototype.getStatusIcon=function(){
if(this.inNewMailMode){
return"NewMailAlert"
}
switch(this.status){
case ZmZimbraAccount.STATUS_OFFLINE:return"ImAway";
case ZmZimbraAccount.STATUS_AUTHFAIL:return"ImDnd";
case ZmZimbraAccount.STATUS_ERROR:return"Critical"
}
return null
};
ZmZimbraAccount.prototype.isError=function(){
return(this.status==ZmZimbraAccount.STATUS_AUTHFAIL||this.status==ZmZimbraAccount.STATUS_ERROR)
};
ZmZimbraAccount.prototype.getIcon=function(){
return(this.isMain&&appCtxt.isOffline)?"LocalFolders":this.icon
};
ZmZimbraAccount.prototype.getZdMsg=function(e){
var t=((ZdMsg["client."+e])||(ZdMsg["exception."+e]));
if(!t&&e){
t=ZdMsg["exception.offline.UNEXPECTED"]
}
return t
};
ZmZimbraAccount.prototype.getStatusMessage=function(){
if(this.inNewMailMode){
return AjxMessageFormat.format(ZmMsg.unreadCount,this.unread)
}
switch(this.status){
case ZmZimbraAccount.STATUS_OFFLINE:return ZmMsg.imStatusOffline;
case ZmZimbraAccount.STATUS_ONLINE:return ZmMsg.imStatusOnline;
case ZmZimbraAccount.STATUS_RUNNING:return ZmMsg.running;
case ZmZimbraAccount.STATUS_AUTHFAIL:return this.code?this.getZdMsg(this.code):AjxMessageFormat.format(ZmMsg.authFailure,this.getEmail());
case ZmZimbraAccount.STATUS_ERROR:return this.code?this.getZdMsg(this.code):ZmMsg.error
}
return""
};
ZmZimbraAccount.prototype.showErrorMessage=function(){
if(!this.isError()){
return
}
var a=(this.status==ZmZimbraAccount.STATUS_ERROR)?appCtxt.getErrorDialog():appCtxt.getMsgDialog();
var o=this.getZdMsg(this.code);
if(o==""){
o=this.getStatusMessage()
}
a.setMessage(o);
if(this.status==ZmZimbraAccount.STATUS_ERROR){
var t=[];
var e=0;
if(this.errorMessage){
t[e++]="<p><b>";
t[e++]=ZdMsg.DebugMsg;
t[e++]="</b>: ";
t[e++]=this.errorMessage;
t[e++]="</p>"
}
if(this.errorDetail){
t[e++]="<p><b>";
t[e++]=ZdMsg.DebugStack;
t[e++]="</b>:</p><p><pre>";
t[e++]=this.errorDetail;
t[e++]="</pre></p>"
}
t[e++]="<p><b>";
t[e++]=ZdMsg.DebugActionNote;
t[e++]="</b></p>";
a.setDetailString(t.join(""))
}
a.popup(null,true)
};
ZmZimbraAccount.createFromDom=function(e){
var t=new ZmZimbraAccount();
t._loadFromDom(e);
return t
};
ZmZimbraAccount.prototype.load=function(u){
if(!this.loaded){
this.settings=new ZmSettings();
var r=appCtxt.accountList.mainAccount;
for(var o=0;
o<ZmApp.APPS.length;
o++){
var h=ZmApp.APPS[o];
var f=ZmApp.SETTING[h];
if(f&&appCtxt.get(f,null,r)){
var t=appCtxt.getApp(h);
if(t){
t._registerSettings(this.settings)
}}}
var a=new ZmBatchCommand(null,this.name);
var n=new AjxCallback(this,this._handleLoadSettings);
this.settings.loadUserSettings(n,null,this.name,null,a);
var e=AjxSoapDoc.create("GetTagRequest","urn:zimbraMail");
var d=new AjxCallback(this,this._handleLoadTags);
a.addNewRequestParams(e,d);
this.loadMetaData(null,a);
var c=AjxSoapDoc.create("GetFolderRequest","urn:zimbraMail");
c.getMethod().setAttribute("visible","1");
var l=new AjxCallback(this,this._handleLoadFolders);
a.addNewRequestParams(c,l);
var m=new AjxCallback(this,this._handleLoadUserInfo,u);
var s=new AjxCallback(this,this._handleErrorLoad,u);
a.run(m,s)
}else{
if(u){
u.run()
}}};
ZmZimbraAccount.prototype.loadMetaData=function(i,t){
var e=new AjxCallback(this,this._handleLoadMetaData,[i]);
var a=[ZmSetting.M_IMPLICIT,ZmSetting.M_OFFLINE];
this.metaData.load(a,e,t)
};
ZmZimbraAccount.prototype.unload=function(){
if(!appCtxt.inStartup){
this.settings.loadShortcuts(true)
}};
ZmZimbraAccount.prototype.sync=function(a){
var e=AjxSoapDoc.create("SyncRequest","urn:zimbraOffline");
if(appCtxt.get(ZmSetting.OFFLINE_DEBUG_TRACE)){
var t=e.getMethod();
t.setAttribute("debug",1)
}
appCtxt.getAppController().sendRequest({
soapDoc:e,asyncMode:true,noBusyOverlay:true,callback:a,accountName:this.name}
)
};
ZmZimbraAccount.prototype.save=function(a,t,e){
return(this.getIdentity().save(a,t,e))
};
ZmZimbraAccount.prototype.saveImplicitPrefs=function(){
var t=this.settings?this.settings.get(ZmSetting.IS_EXTERNAL):false;
if(t){
return
}
var a=[];
for(var i in ZmSetting.CHANGED_IMPLICIT){
var e=this.settings?this.settings.getSetting(i):null;
if(ZmSetting.IS_GLOBAL[e.id]&&!this.isMain){
continue
}
if(e&&(e.getValue(null,true)!=e.getOrigValue(null,true))){
a.push(e)
}}
if(a.length>0){
this.settings.save(a,null,null,this)
}};
ZmZimbraAccount.prototype.isAppEnabled=function(e){
switch(e){
case ZmApp.BRIEFCASE:return appCtxt.get(ZmSetting.BRIEFCASE_ENABLED,null,this);
case ZmApp.CALENDAR:return appCtxt.get(ZmSetting.CALENDAR_ENABLED,null,this);
case ZmApp.CONTACTS:return appCtxt.get(ZmSetting.CONTACTS_ENABLED,null,this);
case ZmApp.IM:return appCtxt.get(ZmSetting.IM_ENABLED,null,this);
case ZmApp.MAIL:return appCtxt.get(ZmSetting.MAIL_ENABLED,null,this);
case ZmApp.PREFERENCES:return appCtxt.get(ZmSetting.OPTIONS_ENABLED,null,this);
case ZmApp.TASKS:return appCtxt.get(ZmSetting.TASKS_ENABLED,null,this)
}
return false
};
ZmZimbraAccount.prototype._handleLoadSettings=function(e){
this.type=appCtxt.isOffline?appCtxt.get(ZmSetting.OFFLINE_ACCOUNT_FLAVOR,null,this):ZmAccount.TYPE_ZIMBRA;
this.isZimbraAccount=this.type==ZmAccount.TYPE_ZIMBRA;
switch(this.type){
case ZmAccount.TYPE_AOL:this.icon="AccountAOL";
break;
case ZmAccount.TYPE_GMAIL:this.icon="AccountGmail";
break;
case ZmAccount.TYPE_IMAP:this.icon="AccountIMAP";
break;
case ZmAccount.TYPE_LIVE:this.icon="AccountMSN";
break;
case ZmAccount.TYPE_MSE:this.icon="AccountExchange";
break;
case ZmAccount.TYPE_EXCHANGE:this.icon="AccountExchange";
break;
case ZmAccount.TYPE_POP:this.icon="AccountPOP";
break;
case ZmAccount.TYPE_YMP:this.icon="AccountYahoo";
break;
case ZmAccount.TYPE_ZIMBRA:this.icon="AccountZimbra";
break
}
var t=e.getResponse().GetInfoResponse;
appCtxt.getIdentityCollection(this).initialize(t.identities);
appCtxt.getDataSourceCollection(this).initialize(t.dataSources);
appCtxt.getSignatureCollection(this).initialize(t.signatures)
};
ZmZimbraAccount.prototype._handleLoadFolders=function(e){
var a=e.getResponse().GetFolderResponse;
var t=a?a.folder[0]:null;
if(t){
appCtxt.getRequestMgr()._loadTree(ZmOrganizer.FOLDER,null,a.folder[0],"folder",this)
}};
ZmZimbraAccount.prototype._handleLoadTags=function(e){
var t=e.getResponse().GetTagResponse;
appCtxt.getRequestMgr()._loadTree(ZmOrganizer.TAG,null,t,null,this)
};
ZmZimbraAccount.prototype._handleLoadUserInfo=function(t){
this.loaded=true;
var e=appCtxt.getFolderTree(this);
if(e){
e.getPermissions({
noBusyOverlay:true,accountName:this.name}
)
}
if(t){
t.run()
}};
ZmZimbraAccount.prototype._handleLoadMetaData=function(a,t){
for(var e in t){
this.settings.createFromJs(t[e])
}
if(a){
a.run()
}};
ZmZimbraAccount.prototype._handleErrorLoad=function(t,e){
if(t){
t.run()
}};
ZmZimbraAccount.prototype._loadFromDom=function(e){
this.id=e.id;
this.name=e.name;
this.visible=e.visible;
this.active=e.active;
var t=e.attrs&&e.attrs._attrs;
this._displayName=t?t.displayName:this.email;
this._accountName=t&&t.zimbraPrefLabel
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmImAddress")){
ZmImAddress={
IM_SERVICES:[{
label:ZmMsg.zimbraTitle,value:"local"}
,{
label:ZmMsg.yahoo,value:"yahoo"}
,{
label:ZmMsg.msn,value:"msn"}
,{
label:ZmMsg.aol,value:"aol"}
,{
label:ZmMsg.other,value:"other"}
],REGEXP:[],parse:function(t){
var e=ZmImAddress.REGEXP.exec(t);
if(e){
return{
service:e[1],screenName:e[2]}
}}
,make:function(e,t){
var a=e+"://"+t;
if(ZmImAddress.parse(a)){
return a
}
return""
}
,display:function(r){
var n=ZmImAddress.parse(r);
if(n){
var e=ZmImAddress.IM_SERVICES,t=0,o;
while(o=e[t++]){
if(o.value==n.service){
break
}}
if(o){
return n.screenName+" ("+o.label+")"
}}
return r
}};
if(/^SmartZone/.test(ZmMsg.zimbraTitle)){
ZmImAddress.IM_SERVICES.splice(0,1)
}
AjxUtil.foreach(ZmImAddress.IM_SERVICES,function(e){
ZmImAddress.REGEXP.push(e.value)
}
);
ZmImAddress.REGEXP=new RegExp("^("+ZmImAddress.REGEXP.join("|")+")://([^\\s]+)$","i")
}
if(AjxPackage.define("zimbraMail.share.model.ZmAccessControlList")){
ZmAccessControlList=function(e){
this._aces={}
};
ZmAccessControlList.prototype.toString=function(){
return"ZmAccessControlList"
};
ZmAccessControlList.prototype.load=function(a){
var t={
GetRightsRequest:{
_jsns:"urn:zimbraAccount"}};
var e=new AjxCallback(this,this._handleResponseLoad,[a]);
appCtxt.getAppController().sendRequest({
jsonObj:t,asyncMode:true,callback:e}
)
};
ZmAccessControlList.prototype._handleResponseLoad=function(n,e){
var t=e.getResponse();
var o=t.GetRightsResponse.ace;
if(o&&o.length){
for(var a=0;
a<o.length;
a++){
this.add(ZmAccessControlEntry.createFromDom(o[a]))
}}
if(n){
n.run()
}};
ZmAccessControlList.prototype.getACLByRight=function(e){
return this._aces[e]
};
ZmAccessControlList.prototype.getGranteeType=function(m){
var t=this._aces[m];
var a=ZmSetting.ACL_PUBLIC;
var f={};
if(t&&t.length){
for(var r=0;
r<t.length;
r++){
var n=t[r];
var d=(n.granteeType==ZmSetting.ACL_USER||n.granteeType==ZmSetting.ACL_GROUP)?ZmSetting.ACL_USER:n.granteeType;
f[d]=n.negative?-1:1
}}
var u=(f[ZmSetting.ACL_PUBLIC]==1);
var o=(f[ZmSetting.ACL_PUBLIC]==-1);
var h=(f[ZmSetting.ACL_AUTH]==1);
var s=(f[ZmSetting.ACL_AUTH]==-1);
var l=(f[ZmSetting.ACL_DOMAIN]==1);
var c=(f[ZmSetting.ACL_USER]==1);
var e=(o||s)&&(f[ZmSetting.ACL_USER]==null);
if(u){
return ZmSetting.ACL_PUBLIC
}
if(h){
return ZmSetting.ACL_AUTH
}
if(o){
if(h){
return ZmSetting.ACL_AUTH
}}
if(c){
return ZmSetting.ACL_USER
}
if(l){
return ZmSetting.ACL_DOMAIN
}
if(e){
return ZmSetting.ACL_NONE
}
return a
};
ZmAccessControlList.prototype.getACLByGranteeType=function(o,e){
var a=this._aces[o];
var s=[];
if(a&&a.length){
for(var t=0;
t<a.length;
t++){
var n=a[t];
if(n.granteeType==e){
s.push(n)
}}}
s.sort();
return s
};
ZmAccessControlList.prototype.getGrantees=function(a){
var t=this._aces[a];
var n=[];
if(t&&t.length){
for(var e=0;
e<t.length;
e++){
var o=t[e];
if(o.granteeType==ZmSetting.ACL_USER||o.granteeType==ZmSetting.ACL_GROUP){
n.push(o.grantee)
}}}
n.sort();
return n
};
ZmAccessControlList.prototype.getGranteesInfo=function(a){
var t=this._aces[a];
var n=[];
if(t&&t.length){
for(var e=0;
e<t.length;
e++){
var o=t[e];
if(o.granteeType==ZmSetting.ACL_USER||o.granteeType==ZmSetting.ACL_GROUP){
n.push({
grantee:o.grantee,zid:o.zid}
)
}}}
n.sort(ZmAccessControlList.sortByGrantee);
return n
};
ZmAccessControlList.prototype.grant=function(t,a,e){
this._setPerms(t,false,a,e)
};
ZmAccessControlList.prototype.revoke=function(t,a,e){
this._setPerms(t,true,a,e)
};
ZmAccessControlList.prototype._setPerms=function(e,l,h,a){
var o=l?"RevokeRightsRequest":"GrantRightsRequest";
var s=AjxSoapDoc.create(o,"urn:zimbraAccount");
for(var n=0;
n<e.length;
n++){
var t=e[n];
var r=s.set("ace");
r.setAttribute("right",t.right);
r.setAttribute("gt",t.granteeType);
if(t.grantee){
r.setAttribute("d",t.grantee)
}
if(t.zid){
r.setAttribute("zid",t.zid)
}
if(t.negative){
r.setAttribute("deny",1)
}}
var c=new AjxCallback(this,this._handleResponseSetPerms,[l,h]);
if(a){
a.addNewRequestParams(s,c)
}else{
appCtxt.getAppController().sendRequest({
soapDoc:s,asyncMode:true,callback:c}
)
}};
ZmAccessControlList.prototype._handleResponseSetPerms=function(h,r,l){
var n=l.getResponse();
var o=h?n.RevokeRightsResponse:n.GrantRightsResponse;
var e=o&&o.ace;
var t=[];
if(e&&e.length){
for(var s=0;
s<e.length;
s++){
var a=ZmAccessControlEntry.createFromDom(e[s]);
t.push(a);
if(h){
this.remove(a)
}else{
this.update(a)
}}}
if(r){
r.run(t)
}};
ZmAccessControlList.prototype.add=function(t){
if(!t){
return
}
var e=t.right;
if(!this._aces[e]){
this._aces[e]=[]
}
this._aces[e].push(t)
};
ZmAccessControlList.prototype.remove=function(a){
if(!a){
return
}
var o=this._aces[a.right];
var t=[];
if(o&&o.length){
for(var e=0;
e<o.length;
e++){
if(o[e].grantee!=a.grantee){
t.push(o[e])
}}}
this._aces[a.right]=t
};
ZmAccessControlList.prototype.update=function(t,n){
if(!t||!t.right){
return
}
var o=false;
if(!this._aces[t.right]){
this._aces[t.right]=[]
}
var a=this._aces[t.right];
if(a.length){
for(var e=0;
e<a.length;
e++){
if((a[e].grantee==t.grantee)&&(a[e].granteeType==t.granteeType)){
this._aces[t.right][e]=t;
o=true
}}}
if(!o){
this._aces[t.right].push(t)
}};
ZmAccessControlList.prototype.cleanup=function(){
this._aces={}
};
ZmAccessControlList.sortByGrantee=function(i,e){
var o=i.grantee||"";
var t=e.grantee||"";
if(o.toLowerCase()>t.toLowerCase()){
return 1
}
if(o.toLowerCase()<t.toLowerCase()){
return -1
}
return 0
};
ZmAccessControlEntry=function(e){
this.grantee=e.grantee;
this.zid=e.zid;
this.granteeType=e.granteeType;
this.right=e.right;
this.negative=e.negative
};
ZmAccessControlEntry.prototype.toString=function(){
return"ZmAccessControlEntry"
};
ZmAccessControlEntry.createFromDom=function(e){
var t={};
t.grantee=e.d;
t.granteeType=e.gt;
t.zid=e.zid;
t.right=e.right;
t.negative=(e.deny=="1");
return new ZmAccessControlEntry(t)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmDomainList")){
ZmDomainList=function(){
ZmModel.call(this)
};
ZmDomainList.prototype=new ZmModel;
ZmDomainList.prototype.constructor=ZmDomainList;
ZmDomainList.prototype.isZmDomainList=true;
ZmDomainList.prototype.toString=function(){
return"ZmDomainList"
};
ZmDomainList.DOMAIN_RE=new RegExp("\\.\\w{2,3}$");
ZmDomainList.prototype.search=function(a,e,n){
var o={
BrowseRequest:{
_jsns:"urn:zimbraMail"}};
var t=o.BrowseRequest;
t.browseBy="domains";
if(a&&(/[a-z]/i.test(a))){
if(ZmDomainList.DOMAIN_RE.test(a)){
t.regex=[".*",AjxStringUtil.regExEscape(a),"$"].join("")
}else{
t.regex=["^",a,".*"].join("")
}}
if(e){
t.maxToReturn=e
}
var i=ZmDomainList._handleResponseSearch.bind(null,a,n);
appCtxt.getAppController().sendRequest({
jsonObj:o,asyncMode:true,callback:i}
)
};
ZmDomainList._handleResponseSearch=function(s,r,t){
var e=t.getResponse().BrowseResponse.bd;
var n=[];
if(e){
for(var a=0;
a<e.length;
a++){
var o=e[a];
n[a]=new ZmDomain(o._content,o.h)
}}
n.sort(ZmDomain.sortCompare);
r.run(n)
};
ZmDomain=function(e,t){
ZmModel.call(this);
this.name=e.toLowerCase();
this._headerFlags=t
};
ZmDomain.prototype=new ZmModel;
ZmDomain.prototype.constructor=ZmDomain;
ZmDomain.prototype.isZmDomain=true;
ZmDomain.prototype.toString=function(){
return"ZmDomain"
};
ZmDomain.ADDR_FLAG={};
ZmDomain.ADDR_FLAG[AjxEmailAddress.FROM]="f";
ZmDomain.ADDR_FLAG[AjxEmailAddress.TO]="t";
ZmDomain.ADDR_FLAG[AjxEmailAddress.CC]="c";
ZmDomain.sortCompare=function(i,e){
var t=ZmOrganizer.checkSortArgs(i,e);
if(t!=null){
return t
}
if(i.name<e.name){
return -1
}
if(i.name>e.name){
return 1
}
return 0
};
ZmDomain.prototype.hasAddress=function(t){
var e=ZmDomain.ADDR_FLAG[t];
return e&&this._headerFlags&&(this._headerFlags.indexOf(e)!=-1)
}
}
if(AjxPackage.define("zimbraMail.share.model.ZmAttachmentTypeList")){
ZmAttachmentTypeList=function(){
ZmModel.call(this,ZmEvent.S_ATT)
};
ZmAttachmentTypeList.prototype=new ZmModel;
ZmAttachmentTypeList.prototype.constructor=ZmAttachmentTypeList;
ZmAttachmentTypeList.prototype.isZmAttachmentTypeList=true;
ZmAttachmentTypeList.prototype.toString=function(){
return"ZmAttachmentTypeList"
};
ZmAttachmentTypeList.prototype.getAttachments=function(){
return this._attachments
};
ZmAttachmentTypeList.compareEntry=function(t,e){
if(t.desc.toLowerCase()<e.desc.toLowerCase()){
return -1
}
if(t.desc.toLowerCase()>e.desc.toLowerCase()){
return 1
}
return 0
};
ZmAttachmentTypeList.prototype.load=function(i){
this._attachments=[];
var a={
BrowseRequest:{
_jsns:"urn:zimbraMail"}};
var e=a.BrowseRequest;
e.browseBy="attachments";
var t=this._handleResponseLoad.bind(this,i);
appCtxt.getAppController().sendRequest({
jsonObj:a,asyncMode:true,callback:t}
)
};
ZmAttachmentTypeList.prototype._handleResponseLoad=function(s,t){
var a=this._organizeTypes(t.getResponse().BrowseResponse.bd);
var e=false;
if(a){
for(var o=0;
o<a.length;
o++){
var n=a[o]._content;
if(!ZmMimeTable.isIgnored(n)){
this._attachments.push(ZmMimeTable.getInfo(n,true))
}}
this._attachments.sort(ZmAttachmentTypeList.compareEntry)
}
if(s){
s.run(this._attachments)
}};
ZmAttachmentTypeList.prototype._isSupportedType=function(e){
var t=[ZmMimeTable.APP_ADOBE_PDF,ZmMimeTable.APP_MS_WORD,ZmMimeTable.APP_MS_EXCEL,ZmMimeTable.APP_MS_PPT,ZmMimeTable.APP_ZIP,ZmMimeTable.APP_ZIP2,ZmMimeTable.MSG_RFC822,ZmMimeTable.TEXT_HTML,ZmMimeTable.TEXT_CAL];
return AjxUtil.arrayContains(t,e)
};
ZmAttachmentTypeList.prototype._isSupportedGroup=function(a){
var i=[ZmMimeTable.APP,ZmMimeTable.AUDIO,ZmMimeTable.IMG,ZmMimeTable.TEXT,ZmMimeTable.VIDEO];
var t=new RegExp("^"+i.join("|^"),"ig");
var e=a.match(t);
return e&&e[0]
};
ZmAttachmentTypeList.prototype._organizeTypes=function(t){
var n=[];
if(!(t&&t.length)){
return n
}
for(var o=0;
o<t.length;
o++){
var s=t[o]._content;
var h=t[o].freq;
var r=true;
var e=null;
if(this._isSupportedType(s)){
r=false
}else{
if(s=this._isSupportedGroup(s)){
r=false;
for(var a=0;
a<n.length;
a++){
if(n[a]._content===s){
n[a].freq+=h;
r=true;
break
}}}}
if(!r){
n.push({
_content:s,freq:h}
)
}}
return n
}
}
if(AjxPackage.define("zimbraMail.core.ZmApp")){
ZmApp=function(a,t,e){
if(arguments.length==0){
return
}
this._name=a;
this._container=t;
this._parentController=e;
this._active=false;
this.currentSearch=null;
this._defaultFolderId=null;
this._deferredFolders=[];
this._deferredFolderHash={};
this._deferredNotifications=[];
this._sessionController={};
this._nextSessionId={};
this._curSessionId={};
ZmApp.DROP_TARGETS[a]={};
this._defineAPI();
if(!e){
this._registerSettings()
}
this._registerOperations();
this._registerItems();
this._registerOrganizers();
if(!e){
this._setupSearchToolbar()
}
this._registerApp()
};
ZmApp.CLASS={};
ZmApp.SETTING={};
ZmApp.UPSELL_SETTING={};
ZmApp.LOAD_SORT={};
ZmApp.BUTTON_ID={};
ZmApp.MAIN_PKG={};
ZmApp.NAME={};
ZmApp.ICON={};
ZmApp.TEXT_PRECEDENCE={};
ZmApp.IMAGE_PRECEDENCE={};
ZmApp.QS_ARG={};
ZmApp.QS_ARG_R={};
ZmApp.CHOOSER_TOOLTIP={};
ZmApp.VIEW_TOOLTIP={};
ZmApp.DEFAULT_SEARCH={};
ZmApp.ORGANIZER={};
ZmApp.OVERVIEW_TREES={};
ZmApp.HIDE_ZIMLETS={};
ZmApp.SEARCH_TYPES={};
ZmApp.SEARCH_TYPES_R={};
ZmApp.GOTO_ACTION_CODE={};
ZmApp.GOTO_ACTION_CODE_R={};
ZmApp.NEW_ACTION_CODE={};
ZmApp.ACTION_CODES={};
ZmApp.ACTION_CODES_R={};
ZmApp.OPS={};
ZmApp.OPS_R={};
ZmApp.QS_VIEWS={};
ZmApp.TRASH_VIEW_OP={};
ZmApp.UPSELL_URL={};
ZmApp.DROP_TARGETS={};
ZmApp.SEARCH_RESULTS_TAB={};
ZmApp.CHOOSER_SORT={};
ZmApp.DEFAULT_SORT={};
ZmApp.ENABLED_APPS={};
ZmApp.APPS=[];
ZmApp.DEFAULT_APPS=[];
ZmApp.OVERVIEW_ID="main";
ZmApp.BATCH_NOTIF_LIMIT=25;
ZmApp.MAIN_SESSION="main";
ZmApp.HIDDEN_SESSION="hidden";
ZmApp.initialize=function(){
if(appCtxt.get(ZmSetting.USE_KEYBOARD_SHORTCUTS)){
ZmApp.ACTION_CODES[ZmKeyMap.NEW_FOLDER]=ZmOperation.NEW_FOLDER;
ZmApp.ACTION_CODES[ZmKeyMap.NEW_TAG]=ZmOperation.NEW_TAG
}};
ZmApp.registerApp=function(n,o){
if(o.mainPkg){
ZmApp.MAIN_PKG[n]=o.mainPkg
}
if(o.nameKey){
ZmApp.NAME[n]=o.nameKey
}
if(o.icon){
ZmApp.ICON[n]=o.icon
}
if(o.textPrecedence){
ZmApp.TEXT_PRECEDENCE[n]=o.textPrecedence
}
if(o.imagePrecedence){
ZmApp.IMAGE_PRECEDENCE[n]=o.imagePrecedence
}
if(o.chooserTooltipKey){
ZmApp.CHOOSER_TOOLTIP[n]=o.chooserTooltipKey
}
if(o.viewTooltipKey){
ZmApp.VIEW_TOOLTIP[n]=o.viewTooltipKey
}
if(o.defaultSearch){
ZmApp.DEFAULT_SEARCH[n]=o.defaultSearch
}
if(o.organizer){
ZmApp.ORGANIZER[n]=o.organizer
}
if(o.overviewTrees){
ZmApp.OVERVIEW_TREES[n]=o.overviewTrees
}
if(o.hideZimlets){
ZmApp.HIDE_ZIMLETS[n]=o.hideZimlets
}
if(o.searchTypes){
ZmApp.SEARCH_TYPES[n]=o.searchTypes
}
if(o.gotoActionCode){
ZmApp.GOTO_ACTION_CODE[n]=o.gotoActionCode
}
if(o.newActionCode){
ZmApp.NEW_ACTION_CODE[n]=o.newActionCode
}
if(o.qsViews){
ZmApp.QS_VIEWS[n]=o.qsViews
}
if(o.chooserSort){
ZmApp.CHOOSER_SORT[n]=o.chooserSort
}
if(o.defaultSort){
ZmApp.DEFAULT_SORT[n]=o.defaultSort
}
if(o.trashViewOp){
ZmApp.TRASH_VIEW_OP[n]=o.trashViewOp
}
if(o.upsellUrl){
ZmApp.UPSELL_URL[n]=o.upsellUrl
}
if(o.searchResultsTab){
ZmApp.SEARCH_RESULTS_TAB[n]=o.searchResultsTab
}
if(o.searchTypes){
ZmApp.SEARCH_TYPES_R[n]={};
for(var t=0;
t<o.searchTypes.length;
t++){
ZmApp.SEARCH_TYPES_R[n][o.searchTypes[t]]=true
}}
if(o.gotoActionCode){
ZmApp.GOTO_ACTION_CODE_R[o.gotoActionCode]=n
}
if(o.actionCodes){
for(var a in o.actionCodes){
if(!a){
continue
}
ZmApp.ACTION_CODES_R[a]=n;
ZmApp.ACTION_CODES[a]=o.actionCodes[a]
}}
var e=appCtxt.get(ZmApp.SETTING[n]);
if(o.newItemOps&&e){
for(var s in o.newItemOps){
if(!s){
continue
}
ZmApp.OPS_R[s]=n;
ZmOperation.NEW_ITEM_OPS.push(s);
ZmOperation.NEW_ITEM_KEY[s]=o.newItemOps[s]
}}
if(o.newOrgOps&&e){
for(var s in o.newOrgOps){
if(!s){
continue
}
ZmApp.OPS_R[s]=n;
ZmOperation.NEW_ORG_OPS.push(s);
ZmOperation.NEW_ORG_KEY[s]=o.newOrgOps[s]
}}
if(o.qsViews){
for(var t=0;
t<o.qsViews.length;
t++){
ZmApp.QS_VIEWS[o.qsViews[t]]=n
}}};
ZmApp.runAppFunction=function(i){
var t;
for(var e in ZmApp.CLASS){
var o=window[ZmApp.CLASS[e]];
var a=o&&o[i];
if(a&&(typeof(a)=="function")){
t=t||Array.prototype.slice.call(arguments,1);
a.apply(o,t)
}}};
ZmApp.prototype.toString=function(){
return"ZmApp"
};
ZmApp.prototype._defineAPI=function(){};
ZmApp.prototype._registerSettings=function(){};
ZmApp.prototype._registerOperations=function(){};
ZmApp.prototype._registerItems=function(){};
ZmApp.prototype._registerOrganizers=function(){};
ZmApp.prototype._setupSearchToolbar=function(){};
ZmApp.prototype._registerApp=function(){};
ZmApp.prototype._registerPrefs=function(){};
ZmApp.prototype.startup=function(e){};
ZmApp.prototype.preNotify=function(e){};
ZmApp.prototype.deleteNotify=function(e){};
ZmApp.prototype.createNotify=function(e){};
ZmApp.prototype.modifyNotify=function(e){};
ZmApp.prototype.postNotify=function(e){};
ZmApp.prototype.refresh=function(e){};
ZmApp.prototype.handleOp=function(t,e){};
ZmApp.prototype.getName=function(){
return this._name
};
ZmApp.prototype.getDisplayName=function(){
return ZmMsg[ZmApp.NAME[this._name]]||ZmApp.NAME[this._name]
};
ZmApp.prototype.getInitialSearchType=function(){
return null
};
ZmApp.prototype.getLimit=function(e){
return appCtxt.get(ZmSetting.PAGE_SIZE)
};
ZmApp.prototype.setAppView=function(e){
appCtxt.getAppViewMgr().setAppView(this._name,e)
};
ZmApp.prototype.createView=function(e){
e.appName=this._name;
return appCtxt.getAppViewMgr().createView(e)
};
ZmApp.prototype.pushView=function(e,t){
return appCtxt.getAppViewMgr().pushView(e,t)
};
ZmApp.prototype.popView=function(t,e,a){
return appCtxt.getAppViewMgr().popView(t,e,a)
};
ZmApp.prototype.setView=function(e,t){
return appCtxt.getAppViewMgr().setView(e,t)
};
ZmApp.prototype.stageView=function(e){
return appCtxt.getAppViewMgr().stageView(e)
};
ZmApp.prototype.addDeferredFolder=function(e){
var t=e.obj&&e.obj.id;
if(t&&!this._deferredFolderHash[t]){
this._deferredFolders.push(e);
this._deferredFolderHash[t]=true;
appCtxt.cacheSetDeferred(t,this._name)
}};
ZmApp.prototype.getRemoteFolderIds=function(r){
var s=[];
if(appCtxt.getOverviewController(true)){
var o=ZmApp.ORGANIZER[this.getName()];
if(this._deferredFolders.length){
this._createDeferredFolders(o)
}
var e=appCtxt.getFolderTree(r);
var a=e?e.getByType(o):[];
for(var t=0;
t<a.length;
t++){
var n=a[t];
if(n.isRemote()){
s.push(n.id)
}}}
return s
};
ZmApp.prototype.getOverviewPanelContent=function(){
if(!this._overviewPanelContent){
var t=this._getOverviewParams();
t.overviewId=this.getOverviewId();
var e=this._overviewPanelContent=appCtxt.getOverviewController().createOverview(t);
e.set(this._getOverviewTrees())
}
return this._overviewPanelContent
};
ZmApp.prototype.getOverviewContainer=function(a){
if(!this._overviewContainer&&!a){
var e={
appName:this._name,containerId:([ZmApp.OVERVIEW_ID,this._name].join("_")),posStyle:Dwt.ABSOLUTE_STYLE};
var t=this._getOverviewParams();
t.overviewTrees=this._getOverviewTrees();
this._overviewContainer=appCtxt.getOverviewController().createOverviewContainer(e,t)
}
return this._overviewContainer
};
ZmApp.prototype.setOverviewPanelContent=function(i){
if(i){
this._overviewPanelContent=null;
this._overviewContainer=null
}
var e=appCtxt.getAppViewMgr();
if(!e.isFullScreen()){
Dwt.setLoadingTime(this.toString()+"-overviewPanel");
var t=((appCtxt.multiAccounts&&appCtxt.accountList.size()>1)||this.getName()==ZmApp.VOICE)?this.getOverviewContainer():this.getOverviewPanelContent();
var a={};
a[ZmAppViewMgr.C_TREE]=t;
e.setViewComponents(ZmAppViewMgr.APP,a,true,this.getName());
Dwt.setLoadedTime(this.toString()+"-overviewPanel")
}};
ZmApp.prototype.getOverview=function(){
var e=appCtxt.getOverviewController();
return e&&e.getOverview(this.getOverviewId())
};
ZmApp.prototype.resetOverview=function(t){
var u=t?appCtxt.getOverviewController().getOverview(t):this.getOverview();
if(u){
var s=[];
var d=u.getTreeViews(),l=d.length;
for(var n=0;
n<l;
n++){
var h=d[n];
var e=u.getTreeView(h);
if(e){
var c=e.getTreeItemList();
var o=c.length;
for(var a=0;
a<o;
a++){
var r=c[a];
if(r._expanded){
s.push(r._htmlElId)
}}}}
u.clear();
u.set(this._getOverviewTrees());
l=s.length;
for(var n=0;
n<l;
n++){
var r=DwtControl.fromElementId(s[n]);
if(r&&!r._expanded){
r.setExpanded(true)
}}}};
ZmApp.prototype.getOverviewId=function(e){
return appCtxt.getOverviewId([ZmApp.OVERVIEW_ID,this._name],e)
};
ZmApp.prototype._getOverviewParams=function(){
var e=[];
for(var a in ZmOverviewController.CONTROLLER){
e.push(a)
}
var t=function(o,i){
return(ZmOrganizer.DISPLAY_ORDER[o]||9999)-(ZmOrganizer.DISPLAY_ORDER[i]||9999)
};
e.sort(t);
return{
posStyle:Dwt.ABSOLUTE_STYLE,selectionSupported:true,actionSupported:true,dndSupported:true,showUnread:true,showNewButtons:true,isAppOverview:true,treeIds:e,appName:this._name,account:appCtxt.getActiveAccount()}
};
ZmApp.prototype._getOverviewTrees=function(){
var o=ZmApp.OVERVIEW_TREES[this._name]||[];
var t=[];
for(var e=0,a=o.length;
e<a;
e++){
if((o[e]==ZmOrganizer.FOLDER&&!appCtxt.get(ZmSetting.MAIL_ENABLED))){
continue
}
t.push(o[e])
}
if(!appCtxt.multiAccounts&&window[ZmOverviewController.CONTROLLER[ZmOrganizer.ZIMLET]]&&!ZmApp.HIDE_ZIMLETS[this._name]){
t.push(ZmOrganizer.ZIMLET)
}
return t
};
ZmApp.prototype.getNumSessionControllers=function(t){
var a=this._sessionController[t]||[];
var e=0;
for(var i in a){
if(!a[i].inactive){
e++
}}
return e
};
ZmApp.prototype.getTypeFromController=function(controllerClass){
var controller=eval(controllerClass);
if(!controller.getDefaultViewType){
throw new AjxException("Session controller "+controllerClass+" must implement getDefaultViewType()")
}
return controller.getDefaultViewType()
};
ZmApp.prototype.getSessionController=function(params){
var type=this.getTypeFromController(params.controllerClass);
if(!this._sessionController[type]){
this._sessionController[type]={};
this._nextSessionId[type]=1
}
var sessionId=params.sessionId;
if(sessionId&&this._sessionController[type][sessionId]){
return this._sessionController[type][sessionId]
}
var controller;
if(!sessionId){
var controllers=this._sessionController[type];
for(var id in controllers){
if(controllers[id].inactive&&!controllers[id].isPinned&&!controllers[id].isHidden){
controller=controllers[id];
break
}}}
sessionId=(controller&&controller.getSessionId())||sessionId||String(this._nextSessionId[type]++);
if(!controller){
var ctlrClass=eval(params.controllerClass);
controller=this._sessionController[type][sessionId]=new ctlrClass(this._container,this,type,sessionId,params.searchResultsController)
}
this._curSessionId[type]=sessionId;
controller.inactive=false;
return controller
};
ZmApp.prototype.deleteSessionController=function(a){
var e=this.getTypeFromController(a.controllerClass);
var t=a.sessionId;
if(!this._sessionController[e]){
return
}
delete this._sessionController[e][t]
};
ZmApp.prototype.getCurrentSessionId=function(e){
return this._curSessionId[e]
};
ZmApp.prototype.getAllControllers=function(){
var o=[];
for(var a in this._sessionController){
var i=this._sessionController[a];
if(i){
for(var t in i){
var e=i[t];
if(e){
o.push(e)
}}}}
return o
};
ZmApp.prototype._addSettingsChangeListeners=function(){
if(!this._settingListener){
this._settingListener=new AjxListener(this,this._settingChangeListener)
}};
ZmApp.prototype._settingChangeListener=function(e){};
ZmApp.prototype.getNewButtonProps=function(){
return{}
};
ZmApp.prototype.getSearchParams=function(e){
return(e||{}
)
};
ZmApp.prototype._postLoadCore=function(){
if(!appCtxt.isChildWindow){
this._setupDropTargets()
}};
ZmApp.prototype._postLoad=function(e){
if(e){
this._createDeferredFolders(e)
}
this._handleDeferredNotifications();
if(appCtxt.isExternalAccount()){
this._handleExternalAccountSettings(e)
}};
ZmApp.prototype.containsWritableFolder=function(){
return appCtxt.isExternalAccount()?(this._containsWritableFolder?true:false):true
};
ZmApp.prototype.getDefaultFolderId=function(){
return this._defaultFolderId
};
ZmApp.prototype._handleExternalAccountSettings=function(o){
var s=appCtxt.getTree(o,appCtxt.getActiveAccount()),a=s?s.getByType(o):[],e=a.length,n,t;
this._containsWritableFolder=false;
for(t=0;
t<e;
t++){
n=a[t];
if(!this._defaultFolderId){
this._defaultFolderId=n.id
}
if(n.isPermAllowed(ZmOrganizer.PERM_WRITE)){
this._containsWritableFolder=true
}}};
ZmApp.prototype._setupDropTargets=function(){
var a=ZmApp.DROP_TARGETS[this._name];
for(var s in a){
var t=a[s];
for(var o=0;
o<t.length;
o++){
var r=t[o];
var e=appCtxt.getOverviewController().getTreeController(r,true);
var n=ZmList.ITEM_CLASS[s]||ZmOrganizer.ORG_CLASS[s];
if(e){
e._dropTgt.addTransferType(n)
}else{
if(!ZmTreeController.DROP_SOURCES[r]){
ZmTreeController.DROP_SOURCES[r]=[]
}
ZmTreeController.DROP_SOURCES[r].push(n)
}}}};
ZmApp.prototype.disposeTreeControllers=function(){
var e=appCtxt.getOverviewController(true);
if(!e){
return
}
var a=ZmApp.DROP_TARGETS[this._name];
for(var n in a){
var t=a[n];
for(var o=0;
o<t.length;
o++){
var r=t[o];
var s=e.getTreeController(r,true);
if(!s){
continue
}
s.dispose()
}}};
ZmApp.prototype.createDeferred=function(){
var a=ZmOrganizer.APP2ORGANIZER[this._name]||[];
for(var t=0;
t<a.length;
t++){
var o=a[t];
var e=ZmOrganizer.ORG_PACKAGE[o];
AjxDispatcher.require(e);
this._createDeferredFolders(o)
}};
ZmApp.prototype._createDeferredFolders=function(t){
for(var e=0;
e<this._deferredFolders.length;
e++){
var o=this._deferredFolders[e];
var a=ZmFolderTree.createFolder(o.type,o.parent,o.obj,o.tree,o.path,o.elementType);
if(appCtxt.isExternalAccount()&&a.isSystem()){
continue
}
o.parent.children.add(a);
a.parent=o.parent;
ZmFolderTree._traverse(a,o.obj,o.tree,o.path||[])
}
this._clearDeferredFolders()
};
ZmApp.prototype._clearDeferredFolders=function(){
this._deferredFolders=[];
this._deferredFolderHash={}
};
ZmApp.prototype._deferNotifications=function(t,a){
var e=ZmApp.MAIN_PKG[this._name];
if(e&&!AjxDispatcher.loaded(e)){
this._deferredNotifications.push({
type:t,data:a}
);
return true
}else{
this._noDefer=true;
return false
}};
ZmApp.prototype._handleDeferredNotifications=function(){
var t=this._deferredNotifications;
for(var a=0;
a<t.length;
a++){
var e=t[a];
if(e.type=="delete"){
this.deleteNotify(e.data,true)
}else{
if(e.type=="create"){
this.createNotify(e.data,true)
}else{
if(e.type=="modify"){
this.modifyNotify(e.data,true)
}}}}};
ZmApp.prototype._batchNotify=function(l){
if(!(l&&l.length>=ZmApp.BATCH_NOTIF_LIMIT)){
return
}
var t={}
,c,a=false;
for(var o=0,n=l.length;
o<n;
o++){
var h=l[o];
c=appCtxt.cacheGet(h.id);
if(c){
var r=c.notifyModify(h,true);
if(r){
if(!t[r]){
t[r]=[]
}
h.item=c;
t[r].push(h);
a=true
}}}
if(!a||!c){
return
}
var s=c.list;
if(!s){
return
}
s._evt.batchMode=true;
s._evt.item=c;
s._evt.items=null;
for(var r in t){
var e={
notifs:t[r]};
s._notify(r,e)
}};
ZmApp.prototype._inNewWindow=function(t){
if(appCtxt.isWebClientOffline()){
return false
}else{
var e=appCtxt.get(ZmSetting.NEW_WINDOW_COMPOSE);
return !t?e:((!e&&t&&t.shiftKey)||(e&&t&&!t.shiftKey))
}};
ZmApp.prototype._handleCreateFolder=function(e,a){
var t=appCtxt.getById(e.l);
if(t&&(ZmOrganizer.VIEW_HASH[a][e.view])){
t.notifyCreate(e,"folder");
e._handled=true
}};
ZmApp.prototype._handleCreateLink=function(t,i){
var a=appCtxt.getById(t.l);
var e=t.view||"message";
if(a&&a.supportsSharing()&&(ZmOrganizer.VIEW_HASH[i][e])){
a.notifyCreate(t,"link");
t._handled=true
}};
ZmApp.prototype.launch=function(e,t){
this.createDeferred();
if(t){
t.run()
}};
ZmApp.prototype.activate=function(t,e){
this._active=t;
if(t){
appCtxt.getAppController().setNewButtonProps(this.getNewButtonProps());
this.setOverviewPanelContent();
this.stopAlert();
if(appCtxt.isWebClientOfflineSupported){
this.resetWebClientOfflineOperations()
}
this._setRefreshButtonTooltip()
}};
ZmApp.prototype.resetWebClientOfflineOperations=function(){
var a=!appCtxt.isWebClientOffline();
var i=this.getOverview();
if(i){
var e=i.getTreeView(ZmOrganizer.ZIMLET);
if(e){
e.setVisible(a)
}
i.actionSupported=a;
i.dndSupported=a
}
var t=appCtxt.getAppController().getNewButton();
if(t){
if(ZmController._defaultNewId===ZmOperation.NEW_MESSAGE){
t._setDropDownCellMouseHandlers(a)
}else{
t.setEnabled(a)
}}};
ZmApp.prototype.isActive=function(){
return this._active
};
ZmApp.prototype.reset=function(e){};
ZmApp.prototype.startAlert=function(){
AjxDispatcher.require("Alert");
this._alert=this._alert||new ZmAppAlert(this);
this._alert.start()
};
ZmApp.prototype.stopAlert=function(){
if(this._alert){
this._alert.stop()
}};
ZmApp.prototype._setRefreshButtonTooltip=function(){
if(appCtxt.refreshButton){
appCtxt.refreshButton.setToolTipContent(this._getRefreshButtonTooltip())
}};
ZmApp.prototype._getRefreshButtonTooltip=function(){
return ZmMsg.checkMailPrefUpdate
};
ZmApp.prototype._notifyRendered=function(){
if(!this._hasRendered){
appCtxt.getAppController().appRendered(this._name);
this._hasRendered=true
}
this.stopAlert()
};
ZmApp.prototype._getExternalAccount=function(){
var t;
if(appCtxt.multiAccounts){
var a=appCtxt.accountList.visibleAccounts;
for(var e=0;
e<a.length;
e++){
var o=a[e];
if(o.isMain){
continue
}
if(appCtxt.get(ZmApp.SETTING[this.name],null,o)){
t=o;
break
}}}
return t
};
ZmApp.prototype._setLaunchTime=function(e,t){
if(!window.isPerfMetric){
return
}
var i=e+"_launched";
if(!t){
t=new Date()
}
if(!document.getElementById(i)){
var a=document.createElement("DIV");
a.id=i;
a.innerHTML=t.getTime();
a.style.display="none";
document.body.appendChild(a)
}
if(window.appDevMode){
console.profile(i)
}};
ZmApp.prototype._setLoadedTime=function(e,t){
if(!window.isPerfMetric){
return
}
var i=e+"_loaded";
if(!t){
t=new Date()
}
if(!document.getElementById(i)){
var a=document.createElement("DIV");
a.id=i;
a.innerHTML=t.getTime();
a.style.display="none";
document.body.appendChild(a)
}
if(window.appDevMode){
console.profileEnd()
}}
}
if(AjxPackage.define("zimbraMail.share.ZmSearchApp")){
ZmSearchApp=function(t,e){
ZmApp.call(this,ZmApp.SEARCH,t,e)
};
ZmSearchApp.prototype=new ZmApp;
ZmSearchApp.prototype.constructor=ZmSearchApp;
ZmSearchApp.prototype.isZmSearchApp=true;
ZmSearchApp.prototype.toString=function(){
return"ZmSearchApp"
};
ZmApp.SEARCH=ZmId.APP_SEARCH;
ZmApp.CLASS[ZmApp.SEARCH]="ZmSearchApp";
ZmApp.SETTING[ZmApp.SEARCH]=ZmSetting.SEARCH_ENABLED;
ZmSearchApp.CONTROLLER_CLASS="ZmSearchResultsController";
ZmSearchApp.prototype.getSearchResultsController=function(t,e){
return this.getSessionController({
controllerClass:ZmSearchApp.CONTROLLER_CLASS,sessionId:t,appName:e}
)
};
ZmSearchApp.prototype.activate=function(e){
this._active=e
};
ZmSearchApp.prototype.resetWebClientOfflineOperations=function(t){
ZmApp.prototype.resetWebClientOfflineOperations.apply(this);
if(!t){
var o=this.getTypeFromController(ZmSearchApp.CONTROLLER_CLASS);
var i=this.getCurrentSessionId(o);
t=this.getSearchResultsController(i)
}
var a=t&&t._toolbar;
var e=a&&a.getButton(ZmSearchToolBar.SAVE_BUTTON);
if(e){
e.setEnabled(!appCtxt.isWebClientOffline())
}}
}
if(AjxPackage.define("zimbraMail.share.ZmSocialApp")){
ZmSocialApp=function(e){
ZmApp.call(this,ZmApp.SOCIAL,e)
};
ZmSocialApp.prototype=new ZmApp;
ZmSocialApp.prototype.constructor=ZmSocialApp;
ZmSocialApp.prototype.isZmSocialApp=true;
ZmSocialApp.prototype.toString=function(){
return"ZmSocialApp"
};
ZmApp.SOCIAL=ZmId.APP_SOCIAL;
ZmApp.CLASS[ZmApp.SOCIAL]="ZmSocialApp";
ZmApp.SETTING[ZmApp.SOCIAL]=ZmSetting.SOCIAL_ENABLED;
ZmApp.UPSELL_SETTING[ZmApp.SOCIAL]=ZmSetting.SOCIAL_EXTERNAL_URL;
ZmApp.LOAD_SORT[ZmApp.SOCIAL]=100;
ZmSocialApp.prototype._registerApp=function(){
ZmApp.registerApp(ZmApp.SOCIAL,{
nameKey:"communityName",icon:"Globe",chooserTooltipKey:"goToSocial",chooserSort:32,defaultSort:100,upsellUrl:ZmSetting.SOCIAL_EXTERNAL_URL}
);
var e=appCtxt.get(ZmSetting.SOCIAL_NAME);
if(e){
ZmMsg[ZmApp.NAME[this._name]]=e
}};
ZmSocialApp.prototype.runRefresh=function(){
var e=appCtxt.getAppController(),t=e._appIframeView[ZmApp.SOCIAL];
if(t){
t.runRefresh()
}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmPopupMenu")){
ZmPopupMenu=function(a,t,o,e){
if(arguments.length==0){
return
}
var i=Dwt.getParams(arguments,ZmPopupMenu.PARAMS);
i.className=i.className?i.className:"ActionMenu";
i.style=i.style||DwtMenu.POPUP_STYLE;
i.id=i.id||"POPUP_"+Dwt.getNextId();
DwtMenu.call(this,i);
e=e||appCtxt.getCurrentController();
if(e){
this._controller=e;
this._keyMap=this._controller.getKeyMapName()
}
this._menuItems={}
};
ZmPopupMenu.PARAMS=["parent","className","id","controller"];
ZmPopupMenu.prototype=new DwtMenu;
ZmPopupMenu.prototype.constructor=ZmPopupMenu;
ZmPopupMenu.prototype.isZmPopupMenu=true;
ZmPopupMenu.prototype.toString=function(){
return"ZmPopupMenu"
};
ZmPopupMenu.prototype.addSelectionListener=function(i,a,e){
var t=this._menuItems[i];
if(t){
t.addSelectionListener(a,e)
}};
ZmPopupMenu.prototype.removeSelectionListener=function(a,t){
var e=this._menuItems[a];
if(e){
e.removeSelectionListener(t)
}};
ZmPopupMenu.prototype.popup=function(t,e,i,a){
t=t?t:0;
e=(e!=null)?e:Dwt.DEFAULT;
i=(i!=null)?i:Dwt.DEFAULT;
DwtMenu.prototype.popup.call(this,t,e,i,a)
};
ZmPopupMenu.prototype.enable=function(a,e){
a=(a instanceof Array)?a:[a];
for(var t=0;
t<a.length;
t++){
if(this._menuItems[a[t]]){
this._menuItems[a[t]].setEnabled(e)
}}};
ZmPopupMenu.prototype.enableAll=function(e){
for(var t in this._menuItems){
this._menuItems[t].setEnabled(e)
}};
ZmPopupMenu.prototype.createMenuItem=function(o,i,t){
var e=this._menuItems[o]=new DwtMenuItem({
parent:this,style:i.style,radioGroupId:i.radioGroupId,id:(t||i.id||o),index:i.index}
);
if(i.image){
e.setImage(i.image)
}
if(i.text){
e.setText(i.text)
}
if(i.shortcut){
e.setShortcut(appCtxt.getShortcutHint(this._keyMap,i.shortcut))
}
e.setEnabled(i.enabled!==false);
e.setData(ZmOperation.MENUITEM_ID,o);
var a=e.getRowElement();
if(a){
a.setAttribute("id","POPUP_"+e.getHTMLElId().toString().replace(/\s/g,""))
}
return e
};
ZmPopupMenu.prototype.getMenuItem=function(e){
return this._menuItems[e]
};
ZmPopupMenu.prototype.setItemVisible=function(a,t){
var e=this.getMenuItem(a);
if(!e){
return
}
e.setVisible(t)
};
ZmPopupMenu.prototype.getMenuItems=function(){
return this._menuItems
};
ZmPopupMenu.prototype.getSearchMenu=function(){
var e=this.getMenuItem(ZmOperation.SEARCH_MENU);
if(e){
return e.getMenu()
}};
ZmPopupMenu.prototype.getContactGroupMenu=function(){
var e=this.getMenuItem(ZmOperation.CONTACTGROUP_MENU);
if(e){
return e.getMenu()
}};
ZmPopupMenu.prototype.createSeparator=function(){
new DwtMenuItem({
parent:this,style:DwtMenuItem.SEPARATOR_STYLE}
)
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmActionMenu")){
ZmActionMenu=function(t){
var a=t.id||(t.context?ZmId.getMenuId(t.context,t.menuType):null);
ZmPopupMenu.call(this,t.parent,null,a,t.controller);
var e=t.menuItems;
if(!e){
e=[ZmOperation.TAG_MENU,ZmOperation.PRINT,ZmOperation.DELETE]
}else{
if(e==ZmOperation.NONE){
e=null
}}
this.opList=ZmOperation.filterOperations(e);
this._context=t.context;
this._menuType=t.menuType;
this._menuItems=ZmOperation.createOperations(this,this.opList,t.overrides)
};
ZmActionMenu.prototype=new ZmPopupMenu;
ZmActionMenu.prototype.constructor=ZmActionMenu;
ZmActionMenu.prototype.isZmActionMenu=true;
ZmActionMenu.prototype.toString=function(){
return"ZmActionMenu"
};
ZmActionMenu.prototype.createOp=function(i,a,t){
a.id=this._context?ZmId.getMenuItemId(this._context,i,this._menuType):null;
var e=this.createMenuItem(i,a,t);
e.setData(ZmOperation.KEY_ID,i);
return e
};
ZmActionMenu.prototype.addOp=function(e){
ZmOperation.addOperation(this,e,this._menuItems)
};
ZmActionMenu.prototype.removeOp=function(e){
ZmOperation.removeOperation(this,e,this._menuItems)
};
ZmActionMenu.prototype.getOp=function(e){
return this.getMenuItem(e)
};
ZmActionMenu.prototype.getTagMenu=function(){
var e=this.getMenuItem(ZmOperation.TAG_MENU);
if(e){
return e.getMenu()
}};
ZmActionMenu.prototype._menuItemId=function(e){
return e.getData(ZmOperation.KEY_ID)
};
ZmActionMenu.prototype.removeMenuItemById=function(t){
var e=this.getMenuItem(t);
this.removeMenuItem(e)
};
ZmActionMenu.prototype.removeMenuItem=function(e){
if(!e){
return
}
this.removeChild(e);
e.dispose()
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmToolBar")){
ZmToolBar=function(t){
if(arguments.length==0){
return
}
t.posStyle=t.posStyle||DwtControl.ABSOLUTE_STYLE;
DwtToolBar.call(this,t);
var e=t.controller||appCtxt.getCurrentController();
if(e){
this._controller=e;
this._keyMap=this._controller.getKeyMapName()
}
this._refElementId=t.refElementId;
this._buttons={}
};
ZmToolBar.prototype=new DwtToolBar;
ZmToolBar.prototype.constructor=ZmToolBar;
ZmToolBar.prototype.isZmToolBar=true;
ZmToolBar.prototype.toString=function(){
return"ZmToolBar"
};
ZmToolBar.prototype.addSelectionListener=function(t,a){
var e=this._buttons[t];
if(e){
e.addSelectionListener(a)
}};
ZmToolBar.prototype.removeSelectionListener=function(t,a){
var e=this._buttons[t];
if(e){
e.removeSelectionListener(a)
}};
ZmToolBar.prototype.getButton=function(e){
return this._buttons[e]
};
ZmToolBar.prototype.setItemVisible=function(t,a){
var e=this.getButton(t);
if(!e){
return
}
e.setVisible(a)
};
ZmToolBar.prototype.setData=function(t,e,a){
this._buttons[t].setData(e,a)
};
ZmToolBar.prototype.enable=function(a,e){
a=(a instanceof Array)?a:[a];
for(var t=0;
t<a.length;
t++){
if(this._buttons[a[t]]){
this._buttons[a[t]].setEnabled(e)
}}};
ZmToolBar.prototype.setSelected=function(a){
var e=this._selectedId?this._buttons[this._selectedId]:null;
var t=a?this._buttons[a]:null;
if(e){
e.setSelected(false);
e._noFocus=false
}
if(t){
t.setSelected(true);
t._noFocus=true;
this._selectedId=a
}};
ZmToolBar.prototype.enableAll=function(e){
for(var t in this._buttons){
this._buttons[t].setEnabled(e)
}};
ZmToolBar.prototype.createButton=function(a,t){
var e=this._buttons[a]=this._createButton(t);
if(t.image){
e.setImage(t.image)
}
if(t.text){
e.setText(t.text)
}
if(t.tooltip){
e.setToolTipContent(ZmOperation.getToolTip(a,this._keyMap)||t.tooltip,true)
}
e.setEnabled(t.enabled!==false);
e.setData("_buttonId",a);
if(t.menu){
e.setMenu(t.menu,false,null,t.menuAbove)
}
return e
};
ZmToolBar.prototype.SEPARATOR_TEMPLATE="share.Widgets#ZmToolBarSeparator";
ZmToolBar.prototype._createButton=function(i,t){
var a=i.ctor||DwtToolBarButton;
var e=new a({
parent:this,style:i.style,className:t,index:i.index,id:i.id,template:i.template}
);
e.textPrecedence=i.textPrecedence;
e.imagePrecedence=i.imagePrecedence;
e.whatToShow=i.whatToShow;
return e
};
ZmToolBar.prototype._buttonId=function(e){
return e.getData("_buttonId")
};
ZmToolBar.prototype._createPrecedenceList=function(){
this._precedenceList=[];
for(var i in this._buttons){
if(ZmOperation.isSep(i)){
continue
}
var e=this._buttons[i];
var a=e.textPrecedence;
if(a){
this._precedenceList.push({
id:i,type:"text",precedence:a}
)
}
var t=e.imagePrecedence;
if(t){
this._precedenceList.push({
id:i,type:"image",precedence:t}
)
}}
this._precedenceList.sort(function(n,o){
return(n.precedence>o.precedence)?1:(n.precedence<o.precedence)?-1:0
}
)
};
ZmToolBar.prototype.setSize=function(t,e){
var a=this.getSize();
if(a&&(t!=a.x||e!=a.y)){
DwtToolBar.prototype.setSize.apply(this,arguments)
}};
ZmToolBar.prototype.adjustSize=function(){
if(!this._refElementId||!this._inited){
return
}
if(!this._refElement){
this._refElement=document.getElementById(this._refElementId)
}
var e=this._refElement&&this._refElement.parentNode;
var a;
if(e&&((a=e.offsetWidth)>=30)){
var t=this._refElement.style;
t.maxWidth=t.width=(a-30);
t.overflow="hidden"
}};
ZmToolBar.prototype._addItem=function(a,t,e){
DwtToolBar.prototype._addItem.apply(this,arguments)
};
ZmToolBar.prototype._removeItem=function(a,t,e){
DwtToolBar.prototype._removeItem.apply(this,arguments)
};
ZmToolBar.addButton=function(o){
if(o.setting&&!appCtxt.get(o.setting)){
return
}
var a;
var t=o.parent._htmlElId+(o.tdId||o.buttonId);
var e=document.getElementById(t);
if(e){
var n={
parent:o.parent,index:o.index,style:o.style,id:o.buttonId,template:o.template,className:o.className};
a=(o.type&&o.type=="toolbar")?(new DwtToolBarButton(n)):(new DwtButton(n));
var i=Dwt.getAttr(e,"hint");
ZmToolBar._setButtonStyle(a,i,o.lbl,o.icon);
if(o.tooltip){
a.setToolTipContent(o.tooltip,true)
}
a.reparentHtmlElement(t)
}
return a
};
ZmToolBar._setButtonStyle=function(e,i,a,t){
if(i=="text"){
e.whatToShow={
showText:true}
}else{
if(i=="icon"){
e.whatToShow={
showImage:true}
}else{
e.whatToShow={
showImage:true,showText:true}
}}
e.setText(a);
e.setImage(t)
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmButtonToolBar")){
ZmButtonToolBar=function(a){
if(arguments.length==0){
return
}
if(!a.className&&(a.controller&&a.controller._elementsToHide==ZmAppViewMgr.LEFT_NAV)){
a.className="ZToolbar itemToolbar"
}
a.className=a.className||"ZToolbar";
a.id=a.context?ZmId.getToolbarId(a.context,a.toolbarType):null;
ZmToolBar.call(this,a);
this._context=a.context;
this._toolbarType=a.toolbarType;
this._buttonStyle=a.buttonClassName;
var h=a.buttons;
if(!h){
h=[ZmOperation.NEW_MENU,ZmOperation.TAG_MENU,ZmOperation.PRINT,ZmOperation.DELETE]
}else{
if(h==ZmOperation.NONE){
h=null
}}
this.opList=ZmOperation.filterOperations(h);
this._zimletButtonLocation=this.opList.length;
var s=ZmOperation.filterOperations(a.secondaryButtons);
if(s&&s.length){
this.opList.push(ZmOperation.SEP,ZmOperation.ACTIONS_MENU)
}
var o=ZmOperation.filterOperations(a.rightSideButtons);
if(o.length>0||a.addTextElement){
this.opList.push(ZmOperation.FILLER)
}
if(a.addTextElement){
this.opList.push(ZmOperation.TEXT)
}
if(o.length>0){
this.opList=this.opList.concat(o)
}
this._buttons=ZmOperation.createOperations(this,this.opList,a.overrides);
var r=this.getButton(ZmOperation.TEXT);
if(r){
r.addClassName("itemCountText")
}
if(s&&s.length){
var n=this._secondaryButton=this.getButton(ZmOperation.ACTIONS_MENU);
n.noMenuBar=true;
var t=this._secondaryButtonMenu=new ZmActionMenu({
parent:n,menuItems:ZmOperation.NONE,context:this._context,controller:a.controller}
);
var i=ZmOperation.createOperations(t,s,a.overrides);
n.setMenu(t);
for(var e in i){
this._buttons[e]=i[e]
}
this.opList=this.opList.concat(s)
}
this._createPrecedenceList();
this._inited=true
};
ZmButtonToolBar.prototype=new ZmToolBar;
ZmButtonToolBar.prototype.constructor=ZmButtonToolBar;
ZmButtonToolBar.prototype.isZmButtonToolBar=true;
ZmButtonToolBar.prototype.toString=function(){
return"ZmButtonToolBar"
};
ZmButtonToolBar.prototype.createOp=function(n,o){
o.className=this._buttonStyle;
var e;
if(n==ZmOperation.TEXT){
var n;
if(this._context){
var a=this._toolbarType?[this._context,this._toolbarType].join("_"):this._context;
n=[ZmId.WIDGET,AjxStringUtil.toMixed(a,"_",true),AjxStringUtil.toMixed(n,"_")].join("")
}
o.textClassName=o.textClassName||"ZWidgetTitle";
e=new DwtText({
parent:this,className:o.textClassName,id:n}
)
}else{
o.id=o.domId||(this._context?ZmId.getButtonId(this._context,n,this._toolbarType):null);
o.textPrecedence=ZmOperation.getProp(n,"textPrecedence");
o.iconPrecedence=ZmOperation.getProp(n,"iconPrecedence");
var i=o.showImageInToolbar||false;
var t=!i||o.showTextInToolbar;
i=i||!o.text;
t=t||!o.image;
o.image=i&&o.image;
o.whatToShow={
showImage:i,showText:t};
e=this.createButton(n,o)
}
e.setData(ZmOperation.KEY_ID,n);
return e
};
ZmButtonToolBar.prototype.createZimletOp=function(t,e){
e.index=this._zimletButtonLocation;
return this.createOp(t,e)
};
ZmButtonToolBar.prototype.addOp=function(t,e){
if(this.getOp(t)){
return
}
ZmOperation.addOperation(this,t,this._buttons,e);
AjxUtil.arrayAdd(this.opList,t,e)
};
ZmButtonToolBar.prototype.removeOp=function(e){
ZmOperation.removeOperation(this,e,this._buttons);
AjxUtil.arrayRemove(this.opList,e)
};
ZmButtonToolBar.prototype.getOp=function(e){
return this.getButton(e)
};
ZmButtonToolBar.prototype.getTagMenu=function(){
var e=this.getButton(ZmOperation.TAG_MENU);
if(e){
return e.getMenu()
}};
ZmButtonToolBar.prototype.getActionsMenu=function(){
return this._secondaryButtonMenu
};
ZmButtonToolBar.prototype.getActionsButton=function(){
return this._secondaryButton
};
ZmButtonToolBar.prototype._buttonId=function(e){
return e.getData(ZmOperation.KEY_ID)
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmNavToolBar")){
ZmNavToolBar=function(t){
t.className=t.className||"ZmNavToolBar";
var e=(t.hasText!==false);
t.buttons=this._getButtons(e);
t.toolbarType=ZmId.TB_NAV;
t.posStyle=t.posStyle||DwtControl.STATIC_STYLE;
ZmButtonToolBar.call(this,t);
if(e){
this._textButton=this.getButton(ZmOperation.TEXT)
}};
ZmNavToolBar.prototype=new ZmButtonToolBar;
ZmNavToolBar.prototype.constructor=ZmNavToolBar;
ZmNavToolBar.prototype.toString=function(){
return"ZmNavToolBar"
};
ZmNavToolBar.prototype.enable=function(o,e){
ZmButtonToolBar.prototype.enable.call(this,o,e);
if(!e){
if(!(o instanceof Array)){
o=[o]
}
for(var a=0;
a<o.length;
a++){
var t=this.getButton(o[a]);
if(t){
t.setToolTipContent(null)
}}}};
ZmNavToolBar.prototype.setToolTip=function(t,a){
var e=this.getButton(t);
if(e){
e.setToolTipContent(a)
}};
ZmNavToolBar.prototype.setText=function(e){
if(!this._textButton){
return
}
this._textButton.setText(e)
};
ZmNavToolBar.prototype._getButtons=function(e){
var t=[];
t.push(ZmOperation.PAGE_BACK);
if(e){
t.push(ZmOperation.TEXT)
}
t.push(ZmOperation.PAGE_FORWARD);
return t
};
ZmNavToolBar.prototype.createOp=function(t,e){
e.textClassName="ZWidgetTitle ZmNavToolBarTitle";
return ZmButtonToolBar.prototype.createOp.apply(this,arguments)
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmSearchToolBar")){
ZmSearchToolBar=function(e){
if(arguments.length==0){
return
}
e.className=e.className||"ZmSearchToolbar";
DwtComposite.apply(this,arguments);
this._button={};
this._origin=ZmId.SEARCH;
this._searchMenu=null;
this._createHtml()
};
ZmSearchToolBar.prototype=new DwtComposite;
ZmSearchToolBar.prototype.constructor=ZmSearchToolBar;
ZmSearchToolBar.prototype.isZmSearchToolBar=true;
ZmSearchToolBar.prototype.toString=function(){
return"ZmSearchToolBar"
};
ZmSearchToolBar.prototype.role="toolbar";
ZmSearchToolBar.TYPES_BUTTON="TYPES";
ZmSearchToolBar.SEARCH_BUTTON="SEARCH";
ZmSearchToolBar.SAVE_BUTTON="SAVE";
ZmSearchToolBar.SEARCH_MENU_BUTTON=ZmSearchToolBar.TYPES_BUTTON;
ZmSearchToolBar.MENU_ITEMS=[];
ZmSearchToolBar.SETTING={};
ZmSearchToolBar.MSG_KEY={};
ZmSearchToolBar.TT_MSG_KEY={};
ZmSearchToolBar.ICON={};
ZmSearchToolBar.SHARE_ICON={};
ZmSearchToolBar.ID={};
ZmSearchToolBar.DISABLE_OFFLINE={};
ZmSearchToolBar.addMenuItem=function(t,e){
if(e.msgKey){
ZmSearchToolBar.MSG_KEY[t]=e.msgKey
}
if(e.tooltipKey){
ZmSearchToolBar.TT_MSG_KEY[t]=e.tooltipKey
}
if(e.icon){
ZmSearchToolBar.ICON[t]=e.icon
}
if(e.shareIcon){
ZmSearchToolBar.SHARE_ICON[t]=e.shareIcon
}
if(e.setting){
ZmSearchToolBar.SETTING[t]=e.setting
}
if(e.id){
ZmSearchToolBar.ID[t]=e.id
}
if(e.disableOffline){
ZmSearchToolBar.DISABLE_OFFLINE[t]=e.disableOffline
}
if(e.index==null||e.index<0||e.index>=ZmSearchToolBar.MENU_ITEMS.length){
ZmSearchToolBar.MENU_ITEMS.push(t)
}else{
ZmSearchToolBar.MENU_ITEMS.splice(e.index,0,t)
}};
ZmSearchToolBar.prototype.removeMenuItem=function(a){
var t=this._searchMenu;
if(t){
var e=t.getItemById(ZmOperation.MENUITEM_ID,a);
if(e){
t.removeChild(e);
e.dispose()
}
this._cleanupSeparators(t)
}};
ZmSearchToolBar.prototype._cleanupSeparators=function(s){
var o=this._button[ZmSearchToolBar.TYPES_BUTTON];
s=s||(o&&o.getMenu());
if(!s){
return
}
var t=s.getItems();
var n=[];
for(var a=0;
a<t.length;
a++){
var e=t[a];
if(e.isSeparator()&&(a==0||a==t.length-1||t[a-1].isSeparator())){
n.push(e)
}}
for(var a=0;
a<n.length;
a++){
var e=n[a];
s.removeChild(e);
e.dispose()
}};
ZmSearchToolBar.prototype.getSearchField=function(){
return this._searchField.getInputElement()
};
ZmSearchToolBar.prototype.registerEnterCallback=function(e){
this._enterCallback=e
};
ZmSearchToolBar.prototype.addSelectionListener=function(t,a){
var e=this._button[t];
if(e){
e.addSelectionListener(a)
}};
ZmSearchToolBar.prototype.getButton=function(e){
return this._button[e]
};
ZmSearchToolBar.prototype.getButtons=function(){
return AjxUtil.values(this._button)
};
ZmSearchToolBar.prototype.focus=function(){
if(this._searchField){
this._searchField.focus();
this._searchField.moveCursorToEnd()
}};
ZmSearchToolBar.prototype.blur=function(){
if(this._searchField){
this._searchField.blur()
}};
ZmSearchToolBar.prototype.setEnabled=function(e){
if(this._searchField){
this._searchField.setEnabled(e)
}
for(var t in this._button){
this._button[t].setEnabled(e)
}};
ZmSearchToolBar.prototype.setSearchFieldValue=function(e){
if(this._searchField&&e!=this.getSearchFieldValue()){
this._searchField.setValue(e)
}};
ZmSearchToolBar.prototype.getSearchFieldValue=function(){
return this._searchField?this._searchField.getValue():null
};
ZmSearchToolBar.prototype._createHtml=function(){};
ZmSearchToolBar.prototype._handleKeyDown=function(t){
var e=DwtKeyEvent.getCharCode(t);
if(e==3||e==13){
return this._handleEnterKeyPress(t)
}
return true
};
ZmSearchToolBar.prototype._handleEnterKeyPress=function(e){
if(this._enterCallback){
this._enterCallback.run({
ev:e,zimletEvent:"onKeyPressSearchField",origin:this._origin}
)
}
return false
};
ZmSearchToolBar.prototype.initAutocomplete=function(){
if(!this._acList){
this._acList=new ZmAutocompleteListView(this._getAutocompleteParams());
this._acList.handle(this.getSearchField())
}};
ZmSearchToolBar.prototype._getAutocompleteParams=function(){
var e={
dataClass:new ZmSearchAutocomplete(),matchValue:"matchText",delims:[" ","\t"],delimCodes:[3,13,9],separator:" ",keyDownCallback:this._handleKeyDown.bind(this),contextId:this.toString(),locationCallback:this._getAcLocation.bind(this)};
return e
};
ZmSearchToolBar.prototype.getAutocompleteListView=function(){
return this._acList
};
ZmSearchToolBar.prototype._getAcLocation=function(){
var i=this._searchField.getInputElement();
if(!i){
return{}
}
var a=Dwt.getLocation(i);
var t=Dwt.getSize(i);
var o=AjxStringUtil.getWidth(i.value);
if(AjxEnv.isWindows&&(AjxEnv.isFirefox||AjxEnv.isSafari||AjxEnv.isChrome)){
o=o*1.2
}
var e=a.x+o;
var n=a.y+t.y;
DwtPoint.tmp.set(e,n);
return DwtPoint.tmp
};
ZmMainSearchToolBar=function(t){
if(arguments.length==0){
return
}
ZmSearchToolBar.apply(this,arguments);
var e={
msgKey:"searchShared",tooltipKey:"searchShared",icon:"Group",setting:ZmSetting.SHARING_ENABLED,id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.SEARCH_SHARED),disableOffline:true};
ZmSearchToolBar.addMenuItem(ZmId.SEARCH_SHARED,e);
if(appCtxt.multiAccounts){
var e={
msgKey:"searchAllAccounts",icon:"Globe",id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.SEARCH_ALL_ACCOUNTS)};
ZmSearchToolBar.addMenuItem(ZmId.SEARCH_ALL_ACCOUNTS,e)
}};
ZmMainSearchToolBar.prototype=new ZmSearchToolBar;
ZmMainSearchToolBar.prototype.constructor=ZmMainSearchToolBar;
ZmMainSearchToolBar.prototype.isZmMainSearchToolBar=true;
ZmMainSearchToolBar.prototype.toString=function(){
return"ZmMainSearchToolBar"
};
ZmMainSearchToolBar.prototype.TEMPLATE="share.Widgets#ZmSearchToolBar";
ZmMainSearchToolBar.CUSTOM_ITEM_ID="CustomSearchItem";
ZmMainSearchToolBar.CUSTOM_BUTTON="CUSTOM";
ZmMainSearchToolBar.prototype._createHtml=function(){
var s=appCtxt.isExternalAccount();
this.getHtmlElement().innerHTML=AjxTemplate.expand(this.TEMPLATE,{
id:this._htmlElId}
);
var a=this._htmlElId+"_inputField";
var t=document.getElementById(a);
if(t){
this._searchField=new DwtInputField({
parent:this,hint:ZmMsg.searchInput,label:ZmMsg.searchInput,inputId:ZmId.SEARCH_INPUTFIELD}
);
var r=this._searchField.getInputElement();
r.className="search_input";
this._searchField.reparentHtmlElement(a);
this._searchField._showHint();
this._searchField.addListener(DwtEvent.ONFOCUS,this._onInputFocus.bind(this));
this._searchField.addListener(DwtEvent.ONBLUR,this._onInputBlur.bind(this));
if(s){
this._searchField.setEnabled(false)
}}
var o=this._htmlElId+"_searchMenuButton";
var h=document.getElementById(o);
if(h){
var n=ZmSearchToolBar.MENU_ITEMS[0];
var i=this._button[ZmSearchToolBar.TYPES_BUTTON]=ZmToolBar.addButton({
parent:this,index:0,tdId:"_searchMenuButton",buttonId:ZmId.getButtonId(ZmId.SEARCH,ZmId.SEARCH_MENU),tooltip:ZmMsg[ZmSearchToolBar.TT_MSG_KEY[n]],icon:ZmSearchToolBar.ICON[n]}
);
var e=new AjxCallback(this,this._createSearchMenu);
i.setMenu(e,false,DwtMenuItem.RADIO_STYLE);
i.reparentHtmlElement(o);
if(s){
i.setEnabled(false)
}}
this._button[ZmSearchToolBar.SEARCH_BUTTON]=ZmToolBar.addButton({
parent:this,tdId:"_searchButton",buttonId:ZmId.getButtonId(ZmId.SEARCH,ZmId.SEARCH_SEARCH),lbl:"",icon:"Search2",template:"dwt.Widgets#ZImageOnlyButton",className:"ZImageOnlyButton",tooltip:ZmMsg.searchTooltip}
);
this._button[ZmSearchToolBar.SAVE_BUTTON]=ZmToolBar.addButton({
parent:this,setting:ZmSetting.SAVED_SEARCHES_ENABLED,tdId:"_saveButton",buttonId:ZmId.getButtonId(ZmId.SEARCH,ZmId.SEARCH_SAVE),lbl:ZmMsg.save,icon:"Save",type:"toolbar",tooltip:ZmMsg.saveSearchTooltip}
);
if(s){
if(this._button[ZmSearchToolBar.SEARCH_BUTTON]){
this._button[ZmSearchToolBar.SEARCH_BUTTON].setEnabled(false)
}
if(this._button[ZmSearchToolBar.SAVE_BUTTON]){
this._button[ZmSearchToolBar.SAVE_BUTTON].setEnabled(false)
}}};
ZmMainSearchToolBar.prototype._createSearchMenu=function(){
var r=this._searchMenu=new DwtMenu({
parent:this._button[ZmSearchToolBar.TYPES_BUTTON],className:"ActionMenu",id:ZmId.getMenuId(ZmId.SEARCH)}
);
var t;
if(this._customSearchMenuItems){
for(var o=0;
o<this._customSearchMenuItems.length;
o++){
var a=this._customSearchMenuItems[o];
this._createCustomSearchMenuItem(r,a.icon,a.text,a.listener)
}}
var s={
parent:r,enabled:true,radioGroupId:0,style:DwtMenuItem.RADIO_STYLE};
for(var o=0;
o<ZmSearchToolBar.MENU_ITEMS.length;
o++){
var h=ZmSearchToolBar.MENU_ITEMS[o];
if(h==ZmId.SEARCH_SHARED){
if(ZmSearchToolBar.MENU_ITEMS.length<=1){
continue
}
t=new DwtMenuItem({
parent:r,style:DwtMenuItem.SEPARATOR_STYLE}
)
}
var n=ZmSearchToolBar.SETTING[h];
if(n&&!appCtxt.get(n)){
continue
}
var e=(h==ZmId.SEARCH_SHARED||h==ZmId.SEARCH_ALL_ACCOUNTS);
if(e){
s.style=DwtMenuItem.CHECK_STYLE
}
s.style=(h==ZmId.SEARCH_SHARED||h==ZmId.SEARCH_ALL_ACCOUNTS)?DwtMenuItem.CHECK_STYLE:DwtMenuItem.RADIO_STYLE;
s.imageInfo=ZmSearchToolBar.ICON[h];
s.text=ZmMsg[ZmSearchToolBar.MSG_KEY[h]];
s.id=ZmSearchToolBar.ID[h];
t=DwtMenuItem.create(s);
t.setData(ZmOperation.MENUITEM_ID,h);
if(!e){
t.setAttribute("aria-label",ZmMsg[ZmSearchToolBar.TT_MSG_KEY[h]])
}}
this._checkSharedMenuItem();
appCtxt.getSettings().getSetting(ZmSetting.SEARCH_INCLUDES_SHARED).addChangeListener(this._checkSharedMenuItem.bind(this));
appCtxt.getSearchController()._addMenuListeners(r);
this._searchMenuCreated=true;
return r
};
ZmMainSearchToolBar.prototype.setOfflineState=function(e){
var o=this._button[ZmSearchToolBar.TYPES_BUTTON];
var s=o&&o.getMenu();
var a=s.getItemCount();
for(var t=0;
t<a;
t++){
var n=s.getItem(t);
if(n){
var r=n.getData(ZmOperation.MENUITEM_ID);
if(r&&ZmSearchToolBar.DISABLE_OFFLINE[r]){
n.setEnabled(!e)
}}}};
ZmMainSearchToolBar.prototype.getSearchType=function(){
var e=this._button[ZmSearchToolBar.TYPES_BUTTON];
var i=e&&e.getMenu();
var t=i?i.getSelectedItem()||i.getItems()[0]:null;
var a=t?t.getData(ZmMainSearchToolBar.CUSTOM_ITEM_ID)||t.getData(ZmOperation.MENUITEM_ID):ZmSearchToolBar.MENU_ITEMS[0];
return a
};
ZmMainSearchToolBar.prototype.createCustomSearchBtn=function(r,h,i,t){
if(!this._customSearchListener){
this._customSearchListener=this._customSearchBtnListener.bind(this)
}
var c=document.getElementById(this._htmlElId+"_customSearchButton");
if(c){
var n={
icon:r,text:h,listener:i};
var s=this._button[ZmSearchToolBar.CUSTOM_BUTTON];
if(!s){
s=this._button[ZmSearchToolBar.CUSTOM_BUTTON]=ZmToolBar.addButton({
parent:this,tdId:"_customSearchButton",buttonId:ZmId.getButtonId(ZmId.SEARCH,ZmId.SEARCH_CUSTOM),lbl:h,icon:r}
);
s.setData(ZmMainSearchToolBar.CUSTOM_ITEM_ID,n);
s.addSelectionListener(this._customSearchListener);
var d=document.getElementById(this._htmlElId+"_customSearchButtonSep");
if(d){
Dwt.setVisible(d,true)
}}else{
var a=s&&s.getMenu();
var l;
var o={
parent:a,enabled:true,style:DwtMenuItem.RADIO_STYLE,radioGroupId:0,id:t};
if(!a){
var e=s.getData(ZmMainSearchToolBar.CUSTOM_ITEM_ID);
a=new DwtMenu({
parent:s,className:"ActionMenu",id:ZmId.getMenuId(ZmId.SEARCH,ZmId.SEARCH_CUSTOM)}
);
s.setMenu(a,false,DwtMenuItem.RADIO_STYLE);
o.imageInfo=e.icon;
o.text=e.text;
l=DwtMenuItem.create(o);
l.setData(ZmMainSearchToolBar.CUSTOM_ITEM_ID,e);
l.setData(ZmOperation.MENUITEM_ID,ZmId.SEARCH_CUSTOM);
l.setChecked(true,true);
l.addSelectionListener(this._customSearchListener)
}
o.imageInfo=r;
o.text=h;
l=DwtMenuItem.create(o);
l.setData(ZmMainSearchToolBar.CUSTOM_ITEM_ID,n);
l.addSelectionListener(this._customSearchListener)
}}else{
if(this._searchMenuCreated){
var a=this._button[ZmSearchToolBar.TYPES_BUTTON].getMenu();
this._createCustomSearchMenuItem(a,r,h,i,t)
}else{
if(!this._customSearchMenuItems){
this._customSearchMenuItems=[]
}
this._customSearchMenuItems.push({
icon:r,text:h,listener:i,id:t}
)
}}};
ZmMainSearchToolBar.prototype._createCustomSearchMenuItem=function(s,t,n,i,r){
var e=s.getItem(0);
var o={
parent:s,imageInfo:t,text:n,enabled:true,style:DwtMenuItem.RADIO_STYLE,radioGroupId:0,index:0,id:r};
e=DwtMenuItem.create(o);
var a={
icon:t,text:n,listener:i};
e.setData(ZmMainSearchToolBar.CUSTOM_ITEM_ID,a);
e.setData(ZmOperation.MENUITEM_ID,ZmId.SEARCH_CUSTOM);
e.addSelectionListener(this._customSearchListener);
if(!(e&&e.getData(ZmMainSearchToolBar.CUSTOM_ITEM_ID))){
e=new DwtMenuItem({
parent:s,style:DwtMenuItem.SEPARATOR_STYLE,index:1}
)
}};
ZmMainSearchToolBar.prototype._customSearchBtnListener=function(i){
var a=i.item;
if(!a){
return
}
var o=a.getData(ZmMainSearchToolBar.CUSTOM_ITEM_ID);
if(!o){
return
}
if(this._customSearchBtn){
if(a.isDwtMenuItem){
if(i.detail!=DwtMenuItem.CHECKED){
return
}
this._customSearchBtn.setToolTipContent(o[1]);
this._customSearchBtn.setData(ZmMainSearchToolBar.CUSTOM_ITEM_ID,o)
}
o.listener.run(i)
}else{
var t=this._button[ZmSearchToolBar.TYPES_BUTTON];
t.setToolTipContent(o.text);
var n=a.parent;
var e=n?n.getItemById(ZmOperation.MENUITEM_ID,ZmId.SEARCH_SHARED):null;
if(e){
e.setChecked(false,true);
e.setEnabled(false)
}
t.setImage(o.icon);
t.setText(o.text)
}};
ZmMainSearchToolBar.prototype._onInputFocus=function(e){
this._setInputExpanded(true)
};
ZmMainSearchToolBar.prototype._onInputBlur=function(t){
var e=appCtxt.getKeyboardMgr().getFocusObj();
if(e!=this._button[ZmSearchToolBar.TYPES_BUTTON]&&e!=this._button[ZmSearchToolBar.SEARCH_BUTTON]){
this._setInputExpanded(false)
}};
ZmMainSearchToolBar.prototype._setInputExpanded=function(a){
var t=this._searchField.getInputElement();
var e=a?"search_input-expanded":"search_input";
if(AjxEnv.isIE9){
setTimeout(function(){
t.className=e
}
,0)
}else{
t.className=e
}};
ZmMainSearchToolBar.prototype._checkSharedMenuItem=function(){
var e=this._searchMenu&&this._searchMenu.getItemById(ZmOperation.MENUITEM_ID,ZmId.SEARCH_SHARED);
if(e){
e.setChecked(appCtxt.get(ZmSetting.SEARCH_INCLUDES_SHARED))
}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmSearchResultsToolBar")){
ZmSearchResultsToolBar=function(e){
e.posStyle=Dwt.ABSOLUTE_STYLE;
e.className="ZmSearchResultsToolBar";
this._controller=e.controller;
ZmSearchToolBar.apply(this,arguments);
this._bubbleId={};
this._origin=ZmId.SEARCHRESULTS;
this.initAutocomplete()
};
ZmSearchResultsToolBar.prototype=new ZmSearchToolBar;
ZmSearchResultsToolBar.prototype.constructor=ZmSearchResultsToolBar;
ZmSearchResultsToolBar.prototype.isZmSearchResultsToolBar=true;
ZmSearchResultsToolBar.prototype.toString=function(){
return"ZmSearchResultsToolBar"
};
ZmSearchResultsToolBar.prototype.TEMPLATE="share.Widgets#ZmSearchResultsToolBar";
ZmSearchResultsToolBar.prototype.PENDING_BUBBLE_CONTAINER_CLASS="addrBubbleContainerPending";
ZmSearchResultsToolBar.prototype.PENDING_SEARCH_DELAY=2000;
ZmSearchResultsToolBar.prototype._createHtml=function(){
this.getHtmlElement().innerHTML=AjxTemplate.expand(this.TEMPLATE,{
id:this._htmlElId}
);
var e=this._controller.getCurrentViewId();
this._label=document.getElementById(this._htmlElId+"_label");
this._iconDiv=document.getElementById(this._htmlElId+"_icon");
var i=this._htmlElId+"_inputFieldCell";
var a=document.getElementById(i);
if(a){
var t={
parent:this,strictMode:false,id:DwtId.makeId(ZmId.WIDGET_INPUT,e),bubbleAddedCallback:this._bubbleChange.bind(this),bubbleRemovedCallback:this._bubbleChange.bind(this),noOutsideListening:true,type:ZmId.SEARCH};
var o=this._searchField=new ZmAddressInputField(t);
o.reparentHtmlElement(a);
var n=this._searchField.getInputElement();
n.className="search_results_input"
}
this._button[ZmSearchToolBar.SEARCH_BUTTON]=ZmToolBar.addButton({
parent:this,tdId:"_searchButton",buttonId:ZmId.getButtonId(e,ZmId.SEARCHRESULTS_SEARCH),lbl:ZmMsg.search,tooltip:ZmMsg.searchTooltip}
);
this._button[ZmSearchToolBar.SAVE_BUTTON]=ZmToolBar.addButton({
parent:this,setting:ZmSetting.SAVED_SEARCHES_ENABLED,tdId:"_saveButton",buttonId:ZmId.getButtonId(e,ZmId.SEARCHRESULTS_SAVE),lbl:ZmMsg.save,tooltip:ZmMsg.saveSearchTooltip}
)
};
ZmSearchResultsToolBar.prototype.initAutocomplete=function(){
if(!this._acList){
this._acList=new ZmAutocompleteListView(this._getAutocompleteParams());
this._acList.handle(this.getSearchField(),this._searchField._htmlElId)
}
this._searchField.setAutocompleteListView(this._acList)
};
ZmSearchResultsToolBar.prototype._getAutocompleteParams=function(){
var e=ZmSearchToolBar.prototype._getAutocompleteParams.apply(this,arguments);
e.options={
noBubbleParse:true};
return e
};
ZmSearchResultsToolBar.prototype.setSearch=function(c){
this._settingSearch=true;
this._searchField.clear(true);
var r=c.getTokens();
if(r&&r.length){
for(var o=0,n=r.length;
o<n;
o++){
var a=r[o],e=r[o-1],t=r[o+1];
var l=(e&&e.op==ZmParsedQuery.GROUP_CLOSE)||(t&&t.op==ZmParsedQuery.GROUP_OPEN);
var h=a.toString(l);
if(h){
var s=this._searchField.addBubble({
address:h,noParse:true}
);
this._bubbleId[h]=s.id
}}}
this._settingSearch=false
};
ZmSearchResultsToolBar.prototype.setLabel=function(t,e){
this._label.innerHTML=t;
this._iconDiv.style.display=e?"inline-block":"none"
};
ZmSearchResultsToolBar.prototype._bubbleChange=function(t,a){
this._clearPendingSearchTimeout();
if(this._settingSearch){
return
}
var e=new ZmParsedQuery(t.address);
var i=e.getTokens();
if(i&&i[0]&&i[0].type==ZmParsedQuery.COND){
return
}
Dwt.addClass(this._searchField._elRef,this.PENDING_BUBBLE_CONTAINER_CLASS);
this._pendingSearchTimeout=setTimeout(this._handleEnterKeyPress.bind(this),this.PENDING_SEARCH_DELAY)
};
ZmSearchResultsToolBar.prototype._clearPendingSearchTimeout=function(){
if(!this._pendingSearchTimeout){
return
}
clearTimeout(this._pendingSearchTimeout);
this._pendingSearchTimeout=null
};
ZmSearchResultsToolBar.prototype._handleKeyDown=function(e){
this._clearPendingSearchTimeout();
ZmSearchToolBar.prototype._handleKeyDown.apply(this,arguments)
};
ZmSearchResultsToolBar.prototype._handleEnterKeyPress=function(e){
this._clearPendingSearchTimeout();
Dwt.delClass(this._searchField._elRef,this.PENDING_BUBBLE_CONTAINER_CLASS);
this.setLabel(ZmMsg.searching);
ZmSearchToolBar.prototype._handleEnterKeyPress.apply(this,arguments)
};
ZmSearchResultsToolBar.prototype.addSearchTerm=function(t,s,e){
var l=t.toString(e);
var n;
if(e){
var h=this._searchField._getBubbleList();
var o=h.getArray();
for(var a=0;
a<o.length;
a++){
if(h.isSelected(o[a])){
n=a;
break
}}}
var r=this._searchField.addBubble({
address:l,addClass:t.type,skipNotify:s,index:n}
);
if(r){
this._bubbleId[l]=r.id;
return r.id
}};
ZmSearchResultsToolBar.prototype.removeSearchTerm=function(t,e){
if(!t){
return
}
var a=t.toString();
var i=t.isZmSearchToken?this._bubbleId[a]:t;
if(i){
this._searchField.removeBubble(i,e);
delete this._bubbleId[a]
}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmSearchResultsFilterPanel")){
ZmSearchResultsFilterPanel=function(e){
e.className=e.className||"ZmSearchResultsFilterPanel";
e.posStyle=Dwt.ABSOLUTE_STYLE;
DwtComposite.apply(this,arguments);
if(!ZmSearchResultsFilterPanel.BASIC_FILTER){
ZmSearchResultsFilterPanel._initConstants()
}
this._controller=e.controller;
this._resultsApp=e.resultsApp;
this._viewId=this._controller.getCurrentViewId();
this._checkbox={};
this._menu={};
this._advancedFilterHandlers={};
this._createHtml();
this._addFilters();
this._addConditionals()
};
ZmSearchResultsFilterPanel.prototype=new DwtComposite;
ZmSearchResultsFilterPanel.prototype.constructor=ZmSearchResultsFilterPanel;
ZmSearchResultsFilterPanel.prototype.isZmSearchResultsFilterPanel=true;
ZmSearchResultsFilterPanel.prototype.toString=function(){
return"ZmSearchResultsFilterPanel"
};
ZmSearchResultsFilterPanel.prototype.TEMPLATE="share.Widgets#ZmSearchResultsFilterPanel";
ZmSearchResultsFilterPanel.BASIC="BasicFilter";
ZmSearchResultsFilterPanel.ADVANCED="AdvancedFilter";
ZmSearchResultsFilterPanel.ID_ATTACHMENT="ATTACHMENT";
ZmSearchResultsFilterPanel.ID_FLAGGED="FLAGGED";
ZmSearchResultsFilterPanel.ID_UNREAD="UNREAD";
ZmSearchResultsFilterPanel.ID_TO="TO";
ZmSearchResultsFilterPanel.ID_FROM="FROM";
ZmSearchResultsFilterPanel.ID_DATE="DATE";
ZmSearchResultsFilterPanel.ID_DATE_BRIEFCASE="DATE_BRIEFCASE";
ZmSearchResultsFilterPanel.ID_DATE_SENT="DATE_SENT";
ZmSearchResultsFilterPanel.ID_SIZE="SIZE";
ZmSearchResultsFilterPanel.ID_STATUS="STATUS";
ZmSearchResultsFilterPanel.ID_TAG="TAG";
ZmSearchResultsFilterPanel.ID_FOLDER="FOLDER";
ZmSearchResultsFilterPanel.ALL_APPS="ALL";
ZmSearchResultsFilterPanel.BASIC_FILTER_LIST=[ZmSearchResultsFilterPanel.ID_ATTACHMENT,ZmSearchResultsFilterPanel.ID_FLAGGED,ZmSearchResultsFilterPanel.ID_UNREAD];
ZmSearchResultsFilterPanel.ADVANCED_FILTER_LIST=[ZmSearchResultsFilterPanel.ID_FROM,ZmSearchResultsFilterPanel.ID_TO,ZmSearchResultsFilterPanel.ID_DATE,ZmSearchResultsFilterPanel.ID_DATE_BRIEFCASE,ZmSearchResultsFilterPanel.ID_DATE_SENT,ZmSearchResultsFilterPanel.ID_ATTACHMENT,ZmSearchResultsFilterPanel.ID_SIZE,ZmSearchResultsFilterPanel.ID_STATUS,ZmSearchResultsFilterPanel.ID_TAG,ZmSearchResultsFilterPanel.ID_FOLDER];
ZmSearchResultsFilterPanel._initConstants=function(){
ZmSearchResultsFilterPanel.BASIC_FILTER={};
ZmSearchResultsFilterPanel.BASIC_FILTER[ZmSearchResultsFilterPanel.ID_ATTACHMENT]={
text:ZmMsg.filterHasAttachment,term:new ZmSearchToken("has","attachment"),apps:[ZmApp.MAIL,ZmApp.CALENDAR,ZmApp.TASKS]};
ZmSearchResultsFilterPanel.BASIC_FILTER[ZmSearchResultsFilterPanel.ID_FLAGGED]={
text:ZmMsg.filterIsFlagged,term:new ZmSearchToken("is","flagged")};
ZmSearchResultsFilterPanel.BASIC_FILTER[ZmSearchResultsFilterPanel.ID_UNREAD]={
text:ZmMsg.filterisUnread,term:new ZmSearchToken("is","unread")};
ZmSearchResultsFilterPanel.ADVANCED_FILTER={};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_FROM]={
text:ZmMsg.filterReceivedFrom,handler:"ZmAddressSearchFilter",searchOp:"from"};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_TO]={
text:ZmMsg.filterSentTo,handler:"ZmAddressSearchFilter",searchOp:"to"};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_DATE]={
text:ZmMsg.filterDate,handler:"ZmApptDateSearchFilter",apps:[ZmApp.CALENDAR,ZmApp.TASKS]};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_DATE_SENT]={
text:ZmMsg.filterDateSent,handler:"ZmDateSearchFilter"};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_DATE_BRIEFCASE]={
text:ZmMsg.filterDate,handler:"ZmDateSearchFilter",apps:[ZmApp.BRIEFCASE]};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_ATTACHMENT]={
text:ZmMsg.filterAttachments,handler:"ZmAttachmentSearchFilter",searchOp:"type",apps:[ZmApp.MAIL,ZmApp.CALENDAR,ZmApp.TASKS]};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_SIZE]={
text:ZmMsg.filterSize,handler:"ZmSizeSearchFilter",apps:[ZmApp.MAIL,ZmApp.BRIEFCASE]};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_STATUS]={
text:ZmMsg.filterStatus,handler:"ZmStatusSearchFilter",searchOp:"is"};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_TAG]={
text:ZmMsg.filterTag,handler:"ZmTagSearchFilter",searchOp:"tag",apps:ZmSearchResultsFilterPanel.ALL_APPS,precondition:(appCtxt.getTagTree()&&appCtxt.getTagTree().size()>0)};
ZmSearchResultsFilterPanel.ADVANCED_FILTER[ZmSearchResultsFilterPanel.ID_FOLDER]={
text:ZmMsg.filterFolder,handler:"ZmFolderSearchFilter",searchOp:"in",noMenu:true,apps:ZmSearchResultsFilterPanel.ALL_APPS}
};
ZmSearchResultsFilterPanel.CONDITIONALS=[ZmParsedQuery.COND_AND,ZmParsedQuery.COND_OR,ZmParsedQuery.COND_NOT,ZmParsedQuery.GROUP_OPEN,ZmParsedQuery.GROUP_CLOSE];
ZmSearchResultsFilterPanel.prototype._createHtml=function(){
this.getHtmlElement().innerHTML=AjxTemplate.expand(this.TEMPLATE,{
id:this._htmlElId}
);
this._basicPanel=document.getElementById(this._htmlElId+"_basicPanel");
this._basicContainer=document.getElementById(this._htmlElId+"_basic");
this._advancedPanel=document.getElementById(this._htmlElId+"_advancedPanel");
this._advancedContainer=document.getElementById(this._htmlElId+"_advanced");
this._conditionalsContainer=document.getElementById(this._htmlElId+"_conditionals")
};
ZmSearchResultsFilterPanel.prototype._getApplicableFilters=function(h,r){
var o=[];
for(var s=0;
s<h.length;
s++){
var t=h[s];
var a=r[t];
a.index=s;
if(a.precondition!=null){
var n=a.precondition;
var l=(n===true||n===false)?n:(typeof(n)=="function")?n():appCtxt.get(n);
if(!l){
continue
}}
var e=(a.apps==ZmSearchResultsFilterPanel.ALL_APPS)?a.apps:AjxUtil.arrayAsHash(a.apps||[ZmApp.MAIL]);
if((a.apps==ZmSearchResultsFilterPanel.ALL_APPS)||e[this._resultsApp]){
o.push({
id:t,filter:a}
)
}}
return o
};
ZmSearchResultsFilterPanel.prototype._addFilters=function(){
var a=this._getApplicableFilters(ZmSearchResultsFilterPanel.BASIC_FILTER_LIST,ZmSearchResultsFilterPanel.BASIC_FILTER);
Dwt.setVisible(this._basicPanel,(a.length>0));
for(var t=0;
t<a.length;
t++){
var e=a[t];
this._addBasicFilter(e.id,e.filter.text)
}
var a=this._getApplicableFilters(ZmSearchResultsFilterPanel.ADVANCED_FILTER_LIST,ZmSearchResultsFilterPanel.ADVANCED_FILTER);
Dwt.setVisible(this._advancedPanel,(a.length>0));
this._addAdvancedFilters()
};
ZmSearchResultsFilterPanel.prototype._addAdvancedFilters=function(t){
ZmSearchResultsFilterPanel.attTypes=t;
var o=this._getApplicableFilters(ZmSearchResultsFilterPanel.ADVANCED_FILTER_LIST,ZmSearchResultsFilterPanel.ADVANCED_FILTER);
Dwt.setVisible(this._advancedPanel,(o.length>0));
for(var a=0;
a<o.length;
a++){
var e=o[a];
this._addAdvancedFilter(e.id,e.filter.text)
}};
ZmSearchResultsFilterPanel.prototype._addBasicFilter=function(a,t){
var e=this._checkbox[a]=new DwtCheckbox({
parent:this,className:"filter",parentElement:this._basicContainer,id:DwtId.makeId(ZmId.WIDGET_CHECKBOX,this._viewId,ZmSearchResultsFilterPanel.BASIC,a)}
);
e.setText(t);
e.addSelectionListener(this._checkboxListener.bind(this,a))
};
ZmSearchResultsFilterPanel.prototype._checkboxListener=function(o,i){
var e=this._checkbox[o];
if(!e){
return
}
var a=ZmSearchResultsFilterPanel.BASIC_FILTER[o];
var t=a&&a.term;
if(t){
if(e.isSelected()){
this._controller.addSearchTerm(t)
}else{
this._controller.removeSearchTerm(t)
}}};
ZmSearchResultsFilterPanel.prototype._addAdvancedFilter=function(r,s){
var t,n;
t=new DwtButton({
parent:this,parentElement:this._advancedContainer,id:ZmId.getButtonId(this._viewId,r)}
);
t.setText(s);
var e=t.getHtmlElement();
var i=e&&e.firstChild;
if(i&&i.tagName&&(i.tagName.toLowerCase()=="table")){
i.style.width="100%"
}
var a=ZmSearchResultsFilterPanel.ADVANCED_FILTER[r];
if(!a.noMenu){
var o={
parent:t,id:ZmId.getMenuId(this._viewId,r),style:DwtMenu.POPUP_STYLE};
n=new AjxCallback(this,this._createMenu,[o,r,a]);
t.setMenu({
menu:n,menuPopupStyle:DwtButton.MENU_POPUP_STYLE_CASCADE}
)
}else{
this._createFilter(t,r,a)
}};
ZmSearchResultsFilterPanel.prototype._createMenu=function(i,o,t,e){
var a=this._menu[o]=new DwtMenu(i);
this._createFilter(a,o,t);
return a
};
ZmSearchResultsFilterPanel.prototype._createFilter=function(parent,id,filter){
var handler=filter&&filter.handler;
var updateCallback=this.update.bind(this,id);
var params={
parent:parent,id:id,viewId:this._viewId,searchOp:filter.searchOp,updateCallback:updateCallback,resultsApp:this._resultsApp};
var filterClass=eval(handler);
this._advancedFilterHandlers[id]=new filterClass(params)
};
ZmSearchResultsFilterPanel.prototype.update=function(e,h,n){
if(!e||!h){
return
}
h=AjxUtil.toArray(h);
var c=this._controller.getSearchTerms();
if(c&&c.length){
var t=AjxUtil.arrayAsHash(AjxUtil.map(c,function(i){
return i.op
}
));
var a=t[ZmParsedQuery.COND_OR];
for(var r=0;
r<c.length;
r++){
var o=c[r];
for(var s=0;
s<h.length;
s++){
var l=h[s];
if(this._areExclusiveTerms(o,l,a)){
this._controller.removeSearchTerm(o,true)
}}}}
for(var r=0;
r<h.length;
r++){
this._controller.addSearchTerm(h[r])
}
if(this._menu[e]&&!n){
this._menu[e].popdown()
}};
ZmSearchResultsFilterPanel.prototype.reset=function(){
for(var o in this._checkbox){
var e=this._checkbox[o];
if(e){
e.setSelected(false)
}}
for(var t in this._advancedFilterHandlers){
var a=this._advancedFilterHandlers[t];
if(a&&a.reset){
a.reset()
}}};
ZmSearchResultsFilterPanel.prototype.resetBasicFiltersToQuery=function(o){
var e=ZmSearchResultsFilterPanel.BASIC_FILTER_LIST;
for(var t=0;
t<e.length;
t++){
var n=e[t];
cb=this._checkbox[n];
if(!cb){
continue
}
var a=ZmSearchResultsFilterPanel.BASIC_FILTER[n];
cb.setSelected(o.indexOf(a.term.toString())!==-1)
}};
ZmSearchResultsFilterPanel.prototype._areExclusiveTerms=function(t,e,a){
t=this._translateTerm(t);
e=this._translateTerm(e);
return(ZmParsedQuery.areExclusive(t,e)||(!a&&(t.op==e.op)&&!ZmParsedQuery.isMultiple(t)))
};
ZmSearchResultsFilterPanel.prototype._translateTerm=function(t){
var e;
if(t.op=="appt-start"){
var a=t.arg.substr(0,1);
e=(a=="<")?"before":(a==">")?"after":"date"
}
return e?new ZmSearchToken(e,t.arg):t
};
ZmSearchResultsFilterPanel.prototype._addConditionals=function(){
var o=ZmSearchResultsFilterPanel.CONDITIONALS;
for(var a=0;
a<o.length;
a++){
var n=o[a];
var t={
parent:appCtxt.getShell(),parentElement:this._conditionalsContainer,address:n,addClass:ZmParsedQuery.COND_OP[n]?ZmParsedQuery.COND:ZmParsedQuery.GROUP};
var e=new ZmAddressBubble(t);
e.addSelectionListener(this._conditionalSelectionListener.bind(this))
}};
ZmSearchResultsFilterPanel.prototype._conditionalSelectionListener=function(t){
var e=t.item;
this._controller.addSearchTerm(new ZmSearchToken(e.address),true,true)
};
ZmSearchFilter=function(e){
if(arguments.length==0){
return
}
this.parent=e.parent;
this.id=e.id;
this._viewId=e.viewId;
this._searchOp=e.searchOp;
this._updateCallback=e.updateCallback;
this._resultsApp=e.resultsApp;
this._setUi(e.parent)
};
ZmSearchFilter.prototype.isZmSearchFilter=true;
ZmSearchFilter.prototype.toString=function(){
return"ZmSearchFilter"
};
ZmSearchFilter.DATA_KEY="DATA";
ZmSearchFilter.prototype._setUi=function(e){};
ZmSearchFilter.prototype._selectionListener=function(t){
var a=t&&t.dwtObj&&t.dwtObj.getData(ZmSearchFilter.DATA_KEY);
if(a&&this._searchOp){
var e=new ZmSearchToken(this._searchOp,a);
this._updateCallback(e)
}};
ZmAddressSearchFilter=function(e){
ZmSearchFilter.apply(this,arguments)
};
ZmAddressSearchFilter.prototype=new ZmSearchFilter;
ZmAddressSearchFilter.prototype.constructor=ZmAddressSearchFilter;
ZmAddressSearchFilter.prototype.isZmAddressSearchFilter=true;
ZmAddressSearchFilter.prototype.toString=function(){
return"ZmAddressSearchFilter"
};
ZmAddressSearchFilter.ADDRESS="address";
ZmAddressSearchFilter.DOMAIN="domain";
ZmAddressSearchFilter.ADDR={};
ZmAddressSearchFilter.ADDR.from=AjxEmailAddress.FROM;
ZmAddressSearchFilter.ADDR.to=AjxEmailAddress.TO;
ZmAddressSearchFilter.INPUT_WIDTH=25;
ZmAddressSearchFilter.NUM_DOMAINS_TO_FETCH=100;
ZmAddressSearchFilter.NUM_DOMAINS_TO_SHOW=10;
ZmAddressSearchFilter.prototype._addInput=function(n,o,i){
var a=new DwtMenuItem({
parent:n,id:ZmId.getMenuItemId(this._viewId,this.id,ZmAddressSearchFilter.ADDRESS)}
);
a.setText(o);
var t=new DwtMenu({
parent:a,id:ZmId.getMenuId(this._viewId,this.id,ZmAddressSearchFilter.ADDRESS),style:DwtMenu.GENERIC_WIDGET_STYLE}
);
a.setMenu({
menu:t,menuPopupStyle:DwtButton.MENU_POPUP_STYLE_CASCADE}
);
var e=new DwtInputField({
parent:t,id:DwtId.makeId(ZmId.WIDGET_INPUT,this._viewId,this.id,ZmAddressSearchFilter.ADDRESS),size:i}
);
return e
};
ZmAddressSearchFilter.prototype._addComboBox=function(n,o,a){
var t=new DwtMenuItem({
parent:n,id:ZmId.getMenuItemId(this._viewId,this.id,ZmAddressSearchFilter.DOMAIN)}
);
t.setText(o);
var e=new DwtMenu({
parent:t,id:ZmId.getMenuId(this._viewId,this.id,ZmAddressSearchFilter.DOMAIN),style:DwtMenu.GENERIC_WIDGET_STYLE}
);
t.setMenu({
menu:e,menuPopupStyle:DwtButton.MENU_POPUP_STYLE_CASCADE}
);
var i=new DwtComboBox({
parent:e,id:DwtId.makeId(ZmId.WIDGET_COMBOBOX,this._viewId,this.id,ZmAddressSearchFilter.ADDRESS),inputParams:{
size:a}
,maxRows:ZmAddressSearchFilter.NUM_DOMAINS_TO_SHOW,layout:DwtMenu.LAYOUT_SCROLL,autoScroll:true}
);
i.addChangeListener(this._domainChangeListener.bind(this));
i.input.addListener(DwtEvent.ONKEYUP,this._keyUpListener.bind(this));
e.addPopdownListener(i.popdown.bind(i));
return i
};
ZmAddressSearchFilter.prototype._initAutocomplete=function(){
if(appCtxt.get(ZmSetting.CONTACTS_ENABLED)||appCtxt.get(ZmSetting.GAL_ENABLED)||appCtxt.isOffline){
var t={
dataClass:appCtxt.getAutocompleter(),matchValue:ZmAutocomplete.AC_VALUE_EMAIL,compCallback:this._acCompHandler.bind(this),separator:"",contextId:[this._viewId,this.id].join("-")};
var e=new ZmAutocompleteListView(t);
e.handle(this._addressBox.getInputElement())
}};
ZmAddressSearchFilter.prototype._acCompHandler=function(){
this._doUpdate(this._addressBox.getValue());
this._addressBox.clear()
};
ZmAddressSearchFilter.prototype._domainChangeListener=function(e){
if(e&&e.dwtObj){
this._doUpdate(e._args.newValue)
}};
ZmAddressSearchFilter.prototype._keyUpListener=function(e){
var t=DwtKeyEvent.getCharCode(e);
if(t==13||t==3){
this._doUpdate(this._domainBox.getText())
}};
ZmAddressSearchFilter.prototype._doUpdate=function(e){
if(e){
var t=new ZmSearchToken(this._searchOp,e);
this._updateCallback(t)
}};
ZmAddressSearchFilter.prototype._setUi=function(t){
this._addressBox=this._addInput(t,ZmMsg.address,ZmAddressSearchFilter.INPUT_WIDTH);
this._initAutocomplete();
if(!ZmSearchResultsFilterPanel.domains){
var e=new ZmDomainList();
e.search("",ZmAddressSearchFilter.NUM_DOMAINS_TO_FETCH,this._addDomains.bind(this,t))
}else{
this._addDomains(t,ZmSearchResultsFilterPanel.domains)
}};
ZmAddressSearchFilter.prototype._addDomains=function(n,e){
ZmSearchResultsFilterPanel.domains=e;
this._domainBox=this._addComboBox(n,ZmMsg.domain,ZmAddressSearchFilter.INPUT_WIDTH);
if(e&&e.length){
for(var t=0;
t<e.length;
t++){
var a=e[t];
var o=ZmAddressSearchFilter.ADDR[this._searchOp];
if(a.hasAddress(o)){
this._domainBox.add(a.name,a.name)
}}}};
ZmAddressSearchFilter.prototype.reset=function(){
if(this._domainBox){
this._domainBox.setText("")
}
if(this._addressBox){
this._addressBox.setValue("")
}};
ZmDateSearchFilter=function(e){
this._calendar={};
ZmSearchFilter.apply(this,arguments);
this._formatter=AjxDateFormat.getDateInstance(AjxDateFormat.SHORT)
};
ZmDateSearchFilter.prototype=new ZmSearchFilter;
ZmDateSearchFilter.prototype.constructor=ZmDateSearchFilter;
ZmDateSearchFilter.prototype.isZmDateSearchFilter=true;
ZmDateSearchFilter.prototype.toString=function(){
return"ZmDateSearchFilter"
};
ZmDateSearchFilter.BEFORE="BEFORE";
ZmDateSearchFilter.AFTER="AFTER";
ZmDateSearchFilter.ON="ON";
ZmDateSearchFilter.TEXT_KEY={};
ZmDateSearchFilter.TEXT_KEY[ZmDateSearchFilter.BEFORE]="filterBefore";
ZmDateSearchFilter.TEXT_KEY[ZmDateSearchFilter.AFTER]="filterAfter";
ZmDateSearchFilter.TEXT_KEY[ZmDateSearchFilter.ON]="filterOn";
ZmDateSearchFilter.OP={};
ZmDateSearchFilter.OP[ZmDateSearchFilter.BEFORE]="before";
ZmDateSearchFilter.OP[ZmDateSearchFilter.AFTER]="after";
ZmDateSearchFilter.OP[ZmDateSearchFilter.ON]="date";
ZmDateSearchFilter.prototype._createCalendar=function(o,a){
var t=new DwtMenuItem({
parent:o,id:ZmId.getMenuItemId(this._viewId,this.id,a)}
);
t.setText(ZmMsg[ZmDateSearchFilter.TEXT_KEY[a]]);
var e=new DwtMenu({
parent:t,id:ZmId.getMenuId(this._viewId,this.id,a),style:DwtMenu.CALENDAR_PICKER_STYLE}
);
t.setMenu({
menu:e,menuPopupStyle:DwtButton.MENU_POPUP_STYLE_CASCADE}
);
var i=new DwtCalendar({
parent:e,id:DwtId.makeId(ZmId.WIDGET_CALENDAR,this._viewId,this.id,a)}
);
i.addSelectionListener(this._doUpdate.bind(this,a));
return i
};
ZmDateSearchFilter.prototype._doUpdate=function(a){
var i=this._calendar[a];
var e=this._formatter.format(i.getDate());
var t=this._getSearchTerm(a,e);
this._updateCallback(t,true)
};
ZmDateSearchFilter.prototype._getTypes=function(){
return[ZmDateSearchFilter.BEFORE,ZmDateSearchFilter.AFTER,ZmDateSearchFilter.ON]
};
ZmDateSearchFilter.prototype._getSearchTerm=function(t,e){
return new ZmSearchToken(ZmDateSearchFilter.OP[t],e)
};
ZmDateSearchFilter.prototype._setUi=function(a){
var t=this._getTypes();
for(var e=0;
e<t.length;
e++){
var o=t[e];
this._calendar[o]=this._createCalendar(a,o)
}};
ZmApptDateSearchFilter=function(e){
ZmDateSearchFilter.apply(this,arguments)
};
ZmApptDateSearchFilter.prototype=new ZmDateSearchFilter;
ZmApptDateSearchFilter.prototype.constructor=ZmApptDateSearchFilter;
ZmApptDateSearchFilter.prototype.isZmApptDateSearchFilter=true;
ZmApptDateSearchFilter.prototype.toString=function(){
return"ZmApptDateSearchFilter"
};
ZmApptDateSearchFilter.prototype._getSearchTerm=function(t,e){
if(t==ZmDateSearchFilter.BEFORE){
return new ZmSearchToken("appt-start","<"+e)
}else{
if(t==ZmDateSearchFilter.AFTER){
return new ZmSearchToken("appt-end",">"+e)
}else{
if(t==ZmDateSearchFilter.ON){
return[new ZmSearchToken("appt-start","<="+e),new ZmSearchToken("appt-end",">="+e)]
}}}};
ZmAttachmentSearchFilter=function(e){
ZmSearchFilter.apply(this,arguments)
};
ZmAttachmentSearchFilter.prototype=new ZmSearchFilter;
ZmAttachmentSearchFilter.prototype.constructor=ZmAttachmentSearchFilter;
ZmAttachmentSearchFilter.prototype.isZmAttachmentSearchFilter=true;
ZmAttachmentSearchFilter.prototype.toString=function(){
return"ZmAttachmentSearchFilter"
};
ZmAttachmentSearchFilter.prototype._setUi=function(t){
if(!ZmSearchResultsFilterPanel.attTypes){
var e=new ZmAttachmentTypeList();
e.load(this._addAttachmentTypes.bind(this,t))
}else{
this._addAttachmentTypes(t,ZmSearchResultsFilterPanel.attTypes)
}};
ZmAttachmentSearchFilter.prototype._addAttachmentTypes=function(s,t){
ZmSearchResultsFilterPanel.attTypes=t;
var n={};
if(t&&t.length){
for(var a=0;
a<t.length;
a++){
var e=t[a];
if(n[e.desc]){
continue
}
var o=new DwtMenuItem({
parent:s,id:ZmId.getMenuItemId(this._viewId,this.id,e.type.replace("/",":"))}
);
o.setText(e.desc);
o.setImage(e.image);
o.setData(ZmSearchFilter.DATA_KEY,e.query||e.type);
n[e.desc]=true
}}else{
var o=new DwtMenuItem({
parent:s}
);
o.setText(ZmMsg.noAtt)
}
s.addSelectionListener(this._selectionListener.bind(this))
};
ZmAttachmentSearchFilter.prototype._selectionListener=function(a){
var i=a&&a.dwtObj&&a.dwtObj.getData(ZmSearchFilter.DATA_KEY);
if(i&&this._searchOp){
var t=[];
if(i==ZmMimeTable.APP_ZIP||i==ZmMimeTable.APP_ZIP2){
var e=(i==ZmMimeTable.APP_ZIP)?ZmMimeTable.APP_ZIP2:ZmMimeTable.APP_ZIP;
t.push(new ZmSearchToken(this._searchOp,i));
t.push(new ZmSearchToken(ZmParsedQuery.COND_OR));
t.push(new ZmSearchToken(this._searchOp,e))
}else{
t.push(new ZmSearchToken(this._searchOp,i))
}
this._updateCallback(t)
}};
ZmSizeSearchFilter=function(e){
this._input={};
ZmSearchFilter.apply(this,arguments)
};
ZmSizeSearchFilter.prototype=new ZmSearchFilter;
ZmSizeSearchFilter.prototype.constructor=ZmSizeSearchFilter;
ZmSizeSearchFilter.prototype.isZmSizeSearchFilter=true;
ZmSizeSearchFilter.prototype.toString=function(){
return"ZmSizeSearchFilter"
};
ZmSizeSearchFilter.LARGER="LARGER";
ZmSizeSearchFilter.SMALLER="SMALLER";
ZmSizeSearchFilter.UNIT="unit";
ZmSizeSearchFilter.COMBO_INPUT_WIDTH=2;
ZmSizeSearchFilter.TYPES=[ZmSizeSearchFilter.LARGER,ZmSizeSearchFilter.SMALLER];
ZmSizeSearchFilter.TEXT_KEY={};
ZmSizeSearchFilter.TEXT_KEY[ZmSizeSearchFilter.LARGER]="filterLarger";
ZmSizeSearchFilter.TEXT_KEY[ZmSizeSearchFilter.SMALLER]="filterSmaller";
ZmSizeSearchFilter.OP={};
ZmSizeSearchFilter.OP[ZmSizeSearchFilter.LARGER]="larger";
ZmSizeSearchFilter.OP[ZmSizeSearchFilter.SMALLER]="smaller";
ZmSizeSearchFilter.prototype._setUi=function(h){
var o=ZmSizeSearchFilter.TYPES;
for(var a=0;
a<o.length;
a++){
var s=o[a];
var n=new DwtMenuItem({
parent:h,id:ZmId.getMenuItemId(this._viewId,this.id,s)}
);
n.setText(ZmMsg[ZmSizeSearchFilter.TEXT_KEY[s]]);
var t=new DwtMenu({
parent:n,id:ZmId.getMenuId(this._viewId,this.id,s),style:DwtMenu.GENERIC_WIDGET_STYLE}
);
t.addClassName(this.toString()+"SubMenu");
n.setMenu({
menu:t,menuPopupStyle:DwtButton.MENU_POPUP_STYLE_CASCADE}
);
var e=this._input[s]=new DwtInputField({
parent:t,type:DwtInputField.FLOAT,errorIconStyle:DwtInputField.ERROR_ICON_LEFT,validationStyle:DwtInputField.CONTINUAL_VALIDATION,size:5}
);
e.setValidNumberRange(0,1000000);
var r=new DwtComboBox({
parent:e,parentElement:e.getInputElement().parentNode,id:DwtId.makeId(ZmId.WIDGET_COMBOBOX,this._viewId,this.id,s+ZmSizeSearchFilter.UNIT),inputParams:{
size:ZmSizeSearchFilter.COMBO_INPUT_WIDTH}
,useLabel:true,posStyle:DwtControl.ABSOLUTE_STYLE,className:this.toString()+"Combobox"}
);
e.addListener(DwtEvent.ONKEYUP,this._keyUpListener.bind(this,s,r));
r.addChangeListener(this._unitChangeListener.bind(this,s,r));
r.add(ZmMsg.kb,"KB",true);
r.add(ZmMsg.mb,"MB")
}};
ZmSizeSearchFilter.prototype._unitChangeListener=function(t,o,a){
var i=this._input[t].getValue();
if(i&&i!=""){
var e=new ZmSearchToken(ZmSizeSearchFilter.OP[t],i+o.getValue());
this._updateCallback(e)
}};
ZmSizeSearchFilter.prototype._keyUpListener=function(a,s,o){
var n=DwtKeyEvent.getCharCode(o);
var e=this._input[a];
if(n==13||n==3){
var i=e.getValidationError();
if(i){
appCtxt.setStatusMsg(i,ZmStatusView.LEVEL_WARNING)
}else{
var t=new ZmSearchToken(ZmSizeSearchFilter.OP[a],e.getValue()+s.getValue());
this._updateCallback(t)
}}};
ZmStatusSearchFilter=function(e){
ZmSearchFilter.apply(this,arguments)
};
ZmStatusSearchFilter.prototype=new ZmSearchFilter;
ZmStatusSearchFilter.prototype.constructor=ZmStatusSearchFilter;
ZmStatusSearchFilter.prototype.isZmStatusSearchFilter=true;
ZmStatusSearchFilter.prototype.toString=function(){
return"ZmStatusSearchFilter"
};
ZmStatusSearchFilter.prototype._setUi=function(n){
var e=ZmParsedQuery.IS_VALUES;
for(var t=0;
t<e.length;
t++){
var o=e[t];
var a=new DwtMenuItem({
parent:n,id:ZmId.getMenuItemId(this._viewId,this.id,o)}
);
a.setText(ZmMsg["QUERY_IS_"+o]);
a.setData(ZmSearchFilter.DATA_KEY,o)
}
n.addSelectionListener(this._selectionListener.bind(this))
};
ZmTagSearchFilter=function(e){
ZmSearchFilter.apply(this,arguments);
this._tagList=appCtxt.getTagTree();
if(this._tagList){
this._tagList.addChangeListener(this._tagChangeListener.bind(this))
}};
ZmTagSearchFilter.prototype=new ZmSearchFilter;
ZmTagSearchFilter.prototype.constructor=ZmTagSearchFilter;
ZmTagSearchFilter.prototype.isZmTagSearchFilter=true;
ZmTagSearchFilter.prototype.toString=function(){
return"ZmTagSearchFilter"
};
ZmTagSearchFilter.prototype._setUi=function(n){
this._menu=n;
var t=appCtxt.getTagTree().asList();
if(t&&t.length){
for(var a=0;
a<t.length;
a++){
var e=t[a];
if(e.id==ZmOrganizer.ID_ROOT){
continue
}
var o=new DwtMenuItem({
parent:n,id:ZmId.getMenuItemId(this._viewId,this.id,e.id)}
);
o.setText(e.getName());
o.setImage(e.getIconWithColor());
o.setData(ZmSearchFilter.DATA_KEY,e.getName(false,null,true))
}}
n.addSelectionListener(this._selectionListener.bind(this))
};
ZmTagSearchFilter.prototype._tagChangeListener=function(e){
if(this._menu){
this._menu.removeChildren();
this._setUi(this._menu)
}};
ZmFolderSearchFilter=function(t){
ZmSearchFilter.apply(this,arguments);
if(!ZmFolderSearchFilter.TEXT_KEY){
ZmFolderSearchFilter._initConstants()
}
var e=ZmMsg[ZmFolderSearchFilter.TEXT_KEY[this._resultsApp]]||ZmMsg.filterFolder;
t.parent.setText(e)
};
ZmFolderSearchFilter.prototype=new ZmSearchFilter;
ZmFolderSearchFilter.prototype.constructor=ZmFolderSearchFilter;
ZmFolderSearchFilter.prototype.isZmFolderSearchFilter=true;
ZmFolderSearchFilter.prototype.toString=function(){
return"ZmFolderSearchFilter"
};
ZmFolderSearchFilter._initConstants=function(e){
ZmFolderSearchFilter.TEXT_KEY={};
ZmFolderSearchFilter.TEXT_KEY[ZmApp.MAIL]="filterFolder";
ZmFolderSearchFilter.TEXT_KEY[ZmApp.CALENDAR]="filterCalendar";
ZmFolderSearchFilter.TEXT_KEY[ZmApp.CONTACTS]="filterAddressBook";
ZmFolderSearchFilter.TEXT_KEY[ZmApp.TASKS]="filterTasksFolder";
ZmFolderSearchFilter.TEXT_KEY[ZmApp.BRIEFCASE]="filterBriefcase"
};
ZmFolderSearchFilter.prototype._setUi=function(e){
var i=this._moveMenu=new DwtMenu({
parent:e,id:ZmId.getMenuId(this._viewId,this.id)}
);
i.getHtmlElement().style.width="auto";
e.setMenu({
menu:i,menuPopupStyle:DwtButton.MENU_POPUP_STYLE_CASCADE}
);
var t=this._folderChooser=new ZmFolderChooser({
parent:i,id:DwtId.makeId(ZmId.WIDGET_CHOOSER,this._viewId,this.id),hideNewButton:true}
);
var a=this._getMoveParams(t);
t.setupFolderChooser(a,this._selectionListener.bind(this))
};
ZmFolderSearchFilter.prototype._getMoveParams=function(e){
return{
overviewId:e.getOverviewId([this.toString(),this._resultsApp].join("_")),treeIds:[ZmApp.ORGANIZER[this._resultsApp]],noRootSelect:true,treeStyle:DwtTree.SINGLE_STYLE}
};
ZmFolderSearchFilter.prototype._selectionListener=function(t){
if(t){
var e=new ZmSearchToken("in",t.createQuery(true));
this._updateCallback(e);
this._moveMenu.popdown()
}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmTreeView")){
ZmTreeView=function(e){
if(arguments.length==0){
return
}
DwtTree.call(this,{
parent:e.parent,parentElement:e.parentElement,style:e.treeStyle,isCheckedByDefault:e.isCheckedByDefault,className:(e.className||"OverviewTree"),posStyle:e.posStyle,id:e.id}
);
this._headerClass=e.headerClass||"overviewHeader";
this.overviewId=e.overviewId;
this.type=e.type;
this.allowedTypes=e.allowedTypes;
this.allowedSubTypes=e.allowedSubTypes;
this._overview=appCtxt.getOverviewController().getOverview(this.overviewId);
this._dragSrc=e.dragSrc;
this._dropTgt=e.dropTgt;
this.actionSupported=e.actionSupported!==undefined?e.actionSupported:this._overview.actionSupported;
this.dynamicWidth=this._overview.dynamicWidth;
this._dataTree=null;
this._treeItemHash={};
this._idToOrganizer={}
};
ZmTreeView.KEY_TYPE="_type_";
ZmTreeView.KEY_ID="_treeId_";
ZmTreeView.COMPARE_FUNC={};
ZmTreeView.ADD_SEP={};
ZmTreeView.ADD_SEP[ZmFolder.ID_TRASH]=true;
ZmTreeView.MAX_ITEMS=50;
ZmTreeView.getSortIndex=function(s,t,e){
if(!e){
return null
}
var n=s.getItemCount();
var o=s.getItems();
for(var a=0;
a<o.length;
a++){
if(o[a]._isSeparator){
continue
}
var h=o[a].getData(Dwt.KEY_OBJECT);
if(!h){
continue
}
var r=e(t,h);
if(r==-1){
return a
}}
return a
};
ZmTreeView.prototype=new DwtTree;
ZmTreeView.prototype.constructor=ZmTreeView;
ZmTreeView.prototype.toString=function(){
return"ZmTreeView"
};
ZmTreeView.prototype.set=function(n){
this._showUnread=n.showUnread;
this._dataTree=n.dataTree;
this._optButton=n.optButton;
this.clearItems();
var t=this._dataTree.root;
var o=(appCtxt.multiAccounts&&(this.type==ZmOrganizer.SEARCH||this.type==ZmOrganizer.TAG));
var e=this._getHeaderTreeItemImage();
var i=this._headerItem=new DwtHeaderTreeItem({
parent:this,className:o?"DwtTreeItem":this._headerClass,imageInfo:e,id:ZmId.getTreeItemId(this.overviewId,null,this.type),optButton:n.optButton,dndScrollCallback:this._overview&&this._overview._dndScrollCallback,dndScrollId:this._overview&&this._overview._scrollableContainerId}
);
i._isHeader=true;
var a=ZmMsg[ZmOrganizer.LABEL[this.type]];
if(a){
i.setText(a)
}
i.setData(Dwt.KEY_ID,t.id);
i.setData(Dwt.KEY_OBJECT,t);
i.setData(ZmTreeView.KEY_ID,this.overviewId);
i.setData(ZmTreeView.KEY_TYPE,this.type);
if(this._dropTgt){
i.setDropTarget(this._dropTgt)
}
this._treeItemHash[t.id]=i;
i.getHtmlElement().style.overflow="hidden";
n.treeNode=i;
n.organizer=t;
this._render(n);
i.setExpanded(!n.collapsed,null,true);
if(!appCtxt.multiAccounts){
this.addSeparator()
}
if(appCtxt.getSkinHint("noOverviewHeaders")||this._hideHeaderTreeItem()){
i.setVisible(false,true)
}};
ZmTreeView.prototype.getTreeItemById=function(e){
return this._treeItemHash[e]
};
ZmTreeView.prototype.getHeaderItem=function(){
return this._headerItem
};
ZmTreeView.prototype.getSelected=function(){
if(this.isCheckedStyle){
var a=[];
for(var e in this._treeItemHash){
var t=this._treeItemHash[e];
if(t&&t.getChecked()){
a.push(t.getData(Dwt.KEY_OBJECT))
}}
return a
}else{
return(this.getSelectionCount()!=1)?null:this.getSelection()[0].getData(Dwt.KEY_OBJECT)
}};
ZmTreeView.prototype.setSelected=function(e,t,i){
var a=ZmOrganizer.getSystemId((e instanceof ZmOrganizer)?e.id:e);
if(!a||!this._treeItemHash[a]){
return
}
this.setSelection(this._treeItemHash[a],t,false,i)
};
ZmTreeView.prototype._render=function(params){
var org=params.organizer;
var children=org.children.getArray();
if(org.isDataSource(ZmAccount.TYPE_IMAP)){
children.sort(ZmImapAccount.sortCompare)
}else{
if(ZmTreeView.COMPARE_FUNC[this.type]){
if(appCtxt.isOffline&&this.type==ZmOrganizer.SEARCH){
var local=[];
for(var j=0;
j<children.length;
j++){
var child=children[j];
if(child&&child.type==ZmOrganizer.SEARCH&&!child.isOfflineGlobalSearch){
local.push(child)
}}
children=local
}
if(appCtxt.isChildWindow&&AjxEnv.isIE){
var children1=[];
for(var i=0,len=children.length;
i<len;
i++){
children1.push(children[i])
}
children=children1
}
children.sort(eval(ZmTreeView.COMPARE_FUNC[this.type]))
}}
var addSep=true;
var numItems=0;
var len=children.length;
if(params.startPos===undefined&&params.lastRenderedFolder){
for(var i=0,len=children.length;
i<len;
i++){
if(params.lastRenderedFolder==children[i]){
params.startPos=i+1;
break
}}}
for(var i=params.startPos||0;
i<len;
i++){
var child=children[i];
if(!child||(params.omit&&params.omit[child.nId])){
continue
}
if(!(params.include&&params.include[child.nId])){
if(!this._isAllowed(org,child)){
if(params.omitParents){
continue
}
var proxy=AjxUtil.createProxy(params);
proxy.treeNode=null;
proxy.organizer=child;
this._render(proxy);
continue
}}
if(child.numTotal==0&&(child.nId==ZmFolder.ID_SYNC_FAILURES)){
continue
}
var parentNode=params.treeNode;
var account=appCtxt.multiAccounts&&child.getAccount();
if(account&&account.isCalDavBased()&&child.parent.nId==ZmOrganizer.ID_CALENDAR){
parentNode=parentNode.parent
}
if(numItems>=ZmTreeView.MAX_ITEMS){
if(params.startPos){
params.startPos=i;
params.len=(params.startPos+ZmTreeView.MAX_ITEMS>=len)?len:0;
this._showRemainingFolders(params);
return
}else{
if(numItems>=ZmTreeView.MAX_ITEMS*2){
var orgs=ZmMsg[ZmOrganizer.LABEL[this.type]].toLowerCase();
var name=AjxMessageFormat.format(ZmMsg.showRemainingFolders,orgs);
child=new ZmFolder({
id:ZmFolder.ID_LOAD_FOLDERS,name:name,parent:org}
);
child._tooltip=AjxMessageFormat.format(ZmMsg.showRemainingFoldersTooltip,[(children.length-i),orgs]);
var ti=this._addNew(parentNode,child);
ti.enableSelection(true);
if(this.isCheckedStyle){
ti.showCheckBox(false)
}
params.lastRenderedFolder=children[i-1];
params.showRemainingFoldersNode=ti;
child._showFoldersCallback=new AjxCallback(this,this._showRemainingFolders,[params]);
if(this._dragSrc){
ti._dragHover=this._showRemainingFolders.bind(this,params)
}
return
}}}
if((org.nId==ZmOrganizer.ID_ROOT)&&child.link&&addSep){
params.treeNode.addSeparator();
addSep=false
}
this._addNew(parentNode,child,null,params.noTooltips,params.omit);
numItems++
}};
ZmTreeView.prototype._isAllowed=function(i,a){
if(!i){
return true
}
if(this.type===ZmOrganizer.SEARCH&&a.type===ZmOrganizer.SEARCH&&this._overview.appName){
var e=a.search.types&&a.search.types.getArray();
if(!e||e.length===0){
e=[ZmItem.MSG]
}
var t=AjxUtil.intersection(e,ZmApp.SEARCH_TYPES[this._overview.appName]||ZmApp.SEARCH_TYPES[appCtxt.getCurrentAppName()]);
if(t.length===0){
return false
}}
if(i.nId==ZmOrganizer.ID_ROOT){
return this.allowedTypes[a.type]
}
if(this.allowedTypes[a.type]){
return true
}
if(this.allowedSubTypes[a.type]){
return this._isAllowed(i.parent,i)
}
return false
};
ZmTreeView.prototype._addNew=function(r,u,h,d,a){
var t;
var m;
var e=(u.type==ZmOrganizer.FOLDER)&&appCtxt.getDataSourceCollection();
var c=e&&e.getByFolderId(u.nId);
var i=(c&&c.length>0)?c[0]:null;
if(i&&i.type==ZmAccount.TYPE_IMAP){
var s=appCtxt.isFamilyMbox?null:this._headerClass;
t=new DwtHeaderTreeItem({
parent:this,text:u.getName(),className:s}
)
}else{
if(!r){
var l=[];
var n=u.parent;
if(n){
while((r=this.getTreeItemById(n.id))==null){
l.push(n);
n=n.parent
}}
while(n=l.pop()){
r=this.getTreeItemById(n.parent.id);
m=ZmId.getTreeItemId(this.overviewId,n.id);
r=new DwtTreeItem({
parent:r,text:n.getName(),imageInfo:n.getIconWithColor(),forceNotifySelection:true,arrowDisabled:!this.actionSupported,dynamicWidth:this.dynamicWidth,dndScrollCallback:this._overview&&this._overview._dndScrollCallback,dndScrollId:this._overview&&this._overview._scrollableContainerId,id:m}
);
r.setData(Dwt.KEY_ID,n.id);
r.setData(Dwt.KEY_OBJECT,n);
r.setData(ZmTreeView.KEY_ID,this.overviewId);
r.setData(ZmTreeView.KEY_TYPE,n.type);
this._treeItemHash[n.id]=r;
this._idToOrganizer[m]=n.id
}}
var o={
parent:r,index:h,text:u.getName(this._showUnread),arrowDisabled:!this.actionSupported,dynamicWidth:this.dynamicWidth,dndScrollCallback:this._overview&&this._overview._dndScrollCallback,dndScrollId:this._overview&&this._overview._scrollableContainerId,imageInfo:u.getIconWithColor(),id:ZmId.getTreeItemId(this.overviewId,u.id)};
t=new DwtTreeItem(o);
this._idToOrganizer[o.id]=u.id
}
if(appCtxt.multiAccounts&&(u.type==ZmOrganizer.SEARCH||u.type==ZmOrganizer.TAG)){
t.addClassName("DwtTreeItemChildDiv")
}
t.setDndText(u.getName());
t.setData(Dwt.KEY_ID,u.id);
t.setData(Dwt.KEY_OBJECT,u);
t.setData(ZmTreeView.KEY_ID,this.overviewId);
t.setData(ZmTreeView.KEY_TYPE,u.type);
if(!d){
var f=u.getToolTip();
if(f){
t.setToolTipContent(f)
}}
if(this._dragSrc){
t.setDragSource(this._dragSrc)
}
if(this._dropTgt){
t.setDropTarget(this._dropTgt)
}
this._treeItemHash[u.id]=t;
if(ZmTreeView.ADD_SEP[u.nId]){
r.addSeparator()
}
if(u.children&&u.children.size()){
this._render({
treeNode:t,organizer:u,omit:a}
)
}
if(i&&i.type==ZmAccount.TYPE_IMAP){
t.setExpanded(!appCtxt.get(ZmSetting.COLLAPSE_IMAP_TREES))
}
return t
};
ZmTreeView.prototype.getNextData=function(t){
var r=this.getTreeItemById(t);
if(!r||!r.parent){
return null
}
while(r&&r.parent){
var o=r.parent;
if(!(o instanceof DwtTreeItem)){
return null
}
var e=o.getItems();
var l=null;
if(e&&e.length>1){
for(var n=0;
n<e.length;
n++){
var s=e[n];
if(s==r){
var h=this.findNext(r,e,n);
if(h){
return h
}
var a=this.findPrev(r,e,n);
if(a){
return a
}}}}
r=r.parent
}
return null
};
ZmTreeView.prototype.findNext=function(n,o,t){
for(var e=t+1;
e<o.length;
e++){
var a=o[e];
if(a&&a.getData){
return a.getData(Dwt.KEY_OBJECT)
}}
return null
};
ZmTreeView.prototype.findPrev=function(n,o,t){
for(var e=t-1;
e>=0;
e--){
var a=o[e];
if(a&&a.getData){
return a.getData(Dwt.KEY_OBJECT)
}}
return null
};
ZmTreeView.prototype._showRemainingFolders=function(e){
if(e.showRemainingFoldersNode){
e.showRemainingFoldersNode.dispose()
}
AjxTimedAction.scheduleAction(new AjxTimedAction(this,function(){
this._render(e);
if(e.len){
var t=ZmMsg[ZmOrganizer.LABEL[this.type]].toLowerCase();
appCtxt.setStatusMsg(AjxMessageFormat.format(ZmMsg.foldersShown,[e.len,t]));
e.len=0
}}
),100)
};
ZmTreeView.prototype._getNextTreeItem=function(t){
var e=DwtTree.prototype._getNextTreeItem.apply(this,arguments);
return e||(this._overview&&this._overview._getNextTreeItem(t,this))
};
ZmTreeView.prototype._getFirstTreeItem=function(){
if(!this._overview){
return DwtTree.prototype._getFirstTreeItem.call(e)
}
var t=this._overview.getTreeViews();
var e=this._overview.getTreeView(t[0]);
return e&&DwtTree.prototype._getFirstTreeItem.call(e)
};
ZmTreeView.prototype._getLastTreeItem=function(){
if(!this._overview){
return DwtTree.prototype._getLastTreeItem.call(e)
}
var t=this._overview.getTreeViews();
var e=this._overview.getTreeView(t[t.length-1]);
return e&&DwtTree.prototype._getLastTreeItem.call(e)
};
ZmTreeView.prototype._hideHeaderTreeItem=function(){
return(appCtxt.multiAccounts&&appCtxt.accountList.size()>1&&(this.type==ZmOrganizer.FOLDER||this.type==ZmOrganizer.ADDRBOOK||this.type==ZmOrganizer.CALENDAR||this.type==ZmOrganizer.TASKS||this.type==ZmOrganizer.BRIEFCASE||this.type==ZmOrganizer.PREF_PAGE||this.type==ZmOrganizer.ZIMLET))
};
ZmTreeView.prototype._getHeaderTreeItemImage=function(){
if(appCtxt.multiAccounts){
if(this.type==ZmOrganizer.SEARCH){
return"SearchFolder"
}
if(this.type==ZmOrganizer.TAG){
return"TagStack"
}}
return null
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmTagMenu")){
ZmTagMenu=function(t,e){
ZmPopupMenu.call(this,t,null,t.getHTMLElId()+"|MENU",e);
t.setMenu(this);
this._addHash={};
this._removeHash={};
this._evtMgr=new AjxEventMgr();
this._desiredState=true;
this._items=null;
this._dirty=true;
if(t instanceof DwtMenuItem){
t.setHoverDelay(ZmTagMenu._HOVER_TIME)
}};
ZmTagMenu.prototype=new ZmPopupMenu;
ZmTagMenu.prototype.constructor=ZmTagMenu;
ZmTagMenu.KEY_TAG_EVENT="_tagEvent_";
ZmTagMenu.KEY_TAG_ADDED="_tagAdded_";
ZmTagMenu.MENU_ITEM_ADD_ID="tag_add";
ZmTagMenu.MENU_ITEM_REM_ID="tag_remove";
ZmTagMenu._HOVER_TIME=200;
ZmTagMenu.prototype.toString=function(){
return"ZmTagMenu"
};
ZmTagMenu.prototype.addSelectionListener=function(e){
this._evtMgr.addListener(DwtEvent.SELECTION,e)
};
ZmTagMenu.prototype.removeSelectionListener=function(e){
this._evtMgr.removeListener(DwtEvent.SELECTION,e)
};
ZmTagMenu.prototype.setEnabled=function(e){
this._desiredState=e;
if(e&&!this._tagList){
return
}
this.parent.setEnabled(e)
};
ZmTagMenu.prototype.set=function(e,t){
this._tagList=t;
this._items=e;
this._dirty=true;
if(this.parent instanceof DwtMenuItem){
this.parent.setHoverDelay(ZmTagMenu._HOVER_TIME)
}};
ZmTagMenu.prototype._doPopup=function(t,o,a){
if(this._dirty){
this.removeChildren();
if(this._tagList){
var i=this._tagList.root;
var e=this._getAddRemove(this._items,i);
this._render(i,e)
}
this._dirty=false;
if(this.parent instanceof DwtMenuItem){
this.parent.setHoverDelay(0)
}}
ZmPopupMenu.prototype._doPopup.call(this,t,o,a)
};
ZmTagMenu.prototype._getAddRemove=function(r,l){
var h={};
var s={};
for(var n=0;
n<r.length;
n++){
var u=r[n];
if(!u.tags){
continue
}
for(var t=0;
t<u.tags.length;
t++){
var e=u.tags[t];
h[e]=h[e]||0;
s[e]=true;
if(!u.canAddTag(e)){
h[e]+=1
}}}
var o=AjxUtil.keys(s);
var d=[];
var c=l.children.getArray();
for(n=0;
n<c.length;
n++){
var m=c[n];
e=m.name;
if(!h[e]||(h[e]<r.length)){
d.push(e)
}}
return{
add:d,remove:o}
};
ZmTagMenu.prototype._render=function(l,c){
for(var s=0;
s<c.add.length;
s++){
var a=c.add[s];
this._addNewTag(this,a,l,true,null,this._addHash)
}
if(c.add.length){
new DwtMenuItem({
parent:this,style:DwtMenuItem.SEPARATOR_STYLE}
)
}
var e=appCtxt.getCurrentController()&&appCtxt.getCurrentController().getKeyMapName();
var n=e?(e+"_newtag"):this._htmlElId+"|NEWTAG";
var o=e?(e+"_removetag"):this._htmlElId+"|REMOVETAG";
var d=this._menuItems[ZmTagMenu.MENU_ITEM_ADD_ID]=new DwtMenuItem({
parent:this,id:n}
);
d.setText(AjxStringUtil.htmlEncode(ZmMsg.newTag));
d.setImage("NewTag");
d.setShortcut(appCtxt.getShortcutHint(this._keyMap,ZmKeyMap.NEW_TAG));
d.setData(ZmTagMenu.KEY_TAG_EVENT,ZmEvent.E_CREATE);
d.addSelectionListener(new AjxListener(this,this._menuItemSelectionListener),0);
d.setEnabled(!appCtxt.isWebClientOffline());
var m=this._menuItems[ZmTagMenu.MENU_ITEM_REM_ID]=new DwtMenuItem({
parent:this,id:o}
);
m.setEnabled(false);
m.setText(AjxStringUtil.htmlEncode(ZmMsg.removeTag));
m.setImage("DeleteTag");
var h=c.remove;
if(h.length>0){
m.setEnabled(true);
var t=null;
if(h.length>1){
for(s=0;
s<h.length;
s++){
if(!t){
t=new DwtMenu({
parent:m,className:this._className}
);
m.setMenu(t);
t.setHtmlElementId("REMOVE_TAG_MENU_"+this.getHTMLElId())
}
var a=h[s];
var u="Remove_tag_"+s;
this._addNewTag(t,a,l,false,null,this._removeHash,u)
}
new DwtMenuItem({
parent:t,style:DwtMenuItem.SEPARATOR_STYLE}
);
var r=new DwtMenuItem({
parent:t,id:"REMOVE_ALL_TAGS"}
);
r.setText(ZmMsg.allTags);
r.setImage("TagStack");
r.setShortcut(appCtxt.getShortcutHint(this._keyMap,ZmKeyMap.UNTAG));
r.setData(ZmTagMenu.KEY_TAG_EVENT,ZmEvent.E_REMOVE_ALL);
r.setData(Dwt.KEY_OBJECT,h);
r.addSelectionListener(new AjxListener(this,this._menuItemSelectionListener),0)
}else{
var f=l.getByNameOrRemote(h[0]);
m.setData(ZmTagMenu.KEY_TAG_EVENT,ZmEvent.E_TAGS);
m.setData(ZmTagMenu.KEY_TAG_ADDED,false);
m.setData(Dwt.KEY_OBJECT,f);
m.addSelectionListener(new AjxListener(this,this._menuItemSelectionListener),0)
}}};
ZmTagMenu.tagNameLength=20;
ZmTagMenu.prototype._addNewTag=function(e,a,r,l,n,o,h){
var c=r.getByNameOrRemote(a);
var i=new DwtMenuItem({
parent:e,index:n,id:h}
);
var t=AjxStringUtil.clipByLength(c.getName(false),ZmTagMenu.tagNameLength);
var s=c.notLocal?AjxMessageFormat.format(ZmMsg.tagNotLocal,t):t;
i.setText(s);
i.setImage(c.getIconWithColor());
i.setData(ZmTagMenu.KEY_TAG_EVENT,ZmEvent.E_TAGS);
i.setData(ZmTagMenu.KEY_TAG_ADDED,l);
i.setData(Dwt.KEY_OBJECT,c);
i.addSelectionListener(new AjxListener(this,this._menuItemSelectionListener),0);
o[c.id]=i
};
ZmTagMenu.prototype._menuItemSelectionListener=function(e){
if(e.item.getData(ZmTagMenu.KEY_TAG_EVENT)){
this._evtMgr.notifyListeners(DwtEvent.SELECTION,e)
}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmListView")){
ZmListView=function(i){
if(arguments.length==0){
return
}
i.id=i.id||ZmId.getViewId(i.view);
DwtListView.call(this,i);
this.view=i.view;
this.type=i.type;
this._controller=i.controller;
this.setDropTarget(i.dropTgt);
this._listChangeListener=new AjxListener(this,this._changeListener);
this._tagListChangeListener=new AjxListener(this,this._tagChangeListener);
var a=appCtxt.getTagTree();
if(a){
a.addChangeListener(this._tagListChangeListener)
}
var t=appCtxt.getFolderTree();
if(t){
t.addChangeListener(new AjxListener(this,this._folderChangeListener))
}
this._handleEventType={};
this._handleEventType[this.type]=true;
this._disallowSelection={};
this._disallowSelection[ZmItem.F_FLAG]=true;
this._disallowSelection[ZmItem.F_MSG_PRIORITY]=true;
this._selectAllEnabled=false;
if(i.dropTgt){
var e={
container:this._parentEl,threshold:15,amount:5,interval:10,id:i.id};
this._dndScrollCallback=new AjxCallback(null,DwtControl._dndScrollCallback,[e]);
this._dndScrollId=i.id
}
this._isPageless=i.pageless;
if(this._isPageless){
Dwt.setHandler(this._getScrollDiv(),DwtEvent.ONSCROLL,ZmListView.handleScroll)
}
this._state={}
};
ZmListView.prototype=new DwtListView;
ZmListView.prototype.constructor=ZmListView;
ZmListView.prototype.isZmListView=true;
ZmListView.prototype.toString=function(){
return"ZmListView"
};
ZmListView.KEY_ID="_keyId";
ZmListView.COL_WIDTH_ICON=19;
ZmListView.COL_WIDTH_NARROW_ICON=11;
ZmListView.FIELD_CLASS={};
ZmListView.FIELD_CLASS[ZmItem.F_TYPE]="ListViewIcon";
ZmListView.FIELD_CLASS[ZmItem.F_FLAG]="Flag";
ZmListView.FIELD_CLASS[ZmItem.F_TAG]="Tag";
ZmListView.FIELD_CLASS[ZmItem.F_ATTACHMENT]="Attach";
ZmListView.ITEM_FLAG_CLICKED=DwtListView._LAST_REASON+1;
ZmListView.DEFAULT_REPLENISH_THRESHOLD=0;
ZmListView.COL_JOIN="|";
ZmListView.CHECKED_IMAGE="CheckboxChecked";
ZmListView.UNCHECKED_IMAGE="CheckboxUnchecked";
ZmListView.CHECKED_CLASS="ImgCheckboxChecked";
ZmListView.UNCHECKED_CLASS="ImgCheckboxUnchecked";
ZmListView.ITEM_CHECKED_ATT_NAME="itemChecked";
ZmListView.prototype._getHeaderList=function(){};
ZmListView.prototype.getController=function(){
return this._controller
};
ZmListView.prototype.set=function(o,a){
this._sortByString=this._controller._currentSearch&&this._controller._currentSearch.sortBy;
if(this._sortByString){
this._sortByString=this._sortByString.replace("asc","Asc").replace("desc","Desc")
}
var i=appCtxt.getSettings();
if(!appCtxt.isExternalAccount()&&this.view){
appCtxt.set(ZmSetting.SORTING_PREF,this._sortByString,this.view,false,false,null,i&&!i.persistImplicitSortPrefs(this.view))
}
this.setSelectionHdrCbox(false);
if(appCtxt.multiAccounts){
var n=appCtxt.getTagTree();
if(n){
n.addChangeListener(this._tagListChangeListener)
}}
if(this._isPageless){
if(this._itemsToAdd){
if(this._itemsToAdd.length){
this.addItems(this._itemsToAdd);
this._itemsToAdd=null
}}else{
var t=o;
if(o&&o.isZmList){
o.addChangeListener(this._listChangeListener);
t=o.getSubList(0,o.size())
}
DwtListView.prototype.set.call(this,t,a)
}
this._setRowHeight()
}else{
var e;
if(o&&o.isZmList){
o.addChangeListener(this._listChangeListener);
e=o.getSubList(this.offset,this.getLimit())
}else{
e=o
}
DwtListView.prototype.set.call(this,e,a)
}
this._rendered=true;
if(this._isPageless){
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._checkItemCount),1000)
}};
ZmListView.prototype.reset=function(){
this._rendered=false
};
ZmListView.prototype.setUI=function(e){
DwtListView.prototype.setUI.call(this,e);
this._resetColWidth()
};
ZmListView.prototype.getLimit=function(t){
if(this._isPageless){
var e=appCtxt.get(ZmSetting.PAGE_SIZE);
return t?e:2*e
}else{
return appCtxt.get(ZmSetting.PAGE_SIZE)
}};
ZmListView.prototype.getPagelessThreshold=function(){
return Math.ceil(this.getLimit()/5)
};
ZmListView.prototype.getReplenishThreshold=function(){
return ZmListView.DEFAULT_REPLENISH_THRESHOLD
};
ZmListView.prototype.getItemList=function(){
return this._controller&&this._controller._list
};
ZmListView.prototype._changeListener=function(d){
var u=this._getItemFromEvent(d);
if(!u||d.handled||!this._handleEventType[u.type]){
return
}
if(d.event===ZmEvent.E_TAGS||d.event===ZmEvent.E_REMOVE_ALL){
this._replaceTagImage(u,ZmItem.F_TAG,this._getClasses(ZmItem.F_TAG))
}
if(d.event===ZmEvent.E_FLAGS){
var e=d.getDetail("flags");
for(var t=0;
t<e.length;
t++){
var l=e[t];
var s=u[ZmItem.FLAG_PROP[l]];
if(l===ZmItem.FLAG_FLAGGED){
this._setImage(u,ZmItem.F_FLAG,s?"FlagRed":"FlagDis",this._getClasses(ZmItem.F_FLAG))
}else{
if(l===ZmItem.FLAG_ATTACH){
this._setImage(u,ZmItem.F_ATTACHMENT,s?"Attachment":null,this._getClasses(ZmItem.F_ATTACHMENT))
}else{
if(l===ZmItem.FLAG_PRIORITY){
this._setImage(u,ZmItem.F_MSG_PRIORITY,s?"Priority":"PriorityDis",this._getClasses(ZmItem.F_MSG_PRIORITY))
}}}}}
if(d.event===ZmEvent.E_DELETE||d.event===ZmEvent.E_MOVE){
var h=d.batchMode?this._getItemsFromBatchEvent(d):[u];
var c=false;
for(var a=0,n=h.length;
a<n;
a++){
var u=h[a];
var r=(u.type===ZmId.ITEM_CONV)?u.folders[this._folderId]:u.folderId===this._folderId;
if(r&&d.event===ZmEvent.E_MOVE){
if(this._getRowIndex(u)===null){
this.addItem(u);
c=true
}}else{
if(d.event===ZmEvent.E_DELETE||this.view==appCtxt.getCurrentViewId()||this._controller._currentSearch.matches(u)===false){
this.removeItem(u,true,d.batchMode);
var o=this.getItemList();
if(d.event!==ZmEvent.E_MOVE||!o.isCanonical){
o.remove(u)
}}}}
if(c){
this._saveState({
scroll:true,selection:true,focus:true}
);
this._redoSearch(this._restoreState.bind(this,this._state))
}
if(d.batchMode){
this._fixAlternation(0)
}
this._checkReplenishOnTimer();
this._controller._resetToolbarOperations()
}
this._updateLabelForItem(u)
};
ZmListView.prototype._getItemFromEvent=function(a){
var t=a.item;
if(!t){
var e=a.getDetail("items");
t=(e&&e.length)?e[0]:null
}
return t
};
ZmListView.prototype._getItemsFromBatchEvent=function(n){
if(!n.batchMode){
return[]
}
var t=n.items;
if(!t){
t=[];
var s=n.getDetail("notifs");
if(s&&s.length){
for(var o=0,e=s.length;
o<e;
o++){
var a=s[o];
t.push(a.item||appCtxt.cacheGet(a.id))
}}}
return t
};
ZmListView.prototype._updateField=function(i,o){
var e=this._getFieldId(i,o);
var a=document.getElementById(e);
if(a){
var t=[];
var n=this._headerHash[o]&&this._headerHash[o]._index;
this._getCellContents(t,0,i,o,n,new Date());
a.innerHTML=$(t.join("")).html()
}
this._updateLabelForItem(i)
};
ZmListView.prototype._checkReplenishOnTimer=function(e){
if(!this.allSelected){
if(!this._isPageless){
this._controller._app._checkReplenishListView=this
}else{
if(!this._replenishTimedAction){
this._replenishTimedAction=new AjxTimedAction(this,this._handleResponseCheckReplenish)
}
AjxTimedAction.scheduleAction(this._replenishTimedAction,10)
}}};
ZmListView.prototype._checkReplenish=function(t,e){
var a=new AjxCallback(this,this._handleResponseCheckReplenish,[false,t,e]);
this._controller._checkReplenish(a)
};
ZmListView.prototype._handleResponseCheckReplenish=function(a,t,e){
if(this.size()==0){
this._controller._handleEmptyList(this)
}else{
this._controller._resetNavToolBarButtons()
}
if(!a){
this._setNextSelection(t,e)
}};
ZmListView.prototype._folderChangeListener=function(i){
if(appCtxt.getCurrentController()!=this._controller){
return
}
if(this._controller._app._checkReplenishListView==this){
return
}
var a=i.getDetail("organizers");
var t=(a&&a.length)?a[0]:i.source;
var o=t.id;
var e=i.getDetail("fields");
if(i.event==ZmEvent.E_MODIFY){
if(!e){
return
}
if(e[ZmOrganizer.F_TOTAL]){
this._controller._resetNavToolBarButtons()
}}};
ZmListView.prototype._tagChangeListener=function(s){
if(s.type!=ZmEvent.S_TAG){
return
}
var t=s.getDetail("fields");
var o=this._getChildren();
var e=s.getDetail("organizers")[0];
for(var a=0;
a<o.length;
a++){
var n=this.getItemFromElement(o[a]);
if(!n||!n.tags||!n.hasTag(e.name)){
continue
}
var r=false;
if(s.event==ZmEvent.E_MODIFY&&(t&&(t[ZmOrganizer.F_COLOR]||t[ZmOrganizer.F_NAME]))){
r=n.tags.length==1
}else{
if(s.event==ZmEvent.E_DELETE){
r=true
}else{
if(s.event==ZmEvent.E_CREATE){
r=true
}}}
if(r){
this._replaceTagImage(n,ZmItem.F_TAG,this._getClasses(ZmItem.F_TAG))
}}};
ZmListView.prototype._getChildren=function(){
return this._parentEl.childNodes
};
ZmListView.prototype._getRowId=function(e){
return DwtId.getListViewItemId(DwtId.WIDGET_ITEM_FIELD,this._view,e?e.id:Dwt.getNextId(),ZmItem.F_ITEM_ROW)
};
ZmListView.prototype._getCellId=function(e,t){
if(t==ZmItem.F_DATE){
return this._getFieldId(e,t)
}else{
if(t==ZmItem.F_SELECTION){
return this._getFieldId(e,ZmItem.F_SELECTION_CELL)
}else{
return DwtListView.prototype._getCellId.apply(this,arguments)
}}};
ZmListView.prototype._getCellClass=function(e,t,a){
return ZmListView.FIELD_CLASS[t]
};
ZmListView.prototype._getCellContents=function(t,e,i,o,r,s,a){
if(o==ZmItem.F_SELECTION){
e=this._getImageHtml(t,e,"CheckboxUnchecked",this._getFieldId(i,o),a)
}else{
if(o==ZmItem.F_TYPE){
e=this._getImageHtml(t,e,ZmItem.ICON[i.type],this._getFieldId(i,o),a)
}else{
if(o==ZmItem.F_FLAG){
e=this._getImageHtml(t,e,this._getFlagIcon(i.isFlagged),this._getFieldId(i,o),a)
}else{
if(o==ZmItem.F_TAG){
e=this._getImageHtml(t,e,i.getTagImageInfo(),this._getFieldId(i,o),a)
}else{
if(o==ZmItem.F_ATTACHMENT){
e=this._getImageHtml(t,e,i.hasAttach?"Attachment":null,this._getFieldId(i,o),a)
}else{
if(o==ZmItem.F_DATE){
t[e++]=AjxDateUtil.computeDateStr(s.now||new Date(),i.date)
}else{
if(o==ZmItem.F_PRIORITY){
var n=null;
if(i.isHighPriority){
n="PriorityHigh_list"
}else{
if(i.isLowPriority){
n="PriorityLow_list"
}}
if(n){
e=this._getImageHtml(t,e,n,this._getFieldId(i,o),a)
}else{
t[e++]="<div id='"+this._getFieldId(i,o)+"' "+AjxUtil.getClassAttr(a)+"></div>"
}}else{
e=DwtListView.prototype._getCellContents.apply(this,arguments)
}}}}}}}
return e
};
ZmListView.prototype._getImageHtml=function(a,t,e,o,i){
a[t++]="<div";
if(o){
a[t++]=[" id='",o,"' "].join("")
}
a[t++]=AjxUtil.getClassAttr(i);
a[t++]=">";
a[t++]=AjxImg.getImageHtml(e||"Blank_16");
a[t++]="</div>";
return t
};
ZmListView.prototype._getClasses=function(t,e){
if(this.isMultiColumn&&this.isMultiColumn()&&this._headerHash[t]){
e=e||[];
e=[this._headerHash[t]._cssClass]
}
return e
};
ZmListView.prototype._setImage=function(i,o,t,a){
var e=this._getElement(i,o);
if(e){
if(a){
e.className=AjxUtil.uniq(a).join(" ")
}
e.innerHTML=AjxImg.getImageHtml(t||"Blank_16")
}};
ZmListView.prototype._replaceTagImage=function(t,a,e){
this._setImage(t,a,t.getTagImageInfo(),e)
};
ZmListView.prototype._getFragmentSpan=function(e){
return["<span class='ZmConvListFragment' aria-hidden='true' id='",this._getFieldId(e,ZmItem.F_FRAGMENT),"'>",this._getFragmentHtml(e),"</span>"].join("")
};
ZmListView.prototype._getFragmentHtml=function(e){
return[" - ",AjxStringUtil.htmlEncode(e.fragment,true)].join("")
};
ZmListView.prototype._getFlagIcon=function(a,e,t){
if(!a&&!e){
return"Blank_16"
}else{
if(t){
return"FlagDis"
}else{
return"FlagRed"
}}};
ZmListView.prototype._parseId=function(t){
var e=t.split(DwtId.SEP);
if(e&&e.length){
return{
view:e[1],item:e[2],field:e[3],participant:e[4]}
}else{
return null
}};
ZmListView.prototype._mouseDownAction=function(e,t){
return !Dwt.ffScrollbarCheck(e)
};
ZmListView.prototype._mouseUpAction=function(e,t){
return !Dwt.ffScrollbarCheck(e)
};
ZmListView.prototype._getField=function(a,s){
var o=this._getEventTarget(a);
var n=o&&o.id||s.id;
if(!n){
return null
}
var i=this._data[s.id];
var t=i.type;
if(!t||t!=DwtListView.TYPE_LIST_ITEM){
return null
}
var e=this._parseId(n);
if(!e||!e.field){
return null
}
return e.field
};
ZmListView.prototype._mouseOutAction=function(t,o){
DwtListView.prototype._mouseOutAction.call(this,t,o);
var i=this._getField(t,o);
if(!i){
return true
}
if(i==ZmItem.F_FLAG){
var e=this.getItemFromElement(o);
if(!e.isFlagged){
var a=this._getEventTarget(t);
AjxImg.setImage(a,this._getFlagIcon(e.isFlagged,false),false,false);
a.className=this._getClasses(i)
}}
return true
};
ZmListView.prototype._mouseOverAction=function(t,o){
DwtListView.prototype._mouseOverAction.call(this,t,o);
var i=this._getField(t,o);
if(!i){
return true
}
if(i===ZmItem.F_FLAG){
var e=this.getItemFromElement(o);
if(!e.isReadOnly()&&!e.isFlagged){
var a=this._getEventTarget(t);
AjxImg.setDisabledImage(a,this._getFlagIcon(e.isFlagged,true),false);
a.className=this._getClasses(i)
}}
return true
};
ZmListView.prototype._doubleClickAction=function(t,o){
var a=this._getEventTarget(t);
var i=a&&a.id||o.id;
if(!i){
return true
}
var e=this._parseId(i);
return(!(e&&(e.field==ZmItem.F_FLAG)))
};
ZmListView.prototype._itemClicked=function(i,r){
if(appCtxt.get(ZmSetting.SHOW_SELECTION_CHECKBOX)&&r.button==DwtMouseEvent.LEFT){
if(!r.shiftKey&&!r.ctrlKey){
var s=this._getEventTarget(r);
var t=(s&&s.id&&s.id.indexOf("AjxImg")==-1)?s.id:i.id;
var o=t?this._parseId(t):null;
if(o&&(o.field==ZmItem.F_SELECTION||o.field==ZmItem.F_SELECTION_CELL)){
if(this._selectedItems.size()==1){
var a=this._selectedItems.get(0);
var c=this.getItemFromElement(a);
var h=c?this._getFieldId(c,ZmItem.F_SELECTION):null;
var l=h?document.getElementById(h):null;
if(l&&a==i){
var n=this._getItemData(a,ZmListView.ITEM_CHECKED_ATT_NAME);
this._setImage(c,ZmItem.F_SELECTION,n?ZmListView.UNCHECKED_IMAGE:ZmListView.CHECKED_IMAGE);
this._setItemData(a,ZmListView.ITEM_CHECKED_ATT_NAME,!n);
if(!n){
return
}}else{
if(l&&!this._getItemData(a,ZmListView.ITEM_CHECKED_ATT_NAME)){
this.deselectAll();
this._markUnselectedViewedItem(true)
}}}
var e=this._selectedItems.contains(i);
this.setMultiSelection(i,e);
this._controller._setItemSelectionCountText();
return
}}else{
if(r.shiftKey){
this._checkSelectedItems(false);
DwtListView.prototype._itemClicked.call(this,i,r);
this._checkSelectedItems(true);
return
}}}
DwtListView.prototype._itemClicked.call(this,i,r)
};
ZmListView.prototype._columnClicked=function(t,e){
DwtListView.prototype._columnClicked.call(this,t,e);
this._checkSelectionColumnClicked(t,e)
};
ZmListView.prototype._checkSelectionColumnClicked=function(s,o){
if(!appCtxt.get(ZmSetting.SHOW_SELECTION_CHECKBOX)){
return
}
var n=this.getList();
var a=n?n.size():null;
if(a>0){
var e=this._data[s.id].index;
var i=this._headerList[e];
if(i&&(i._field==ZmItem.F_SELECTION)){
var t=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_ICON,this._view,i._field);
var r=document.getElementById(t);
if(r){
if(r.className==ZmListView.CHECKED_CLASS){
if(o.shiftKey&&!this.allSelected){
this.selectAll(o.shiftKey)
}else{
this.deselectAll();
r.className=ZmListView.UNCHECKED_CLASS
}}else{
this.allSelected=false;
r.className=ZmListView.CHECKED_CLASS;
this.selectAll(o.shiftKey)
}}}
this._controller._resetToolbarOperations()
}};
ZmListView.prototype.handleKeyAction=function(e,t){
var a=DwtListView.prototype.handleKeyAction.call(this,e,t);
if(e==DwtKeyMap.SELECT_ALL){
this._controller._resetToolbarOperations()
}
return a
};
ZmListView.prototype.setMultiSelection=function(e,a,t){
if(t&&t.ctrlKey&&this._selectedItems.size()==1){
this._checkSelectedItems(true)
}
DwtListView.prototype.setMultiSelection.call(this,e,a);
this.setSelectionCbox(e,a);
this.setSelectionHdrCbox(this._isAllChecked());
this._controller._resetToolbarOperations()
};
ZmListView.prototype._isAllChecked=function(){
var e=this.getList();
return(e&&(this.getSelection().length==e.size()))
};
ZmListView.prototype.setSelectionCbox=function(o,i){
if(!o){
return
}
var t=o.tagName?this.getItemFromElement(o):o;
var e=t?this._getFieldId(t,ZmItem.F_SELECTION):null;
var a=e?document.getElementById(e):null;
if(a){
this._setImage(t,ZmItem.F_SELECTION,i?ZmListView.UNCHECKED_IMAGE:ZmListView.CHECKED_IMAGE);
this._setItemData(this._getElFromItem(t),ZmListView.ITEM_CHECKED_ATT_NAME,!i)
}};
ZmListView.prototype.setSelectionHdrCbox=function(t){
var a=this._headerHash?this._headerHash[ZmItem.F_SELECTION]:null;
var e=a?DwtId.getListViewHdrId(DwtId.WIDGET_HDR_ICON,this._view,a._field):null;
var i=e?document.getElementById(e):null;
if(i){
i.className=t?ZmListView.CHECKED_CLASS:ZmListView.UNCHECKED_CLASS
}};
ZmListView.prototype.setSelectedItems=function(t,e){
DwtListView.prototype.setSelectedItems.call(this,t);
if(!e&&appCtxt.get(ZmSetting.SHOW_SELECTION_CHECKBOX)){
this._checkSelectedItems(true,true)
}};
ZmListView.prototype.selectAll=function(a){
DwtListView.prototype.selectAll.apply(this,arguments);
if(this._selectAllEnabled){
var d=this._controller._activeSearch;
if(d&&d.getAttribute("more")){
var h=this.getList(),c=this.type,o="type"+AjxStringUtil.capitalize(ZmItem.MSG_KEY[c]),r=AjxMessageFormat.format(ZmMsg[o],h?h.size():2),n=appCtxt.getShortcutHint(null,ZmKeyMap.SELECT_ALL),l=[h?h.size():ZmMsg.all,r,n,"ZmListView.selectAllResults()"],t=AjxMessageFormat.format(ZmMsg.allPageSelected,l);
if(a){
this.allSelected=true;
t=ZmMsg.allSearchSelected
}
appCtxt.setStatusMsg(t)
}
var e=this._selectedItems.getArray();
for(var s=0;
s<e.length;
s++){
this.setSelectionCbox(e[s],false)
}}};
ZmListView.selectAllResults=function(){
var e=appCtxt.getCurrentController();
var t=e&&e.getListView();
if(t&&t.selectAll){
t.selectAll(true)
}};
ZmListView.prototype.deselectAll=function(){
this.allSelected=false;
if(appCtxt.get(ZmSetting.SHOW_SELECTION_CHECKBOX)){
this._checkSelectedItems(false);
var e=DwtId.getListViewHdrId(DwtId.WIDGET_HDR_ICON,this._view,ZmItem.F_SELECTION);
var o=document.getElementById(e);
if(o){
o.className=ZmListView.UNCHECKED_CLASS
}
var a=this._selectedItems.getArray();
for(var t=0;
t<a.length;
t++){
this.setSelectionCbox(a[t],true)
}}
DwtListView.prototype.deselectAll.call(this)
};
ZmListView.prototype._checkSelectedItems=function(e){
var n=this.getSelection();
for(var a=0;
a<n.length;
a++){
this.setSelectionCbox(n[a],!e)
}
var o=this.getList();
var t=o&&o.size();
this.setSelectionHdrCbox(t&&n.length==t)
};
ZmListView.prototype._setNoResultsHtml=function(){
DwtListView.prototype._setNoResultsHtml.call(this);
this.setSelectionHdrCbox(false);
this._rendered=true
};
ZmListView.prototype._clearRightSel=function(){
DwtListView.prototype._clearRightSel.call(this);
this._controller._resetToolbarOperations()
};
ZmListView.prototype._getSortMenu=function(n,a,h){
var t=new ZmPopupMenu(h||this,null,Dwt.getNextId("SORT_MENU_"));
var e=this._colHeaderActionListener.bind(this);
for(var s=0;
s<n.length;
s++){
var o=n[s];
var l=ZmMsg[o.msg];
var r=t.createMenuItem(o.field,{
text:h&&h.isDwtMenuItem?l:AjxMessageFormat.format(ZmMsg.arrangeBy,l),style:DwtMenuItem.RADIO_STYLE}
);
if(o.field==a){
r.setChecked(true,true)
}
r.setData(ZmListView.KEY_ID,o.field);
t.addSelectionListener(o.field,e)
}
return t
};
ZmListView.prototype._sortMenuListener=function(a){
var t=this._headerHash[ZmItem.F_SORTED_BY];
var e=document.getElementById(DwtId.getListViewHdrId(DwtId.WIDGET_HDR_LABEL,this._view,t._field));
if(e){
var i=a.item.getText();
e.innerHTML=i&&i.replace(ZmMsg.sortBy,ZmMsg.sortedBy)
}
t._sortable=a.item.getData(ZmListView.KEY_ID);
this._bSortAsc=(t._sortable===this._currentSortColId)?!this._bSortAsc:this._getDefaultSortbyForCol(t);
this._sortColumn(t,this._bSortAsc)
};
ZmListView.prototype._getActionMenuForColHeader=function(a,l,n){
var s;
if(!this._colHeaderActionMenu||a){
s=new ZmPopupMenu(l||this);
var t=this._colHeaderActionListener.bind(this);
for(var r=0;
r<this._headerList.length;
r++){
var o=this._headerList[r];
if(o._width){
var e=ZmId.getMenuItemId([this._view,n].join("_"),o._field);
var h=s.createMenuItem(e,{
text:o._name,style:DwtMenuItem.CHECK_STYLE}
);
h.setData(ZmListView.KEY_ID,o._id);
h.setChecked(o._visible,true);
if(o._noRemove){
h.setEnabled(false)
}
s.addSelectionListener(e,t)
}}}
return s
};
ZmListView.prototype._colHeaderActionListener=function(a){
var o=a.item.getData(ZmListView.KEY_ID);
for(var t=0;
t<this._headerList.length;
t++){
var e=this._headerList[t];
if(e._id==o){
e._visible=!e._visible;
break
}}
this._relayout()
};
ZmListView.prototype.getToolTipContent=function(h){
var e=this.getTargetItemDiv(h);
if(!e){
return""
}
var s=this._getEventTarget(h);
var a=s&&s.id||e.id;
if(!a){
return""
}
var o=this._data[e.id];
var r=o.type;
var d;
if(r&&r==DwtListView.TYPE_HEADER_ITEM){
var t=o.index;
var l=this._headerList[t]._field;
d=this._getHeaderToolTip(l,t)
}else{
var n=this._parseId(a);
if(n&&n.field){
var c=this.getItemFromElement(e);
var i={
field:n.field,item:c,ev:h,div:e,match:n};
d=this._getToolTip(i)
}}
return d
};
ZmListView.prototype.getTooltipBase=function(e){
return e?DwtUiEvent.getTargetWithProp(e.object,"id"):DwtListView.prototype.getTooltipBase.apply(this,arguments)
};
ZmListView.prototype._getHeaderToolTip=function(a,e,o){
var t=null;
var i=this._headerList[e]._sortable;
if(a==ZmItem.F_SELECTION){
t=ZmMsg.selectionColumn
}else{
if(a==ZmItem.F_FLAG){
t=ZmMsg.flagHeaderToolTip
}else{
if(a==ZmItem.F_PRIORITY){
t=ZmMsg.priorityHeaderTooltip
}else{
if(a==ZmItem.F_TAG){
t=ZmMsg.tag
}else{
if(a==ZmItem.F_ATTACHMENT){
t=ZmMsg.attachmentHeaderToolTip
}else{
if(a==ZmItem.F_SUBJECT){
t=i?ZmMsg.sortBySubject:ZmMsg.subject
}else{
if(a==ZmItem.F_DATE){
if(i){
if(o){
t=(this._folderId==ZmFolder.ID_DRAFTS)?ZmMsg.sortByLastSaved:ZmMsg.sortBySent
}else{
t=ZmMsg.sortByReceived
}}else{
t=ZmMsg.date
}}else{
if(a==ZmItem.F_FROM){
t=i?o?ZmMsg.sortByTo:ZmMsg.sortByFrom:o?ZmMsg.to:ZmMsg.from
}else{
if(a==ZmItem.F_SIZE){
t=i?ZmMsg.sortBySize:ZmMsg.sizeToolTip
}else{
if(a==ZmItem.F_ACCOUNT){
t=ZmMsg.account
}else{
if(a==ZmItem.F_FOLDER){
t=ZmMsg.folder
}else{
if(a==ZmItem.F_MSG_PRIORITY){
t=ZmMsg.messagePriority
}}}}}}}}}}}}
return t
};
ZmListView.prototype._getToolTip=function(i){
var t,a=i.field,e=i.item;
if(a==ZmItem.F_FLAG){
return null
}else{
if(a==ZmItem.F_PRIORITY){
if(e.isHighPriority){
t=ZmMsg.highPriorityTooltip
}else{
if(e.isLowPriority){
t=ZmMsg.lowPriorityTooltip
}}}else{
if(a==ZmItem.F_TAG){
t=this._getTagToolTip(e)
}else{
if(a==ZmItem.F_ATTACHMENT){}else{
if(a==ZmItem.F_DATE){
t=this._getDateToolTip(e,i.div)
}}}}}
return t
};
ZmListView.prototype._getLabelFieldList=function(){
var e=this._getHeaderList();
if(e){
return AjxUtil.map(e,function(t){
return t._field
}
)
}};
ZmListView.prototype._getLabelForField=function(e,a){
var t=this._getToolTip({
item:e,field:a}
);
return AjxStringUtil.stripTags(t)
};
ZmListView.prototype._updateLabelForItem=function(s){
var e=this._getLabelFieldList();
var t=this._getElFromItem(s);
if(!s||!e||!t){
return
}
var o=[];
for(var n=0;
n<e.length;
n++){
var a=this._getLabelForField(s,e[n]);
if(a){
o.push(a)
}}
if(o.length>0){
t.setAttribute("aria-label",o.join(", "))
}else{
t.removeAttribute("aria-label")
}};
ZmListView.prototype._getTagToolTip=function(r){
if(!r){
return
}
var a=r.tags&&r.tags.length;
if(!a){
return
}
var n=appCtxt.getAccountTagList(r);
var h=r.tags;
var t=[];
var s=0;
for(var e=0;
e<a;
e++){
var l=n.getByNameOrRemote(h[e]);
if(!l){
continue
}
var o=l.notLocal?AjxMessageFormat.format(ZmMsg.tagNotLocal,l.name):l.name;
t[s++]="<table><tr><td>";
t[s++]=AjxImg.getImageHtml(l.getIconWithColor());
t[s++]="</td><td valign='middle'>";
t[s++]=AjxStringUtil.htmlEncode(o);
t[s++]="</td></tr></table>"
}
return t.join("")
};
ZmListView.prototype._getAttachmentToolTip=function(e){
var t=null;
var i=e&&e.attachments?e.attachments:[];
if(i.length==1){
var a=ZmMimeTable.getInfo(i[0].ct);
t=a?a.desc:null
}else{
if(i.length>1){
t=AjxMessageFormat.format(ZmMsg.multipleAttachmentsTooltip,[i.length])
}}
return t
};
ZmListView.prototype._getDateToolTip=function(e,t){
t._dateStr=t._dateStr||this._getDateToolTipText(e.date);
return t._dateStr
};
ZmListView.prototype._getDateToolTipText=function(t,n){
if(!t){
return""
}
var e=[];
var a=0;
e[a++]=n;
var o=AjxDateFormat.getDateTimeInstance(AjxDateFormat.FULL,AjxDateFormat.MEDIUM);
e[a++]=o.format(new Date(t));
var s=AjxDateUtil.computeDateDelta(t);
if(s){
e[a++]="<br><center><span style='white-space:nowrap'>(";
e[a++]=s;
e[a++]=")</span></center>"
}
return e.join("")
};
ZmListView.prototype._setListEvent=function(i,n,t){
DwtListView.prototype._setListEvent.call(this,i,n,t);
var o=this._getEventTarget(i);
var s=(o&&o.id&&o.id.indexOf("AjxImg")==-1)?o.id:t.id;
if(!s){
return false
}
var e=this._parseId(s);
if(i.button==DwtMouseEvent.LEFT){
this._selEv.field=e?e.field:null
}else{
if(i.button==DwtMouseEvent.RIGHT){
this._actionEv.field=e?e.field:null;
if(e&&e.field){
if(e.field==ZmItem.F_PARTICIPANT){
var a=this.getItemFromElement(t);
this._actionEv.detail=a.participants?a.participants.get(e.participant):null
}}}}
return true
};
ZmListView.prototype._allowLeftSelection=function(i,o,t){
if(!(o instanceof DwtMouseEvent)){
return true
}
var s=this._getEventTarget(o);
var r=(s&&s.id&&s.id.indexOf("AjxImg")==-1)?s.id:i.id;
var n=this._data[i.id];
var a=n.type;
if(r&&a&&a==DwtListView.TYPE_LIST_ITEM){
var e=this._parseId(r);
if(e&&e.field){
return this._allowFieldSelection(e.item,e.field)
}}
return true
};
ZmListView.prototype._allowFieldSelection=function(t,e){
return(!this._disallowSelection[e])
};
ZmListView.prototype._redoSearch=function(o){
var e=this._controller._currentSearch;
if(!e){
return
}
var i=this.getSelection();
var a=i&&i[0];
var t={
isRedo:true,selectedItem:a};
appCtxt.getSearchController().redoSearch(e,false,t,o)
};
ZmListView.prototype._sortColumn=function(i,n,r){
var s;
switch(i._sortable){
case ZmItem.F_FROM:s=n?ZmSearch.NAME_ASC:ZmSearch.NAME_DESC;
break;
case ZmItem.F_TO:s=n?ZmSearch.RCPT_ASC:ZmSearch.RCPT_DESC;
break;
case ZmItem.F_NAME:s=n?ZmSearch.SUBJ_ASC:ZmSearch.SUBJ_DESC;
break;
case ZmItem.F_SUBJECT:s=n?ZmSearch.SUBJ_ASC:ZmSearch.SUBJ_DESC;
break;
case ZmItem.F_DATE:s=n?ZmSearch.DATE_ASC:ZmSearch.DATE_DESC;
break;
case ZmItem.F_SIZE:s=n?ZmSearch.SIZE_ASC:ZmSearch.SIZE_DESC;
break;
case ZmItem.F_FLAG:s=n?ZmSearch.FLAG_ASC:ZmSearch.FLAG_DESC;
break;
case ZmItem.F_ATTACHMENT:s=n?ZmSearch.ATTACH_ASC:ZmSearch.ATTACH_DESC;
break;
case ZmItem.F_READ:s=n?ZmSearch.READ_ASC:ZmSearch.READ_DESC;
break;
case ZmItem.F_PRIORITY:s=n?ZmSearch.PRIORITY_ASC:ZmSearch.PRIORITY_DESC;
break;
case ZmItem.F_SORTED_BY:s=n?ZmSearch.DATE_ASC:ZmSearch.DATE_DESC;
break
}
if(s){
this._currentSortColId=i._sortable;
if(i._sortable!=ZmItem.F_READ&&(this._sortByString==ZmSearch.READ_ASC||this._sortByString==ZmSearch.READ_DESC)){
var t=this._controller;
var o=t.getSearchString();
if(o){
t.setSearchString(AjxStringUtil.trim(o.replace("is:unread","")))
}}
this._sortByString=s;
var e=this._folderId?true:false;
if(!appCtxt.isExternalAccount()){
var a=appCtxt.getSettings();
appCtxt.set(ZmSetting.SORTING_PREF,s,this.view,false,e,null,a&&!a.persistImplicitSortPrefs(this.view));
if(this._folderId){
appCtxt.set(ZmSetting.SORTING_PREF,s,this._folderId)
}}
if(!this._isMultiColumn){
this._setSortedColStyle(i._id)
}}
if(r){
r.run()
}};
ZmListView.prototype._setNextSelection=function(t,e){
if(this.firstSelIndex<0){
this.firstSelIndex=0
}
if(this._list&&!t){
t=this._list.get(this.firstSelIndex)||this._list.getLast()
}
if(t){
this.setSelection(t,false,e)
}};
ZmListView.prototype._relayout=function(){
DwtListView.prototype._relayout.call(this);
this._checkColumns()
};
ZmListView.prototype._checkColumns=function(){
var o=this._headerList.length;
var e=[];
for(var t=0;
t<o;
t++){
var n=this._headerList[t];
if(n&&n._field!=ZmItem.F_ACCOUNT){
e.push(n._field+(n._visible?"":"*"))
}}
var a=e.join(ZmListView.COL_JOIN);
a=(a==this._defaultCols)?"":a;
if(!appCtxt.isExternalAccount()){
appCtxt.set(ZmSetting.LIST_VIEW_COLUMNS,a,appCtxt.getViewTypeFromId(this.view))
}
this._colHeaderActionMenu=this._getActionMenuForColHeader(true)
};
ZmListView.handleScroll=function(e){
var t=DwtUiEvent.getTarget(e);
var a=DwtControl.findControl(t);
if(a){
a._checkItemCount()
}};
ZmListView.prototype._checkItemCount=function(){
var e=this._getItemsNeeded();
if(e){
this._controller._paginate(this._view,true,null,e)
}};
ZmListView.prototype._getItemsNeeded=function(i){
if(!i){
var e=this.getItemList();
if(!(e&&e.hasMore())||!this._list){
return 0
}}
if(!this._rendered||!this._rowHeight){
return 0
}
var t=new AjxCallback(null,AjxTimedAction.scheduleAction,[new AjxTimedAction(this,this._resetColWidth),100]);
var a={
scrollDiv:this._getScrollDiv(),rowHeight:this._rowHeight,threshold:this.getPagelessThreshold(),limit:this.getLimit(1),listSize:this._list.size(),sbCallback:t};
return ZmListView.getRowsNeeded(a)
};
ZmListView.prototype._getScrollDiv=function(){
return this._parentEl
};
ZmListView.getRowsNeeded=function(a){
var t=a.scrollDiv;
var o=t.scrollHeight,l=t.scrollTop,s=a.rowHeight;
var i=t.clientHeight||Dwt.getSize(t).y;
var n=i+(a.threshold*s);
var e=o-l;
if(e==i){
e=(a.listSize*s)-l;
if(l==0&&a.sbCallback){
a.sbCallback.run()
}}
var r=0;
if(e<n){
r=Math.max(Math.floor((n-e)/s),a.limit)
}
return r
};
ZmListView.prototype._sizeChildren=function(e){
if(DwtListView.prototype._sizeChildren.apply(this,arguments)){
this._checkItemCount()
}};
ZmListView.prototype._getItemCountType=function(){
return this.type
};
ZmListView.prototype.hasItem=function(n){
var s=(typeof n=="string")?n:n&&n.id;
if(s&&this._list){
var t=this._list.getArray();
for(var o=0,e=t.length;
o<e;
o++){
var n=t[o];
if(n&&n.id==s){
return true
}}}
return false
};
ZmListView.prototype._saveState=function(a){
var t=this._state={};
a=a||{};
if(a.selection){
t.selected=this.getSelection();
if(t.selected.length==1){
var e=this._getElFromItem(t.selected[0]);
t.singleItemChecked=this._getItemData(e,ZmListView.ITEM_CHECKED_ATT_NAME)
}}
if(a.focus){
t.focused=this.hasFocus();
t.anchorItem=this._kbAnchor&&this.getItemFromElement(this._kbAnchor)
}
if(a.scroll){
t.rowHeight=this._rowHeight;
t.scrollTop=this._listDiv.scrollTop
}};
ZmListView.prototype._restoreState=function(i){
var a=i||this._state;
if(a.selected&&a.selected.length){
var t=a.selected.length==1&&!a.singleItemChecked;
this.setSelectedItems(a.selected,t)
}
if(a.anchorItem){
var e=this._getElFromItem(a.anchorItem);
if(e){
this._setKbFocusElement(e)
}}
if(a.focused){
this.focus()
}
if(a.rowHeight){
this._listDiv.scrollTop=a.scrollTop*(this._rowHeight/a.rowHeight)
}
this._state={}
};
ZmListView.prototype._renderList=function(r,s,a){
var c=this._group;
if(!c){
return DwtListView.prototype._renderList.call(this,r,s,a)
}
if(r instanceof AjxVector&&r.size()){
var t=new Date();
var m=r.size();
var d=[];
var l;
var h;
for(var n=0;
n<m;
n++){
var u=r.get(n);
var e=this._createItemHtml(u,{
now:t}
,!a,n);
if(e){
if(e instanceof Array){
for(var o=0;
o<e.length;
o++){
l=c.addMsgToSection(u,e[o]);
if(c.getSectionSize(l)==1){
h=this._getSectionHeaderDiv(c,l);
this._addRow(h)
}
this._addRow(e[o])
}}else{
if(e.tagName||a){
l=c.addMsgToSection(u,e);
if(c.getSectionSize(l)==1){
h=this._getSectionHeaderDiv(c,l);
this._addRow(h)
}
this._addRow(e)
}else{
c.addMsgToSection(u,e)
}}}}
if(c&&!a){
c.resetSectionHeaders();
d.push(c.getAllSections(this._bSortAsc))
}
if(d.length&&!a){
this._parentEl.innerHTML=d.join("")
}}else{
if(!s){
this._setNoResultsHtml()
}}};
ZmListView.prototype._addRow=function(t,e){
DwtListView.prototype._addRow.apply(this,arguments);
this._updateLabelForItem(this.getItemFromElement(t))
};
ZmListView.prototype._getSectionHeaderDiv=function(o,i){
if(o&&i){
var a=document.createElement("div");
var e=o.getSectionTitle(i);
var t=o.getSectionHeader(e);
a.innerHTML=t;
return a.firstChild
}};
ZmListView.prototype.deactivate=function(){
this._controller.inactive=true
};
ZmListView.prototype._getEventTarget=function(e){
var t=e&&e.target;
if(t&&(t.nodeName==="IMG"||(t.className&&t.className.match(/\bImg/)))){
return t.parentNode
}
return t
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmAppChooser")){
ZmAppChooser=function(a){
a.className=a.className||"ZmAppChooser";
a.width=appCtxt.getSkinHint("appChooser","fullWidth")?"100%":null;
ZmToolBar.call(this,a);
Dwt.setLocation(this.getHtmlElement(),Dwt.LOC_NOWHERE,Dwt.LOC_NOWHERE);
this.setScrollStyle(Dwt.CLIP);
this._buttonListener=new AjxListener(this,this._handleButton);
this._initOverFlowTabs();
var t=a.buttons;
for(var e=0;
e<t.length;
e++){
var o=t[e];
if(o==ZmAppChooser.SPACER){
this.addSpacer(ZmAppChooser.SPACER_HEIGHT)
}else{
this._createButton(o)
}}
this._createPrecedenceList();
this._inited=true
};
ZmAppChooser.prototype=new ZmToolBar;
ZmAppChooser.prototype.constructor=ZmAppChooser;
ZmAppChooser.prototype.role="tablist";
ZmAppChooser.prototype._initOverFlowTabs=function(){
this._leftOverflow=document.getElementById("moreTabsLeftContainer");
this._rightOverflow=document.getElementById("moreTabsRightContainer");
if(this._leftOverflow){
this._leftOverflow.onclick=this._showLeftTab.bind(this)
}
if(this._rightOverflow){
this._rightOverflow.onclick=this._showRightTab.bind(this)
}
this._leftBtnIndex=-1;
this._deletedButtons=[]
};
ZmAppChooser.prototype._showLeftTab=function(){
var e=this.getItems();
if(this._leftBtnIndex>-1){
e[this._leftBtnIndex].setVisible(true);
this._leftBtnIndex--
}
this._checkArrowVisibility()
};
ZmAppChooser.prototype._showRightTab=function(){
var e=this.getItems();
this._leftBtnIndex++;
e[this._leftBtnIndex].setVisible(false);
this._checkArrowVisibility()
};
ZmAppChooser.prototype._showTab=function(o,a){
var t=this._buttons[o];
this._moreTabsBtn.getMenu().popdown();
if(!t){
return
}
if(!t.getVisible()){
var i=false;
for(var e in this._buttons){
if(!i&&this._buttons[e].getHTMLElId()==t.getHTMLElId()){
i=true
}else{
if(this._buttons[e].getVisible()){
break
}}
if(i){
this._buttons[e].setVisible(true);
this._leftBtnIndex--
}}}else{
while(this._isTabOverflow(t.getHtmlElement())){
this._showRightTab()
}}
this._checkArrowVisibility();
appCtxt.getAppController()._appButtonListener(a)
};
ZmAppChooser.prototype._attachMoreTabMenuItems=function(o){
for(var i=0;
i<this._deletedButtons.length;
i++){
var e=o.getItemById(ZmOperation.MENUITEM_ID,this._deletedButtons[i]+"_menu");
if(e){
o.removeChild(e);
e.dispose()
}}
this._deletedButtons=[];
for(var t in this._buttons){
var a=o.getItemById(ZmOperation.MENUITEM_ID,t+"_menu");
if(a){
if(a.getText()!=this._buttons[t].getText()){
a.setText(this._buttons[t].getText())
}}else{
var e=new DwtMenuItem({
parent:o,style:DwtMenuItem.CASCADE_STYLE,id:t+"_menu"}
);
e.setData(ZmOperation.MENUITEM_ID,t+"_menu");
e.setData(Dwt.KEY_ID,t);
e.addSelectionListener(this._showTab.bind(this,t));
e.setText(this._buttons[t].getText())
}}
if(o.getHtmlElement().style.width=="0px"){
this._moreTabsBtn.popup()
}};
ZmAppChooser.prototype._showOverflowTabsMenu=function(){
var e=new DwtMenu({
parent:this._moreTabsBtn}
);
e.addPopupListener(new AjxListener(this,this._attachMoreTabMenuItems,[e]));
return e
};
ZmAppChooser.prototype._checkArrowVisibility=function(){
var e=this.getItems();
if(this._leftBtnIndex<0){
this._setArrowVisibility(this._leftOverflow,"none")
}else{
this._setArrowVisibility(this._leftOverflow,"")
}
if(!this._isTabOverflow(e[e.length-1].getHtmlElement())){
this._setArrowVisibility(this._rightOverflow,"none")
}else{
this._setArrowVisibility(this._rightOverflow,"")
}
this._adjustWidth()
};
ZmAppChooser.prototype._setArrowVisibility=function(a,i){
if(!a){
return
}
a.style.display=i||"";
var n=((this._leftOverflow&&this._leftOverflow.style.display=="none")&&(this._rightOverflow&&this._rightOverflow.style.display=="none"))?"none":"";
var e=document.getElementById("moreTabsMenu");
if(e){
e.style.display=n
}
if(n!="none"&&!this._moreTabsBtn&&e){
var o=e;
var t=new DwtToolBarButton({
parent:DwtShell.getShell(window),id:"moreTabsMenuBtn",style:"background:none no-repeat scroll 0 0 transparent; border: none"}
);
t.setToolTipContent(ZmMsg.more,true);
t.setText("");
t.reparentHtmlElement(e);
t.setMenu(new AjxListener(this,this._showOverflowTabsMenu));
this._moreTabsBtn=t
}};
ZmAppChooser.prototype.toString=function(){
return"ZmAppChooser"
};
ZmAppChooser.SPACER="spacer";
ZmAppChooser.B_HELP="Help";
ZmAppChooser.B_LOGOUT="Logout";
ZmApp.CHOOSER_SORT[ZmAppChooser.SPACER]=160;
ZmApp.CHOOSER_SORT[ZmAppChooser.B_HELP]=170;
ZmApp.CHOOSER_SORT[ZmAppChooser.B_LOGOUT]=190;
ZmApp.ICON[ZmAppChooser.B_HELP]="Help";
ZmApp.ICON[ZmAppChooser.B_LOGOUT]="Logoff";
ZmApp.CHOOSER_TOOLTIP[ZmAppChooser.B_HELP]="goToHelp";
ZmApp.CHOOSER_TOOLTIP[ZmAppChooser.B_LOGOUT]="logOff";
ZmAppChooser.SPACER_HEIGHT=10;
ZmAppChooser.prototype.TEMPLATE="share.Widgets#ZmAppChooser";
ZmAppChooser.prototype.ITEM_TEMPLATE="share.Widgets#ZmAppChooserItem";
ZmAppChooser.prototype.SPACER_TEMPLATE="dwt.Widgets#ZmAppChooserSpacer";
ZmAppChooser.prototype.addSelectionListener=function(e){
this.addListener(DwtEvent.SELECTION,e)
};
ZmAppChooser.prototype._checkTabOverflowAdd=function(e){
var t="none";
if(this._isTabOverflow(e)){
t=""
}
this._setArrowVisibility(this._rightOverflow,t);
this._adjustWidth()
};
ZmAppChooser.prototype._isTabOverflow=function(i){
var t=i.offsetLeft+i.clientWidth+30;
if(!this._refElement){
this._refElement=document.getElementById(this._refElementId)
}
var e=this._refElement&&this._refElement.parentNode;
if(!e){
return false
}
var a=e.offsetWidth;
return(a<t)
};
ZmAppChooser.prototype._adjustWidth=function(){
var e=this._refElement&&this._refElement.parentNode;
if(e&&e.offsetWidth>=30){
this._refElement.style.maxWidth=this._refElement.style.width=e.offsetWidth-30+"px";
this._refElement.style.overflow="hidden"
}};
ZmAppChooser.prototype._checkTabOverflowDelete=function(t){
var e=this.getItems();
if(this._isTabOverflow(e[e.length-1])){
return
}
this._showLeftTab()
};
ZmAppChooser.prototype.addButton=function(i,a){
var t={
parent:this,id:ZmId.getButtonId(ZmId.APP,i),text:a.text,image:a.image,leftImage:a.leftImage,rightImage:a.rightImage,index:a.index};
t.style=a.style?a.style:DwtLabel.IMAGE_LEFT;
var e=new ZmAppButton(t);
e.setToolTipContent(a.tooltip,true);
e.textPrecedence=a.textPrecedence;
e.imagePrecedence=a.imagePrecedence;
e.setData(Dwt.KEY_ID,i);
e.addSelectionListener(this._buttonListener);
this._buttons[i]=e;
this._checkTabOverflowAdd(e.getHtmlElement());
return e
};
ZmAppChooser.prototype.removeButton=function(a){
var t=this._buttons[a];
if(t){
var e=this.__getButtonIndex(a);
t.dispose();
this._buttons[a]=null;
delete this._buttons[a];
if(e!=null){
this._removeItem(this._items[e])
}
if(this._moreTabsBtn&&this._moreTabsBtn.getMenu()&&this._moreTabsBtn.getMenu().getItemCount()>0){
this._deletedButtons.push(a)
}
this._checkTabOverflowDelete(e)
}};
ZmAppChooser.prototype.replaceButton=function(a,e,t){
if(!this._buttons[a]){
return null
}
t.index=this.__getButtonIndex(a);
this.removeButton(a);
return this.addButton(e,t)
};
ZmAppChooser.prototype.getButton=function(e){
return this._buttons[e]
};
ZmAppChooser.prototype.setSelected=function(a){
var e=this._buttons[this._selectedId];
if(this._selectedId&&e){
this.__markPrevNext(this._selectedId,false);
e.setSelected(false);
e._noFocus=false
}
var t=this._buttons[a];
if(t){
t.setSelected(true);
this.setAttribute("aria-activedescendant",t.getHTMLElId());
if(t._toggleText!=null&&t._toggleText!=""){
if(e){
e._toggleText=(e._toggleText!=null&&e._toggleText!="")?e._toggleText:e.getText();
e.setText("")
}
t.setText(t._toggleText);
t._toggleText=null
}
t._noFocus=true
}
this._selectedId=a
};
ZmAppChooser.prototype._createButton=function(e){
this.addButton(e,{
text:ZmMsg[ZmApp.NAME[e]]||ZmApp.NAME[e],image:ZmApp.ICON[e],tooltip:ZmMsg[ZmApp.CHOOSER_TOOLTIP[e]],textPrecedence:ZmApp.TEXT_PRECEDENCE[e],imagePrecedence:ZmApp.IMAGE_PRECEDENCE[e]}
)
};
ZmAppChooser.prototype._handleButton=function(e){
this.notifyListeners(DwtEvent.SELECTION,e)
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmAppButton")){
ZmAppButton=function(e){
if(arguments.length==0){
return
}
e.style=e.style?e.style:DwtLabel.IMAGE_LEFT;
e.posStyle=DwtControl.RELATIVE_STYLE;
DwtButton.call(this,e);
if(e.image){
this.setImage(e.image)
}else{
if(e.leftImage){
this.setImage(e.leftImage,DwtLabel.LEFT)
}
if(e.rightImage){
this.setImage(e.rightImage,DwtLabel.RIGHT)
}}
if(e.hoverImage){
this.setHoverImage(e.hoverImage)
}else{
if(e.leftHoverImage){
this.setHoverImage(e.leftHoverImage,DwtLabel.LEFT)
}
if(e.rightHoverImage){
this.setHoverImage(e.rightHoverImage,DwtLabel.RIGHT)
}}
this.setText(e.text)
};
ZmAppButton.prototype=new DwtButton;
ZmAppButton.prototype.constructor=ZmAppButton;
ZmAppButton.prototype.role="tab";
ZmAppButton.prototype.toString=function(){
return"ZmAppButton"
};
ZmAppButton.prototype.TEMPLATE="share.Widgets#ZmAppChooserButton";
ZmAppButton.prototype.setSelected=function(e){
this.isSelected=e;
this.setDisplayState(e?DwtControl.SELECTED:DwtControl.NORMAL)
};
ZmAppButton.prototype.setDisplayState=function(e){
if(this.isSelected&&e!=DwtControl.SELECTED){
e=[DwtControl.SELECTED,e].join(" ")
}
DwtButton.prototype.setDisplayState.call(this,e)
};
ZmAppButton.prototype.handleKeyAction=function(e,t){
switch(e){
case DwtKeyMap.SELECT:if(this.isListenerRegistered(DwtEvent.SELECTION)){
var a=DwtShell.selectionEvent;
a.item=this;
this.notifyListeners(DwtEvent.SELECTION,a)
}
break;
default:return false
}
return true
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmStatusView")){
ZmStatusView=function(a,t,e,i){
DwtControl.call(this,{
parent:a,className:(t||"ZmStatus"),posStyle:e,id:i}
);
this._toast=this._standardToast=new ZmToast(this,ZmId.TOAST);
this._statusQueue=[]
};
ZmStatusView.prototype=new DwtControl;
ZmStatusView.prototype.constructor=ZmStatusView;
ZmStatusView.LEVEL_INFO=1;
ZmStatusView.LEVEL_WARNING=2;
ZmStatusView.LEVEL_CRITICAL=3;
ZmStatusView.MSG_PARAMS=["msg","level","detail","transitions","toast","force","dismissCallback","finishCallback"];
ZmStatusView.prototype.toString=function(){
return"ZmStatusView"
};
ZmStatusView.prototype.setStatusMsg=function(a){
a=Dwt.getParams(arguments,ZmStatusView.MSG_PARAMS);
if(typeof a=="string"){
a={
msg:a}
}
var e={
msg:a.msg,level:a.level||ZmStatusView.LEVEL_INFO,detail:a.detail,date:new Date(),transitions:a.transitions,toast:a.toast||this._standardToast,dismissCallback:(a.dismissCallback instanceof AjxCallback)?a.dismissCallback:null,finishCallback:(a.finishCallback instanceof AjxCallback)?a.finishCallback:null,dismissed:false};
if(a.force){
for(var t=0;
t<this._statusQueue.length;
t++){
this._statusQueue[t].dismissed=true
}}
this._statusQueue.push(e);
if(!this._toast.isPoppedUp()){
this._updateStatusMsg()
}else{
if(a.force){
this.dismissStatusMsg()
}}};
ZmStatusView.prototype.nextStatus=function(){
if(this._statusQueue.length>0){
this._updateStatusMsg();
return true
}
return false
};
ZmStatusView.prototype.dismissStatusMsg=function(t){
if(t){
for(var e=0;
e<this._statusQueue.length;
e++){
this._statusQueue[e].dismissed=true
}}
this._toast.dismiss()
};
ZmStatusView.prototype._updateStatusMsg=function(){
var e=this._statusQueue.shift();
if(!e){
return
}
if(e.dismissed){
if(e.dismissCallback){
e.dismissCallback.run()
}
this.nextStatus()
}else{
this._toast=e.toast;
this._toast.popup(e)
}};
ZmToast=function(e,t){
if(arguments.length==0){
return
}
DwtComposite.call(this,{
parent:e.shell,className:"ZToast",posStyle:Dwt.ABSOLUTE_STYLE,id:t}
);
this._statusView=e;
this._createHtml();
this._funcs={};
this._funcs.position=AjxCallback.simpleClosure(this.__position,this);
this._funcs.show=AjxCallback.simpleClosure(this.__show,this);
this._funcs.hide=AjxCallback.simpleClosure(this.__hide,this);
this._funcs.pause=AjxCallback.simpleClosure(this.__pause,this);
this._funcs.hold=AjxCallback.simpleClosure(this.__hold,this);
this._funcs.idle=AjxCallback.simpleClosure(this.__idle,this);
this._funcs.fade=AjxCallback.simpleClosure(this.__fade,this);
this._funcs["fade-in"]=this._funcs.fade;
this._funcs["fade-out"]=this._funcs.fade;
this._funcs.slide=AjxCallback.simpleClosure(this.__slide,this);
this._funcs["slide-in"]=this._funcs.slide;
this._funcs["slide-out"]=this._funcs.slide;
this._funcs.next=AjxCallback.simpleClosure(this.transition,this)
};
ZmToast.prototype=new DwtComposite;
ZmToast.prototype.constructor=ZmToast;
ZmToast.prototype.toString=function(){
return"ZmToast"
};
ZmToast.prototype.role="alert";
ZmToast.prototype.isFocusable=true;
ZmToast.FADE={
type:"fade"};
ZmToast.FADE_IN={
type:"fade-in"};
ZmToast.FADE_OUT={
type:"fade-out"};
ZmToast.SLIDE={
type:"slide"};
ZmToast.SLIDE_IN={
type:"slide-in"};
ZmToast.SLIDE_OUT={
type:"slide-out"};
ZmToast.PAUSE={
type:"pause"};
ZmToast.HOLD={
type:"hold"};
ZmToast.IDLE={
type:"idle"};
ZmToast.SHOW={
type:"show"};
ZmToast.DEFAULT_TRANSITIONS=[ZmToast.SLIDE_IN,ZmToast.PAUSE,ZmToast.SLIDE_OUT];
ZmToast.DEFAULT_STATE={};
ZmToast.DEFAULT_STATE.position={
location:"C"};
ZmToast.DEFAULT_STATE.pause={
duration:1200};
ZmToast.DEFAULT_STATE.hold={};
ZmToast.DEFAULT_STATE.fade={
duration:100,multiplier:1};
ZmToast.DEFAULT_STATE["fade-in"]={
start:0,end:99,step:10,duration:200,multiplier:1};
ZmToast.DEFAULT_STATE["fade-out"]={
start:99,end:0,step:-10,duration:200,multiplier:1};
ZmToast.DEFAULT_STATE.slide={
duration:100,multiplier:1};
ZmToast.DEFAULT_STATE["slide-in"]={
start:-40,end:0,step:1,duration:100,multiplier:1};
ZmToast.DEFAULT_STATE["slide-out"]={
start:0,end:-40,step:-1,duration:100,multiplier:1};
ZmToast.LEVEL_RE=/\b(ZToastCrit|ZToastWarn|ZToastInfo)\b/g;
ZmToast.DISMISSABLE_STATES=[ZmToast.HOLD];
ZmToast.prototype.TEMPLATE="share.Widgets#ZToast";
ZmToast.prototype.dispose=function(){
this._textEl=null;
this._iconEl=null;
this._detailEl=null;
DwtComposite.prototype.dispose.call(this)
};
ZmToast.prototype.popup=function(t){
this.__clear();
this._poppedUp=true;
this._dismissed=false;
this._dismissCallback=t.dismissCallback;
this._finishCallback=t.finishCallback;
var s,n,a;
switch(t.level){
case ZmStatusView.LEVEL_CRITICAL:n="ZToastCrit";
s="Critical";
a=AjxMsg.criticalMsg;
break;
case ZmStatusView.LEVEL_WARNING:n="ZToastWarn";
s="Warning";
a=AjxMsg.warningMsg;
break;
case ZmStatusView.LEVEL_INFO:default:n="ZToastInfo";
s="Success";
a=AjxMsg.infoMsg;
break
}
var o=this.getHtmlElement();
Dwt.delClass(o,ZmToast.LEVEL_RE,n);
if(this._iconEl){
this._iconEl.innerHTML=AjxImg.getImageHtml({
imageName:s,altText:a}
)
}
if(this._textEl){
var i=document.createElement("SPAN");
i.innerHTML=t.msg||"";
Dwt.removeChildren(this._textEl);
this._textEl.appendChild(i)
}
var e=appCtxt.getSkinHint("toast","location");
var r=(t.transitions||appCtxt.getSkinHint("toast","transitions")||ZmToast.DEFAULT_TRANSITIONS);
r=[].concat({
type:"position",location:e}
,r,{
type:"hide"}
);
this._transitions=r;
this.transition()
};
ZmToast.prototype.popdown=function(){
this.__clear();
this.setLocation(Dwt.LOC_NOWHERE,Dwt.LOC_NOWHERE);
this._poppedUp=false;
if(!this._dismissed){
if(this._finishCallback){
this._finishCallback.run()
}}
this._dismissed=false
};
ZmToast.prototype.isPoppedUp=function(){
return this._poppedUp
};
ZmToast.prototype.transition=function(){
if(this._pauseTimer){
clearTimeout(this._pauseTimer);
this._pauseTimer=null
}
if(this._held){
this._held=false
}
var t=this._transitions&&this._transitions.shift();
if(!t){
this._poppedUp=false;
if(!this._statusView.nextStatus()){
this.popdown()
}
return
}
var e=this._state=this._createState(t);
this.setLocation(e.x,e.y);
this._funcs[t.type||"next"]()
};
ZmToast.prototype._createHtml=function(e){
var a={
id:this._htmlElId};
this._createHtmlFromTemplate(e||this.TEMPLATE,a);
this.setZIndex(Dwt.Z_TOAST);
var t=this.getHtmlElement();
t.setAttribute("aria-live","assertive");
t.setAttribute("aria-relevant","additions");
t.setAttribute("aria-atomic",true)
};
ZmToast.prototype._createHtmlFromTemplate=function(e,t){
DwtComposite.prototype._createHtmlFromTemplate.call(this,e,t);
this._textEl=document.getElementById(t.id+"_text");
this._iconEl=document.getElementById(t.id+"_icon");
this._detailEl=document.getElementById(t.id+"_detail")
};
ZmToast.prototype._createState=function(i){
var t=AjxUtil.createProxy(i);
var a=ZmToast.DEFAULT_STATE[t.type];
for(var e in a){
if(!t[e]){
t[e]=a[e]
}}
switch(t.type){
case"fade-in":this.setOpacity(0);
this.setLocation(null,0);
t.value=t.start;
break;
case"fade-out":case"fade":this.setLocation(null,0);
t.value=t.start;
break;
case"slide-in":case"slide-out":case"slide":this.setLocation(null,-36);
this.setOpacity(100);
t.value=t.start;
break
}
return t
};
ZmToast.prototype.__clear=function(){
clearTimeout(this._actionId);
clearInterval(this._actionId);
this._actionId=-1
};
ZmToast.prototype.__position=function(){
var i=this._state.location||"C";
var a="skin_container_toast";
var t=Dwt.byId(a)||this.shell.getHtmlElement();
var s=Dwt.getSize(t);
var o=this.getSize();
var e=(s.x-o.x)/2;
var r=(s.y-o.y)/2;
switch(i.toUpperCase()){
case"N":r=0-o.y;
break;
case"S":r=s.y-o.y;
break;
case"E":e=s.x-o.x;
break;
case"W":e=0;
break;
case"NE":e=s.x-o.x;
r=0;
break;
case"NW":e=0;
r=0;
break;
case"SE":e=s.x-o.x;
r=s.y-o.y;
break;
case"SW":e=0;
r=s.y-o.y;
break;
case"C":default:break
}
var n=Dwt.toWindow(t);
e+=n.x;
r+=n.y;
this.setLocation(e,r);
this._funcs.next()
};
ZmToast.prototype.__show=function(){
this.setVisible(true);
this.setVisibility(true);
this._funcs.next()
};
ZmToast.prototype.__hide=function(){
this.setLocation(Dwt.LOC_NOWHERE,Dwt.LOC_NOWHERE);
if(this._textEl){
Dwt.removeChildren(this._textEl)
}
if(this._iconEl){
Dwt.removeChildren(this._iconEl)
}
this._funcs.next()
};
ZmToast.prototype.__pause=function(){
if(this._dismissed&&ZmToast.__mayDismiss(ZmToast.PAUSE)){
this._funcs.next()
}else{
this._pauseTimer=setTimeout(this._funcs.next,this._state.duration)
}};
ZmToast.prototype.__hold=function(){
if(this._dismissed&&ZmToast.__mayDismiss(ZmToast.HOLD)!=-1){
this._funcs.next()
}else{
this._held=true
}};
ZmToast.__mayDismiss=function(e){
return AjxUtil.indexOf(ZmToast.DISMISSABLE_STATES,e)!=-1
};
ZmToast.prototype.dismiss=function(){
if(!this._dismissed&&this._poppedUp){
var e=(this._pauseTimer&&ZmToast.__mayDismiss(ZmToast.PAUSE))||(this._held&&ZmToast.__mayDismiss(ZmToast.HOLD));
if(e){
this._funcs.next()
}
this._dismissed=true;
if(this._dismissCallback instanceof AjxCallback){
this._dismissCallback.run()
}}};
ZmToast.prototype.__idle=function(){
if(!this._idleTimer){
this._idleTimer=new DwtIdleTimer(0,new AjxCallback(this,this.__idleCallback))
}else{
this._idleTimer.resurrect(0)
}};
ZmToast.prototype.__idleCallback=function(e){
if(!e){
this.transition();
this._idleTimer.kill()
}};
ZmToast.prototype.__move=function(){
this._funcs.next()
};
ZmToast.prototype.__fade=function(){
var t=this._state.value;
var i=this._state.step;
if(AjxEnv.isIE&&!AjxEnv.isIE9up){
try{
var a=this.getHtmlElement();
a.style.visibility=i>0?"hidden":"visible";
var n=this._state.duration/1000;
a.style.filter="progid:DXImageTransform.Microsoft.Fade(duration="+n+",overlap=1.0)";
a.filters[0].Apply();
a.style.visibility=i>0?"visible":"hidden";
a.filters[0].Play()
}
catch(o){}
setTimeout(this._funcs.next,0);
return
}
var s=i>0?t>=this._state.end:t<=this._state.end;
if(s){
t=this._state.end
}
this.setOpacity(t);
if(s){
this.__clear();
setTimeout(this._funcs.next,0);
return
}
if(this._actionId==-1){
var n=this._state.duration;
var r=n/Math.abs(i);
this._actionId=setInterval(this._funcs.fade,r)
}
this._state.value+=i;
this._state.step*=this._state.multiplier
};
ZmToast.prototype.__slide=function(){
var a=this._state.value;
var e=this._state.step;
var i=e>0?a>=this._state.end:a<=this._state.end;
if(i){
a=this._state.end
}
this.setLocation(null,a);
if(i){
this.__clear();
setTimeout(this._funcs.next,0);
return
}
if(this._actionId==-1){
var t=this._state.duration;
var o=t/Math.abs(e);
this._actionId=setInterval(this._funcs.slide,o)
}
this._state.value+=e;
this._state.step*=this._state.multiplier
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmOverviewContainer")){
ZmOverviewContainer=function(e){
if(arguments.length==0){
return
}
e.className=e.className||"ZmOverviewContainer";
e.id=e.id||ZmId.getOverviewContainerId(e.containerId);
DwtTree.call(this,e);
this.setScrollStyle(e.scroll||Dwt.SCROLL_Y);
this.containerId=e.containerId;
this._appName=e.appName;
this._controller=e.controller;
this._headerItems={};
this._overview={};
this.addSelectionListener(new AjxListener(this,this._treeViewListener));
this.addTreeListener(new AjxListener(this,this._treeListener))
};
ZmOverviewContainer.prototype=new DwtTree;
ZmOverviewContainer.prototype.constructor=ZmOverviewContainer;
ZmOverviewContainer.prototype.toString=function(){
return"ZmOverviewContainer"
};
ZmOverviewContainer.prototype.initialize=function(e){};
ZmOverviewContainer.prototype.getOverview=function(e){
return this._overview[e]
};
ZmOverviewContainer.prototype.getOverviews=function(){
return this._overview
};
ZmOverviewContainer.prototype.getHeaderItem=function(){};
ZmOverviewContainer.prototype.getSelected=function(){
var t;
for(var e in this._overview){
t=this._overview[e].getSelected();
if(t){
return t
}}};
ZmOverviewContainer.prototype.deselectAll=function(e){
DwtTree.prototype.deselectAll.call(this);
this._deselectAllTreeViews(e)
};
ZmOverviewContainer.prototype.setOverviewTrees=function(e){
for(var t in this._overview){
this._overview[t].set(e)
}};
ZmOverviewContainer.prototype.resetOperations=function(t,e){};
ZmOverviewContainer.prototype._treeViewListener=function(e){};
ZmOverviewContainer.prototype._treeListener=function(e){};
ZmOverviewContainer.prototype._initializeActionMenu=function(e){};
ZmOverviewContainer.prototype._getActionMenu=function(e){
if(this._actionMenu instanceof AjxCallback){
var t=this._actionMenu;
this._actionMenu=t.run()
}
return this._actionMenu
};
ZmOverviewContainer.prototype._createActionMenu=function(t,e,a){};
ZmOverviewContainer.prototype._actionMenuListener=function(e){};
ZmOverviewContainer.prototype._deselectAllTreeViews=function(o){
for(var a in this._overview){
var n=this._overview[a];
if(o&&o==n){
continue
}
var t=n._treeHash;
for(var e in t){
if(t[e].getSelectionCount()>0){
t[e].deselectAll();
break
}}}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmAccountOverviewContainer")){
ZmAccountOverviewContainer=function(t){
if(arguments.length==0){
return
}
ZmOverviewContainer.call(this,t);
this._vFolderTreeItemMap={};
this._settingChangeListener=new AjxListener(this,this._handleSettingChange);
var e=new AjxListener(this,this._mouseListener);
this.addListener(DwtEvent.ONMOUSEDOWN,e);
this.addListener(DwtEvent.ONMOUSEUP,e)
};
ZmAccountOverviewContainer.prototype=new ZmOverviewContainer;
ZmAccountOverviewContainer.prototype.constructor=ZmAccountOverviewContainer;
ZmAccountOverviewContainer.VIRTUAL_FOLDERS=[ZmFolder.ID_INBOX,ZmFolder.ID_SENT,ZmFolder.ID_DRAFTS,ZmFolder.ID_SPAM,ZmFolder.ID_OUTBOX,ZmFolder.ID_TRASH];
ZmAccountOverviewContainer.prototype.toString=function(){
return"ZmAccountOverviewContainer"
};
ZmAccountOverviewContainer.prototype.getHeaderItem=function(e){
return e&&this._headerItems[e.id]
};
ZmAccountOverviewContainer.prototype.expandAccountOnly=function(t){
if(!t){
t=appCtxt.getActiveAccount()
}
for(var e in this._headerItems){
this._headerItems[e].setExpanded((e==t.id),false,false)
}};
ZmAccountOverviewContainer.prototype.getSelected=function(){
var t=ZmOverviewContainer.prototype.getSelected.call(this);
if(!t){
t=this.getSelection()[0];
var a=t&&appCtxt.accountList.getAccount(t.getData(Dwt.KEY_ID));
var e=a&&appCtxt.getFolderTree(a);
return e&&e.root
}
return t
};
ZmAccountOverviewContainer.prototype.initialize=function(C){
var j,d;
var c=appCtxt.accountList.visibleAccounts;
var w=(appCtxt.isOffline&&this._appName==ZmApp.MAIL&&(c.length>2));
var f=w;
var n=appCtxt.accountList.mainAccount;
var W=C.omit;
for(var z=0;
z<c.length;
z++){
d=c[z];
if(appCtxt.isOffline&&d.isMain&&this._appName!=ZmApp.PREFERENCES){
continue
}
if(!d.active){
continue
}
C.omit={};
if(d.type==ZmAccount.TYPE_POP){
C.omit[ZmFolder.ID_SPAM]=true;
C.omit[ZmFolder.ID_OUTBOX]=true
}
if(C.overviewId&&!C.isAppOverview){
var y=C.overviewId.split(":")[1];
if(y&&(y=="ZmNewOrganizerDialog")){
C.omit[ZmFolder.ID_DRAFTS]=true
}}
this._addAccount(C,d,f,null,"account"+z);
j=this.getHeaderItem(d);
if(j){
this._setupHeader(j,d)
}
this.updateAccountInfo(d,true,true);
f=!f
}
v=W&&W[ZmOrganizer.ID_ALL_MAILBOXES];
if(w&&!v){
var u=ZmMsg[ZmFolder.MSG_KEY[ZmOrganizer.ID_ALL_MAILBOXES]];
var s=appCtxt.get(ZmSetting.OFFLINE_ALL_MAILBOXES_TREE_OPEN)?u:this._getFolderLabel(ZmOrganizer.ID_INBOX,u);
var O={
parent:this,text:s,imageInfo:"AccountAll"};
var g=appCtxt.get(ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES);
var o=this._allMailboxesTreeHeader=new DwtTreeItem(O);
o.setData(Dwt.KEY_ID,ZmOrganizer.ID_ALL_MAILBOXES);
o.addClassName("ZmOverviewGlobalInbox");
o._initialize(0,true);
o.setVisible(g);
o.__origText=u;
if(g){
this.highlightAllMboxes()
}
var b=appCtxt.getSettings(n).getSetting(ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES);
b.addChangeListener(this._settingChangeListener);
var A=ZmAccountOverviewContainer.VIRTUAL_FOLDERS;
for(var z=0;
z<A.length;
z++){
var e=A[z];
O={
parent:o,text:this._getFolderLabel(e,ZmMsg[ZmFolder.MSG_KEY[e]]),imageInfo:ZmFolder.ICON[e]};
var r=this._vFolderTreeItemMap[e]=new DwtTreeItem(O);
r.setData(Dwt.KEY_ID,e);
r.addClassName("DwtTreeItemChildDiv");
r._initialize(null,true);
r.setToolTipContent(appCtxt.accountList.getTooltipForVirtualFolder(e))
}
O={
parent:o,text:ZmMsg.globalSearches,imageInfo:"SearchFolder"};
var x=this._searchTreeHeader=new DwtTreeItem(O);
x.addClassName("DwtTreeItemChildDiv");
x._initialize(null,true);
x.__isSearch=true;
var k=appCtxt.getById(ZmOrganizer.ID_ROOT,n);
var m=k.getByType(ZmOrganizer.SEARCH);
for(var z=0;
z<m.length;
z++){
var l=m[z];
if(l.id!=ZmOrganizer.ID_ALL_MAILBOXES&&l.isOfflineGlobalSearch){
this.addSearchFolder(l)
}}
x.setVisible(x.getItemCount()>0);
if(appCtxt.get(ZmSetting.OFFLINE_SAVED_SEARCHES_TREE_OPEN)){
x.setExpanded(true,null,true)
}
if(appCtxt.get(ZmSetting.OFFLINE_ALL_MAILBOXES_TREE_OPEN)){
o.setExpanded(true,null,true)
}}
if(appCtxt.isOffline){
var T=AjxUtil.hashCopy(C);
T.omit={};
if(this._appName!=ZmApp.PREFERENCES){
this._addAccount(T,n,f,"ZmOverviewLocalHeader","LocalFolders");
j=this.getHeaderItem(n);
j.setExpanded(appCtxt.get(ZmSetting.ACCOUNT_TREE_OPEN,null,n));
this.updateAccountInfo(n,false,true)
}else{
var q={
parent:this,text:n.getDisplayName(),imageInfo:n.getIcon()};
var p=new DwtTreeItem(q);
p._initialize(null,true);
var h=appCtxt.getOverviewId(this.containerId,n);
var S=this._overview[h].getTreeView(ZmOrganizer.PREF_PAGE);
var D=S.getTreeItemById("PREF_PAGE_IMPORT_EXPORT");
S.getHeaderItem().removeChild(D);
p._addItem(D);
D.addClassName("DwtTreeItemChildDiv");
p.setExpanded(true,null,true)
}}
var v=C.omit&&C.omit[ZmOrganizer.ID_ZIMLET];
if(!appCtxt.inStartup&&!v&&appCtxt.getZimletMgr().getPanelZimlets().length==0){
v=true
}
if(!v){
AjxDispatcher.require("Zimlet")
}
if(!v&&window[ZmOverviewController.CONTROLLER[ZmOrganizer.ZIMLET]]&&this._appName!=ZmApp.PREFERENCES){
var a=ZmOrganizer.LABEL[ZmOrganizer.ZIMLET];
var B=C.overviewId=appCtxt.getOverviewId([this.containerId,a],null);
var t={
label:ZmMsg[a],icon:"Zimlet",dataId:B,className:"ZmOverviewZimletHeader"};
C.overviewTrees=[ZmOrganizer.ZIMLET];
this._addSection(t,null,C);
var j=this._headerItems[B];
if(j){
j.__isZimlet=true;
j.setExpanded(appCtxt.get(ZmSetting.ZIMLET_TREE_OPEN,null,n))
}}
this._initializeActionMenu()
};
ZmAccountOverviewContainer.prototype.addSearchFolder=function(t){
if(!this._searchTreeHeader){
return
}
var a={
parent:this._searchTreeHeader,text:t.getName(),imageInfo:t.getIcon()};
var e=new DwtTreeItem(a);
e.setData(Dwt.KEY_ID,t);
e._initialize(null,true);
if(!this._searchTreeHeader.getVisible()){
this._searchTreeHeader.setVisible(true)
}};
ZmAccountOverviewContainer.prototype.updateAccountInfo=function(n,e,o){
var t=appCtxt.getApp(this._appName)&&this.getHeaderItem(n);
if(t){
if(e){
var i=(n.status==ZmZimbraAccount.STATUS_RUNNING)?("<img src='/img/animated/ImgSpinner.gif' width=16 height=16 border=0>"):(AjxImg.getImageHtml(n.getStatusIcon()));
if(t._extraCell){
t._extraCell.innerHTML=(i||"")
}
if(appCtxt.isOffline&&n.status==ZmZimbraAccount.STATUS_AUTHFAIL){
var a=appCtxt.getPasswordChangeDialog();
a.popup(n)
}}
if(o||e){
t.setToolTipContent(n.getToolTip())
}}};
ZmAccountOverviewContainer.prototype.updateLabel=function(e){
if(e.nId==ZmOrganizer.ID_INBOX){
var o=e.getAccount();
var i=this.getHeaderItem(o);
if(i&&!i.getExpanded()){
i.setText(this._getAccountHeaderLabel(o))
}}
var t=this._vFolderTreeItemMap[e.nId];
if(t){
t.setText(this._getFolderLabel(e.nId,e.name));
if(e.nId==ZmOrganizer.ID_INBOX&&!this._allMailboxesTreeHeader.getExpanded()){
var a=this._getFolderLabel(e.nId,this._allMailboxesTreeHeader.__origText);
this._allMailboxesTreeHeader.setText(a)
}}};
ZmAccountOverviewContainer.prototype.updateTooltip=function(e){
var t=this._allMailboxesTreeHeader&&this._vFolderTreeItemMap[e];
if(t){
t.setToolTipContent(appCtxt.accountList.getTooltipForVirtualFolder(e))
}};
ZmAccountOverviewContainer.prototype.resetOperations=function(a,o){
var i=a.getOp(ZmOperation.EMPTY_FOLDER);
if(o instanceof ZmSearchFolder){
a.getOp(ZmOperation.MARK_ALL_READ).setVisible(false);
i.setVisible(false);
a.getOp(this._newOp).setVisible(false);
if(appCtxt.isOffline){
a.getOp(ZmOperation.SYNC).setVisible(false)
}
a.getOp(ZmOperation.DELETE).setVisible(true);
return
}
var s=appCtxt.accountList.getAccount(o);
var t=(s||o==ZmOrganizer.ID_ALL_MAILBOXES);
a.getOp(ZmOperation.MARK_ALL_READ).setVisible(!t);
i.setVisible(false);
a.getOp(this._newOp).setVisible(t&&o!=ZmOrganizer.ID_ALL_MAILBOXES);
if(appCtxt.isOffline){
a.getOp(ZmOperation.SYNC).setVisible(t&&(!s||(s&&!s.isMain)))
}
a.getOp(ZmOperation.DELETE).setVisible(false);
if(t){
a.enable(this._newOp,true);
a.enable(ZmOperation.SYNC,(!s||(s&&!s.isMain)))
}else{
var e=false;
if(o!=ZmOrganizer.ID_OUTBOX&&o!=ZmFolder.ID_DRAFTS&&this._actionedHeaderItem.getText().indexOf("bold")!=-1){
e=true
}
a.enable(ZmOperation.MARK_ALL_READ,e);
if(o==ZmOrganizer.ID_TRASH||o==ZmOrganizer.ID_SPAM){
var n=(o==ZmOrganizer.ID_TRASH)?ZmMsg.emptyTrash:ZmMsg.emptyJunk;
i.setText(n);
i.setVisible(true);
a.enable(ZmOperation.EMPTY_FOLDER,!this._isFolderEmpty(o))
}}};
ZmAccountOverviewContainer.prototype.removeZimletSection=function(){
var e=ZmOrganizer.LABEL[ZmOrganizer.ZIMLET];
var t=appCtxt.getOverviewId([this.containerId,e],null);
var a=this._headerItems[t];
if(a){
this.removeChild(a)
}};
ZmAccountOverviewContainer.prototype.highlightAllMboxes=function(){
this.deselectAll();
this.setSelection(this._allMailboxesTreeHeader,true)
};
ZmAccountOverviewContainer.prototype._addAccount=function(s,r,t,l,e){
s.overviewId=appCtxt.getOverviewId(this.containerId,r);
s.account=r;
var o=appCtxt.getApp(this._appName);
var a=(!o||(o&&appCtxt.get(ZmApp.SETTING[this._appName],null,r)));
if(this._appName==ZmApp.PREFERENCES||a){
var i=s.omitPerAcct?s.omitPerAcct[r.id]:s.omit;
var h,n;
if(this._appName==ZmApp.PREFERENCES&&r.isMain&&appCtxt.isOffline){
h=ZmMsg.allAccounts;
n="AccountAll"
}else{
h=r.getDisplayName();
if(!appCtxt.isFamilyMbox){
n=r.getIcon()
}}
var c={
label:h,icon:n,dataId:r.id,className:l,predictableId:e};
this._addSection(c,i,s,t)
}
var d=appCtxt.getSettings(r).getSetting(ZmSetting.QUOTA_USED);
d.addChangeListener(this._settingChangeListener)
};
ZmAccountOverviewContainer.prototype._addSection=function(r,i,o,a){
var n={
parent:this,text:r.label,imageInfo:r.icon,selectable:o.selectable,className:r.className,id:this.getHTMLElId()+"__"+(r.predictableId||r.dataId)+"__SECTION"};
var s=this._headerItems[r.dataId]=new DwtTreeItem(n);
s.setData(Dwt.KEY_ID,r.dataId);
s.setScrollStyle(Dwt.CLIP);
s._initialize(null,true,true);
s.addClassName(a?"ZmOverviewSectionHilite":"ZmOverviewSection");
o.id=ZmId.getOverviewId(o.overviewId);
o.parent=s;
o.scroll=Dwt.CLIP;
o.posStyle=Dwt.STATIC_STYLE;
var t=this._controller._overview[o.overviewId]=this._overview[o.overviewId]=new ZmOverview(o,this._controller);
s._dndScrollCallback=this._overview._dndScrollCallback,s._dndScrollId=this._overview._scrollableContainerId,s._addItem(t,null,true);
var e=o.overviewTrees||o.treeIds;
t.set(e,i)
};
ZmAccountOverviewContainer.prototype._setupHeader=function(o,i){
if(this._appName==ZmApp.PREFERENCES){
o.setExpanded(true,false,true);
o.enableSelection(false)
}else{
var a=appCtxt.get(ZmSetting.ACCOUNT_TREE_OPEN,null,i);
o.setExpanded(a);
if(!a){
o.setText(this._getAccountHeaderLabel(i))
}}
if(o._extraCell){
o._extraCell.onclick=AjxCallback.simpleClosure(this._handleStatusClick,this,i)
}
var e=this._controller.getTreeController(ZmOrganizer.FOLDER).getDropTarget();
var t=ZmOrganizer.getSystemId(ZmOrganizer.ID_ROOT,i);
o.setDropTarget(e);
o.setData(Dwt.KEY_OBJECT,appCtxt.getById(t))
};
ZmAccountOverviewContainer.prototype._isFolderEmpty=function(e){
var o=appCtxt.accountList.visibleAccounts;
for(var t=0;
t<o.length;
t++){
var a=appCtxt.getById(ZmOrganizer.getSystemId(e,o[t]));
if(a&&a.numTotal>0){
return false
}}
return true
};
ZmAccountOverviewContainer.prototype._syncAccount=function(e,t){
e.popdown();
t.sync()
};
ZmAccountOverviewContainer.prototype._treeViewListener=function(m){
if(m.detail!=DwtTree.ITEM_ACTIONED&&m.detail!=DwtTree.ITEM_SELECTED&&m.detail!=DwtTree.ITEM_DBL_CLICKED){
return
}
var f=this._actionedHeaderItem=m.item;
if(f&&(f.__isZimlet||f.__isSearch)){
return
}
var r=f&&f.getData(Dwt.KEY_ID);
if(m.detail==DwtTree.ITEM_ACTIONED&&appCtxt.getApp(this._appName)){
var u=this._getActionMenu(r);
if(u){
this.resetOperations(u,r);
u.popup(0,m.docX,m.docY)
}}else{
if((m.detail==DwtTree.ITEM_SELECTED)&&f){
if(this._appName==ZmApp.CALENDAR||this._appName==ZmApp.PREFERENCES){
return
}
this._deselectAllTreeViews();
if(!ZmApp.NAME[this._appName]){
return
}
if(r){
var d=appCtxt.getSearchController();
var l=appCtxt.accountList.getAccount(r);
if(l){
if(appCtxt.isOffline&&l.inNewMailMode){
l.inNewMailMode=false;
var a=appCtxt.getOverviewController()._overviewContainer;
for(var h in a){
a[h].updateAccountInfo(l,true,true)
}}
if((m.target.parentNode==m.item._extraCell)&&l.isError()){
return
}
d.searchAllAccounts=false;
appCtxt.accountList.setActiveAccount(l);
if(appCtxt.isOffline&&l.hasNotSynced()&&!l.__syncAsked){
l.__syncAsked=true;
var c=appCtxt.getYesNoMsgDialog();
c.registerCallback(DwtDialog.YES_BUTTON,this._syncAccount,this,[c,l]);
c.setMessage(ZmMsg.neverSyncedAsk,DwtMessageDialog.INFO_STYLE);
c.popup()
}
var o=ZmOrganizer.DEFAULT_FOLDER[ZmApp.ORGANIZER[this._appName]];
var t=appCtxt.getById(ZmOrganizer.getSystemId(o,l));
if(!(t instanceof ZmFolder)){
return
}
var e=(this._appName==ZmApp.TASKS)?ZmSearch.DUE_DATE_DESC:ZmSearch.DATE_DESC;
var s={
query:t.createQuery(),getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML),searchFor:(ZmApp.DEFAULT_SEARCH[this._appName]),sortBy:((d.currentSearch&&t.nId==d.currentSearch.folderId)?null:e),accountName:(l&&l.name),noUpdateOverview:true}
}else{
var n=appCtxt.accountList.mainAccount;
d.resetSearchAllAccounts();
d.searchAllAccounts=true;
if(r instanceof ZmSearchFolder){
s={
searchAllAccounts:true,accountName:n.name,getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML),noUpdateOverview:true};
d.redoSearch(r.search,false,s);
return
}
if(r==ZmOrganizer.ID_ALL_MAILBOXES){
r=ZmFolder.ID_INBOX
}
s={
queryHint:appCtxt.accountList.generateQuery(r),folderId:null,getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML,null,n),searchFor:(ZmApp.DEFAULT_SEARCH[this._appName]),sortBy:ZmSearch.DATE_DESC,accountName:n.name,noUpdateOverview:true}
}
d.search(s)
}}else{}}};
ZmAccountOverviewContainer.prototype._treeListener=function(t){
if(t.detail!=DwtTree.ITEM_COLLAPSED&&t.detail!=DwtTree.ITEM_EXPANDED){
return
}
var n=t.item;
var e=t.detail==DwtTree.ITEM_EXPANDED;
var o;
if(n){
if(n.__isSearch){
appCtxt.set(ZmSetting.OFFLINE_SAVED_SEARCHES_TREE_OPEN,e);
return
}
var a=n.getData(Dwt.KEY_ID);
if(a==ZmOrganizer.ID_ALL_MAILBOXES){
var i=e?n.__origText:this._getFolderLabel(ZmOrganizer.ID_INBOX,n.__origText);
n.setText(i);
appCtxt.set(ZmSetting.OFFLINE_ALL_MAILBOXES_TREE_OPEN,e);
return
}
o=n.__isZimlet?appCtxt.accountList.mainAccount:appCtxt.accountList.getAccount(a)
}
if(o&&appCtxt.getCurrentAppName()!=ZmApp.PREFERENCES){
if(!appCtxt.inStartup){
appCtxt.accountList.setActiveAccount(o);
appCtxt.set(ZmSetting.ACCOUNT_TREE_OPEN,e,null,null,null,o)
}
if(!n.__isZimlet){
var i=e?o.getDisplayName():this._getAccountHeaderLabel(o);
n.setText(i)
}}};
ZmAccountOverviewContainer.prototype._mouseListener=function(e){
return !Dwt.ffScrollbarCheck(e)
};
ZmAccountOverviewContainer.prototype._handleSettingChange=function(a){
if(a.type!=ZmEvent.S_SETTING){
return
}
var t=a.source;
if(t.id==ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES){
var e=t.getValue();
this._allMailboxesTreeHeader.setVisible(e);
if(!e){
if(appCtxt.getActiveAccount().isMain){
appCtxt.accountList.setActiveAccount(appCtxt.accountList.defaultAccount)
}
appCtxt.getSearchController().searchAllAccounts=false;
appCtxt.getApp(ZmApp.MAIL).mailSearch()
}else{
this._deselect(this._allMailboxesTreeHeader)
}}else{
if(t.id==ZmSetting.QUOTA_USED){
this.updateAccountInfo(a.getDetails().account,false,true)
}}};
ZmAccountOverviewContainer.prototype._getAccountHeaderLabel=function(o,i){
var t=(this._appName==ZmApp.MAIL)?ZmOrganizer.getSystemId(ZmOrganizer.ID_INBOX,o,true):null;
var a=t&&appCtxt.getById(t);
if(a&&a.numUnread>0){
var e=AjxMessageFormat.format(ZmMsg.folderUnread,[o.getDisplayName(),a.numUnread]);
return(["<span style='font-weight:bold;'>",e,"</span>"].join(""))
}
return o.getDisplayName()
};
ZmAccountOverviewContainer.prototype._getFolderLabel=function(e,a){
var o=(e!=ZmFolder.ID_DRAFTS&&e!=ZmFolder.ID_OUTBOX);
var i=appCtxt.accountList.getItemCount(e,o);
if(i>0){
var t=AjxMessageFormat.format(ZmMsg.folderUnread,[a,i]);
return(["<span style='font-weight:bold;'>",t,"</span>"].join(""))
}
return a
};
ZmAccountOverviewContainer.prototype._initializeActionMenu=function(){
if(!this._actionMenu){
var t=ZmApp.ORGANIZER[this._appName];
this._newOp=ZmOrganizer.NEW_OP[t];
var e=[this._newOp];
if(appCtxt.isOffline){
e.push(ZmOperation.SYNC)
}
e.push(ZmOperation.MARK_ALL_READ,ZmOperation.EMPTY_FOLDER,ZmOperation.DELETE);
this._actionMenu=new AjxCallback(this,this._createActionMenu,[e])
}};
ZmAccountOverviewContainer.prototype._createActionMenu=function(a){
var n=new AjxListener(this,this._actionMenuListener);
var o=new ZmActionMenu({
parent:appCtxt.getShell(),menuItems:a}
);
a=o.opList;
for(var t=0;
t<a.length;
t++){
var e=o.getItem(t);
var s=a[t];
if(s==ZmOperation.SYNC){
e.setText(ZmMsg.sendReceive)
}
o.addSelectionListener(s,n)
}
o.addPopdownListener(new AjxListener(this,this._menuPopdownActionListener));
return o
};
ZmAccountOverviewContainer.prototype._menuPopdownActionListener=function(){
this._actionedHeaderItem._setActioned(false)
};
ZmAccountOverviewContainer.prototype._actionMenuListener=function(i){
var t=i.item.getData(ZmOperation.KEY_ID);
var s=this._actionedHeaderItem.getData(Dwt.KEY_ID);
if(t==this._newOp){
var n=ZmApp.ORGANIZER[this._appName];
var e=this._controller.getTreeController(n,true);
if(e){
e._actionedOrganizer=null;
var o=appCtxt.accountList.getAccount(s);
e._actionedOrganizer=appCtxt.getFolderTree(o).root;
e._newListener(i,o)
}}else{
if(t==ZmOperation.SYNC){
if(s==ZmOrganizer.ID_ALL_MAILBOXES){
appCtxt.accountList.syncAll()
}else{
var o=appCtxt.accountList.getAccount(s);
if(o){
o.sync()
}}}else{
if(t==ZmOperation.MARK_ALL_READ){
this._doAction(s,t)
}else{
if(t==ZmOperation.EMPTY_FOLDER){
this._confirmEmptyAction(s,t)
}else{
if(t==ZmOperation.DELETE){
s._delete();
var a=this._actionedHeaderItem.parent;
a.removeChild(this._actionedHeaderItem);
a.setVisible(a.getItemCount()>0)
}}}}}};
ZmAccountOverviewContainer.prototype._confirmEmptyAction=function(a,e){
var t=appCtxt.getOkCancelMsgDialog();
t.reset();
t.registerCallback(DwtDialog.OK_BUTTON,this._emptyCallback,this,[t,a,e]);
var i=(a==ZmFolder.ID_TRASH)?ZmMsg.confirmEmptyTrashFolder:(AjxMessageFormat.format(ZmMsg.confirmEmptyFolder,ZmMsg[ZmFolder.MSG_KEY[a]]));
t.setMessage(i,DwtMessageDialog.WARNING_STYLE);
t.popup()
};
ZmAccountOverviewContainer.prototype._emptyCallback=function(a,t,e){
a.popdown();
this._doAction(t,e)
};
ZmAccountOverviewContainer.prototype._doAction=function(t,e){
var r=new ZmBatchCommand(true,appCtxt.accountList.mainAccount.name);
var n=appCtxt.accountList.visibleAccounts;
for(var a=0;
a<n.length;
a++){
var s=n[a];
if(s.isMain){
continue
}
var h=ZmOrganizer.getSystemId(t,s);
var o=appCtxt.getById(h);
if(o){
if(e==ZmOperation.MARK_ALL_READ){
o.markAllRead(r)
}else{
o.empty(null,r)
}
r.curId++
}}
r.run();
if(appCtxt.isOffline){
appCtxt.getApp(ZmApp.MAIL).clearNewMailBadge()
}};
ZmAccountOverviewContainer.prototype._handleStatusClick=function(a,t){
if(!a.isError()){
return
}else{
if(appCtxt.isOffline&&(a.status==ZmZimbraAccount.STATUS_AUTHFAIL)){
var e=appCtxt.getPasswordChangeDialog();
e.popup(a)
}else{
a.showErrorMessage()
}}}
}
if(AjxPackage.define("zimbraMail.share.view.ZmOverview")){
ZmOverview=function(a,s){
var l=a.overviewClass?a.overviewClass:"ZmOverview";
a.id=a.id||ZmId.getOverviewId(a.overviewId);
DwtComposite.call(this,{
parent:a.parent,className:l,posStyle:a.posStyle,id:a.id}
);
this._controller=s;
this.setScrollStyle(a.scroll||Dwt.SCROLL_Y);
this.overviewId=a.overviewId;
this.containerId=a.containerId;
this.account=a.account;
this.selectionSupported=a.selectionSupported;
this.actionSupported=a.actionSupported;
this.dynamicWidth=a.dynamicWidth;
this.dndSupported=a.dndSupported;
this.headerClass=a.headerClass;
this.showUnread=a.showUnread;
this.showNewButtons=a.showNewButtons;
this.treeStyle=a.treeStyle;
this.isCheckedByDefault=a.isCheckedByDefault;
this.noTooltips=a.noTooltips;
this.isAppOverview=a.isAppOverview;
this.skipImplicit=a.skipImplicit;
this.appName=a.appName;
this._treeIds=[];
this._treeHash={};
this._treeParents={};
var c=document;
var o=this.getHtmlElement();
if(a.treeIds){
for(var n=0,h=a.treeIds.length;
n<h;
n++){
var t=c.createElement("DIV");
var r=a.treeIds[n];
this._treeParents[r]=t.id=[this.overviewId,r].join("-parent-");
o.appendChild(t)
}}
if(this.dndSupported){
this._scrollableContainerId=this.containerId||this.overviewId;
var e=this.containerId?document.getElementById(this.containerId):this.getHtmlElement();
var a={
container:e,threshold:15,amount:5,interval:10,id:this._scrollableContainerId};
this._dndScrollCallback=new AjxCallback(null,DwtControl._dndScrollCallback,[a])
}
this.setAttribute("aria-label",ZmMsg.overviewLabel)
};
ZmOverview.prototype=new DwtComposite;
ZmOverview.prototype.constructor=ZmOverview;
ZmOverview.prototype.role="navigation";
ZmOverview.prototype.toString=function(){
return"ZmOverview"
};
ZmOverview.prototype.getTreeParent=function(e){
return this._treeParents[e]
};
ZmOverview.prototype.set=function(e,a){
if(e&&e.length){
for(var t=0;
t<e.length;
t++){
this.setTreeView(e[t],a)
}}};
ZmOverview.prototype.setTreeView=function(t,e){
if(appCtxt.get(ZmOrganizer.PRECONDITION[t])===false){
return
}
AjxDispatcher.require(ZmOrganizer.ORG_PACKAGE[t]);
var a=this._controller.getTreeController(t);
if(!a){
return
}
if(this._treeHash[t]){
a.clearTreeView(this.overviewId)
}else{
this._treeIds.push(t)
}
var i={
overviewId:this.overviewId,omit:e,showUnread:this.showUnread,account:this.account};
this._treeHash[t]=a.show(i)
};
ZmOverview.prototype.getTreeView=function(e){
return this._treeHash[e]
};
ZmOverview.prototype.getTreeViews=function(){
return this._treeIds
};
ZmOverview.prototype.getTreeItemById=function(n,a){
if(!n){
return null
}
for(var t=0;
t<this._treeIds.length;
t++){
var e=this._treeHash[this._treeIds[t]];
if(e){
var o=e.getTreeItemById&&e.getTreeItemById(n);
if(o&&(!a||(this._treeIds[t]==a))){
return o
}}}
return null
};
ZmOverview.prototype.getSelected=function(t){
for(var a=0;
a<this._treeIds.length;
a++){
var e=this._treeHash[this._treeIds[a]];
if(e){
var o=e.getSelected();
if(o){
return t?e.type:o
}}}
return null
};
ZmOverview.prototype.getTabGroupMember=function(){
var e=new DwtTabGroup();
if(this.getZIndex()>Dwt.Z_HIDDEN){
e.addMember(this.getSelected())
}
return e
};
ZmOverview.prototype.deselectAllTreeViews=function(){
for(var t=0;
t<this._treeIds.length;
t++){
var e=this._treeHash[this._treeIds[t]];
if(e){
e.deselectAll()
}}};
ZmOverview.prototype.setSelected=function(i,a){
var t,e;
if(a){
e=this._treeHash[a];
t=e&&e.getTreeItemById(i)
}else{
for(var a in this._treeHash){
e=this._treeHash[a];
t=e&&e.getTreeItemById(i);
if(t){
break
}}}
if(t&&(this._selectedTreeItem!=t)){
e.setSelected(i,true,true)
}
this.itemSelected(t)
};
ZmOverview.prototype.itemSelected=function(a){
if(appCtxt.multiAccounts&&a){
var t=this.overviewId.substring(0,this.overviewId.indexOf(":"));
var e=this._controller.getOverviewContainer(t);
if(e){
e.deselectAll(this)
}}
if(this._selectedTreeItem&&(this._selectedTreeItem._tree!=(a&&a._tree))){
this._selectedTreeItem._tree.deselectAll()
}
this._selectedTreeItem=a
};
ZmOverview.prototype.clear=function(){
for(var e=0;
e<this._treeIds.length;
e++){
var t=this._treeIds[e];
if(this._treeHash[t]){
var a=this._controller.getTreeController(t);
a.clearTreeView(this.overviewId);
delete this._treeHash[t]
}}};
ZmOverview.prototype.clearSelection=function(){
if(this._selectedTreeItem){
this._selectedTreeItem._tree.deselectAll()
}};
ZmOverview.prototype._initialize=function(){};
ZmOverview.prototype._focus=function(){
var t=this._selectedTreeItem;
if(!t){
var e=this._treeHash[this._treeIds[0]];
if(e){
t=e._getNextTreeItem(true)
}}
if(t){
t.focus();
t._tree.setSelection(t,false,true)
}};
ZmOverview.prototype._blur=function(){
var e=this._selectedTreeItem;
if(e){
e._blur()
}};
ZmOverview.prototype._getNextTreeItem=function(n,a){
for(var o=0;
o<this._treeIds.length;
o++){
if(this._treeHash[this._treeIds[o]]==a){
break
}}
var t=null;
var e=n?o+1:o-1;
a=this._treeHash[this._treeIds[e]];
while(a){
t=DwtTree.prototype._getNextTreeItem.call(a,n);
if(t){
break
}
e=n?e+1:e-1;
a=this._treeHash[this._treeIds[e]]
}
return t
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmAppIframeView")){
ZmAppIframeView=function(e){
if(arguments.length===0){
return
}
DwtControl.call(this,{
parent:appCtxt.getShell(),posStyle:Dwt.ABSOLUTE_STYLE,className:"ZmAppIframeView"}
);
this._createFrame(e)
};
ZmAppIframeView.prototype=new DwtControl;
ZmAppIframeView.prototype.constructor=ZmAppIframeView;
ZmAppIframeView.prototype.isZmAppIframeView=true;
ZmAppIframeView.prototype.toString=function(){
return"ZmAppIframeView"
};
ZmAppIframeView.prototype._createFrame=function(o){
o=o||{};
var i=this._appName=o.appName,a=appCtxt.get(ZmApp.UPSELL_URL[i]),t=[],e=0;
var n=this._iframeId=this._getIframeId();
t[e++]="<iframe id='"+n+"' width='100%' height='100%' frameborder='0' src='";
t[e++]=a;
t[e++]="'>";
this.setContent(t.join(""))
};
ZmAppIframeView.prototype._getIframeId=function(){
return"iframe_"+this.getHTMLElId()
};
ZmAppIframeView.prototype.activate=function(e){};
ZmAppIframeView.prototype.runRefresh=function(){};
ZmAppIframeView.prototype.setBounds=function(t,r,i,e,n){
var o=0;
if(!n){
o=this._getToolbarHeight()
}
DwtControl.prototype.setBounds.call(this,t,r-o,i,e+o);
var s="iframe_"+this.getHTMLElId();
var a=document.getElementById(s);
if(a){
a.width=i;
a.height=e+o
}};
ZmAppIframeView.prototype._getToolbarHeight=function(){
var t=appCtxt.getAppViewMgr().getViewComponent(ZmAppViewMgr.C_TOOLBAR_TOP);
if(t){
var a=t.getSize();
var e=a.y?a.y:t.getHtmlElement().clientHeight;
return e
}
return 0
};
ZmAppIframeView.prototype.getTitle=function(){
return[ZmMsg.zimbraTitle,appCtxt.getApp(this._appName).getDisplayName()].join(": ")
}
}
if(AjxPackage.define("zimbraMail.share.view.ZmCommunityView")){
ZmCommunityView=function(e){
ZmAppIframeView.apply(this,arguments);
this._createFrame(e);
this._setupMessageHandling()
};
ZmCommunityView.prototype=new ZmAppIframeView;
ZmCommunityView.prototype.constructor=ZmCommunityView;
ZmCommunityView.prototype.isZmCommunityView=true;
ZmCommunityView.prototype.toString=function(){
return"ZmCommunityView"
};
ZmCommunityView.prototype._setupMessageHandling=function(t){
var e=document.getElementById(this._iframeId);
if(e){
var a=ZmCommunityView.handleMessage.bind(null,this);
if(window.addEventListener){
window.addEventListener("message",a,false)
}else{
if(window.attachEvent){
window.attachEvent("onmessage",a)
}}}};
ZmCommunityView.prototype._getIframeId=function(){
return"fragment-41812_iframe"
};
ZmCommunityView.handleMessage=function(e,a){
var t=document.getElementById(e._iframeId);
if(t&&a.source===t.contentWindow){
var i=AjxStringUtil.parseQueryString(a.data||"");
var o=(i.unread&&i.unread.toLowerCase()==="true");
if(i.type==="community-notification"&&o){
appCtxt.getApp(e._appName).startAlert();
e.getUpdates()
}}};
ZmCommunityView.prototype.getUpdates=function(){
var e=document.getElementById(this._iframeId);
if(e){
e.contentWindow.postMessage("type=community-update","*")
}};
ZmCommunityView.prototype.activate=function(e){
if(e){
this.getUpdates()
}};
ZmCommunityView.prototype.runRefresh=function(){
this.getUpdates()
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmController")){
ZmController=function(e,i,t,a){
if(arguments.length==0){
return
}
this.setCurrentViewType(this.getDefaultViewType());
this.setCurrentViewId(this.getDefaultViewType());
if(a){
this.setSessionId(a,t)
}
this._container=e;
this._app=i;
this._shell=appCtxt.getShell();
this._appViews={};
this._authenticating=false;
this.isHidden=(a==ZmApp.HIDDEN_SESSION);
this._elementsToHide=null
};
ZmController.prototype.isZmController=true;
ZmController.prototype.toString=function(){
return"ZmController"
};
ZmController.SESSION_ID_SEP="-";
ZmController.prototype._setView=function(){};
ZmController.getDefaultViewType=function(){};
ZmController.prototype.getDefaultViewType=function(){};
ZmController.prototype._defaultView=ZmController.prototype.getDefaultViewType;
ZmController.prototype.getSessionId=function(){
return this._sessionId
};
ZmController.prototype.setSessionId=function(t,e){
this._sessionId=t;
if(e){
this.setCurrentViewType(e);
this.setCurrentViewId(t?[e,t].join(ZmController.SESSION_ID_SEP):e);
this.tabId=t?["tab",this.getCurrentViewId()].join("_"):""
}
this.sessionId=this._sessionId;
this.viewId=this.getCurrentViewId()
};
ZmController.prototype.getCurrentViewType=function(e){
return this._currentViewType
};
ZmController.prototype._getViewType=ZmController.prototype.getCurrentViewType;
ZmController.prototype.setCurrentViewType=function(e){
this._currentViewType=e
};
ZmController.prototype.getCurrentViewId=function(){
return this._currentViewIdOverride||this._currentViewId
};
ZmController.prototype.setCurrentViewId=function(e){
this._currentViewId=e;
this._currentView=this._currentViewId
};
ZmController.prototype.getApp=function(){
return this._app
};
ZmController.prototype.getViewElements=function(e,t,a){
var i={};
a=a||this._toolbar[e];
i[ZmAppViewMgr.C_TOOLBAR_TOP]=a;
i[ZmAppViewMgr.C_APP_CONTENT]=t;
return i
};
ZmController.prototype.popupErrorDialog=function(e,u,f,d,c,a){
var h=appCtxt.getErrorDialog();
var o="";
if(typeof u=="string"){
o=u
}else{
if(u instanceof Object){
u.msg=u.msg||e;
var l=["method","msg","code","detail","trace","request","fileName","lineNumber","message","name","stack"];
var r=[],s=0;
r[s++]="<table>";
for(var n=0;
n<l.length;
n++){
var t=l[n];
var p=AjxStringUtil.htmlEncode(u[t]);
if(p){
if(t=="request"){
p=["<pre>",p,"</pre>"].join("");
var m=document.getElementById(h._msgCellId);
if(m){
m.className="DwtMsgDialog-wide"
}}
r[s++]=["<tr><td valign='top'>",l[n],":</td><td valign='top'>",p,"</td></tr>"].join("")
}}
r[s++]="</table>";
o=r.join("")
}}
h.registerCallback(DwtDialog.OK_BUTTON,this._errorDialogCallback,this);
if(!a){
e=AjxStringUtil.htmlEncode(e)
}
h.setMessage(e,o,DwtMessageDialog.CRITICAL_STYLE,ZmMsg.zimbraTitle);
h.popup(null,d);
if(c){
h.showDetail()
}};
ZmController.prototype.popupUploadErrorDialog=function(o,t,a){
var e=appCtxt.getMsgDialog();
var i=DwtMessageDialog.CRITICAL_STYLE;
var n=this.createErrorMessage(o,t,a);
if(n.length>0){
e.setMessage(n,i);
e.popup()
}};
ZmController.prototype.createErrorMessage=function(i,e,t){
var n="";
switch(e){
case AjxPost.SC_OK:break;
case AjxPost.SC_REQUEST_ENTITY_TOO_LARGE:var a=i&&ZmMsg["attachmentSizeError_"+i]||ZmMsg.attachmentSizeError;
var o=AjxUtil.formatSize(appCtxt.get(ZmSetting.MESSAGE_SIZE_LIMIT));
n=AjxMessageFormat.format(a,o);
break;
default:var a=i&&ZmMsg["errorAttachment_"+i]||ZmMsg.errorAttachment;
n=AjxMessageFormat.format(a,e||AjxPost.SC_NO_CONTENT);
break
}
if((n.length>0)&&t){
n+="<br /><br />";
n+=t
}
return n
};
ZmController.handleScriptError=function(t){
var n=[];
var i="<br/>";
if(t){
var o=ZmMsg.scriptError+": "+t.message;
var e=t.fileName&&t.fileName.match(/(\w+\.js)/);
if(e&&e.length){
o+=" - "+e[1]+":"+t.lineNumber
}
if(t.fileName){
n.push("File: "+t.fileName)
}
if(t.lineNumber){
n.push("Line: "+t.lineNumber)
}
if(t.name){
n.push("Error: "+t.name)
}
if(t.stack){
n.push("Stack: "+t.stack.replace("\n",i,"g"))
}}
var a=n.join(i);
AjxDebug.println(AjxDebug.EXCEPTION,[o,a].join(i+i));
appCtxt.getAppController().popupErrorDialog(o,a,null,false,true)
};
ZmController.prototype.getKeyMapName=function(){
return ZmKeyMap.MAP_GLOBAL
};
ZmController.prototype.handleKeyAction=function(h,l){
var a=this.getTabView?this.getTabView():null;
if(a&&a.handleKeyAction(h)){
return true
}
var c=appCtxt.isExternalAccount();
var e=ZmApp.ACTION_CODES_R[h];
if(e){
var o=ZmApp.ACTION_CODES[h];
if(o){
if(c){
return true
}
appCtxt.getApp(e).handleOp(o);
return true
}}
switch(h){
case ZmKeyMap.NEW:if(c){
break
}
e=appCtxt.getCurrentAppName();
var s=ZmApp.NEW_ACTION_CODE[e];
if(s){
var o=ZmApp.ACTION_CODES[s];
if(o){
appCtxt.getApp(e).handleOp(o);
return true
}}
break;
case ZmKeyMap.NEW_FOLDER:case ZmKeyMap.NEW_TAG:if(c||appCtxt.isWebClientOffline()){
break
}
var o=ZmApp.ACTION_CODES[h];
if(o){
this._newListener(null,o)
}
break;
case ZmKeyMap.NEW_SEARCH:appCtxt.getSearchController().openNewSearchTab();
break;
case ZmKeyMap.SAVED_SEARCH:if(c){
break
}
var n=appCtxt.getFolderTree().getByType(ZmOrganizer.SEARCH);
if(n&&n.length>0){
var r=appCtxt.getChooseFolderDialog();
var i={
treeIds:[ZmOrganizer.SEARCH],overviewId:r.getOverviewId(ZmOrganizer.SEARCH,this._app._name),appName:this._app._name,title:ZmMsg.selectSearch};
ZmController.showDialog(r,new AjxCallback(null,ZmController._searchSelectionCallback,[r]),i)
}
break;
case ZmKeyMap.VISIT:var r=appCtxt.getChooseFolderDialog();
var t=ZmApp.ORGANIZER[this._app._name]||ZmOrganizer.FOLDER;
var i={
treeIds:[t],overviewId:r.getOverviewId(ZmOrganizer.APP[t]),appName:this._app._name,noRootSelect:true,title:AjxMessageFormat.format(ZmMsg.goToFolder,ZmMsg[ZmOrganizer.MSG_KEY[t]])};
ZmController.showDialog(r,new AjxCallback(null,ZmController._visitOrgCallback,[r,t]),i);
break;
case ZmKeyMap.VISIT_TAG:if(appCtxt.getTagTree().size()>0){
var r=appCtxt.getPickTagDialog();
ZmController.showDialog(r,new AjxCallback(null,ZmController._visitOrgCallback,[r,ZmOrganizer.TAG]))
}
break;
default:return false
}
return true
};
ZmController._searchSelectionCallback=function(t,e){
if(e){
appCtxt.getSearchController().redoSearch(e.search)
}
t.popdown()
};
ZmController._visitOrgCallback=function(t,a,i){
if(i){
var e=appCtxt.getOverviewController().getTreeController(a);
if(e&&e._itemClicked){
e._itemClicked(i)
}}
t.popdown()
};
ZmController.prototype.mapSupported=function(e){
return false
};
ZmController.prototype._newListener=function(e,t){
switch(t){
case ZmOperation.NEW_FOLDER:ZmController.showDialog(appCtxt.getNewFolderDialog(),this.getNewFolderCallback());
break;
case ZmOperation.NEW_TAG:if(!this._newTagCb){
this._newTagCb=new AjxCallback(this,this._newTagCallback)
}
ZmController.showDialog(appCtxt.getNewTagDialog(),this._newTagCb);
break
}};
ZmController.prototype._newFolderCallback=function(n,i,t,a){
var o=appCtxt.getNewFolderDialog();
o.popdown();
var e=appCtxt.getOverviewController();
e.getTreeController(ZmOrganizer.FOLDER)._doCreate(n,i,t,a)
};
ZmController.prototype._newTagCallback=function(t){
appCtxt.getNewTagDialog().popdown();
var e=appCtxt.getOverviewController();
e.getTreeController(ZmOrganizer.TAG)._doCreate(t)
};
ZmController.prototype._createTabGroup=function(e){
e=e?e:this.toString();
this._tabGroup=new DwtTabGroup(e);
return this._tabGroup
};
ZmController.prototype._setTabGroup=function(e){
this._tabGroup=e
};
ZmController.prototype.getTabGroup=function(){
return this._tabGroup
};
ZmController.prototype.getNewFolderCallback=function(){
if(!this._newFolderCb){
this._newFolderCb=new AjxCallback(this,this._newFolderCallback)
}
return this._newFolderCb
};
ZmController.prototype._saveFocus=function(){
var t=appCtxt.getRootTabGroup().getFocusMember();
var e=this.getTabGroup();
this._savedFocusMember=(t&&e&&e.contains(t))?t:null;
return this._savedFocusMember
};
ZmController.prototype._restoreFocus=function(o,s){
var a=appCtxt.getRootTabGroup();
var t=appCtxt.getCurrentApp();
var n=t&&t.getOverviewId();
var i=n&&appCtxt.getOverviewController().getOverview(n);
if(a&&i&&(i!=ZmController._currentOverview)){
a.replaceMember(ZmController._currentOverview,i,false,false,null,true);
ZmController._currentOverview=i
}
var e=this.getTabGroup();
o=o||this._savedFocusMember||this._getDefaultFocusItem()||a.getFocusMember();
s=s||ZmController.noFocus;
ZmController.noFocus=false;
if(a&&e&&(e!=ZmController._currentAppViewTabGroup)){
a.replaceMember(ZmController._currentAppViewTabGroup,e,false,false,o,s);
ZmController._currentAppViewTabGroup=e
}else{
if(o&&!s){
appCtxt.getKeyboardMgr().grabFocus(o)
}}};
ZmController.prototype._getDefaultFocusItem=function(){
var e=this.getTabGroup();
return e?e.getFirstMember(true):null
};
ZmController.prototype._preUnloadCallback=function(){
return true
};
ZmController.prototype._postHideCallback=function(){
return true
};
ZmController.prototype._postRemoveCallback=function(){
return true
};
ZmController.prototype._preShowCallback=function(){
return true
};
ZmController.prototype._preHideCallback=function(){
this._saveFocus();
return true
};
ZmController.prototype._postShowCallback=function(){
this._restoreFocus();
return true
};
ZmController.prototype._handleError=function(t,e){
this._handleException(t,e)
};
ZmController.prototype._handleException=function(i,t){
if(i.code==AjxSoapException.INVALID_PDU){
i.code=ZmCsfeException.SVC_FAILURE;
i.detail=["contact your administrator (",i.msg,")"].join("");
i.msg="Service failure"
}
if(i.code==ZmCsfeException.SVC_AUTH_EXPIRED||i.code==ZmCsfeException.SVC_AUTH_REQUIRED||i.code==ZmCsfeException.NO_AUTH_TOKEN){
ZmCsfeCommand.noAuth=true;
ZmZimbraMail.logOff(null,true);
return
}
if(i.code==ZmCsfeException.MAIL_NO_SUCH_MSG){
var e=appCtxt.getCurrentViewId();
if(e==ZmId.VIEW_CONVLIST||e==ZmId.VIEW_TRAD){
var o=appCtxt.getApp(ZmApp.MAIL);
var s=appCtxt.isOffline?new AjxCallback(this,this._handleMailSearch,o):null;
o.mailSearch(null,s);
return
}}
if(i.method!="NoOpRequest"){
var a;
if(i.code==ZmCsfeException.MAIL_NO_SUCH_ITEM){
a=i.data.itemId
}else{
if(i.code==ZmCsfeException.MAIL_SEND_FAILURE){
a=i.code
}else{
if(i.code==ZmCsfeException.MAIL_INVALID_NAME){
a=i.data.name
}}}
if(i.lineNumber&&!i.detail){
ZmController.handleScriptError(i)
}else{
var n=i.getErrorMsg?i.getErrorMsg(a):i.msg?i.msg:i.message;
this.popupErrorDialog(n,i,true,this._hideSendReportBtn(i))
}}};
ZmController.prototype._handleMailSearch=function(e){
if(appCtxt.get(ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES)){
e.getOverviewContainer().highlightAllMboxes()
}};
ZmController.prototype._hideSendReportBtn=function(e){
return(e.code==ZmCsfeException.MAIL_TOO_MANY_TERMS||e.code==ZmCsfeException.MAIL_MAINTENANCE_MODE||e.code==ZmCsfeException.MAIL_MESSAGE_TOO_BIG||e.code==ZmCsfeException.NETWORK_ERROR||e.code==ZmCsfeException.EMPTY_RESPONSE||e.code==ZmCsfeException.BAD_JSON_RESPONSE||e.code==ZmCsfeException.TOO_MANY_TAGS||e.code==ZmCsfeException.OFFLINE_ONLINE_ONLY_OP)
};
ZmController.prototype._errorDialogCallback=function(){
appCtxt.getErrorDialog().popdown()
};
ZmController.showDialog=function(e,i,a,t){
e.reset(t);
e.registerCallback(DwtDialog.OK_BUTTON,i);
e.popup(a,t)
};
ZmController.prototype._clearDialog=function(e){
e.popdown();
this._pendingActionData=null
};
ZmController.prototype._menuPopdownActionListener=function(){};
ZmController.prototype.isTransient=function(e,t){
return false
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmBaseController")){
ZmBaseController=function(e,o,t,i,a){
if(arguments.length==0){
return
}
ZmController.apply(this,arguments);
this.setSessionId(i,t||this.getDefaultViewType(),a);
this._view={};
this._toolbar={};
this._tabGroups={};
this._tagList=appCtxt.getTagTree();
if(this._tagList){
this._tagList.addChangeListener(this._tagChangeListener.bind(this))
}
this._listeners={};
this._listeners[ZmOperation.NEW_MENU]=this._newListener.bind(this);
this._listeners[ZmOperation.TAG_MENU]=this._tagButtonListener.bind(this);
this._listeners[ZmOperation.MOVE_MENU]=this._moveButtonListener.bind(this);
this._listeners[ZmOperation.ACTIONS_MENU]=this._actionsButtonListener.bind(this);
this._listeners[ZmOperation.TAG]=this._tagListener.bind(this);
this._listeners[ZmOperation.PRINT]=this._printListener.bind(this);
this._listeners[ZmOperation.DELETE]=this._deleteListener.bind(this);
this._listeners[ZmOperation.DELETE_WITHOUT_SHORTCUT]=this._deleteListener.bind(this);
this._listeners[ZmOperation.CLOSE]=this._backListener.bind(this);
this._listeners[ZmOperation.MOVE]=this._moveListener.bind(this);
this._listeners[ZmOperation.SEARCH]=this._searchListener.bind(this);
this._listeners[ZmOperation.NEW_MESSAGE]=this._composeListener.bind(this);
this._listeners[ZmOperation.CONTACT]=this._contactListener.bind(this);
this._listeners[ZmOperation.VIEW]=this._viewMenuItemListener.bind(this);
this._listeners[ZmOperation.GO_TO_URL]=this._goToUrlListener.bind(this);
if(window.ZmImApp){
this._listeners[ZmOperation.IM]=ZmImApp.getImMenuItemListener()
}
this.operationsToEnableOnZeroSelection=[ZmOperation.NEW_MENU];
this.operationsToEnableOnMultiSelection=[ZmOperation.NEW_MENU,ZmOperation.TAG_MENU,ZmOperation.DELETE,ZmOperation.MOVE,ZmOperation.MOVE_MENU,ZmOperation.FORWARD,ZmOperation.ACTIONS_MENU];
this.operationsToDisableOnSingleSelection=[]
};
ZmBaseController.prototype=new ZmController;
ZmBaseController.prototype.constructor=ZmBaseController;
ZmBaseController.prototype.isZmBaseController=true;
ZmBaseController.prototype.toString=function(){
return"ZmBaseController"
};
ZmBaseController.prototype.setSessionId=function(a,e,t){
ZmController.prototype.setSessionId.apply(this,arguments);
this.searchResultsController=t;
this.isSearchResults=Boolean(t)
};
ZmBaseController.prototype.getCurrentView=function(){
return this._view[this._currentViewId]
};
ZmBaseController.prototype.getItemView=function(){
return null
};
ZmBaseController.prototype.getCurrentToolbar=function(){
return this._toolbar[this._currentViewId]
};
ZmBaseController.prototype.getItems=function(){};
ZmBaseController.prototype.getItemCount=function(){};
ZmBaseController.prototype.handleKeyAction=function(t,i){
var a=appCtxt.isExternalAccount();
switch(t){
case ZmKeyMap.MOVE:if(a){
break
}
var e=this.getItems();
if(e&&e.length){
this._moveListener()
}
break;
case ZmKeyMap.PRINT:if(appCtxt.get(ZmSetting.PRINT_ENABLED)&&!appCtxt.isWebClientOffline()){
this._printListener()
}
break;
case ZmKeyMap.TAG:if(a){
break
}
var e=this.getItems();
if(e&&e.length&&(appCtxt.getTagTree().size()>0)){
var o=appCtxt.getPickTagDialog();
ZmController.showDialog(o,new AjxCallback(this,this._tagSelectionCallback,[e,o]))
}
break;
case ZmKeyMap.UNTAG:if(a){
break
}
if(appCtxt.get(ZmSetting.TAGGING_ENABLED)){
var e=this.getItems();
if(e&&e.length){
this._doRemoveAllTags(e)
}}
break;
default:return ZmController.prototype.handleKeyAction.apply(this,arguments)
}
return true
};
ZmBaseController.prototype.isCurrent=function(){
return(this._currentViewId==appCtxt.getCurrentViewId())
};
ZmBaseController.prototype.supportsDnD=function(){
return !appCtxt.isExternalAccount()
};
ZmBaseController.prototype._createNewView=function(){};
ZmBaseController.prototype._setViewContents=function(e){};
ZmBaseController.prototype._getTagMenuMsg=function(e){};
ZmBaseController.prototype._getMoveDialogTitle=function(e){};
ZmBaseController.prototype._getToolBarOps=function(){};
ZmBaseController.prototype._getSecondaryToolBarOps=function(){};
ZmBaseController.prototype._getRightSideToolBarOps=function(){};
ZmBaseController.prototype._setup=function(e){
this._initialize(e);
this._resetOperations(this._toolbar[e],0)
};
ZmBaseController.prototype._initialize=function(e){
this._initializeToolBar(e);
this._initializeView(e);
this._initializeTabGroup(e)
};
ZmBaseController.prototype._standardToolBarOps=function(){
return[ZmOperation.DELETE,ZmOperation.MOVE_MENU,ZmOperation.PRINT]
};
ZmBaseController.prototype._initializeToolBar=function(l,r){
if(this._toolbar[l]){
return
}
var h=this._getToolBarOps();
var t=this._getSecondaryToolBarOps()||[];
var d=this._getRightSideToolBarOps()||[];
if(!(h||t)){
return
}
var c={
parent:this._container,buttons:h,secondaryButtons:t,rightSideButtons:d,overrides:this._getButtonOverrides(h.concat(t).concat(d)),context:l,controller:this,refElementId:ZmId.SKIN_APP_TOP_TOOLBAR,addTextElement:true,className:r};
var a=this._toolbar[l]=new ZmButtonToolBar(c);
var n;
for(var o=0;
o<a.opList.length;
o++){
n=a.opList[o];
if(this._listeners[n]){
a.addSelectionListener(n,this._listeners[n])
}}
n=a.getButton(ZmOperation.TAG_MENU);
if(n){
n.noMenuBar=true;
this._setupTagMenu(a)
}
n=a.getButton(ZmOperation.MOVE_MENU);
if(n){
n.noMenuBar=true;
this._setupMoveMenu(a)
}
var s=a.getActionsButton();
if(s){
s.addDropDownSelectionListener(this._listeners[ZmOperation.ACTIONS_MENU])
}
var e=a.getActionsMenu();
if(e){
this._setSearchMenu(e,true)
}
appCtxt.notifyZimlets("initializeToolbar",[this._app,a,this,l],{
waitUntilLoaded:true}
)
};
ZmBaseController.prototype._getButtonOverrides=function(e){};
ZmBaseController.prototype._initializeView=function(e){
if(this._view[e]){
return
}
this._view[e]=this._createNewView(e);
this._view[e].addSelectionListener(this._listSelectionListener.bind(this));
this._view[e].addActionListener(this._listActionListener.bind(this))
};
ZmBaseController.prototype._initializeListView=ZmBaseController.prototype._initializeView;
ZmBaseController.prototype._initializeTabGroup=function(e){
if(this._tabGroups[e]){
return
}
this._tabGroups[e]=this._createTabGroup();
this._tabGroups[e].newParent(appCtxt.getRootTabGroup());
this._tabGroups[e].addMember(this._toolbar[e]);
this._tabGroups[e].addMember(this._view[e].getTabGroupMember())
};
ZmBaseController.prototype._setView=function(a){
var e=a.view;
if(!this._appViews[e]){
var t={};
t[ZmAppViewMgr.CB_PRE_HIDE]=this._preHideCallback.bind(this);
t[ZmAppViewMgr.CB_PRE_UNLOAD]=this._preUnloadCallback.bind(this);
t[ZmAppViewMgr.CB_POST_HIDE]=this._postHideCallback.bind(this);
t[ZmAppViewMgr.CB_POST_REMOVE]=this._postRemoveCallback.bind(this);
t[ZmAppViewMgr.CB_PRE_SHOW]=this._preShowCallback.bind(this);
t[ZmAppViewMgr.CB_POST_SHOW]=this._postShowCallback.bind(this);
a.callbacks=t;
a.viewId=e;
a.controller=this;
this._app.createView(a);
this._appViews[e]=true
}
if(!a.pushOnly){
this._setViewContents(e)
}
if(a.stageView){
this._app.stageView(e)
}else{
if(!a.noPush){
return(a.clear?this._app.setView(e):this._app.pushView(e))
}}};
ZmBaseController.prototype._tagButtonListener=function(t){
var e=this._toolbar[this._currentViewId];
if(t.item.parent==e){
this._setTagMenu(e)
}};
ZmBaseController.prototype._moveButtonListener=function(i,o){
this._pendingActionData=o||this.getItems();
var a=this._toolbar[this._currentViewId];
var e=a.getOp(ZmOperation.MOVE_MENU);
if(!e){
return
}
if(!this._moveButtonInitialized){
this._moveButtonInitialized=true;
appCtxt.getShell().setBusy(true);
this._setMoveButton(e);
appCtxt.getShell().setBusy(false)
}else{
this._folderChooser.updateData(this._getMoveParams(this._folderChooser).data)
}
var t=this._folderChooser._getNewButton();
if(t){
t.setVisible(!appCtxt.isWebClientOffline())
}
e.popup();
e.getMenu().getHtmlElement().style.width="auto";
this._folderChooser.focus()
};
ZmBaseController.prototype._actionsButtonListener=function(e){
var t=this.getCurrentToolbar().getActionsMenu();
t.parent.popup()
};
ZmBaseController.prototype._tagListener=function(o,e){
if(this.isCurrent()){
var a=o.item;
var r=a.getData(ZmTagMenu.KEY_TAG_EVENT);
var s=a.getData(ZmTagMenu.KEY_TAG_ADDED);
e=e||this.getItems();
for(var t=0;
t<e.length;
t++){
if(e[t].cloneOf){
e[t]=e[t].cloneOf
}}
if(r==ZmEvent.E_TAGS&&s){
this._doTag(e,a.getData(Dwt.KEY_OBJECT),true)
}else{
if(r==ZmEvent.E_CREATE){
this._pendingActionData=e;
var n=appCtxt.getNewTagDialog();
if(!this._newTagCb){
this._newTagCb=new AjxCallback(this,this._newTagCallback)
}
ZmController.showDialog(n,this._newTagCb);
n.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,n)
}else{
if(r==ZmEvent.E_TAGS&&!s){
this._doTag(e,a.getData(Dwt.KEY_OBJECT),false)
}else{
if(r==ZmEvent.E_REMOVE_ALL){
this._doRemoveAllTags(e)
}}}}}};
ZmBaseController.prototype._tagSelectionCallback=function(t,a,e){
if(e){
this._doTag(t,e,true)
}
a.popdown()
};
ZmBaseController.prototype._printListener=function(t){
var e=this.getItems();
if(e&&e[0]){
window.open(e[0].getRestUrl(),"_blank")
}};
ZmBaseController.prototype._backListener=function(e){
this._app.popView()
};
ZmBaseController.prototype._deleteListener=function(e){
this._doDelete(this.getItems(),e.shiftKey)
};
ZmBaseController.prototype._moveListener=function(e,a){
this._pendingActionData=a||this.getItems();
var t=appCtxt.getChooseFolderDialog();
if(!this._moveCb){
this._moveCb=new AjxCallback(this,this._moveCallback)
}
ZmController.showDialog(t,this._moveCb,this._getMoveParams(t));
t.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,t)
};
ZmBaseController.prototype._getMoveParams=function(e){
var t=ZmApp.ORGANIZER[this._app._name]||ZmOrganizer.FOLDER;
return{
overviewId:e.getOverviewId(this._app._name),data:this._pendingActionData,treeIds:[t],title:this._getMoveDialogTitle(this._pendingActionData.length,this._pendingActionData),description:ZmMsg.targetFolder,treeStyle:DwtTree.SINGLE_STYLE,noRootSelect:true,appName:this._app._name}
};
ZmBaseController.prototype._viewMenuItemListener=function(e){
if(e.detail==DwtMenuItem.CHECKED||e.detail==DwtMenuItem.UNCHECKED){
this.switchView(e.item.getData(ZmOperation.MENUITEM_ID))
}};
ZmBaseController.prototype._tagChangeListener=function(t){
if(this.isCurrent()){
if(t.type==ZmEvent.S_TAG&&t.event==ZmEvent.E_CREATE&&this._pendingActionData){
var e=t.getDetail("organizers")[0];
this._doTag(this._pendingActionData,e,true);
this._pendingActionData=null;
this._menuPopdownActionListener()
}}};
ZmBaseController.prototype._moveCallback=function(e){
this._doMove(this._pendingActionData,e);
this._clearDialog(appCtxt.getChooseFolderDialog());
this._pendingActionData=null
};
ZmBaseController.prototype._moveMenuCallback=function(e,t){
this._doMove(this._pendingActionData,t);
e.getMenu().popdown();
this._pendingActionData=null
};
ZmBaseController.prototype._getList=function(e){
e=AjxUtil.toArray(e);
var t=e[0];
return t&&t.list
};
ZmBaseController.prototype._getAllDoneCallback=function(){};
ZmBaseController.showSummary=function(a,n,o){
if(!a){
return
}
var e=o?parentAppCtxt:appCtxt;
var i=e.getActionController();
var t=n&&i&&i.getUndoLink(n);
if(t&&i){
i.onPopup();
e.setStatusMsg({
msg:a+t,transitions:i.getStatusTransitions()}
)
}else{
e.setStatusMsg(a)
}};
ZmBaseController.prototype._doFlag=function(a,t){
a=AjxUtil.toArray(a);
if(!a.length){
return
}
if(a[0].isZmItem){
if(t!==true&&t!==false){
t=!a[0].isFlagged
}
var e=[];
for(var o=0;
o<a.length;
o++){
if(a[o].isFlagged!=t){
e.push(a[o])
}}}else{
e=a
}
var s={
items:e,op:"flag",value:t};
s.actionTextKey=t?"actionFlag":"actionUnflag";
var n=s.list=this._getList(s.items);
this._setupContinuation(this._doFlag,[t],s);
n.flagItems(s)
};
ZmBaseController.prototype._doMsgPriority=function(a,t){
a=AjxUtil.toArray(a);
if(!a.length){
return
}
if(a[0].isZmItem){
if(t!==true&&t!==false){
t=!a[0].isPriority
}
var e=[];
for(var o=0;
o<a.length;
o++){
if(a[o].isPriority!=t){
e.push(a[o])
}}}else{
e=a
}
var s={
items:e,op:"priority",value:t};
s.actionTextKey=t?"actionMsgPriority":"actionUnMsgPriority";
var n=s.list=this._getList(s.items);
this._setupContinuation(this._doMsgPriority,[t],s);
n.flagItems(s)
};
ZmBaseController.prototype._doTag=function(t,e,o){
t=AjxUtil.toArray(t);
if(!t.length){
return
}
var i={
items:t,tag:e,doTag:o};
var a=i.list=this._getList(i.items);
this._setupContinuation(this._doTag,[e,o],i);
a.tagItems(i)
};
ZmBaseController.prototype._doRemoveAllTags=function(e){
e=AjxUtil.toArray(e);
if(!e.length){
return
}
var a={
items:e};
var t=a.list=this._getList(a.items);
this._setupContinuation(this._doRemoveAllTags,null,a);
t.removeAllTags(a)
};
ZmBaseController.prototype._doDelete=function(l,r,d,o){
l=AjxUtil.toArray(l);
if(!l.length){
return
}
var t=this._getSearchFolder();
var c=(t&&t.nId==ZmFolder.ID_TRASH);
if(c){
r=true
}
var n={
items:l,hardDelete:r,attrs:d,childWin:appCtxt.isChildWindow&&window,closeChildWin:appCtxt.isChildWindow,confirmDelete:o};
var u=this._getAllDoneCallback();
var h=n.list=this._getList(n.items);
this._setupContinuation(this._doDelete,[r,d,true],n,u);
if(!r){
var e=false;
for(var s=0,a=l.length;
s<a;
s++){
if(l[s]&&l[s].isScheduled){
e=true;
break
}}
if(e){
n.noUndo=true;
this._popupScheduledWarningDialog(h.deleteItems.bind(h,n))
}else{
h.deleteItems(n)
}}else{
h.deleteItems(n)
}};
ZmBaseController.prototype._doMove=function(u,a,f,l,n){
u=AjxUtil.toArray(u);
if(!u.length){
return
}
var s=[];
var t=[];
if(u[0].isZmItem){
for(var h=0;
h<u.length;
h++){
var p=u[h];
if(!p.folderId||(p.folderId!=a.id||(f&&f.op=="recover"))){
if(!this._isItemMovable(p,l,a)){
t.push(p)
}else{
s.push(p)
}}}}else{
s=u
}
var r={
folder:a,attrs:f,noUndo:n};
r.errorCallback=this._actionErrorCallback.bind(this);
var y=this._getAllDoneCallback();
if(s.length){
r.items=s;
var d=r.list=this._getList(r.items);
this._setupContinuation(this._doMove,[a,f,l],r,y);
if(a.isInTrash()){
var e=false;
var m=AjxUtil.toArray(s);
for(var h=0,o=m.length;
h<o;
h++){
if(m[h]&&m[h].isScheduled){
e=true;
break
}}
if(e){
r.noUndo=true;
this._popupScheduledWarningDialog(d.moveItems.bind(d,r))
}else{
d.moveItems(r)
}}else{
if(a.id==appCtxt.get(ZmSetting.MAIL_ACTIVITYSTREAM_FOLDER)&&u.length==1){
d.moveItems(r);
var g=appCtxt.getActivityStreamFilterDialog();
g.setFields(u[0]);
g.popup()
}else{
if(u.length==1&&a.id==ZmFolder.ID_INBOX){
d.moveItems(r);
var c=appCtxt.getById(u[0].folderId);
if(c&&c.id==appCtxt.get(ZmSetting.MAIL_ACTIVITYSTREAM_FOLDER)){
var g=appCtxt.getActivityToInboxFilterDialog();
g.setFields(u[0]);
g.popup()
}}else{
d.moveItems(r)
}}}}
if(t.length){
r.items=t;
var d=r.list=this._getList(r.items);
this._setupContinuation(this._doMove,[a,f,l],r,y,true);
d.copyItems(r)
}};
ZmBaseController.prototype._actionErrorCallback=function(e){
return false
};
ZmBaseController.prototype._popupScheduledWarningDialog=function(t){
var e=appCtxt.getOkCancelMsgDialog();
e.reset();
e.setMessage(ZmMsg.moveScheduledMessageWarning,DwtMessageDialog.WARNING_STYLE);
e.registerCallback(DwtDialog.OK_BUTTON,this._scheduledWarningDialogListener.bind(this,t,e));
e.associateEnterWithButton(DwtDialog.OK_BUTTON);
e.popup(null,DwtDialog.OK_BUTTON)
};
ZmBaseController.prototype._scheduledWarningDialogListener=function(t,e){
e.popdown();
t()
};
ZmBaseController.prototype._isItemMovable=function(a,e,t){
return(!e&&!a.isReadOnly()&&!t.isReadOnly())
};
ZmBaseController.prototype._doModify=function(t,e){
var a=this._getList(t);
a.modifyItem(t,e)
};
ZmBaseController.prototype._doCreate=function(t,e){
t.create(e)
};
ZmBaseController.prototype._setupTagMenu=function(t,a){
if(!t){
return
}
var i=t.getTagMenu();
a=a||this._listeners[ZmOperation.TAG];
if(i){
i.addSelectionListener(a)
}
if(t.isZmButtonToolBar){
var e=t.getOp(ZmOperation.TAG_MENU);
if(e){
e.addDropDownSelectionListener(this._listeners[ZmOperation.TAG_MENU])
}}};
ZmBaseController.prototype._setupMoveMenu=function(t){
if(!t){
return
}
if(!t.isZmButtonToolBar){
return
}
var e=t.getOp(ZmOperation.MOVE_MENU);
if(e){
e.addDropDownSelectionListener(this._listeners[ZmOperation.MOVE_MENU])
}};
ZmBaseController.prototype._setTagMenu=function(n,t){
if(!n){
return
}
var o=n.getOp(ZmOperation.TAG_MENU);
if(o){
var r=n.getTagMenu();
if(!r){
return
}
t=t||AjxUtil.toArray(this.getItems());
for(var a=0;
a<t.length;
a++){
if(t[a].cloneOf){
t[a]=t[a].cloneOf
}}
var s=(appCtxt.multiAccounts&&t.length==1)?t[0].getAccount():null;
r.set(t,appCtxt.getTagTree(s));
if(n.isZmActionMenu){
o.setText(this._getTagMenuMsg(t.length,t))
}else{
r.parent.popup();
if(appCtxt.isChildWindow||appCtxt.isWebClientOffline()){
var e=r.getMenuItem(ZmTagMenu.MENU_ITEM_ADD_ID);
if(e){
e.setVisible(false)
}}}}};
ZmBaseController.prototype._setMoveButton=function(e){
var i=new DwtMenu({
parent:e,style:DwtMenu.CALENDAR_PICKER_STYLE,id:"ZmMoveButton_"+this.getCurrentViewId()}
);
i.getHtmlElement().style.width="auto";
e.setMenu(i,true);
var t=this._folderChooser=new ZmFolderChooser({
parent:i}
);
var a=this._getMoveParams(t);
a.overviewId+=this._currentViewId;
t.setupFolderChooser(a,this._moveMenuCallback.bind(this,e));
return e
};
ZmBaseController.prototype._resetOperations=function(t,e){
if(!t){
return
}
if(e==0){
t.enableAll(false);
t.enable(this.operationsToEnableOnZeroSelection,true)
}else{
if(e==1){
t.enableAll(true);
t.enable(this.operationsToDisableOnSingleSelection,false)
}else{
if(e>1){
t.enableAll(false);
t.enable(this.operationsToEnableOnMultiSelection,true)
}}}
var a=(e>0)&&this._getSearchFolder();
if(a&&a.isReadOnly()){
t.enable(ZmOperation.TAG_MENU,false)
}};
ZmBaseController.prototype._resetOperation=function(t,e,a){};
ZmBaseController.prototype._resetToolbarOperations=function(){
this._resetOperations(this._toolbar[this._currentViewId],this.getItemCount())
};
ZmBaseController.prototype._getDefaultFocusItem=function(){
return this.getCurrentView()
};
ZmBaseController.prototype._setupContinuation=function(t,e,i,a){
i.finalCallback=this._continueAction.bind(this,{
allDoneCallback:a}
)
};
ZmBaseController.prototype._continueAction=function(e){
if(e.allDoneCallback){
e.allDoneCallback()
}
ZmBaseController.showSummary(e.actionSummary,e.actionLogItem,e.closeChildWin)
};
ZmBaseController.prototype._bubbleSelectionListener=function(a){
this._actionEv=a;
var t=a.item;
if(a.detail===DwtEvent.ONDBLCLICK){
this._actionEv.bubble=t;
this._actionEv.address=t.addrObj||t.address;
this._composeListener(a)
}else{
var e=this.getItemView(),i=e&&e._bubbleList;
if(i&&i.selectAddressText){
i.selectAddressText()
}}};
ZmBaseController.prototype._bubbleActionListener=function(a,o){
this._actionEv=a;
var t=this._actionEv.bubble=a.item,e=this._actionEv.address=o||t.addrObj||t.address,i=this._getBubbleActionMenu();
if(i){
i.enable([ZmOperation.CONTACT,ZmOperation.ADD_FILTER_RULE_ADDRESS],!appCtxt.isWebClientOffline());
this._loadContactForMenu(i,e,a)
}};
ZmBaseController.prototype._getBubbleActionMenu=function(){
if(this._bubbleActionMenu){
return this._bubbleActionMenu
}
var t=this._getBubbleActionMenuOps();
var n=this._bubbleActionMenu=new ZmActionMenu({
parent:this._shell,menuItems:t,controller:this,id:ZmId.create({
componentType:ZmId.WIDGET_MENU,componentName:this._currentViewId,app:this._app}
)}
);
if(appCtxt.get(ZmSetting.SEARCH_ENABLED)){
this._setSearchMenu(n,false)
}
n.addPopdownListener(this._bubbleMenuPopdownListener.bind(this));
for(var e=0;
e<t.length;
e++){
var a=t[e];
if(this._listeners[a]){
n.addSelectionListener(a,this._listeners[a])
}}
var o=appCtxt.getClipboard();
if(o){
o.addClient([this.toString(),this._currentViewId].join("-"),n.getOp(ZmOperation.COPY),{
onMouseDown:this._clipCopy.bind(this),onComplete:this._clipCopyComplete.bind(this)}
)
}
return n
};
ZmBaseController.prototype._getBubbleActionMenuOps=function(){
var e=[];
if(AjxClipboard.isSupported()){
e.push(ZmOperation.COPY)
}
e.push(ZmOperation.SEARCH_MENU);
e.push(ZmOperation.NEW_MESSAGE);
e.push(ZmOperation.CONTACT);
e.push(ZmOperation.GO_TO_URL);
if(appCtxt.get(ZmSetting.FILTERS_ENABLED)&&this._filterListener){
e.push(ZmOperation.ADD_FILTER_RULE_ADDRESS)
}
return e
};
ZmBaseController.prototype._clipCopy=function(e){
e.setText(this._actionEv.address+AjxEmailAddress.SEPARATOR)
};
ZmBaseController.prototype._clipCopyComplete=function(e){
this._bubbleActionMenu.popdown()
};
ZmBaseController.prototype._bubbleMenuPopdownListener=function(){
var t=this.getItemView(),a=t&&t._bubbleList,e=this._actionEv&&this._actionEv.bubble;
if(a){
a.clearRightSelection();
if(e){
e.setClassName(a._normalClass)
}}
this._actionEv.bubble=null
};
ZmBaseController.prototype._dlAddrSelected=function(e,t){
this._actionEv.address=e;
this._composeListener(t)
};
ZmBaseController.prototype._loadContactForMenu=function(t,r,n,e){
var s=appCtxt.getApp(ZmApp.CONTACTS),r=r.isAjxEmailAddress?r:new AjxEmailAddress(r),o=r.getAddress();
if(!o){
return
}
var i=s.getContactByEmail(o);
if(i){
this._handleResponseGetContact(t,r,n,e,i);
return
}
var a=t.getOp(ZmOperation.CONTACT);
if(a){
a.setText(ZmMsg.loading)
}
if(e){
if(ZmImApp.updateImMenuItemByAddress(e,r,false)){
e.setText(ZmMsg.loading)
}else{
e=null
}}
t.popup(0,n.docX||n.item.getXW(),n.docY||n.item.getYH());
var h=this._handleResponseGetContact.bind(this,t,r,n,e);
s.getContactByEmail(o,h)
};
ZmBaseController.prototype._handleResponseGetContact=function(o,t,i,a,e){
this._actionEv.contact=e;
this._setContactText(e,o);
if(a){
if(e){
ZmImApp.updateImMenuItemByContact(a,e,t)
}else{
ZmImApp.handleResponseGetContact(a,t,true)
}}
o.popup(0,i.docX||i.item.getXW(),i.docY||i.item.getYH())
};
ZmBaseController.prototype._setContactText=function(e,t){
ZmBaseController.setContactTextOnMenu(e,t||this._actionMenu)
};
ZmBaseController.setContactTextOnMenu=function(e,i){
if(!i){
return
}
var t=ZmOperation.EDIT_CONTACT;
var a=null;
if(e&&e.isDistributionList()){
a=ZmMsg.AB_EDIT_DL
}else{
if(e&&e.isGroup()){
a=ZmMsg.AB_EDIT_GROUP
}else{
if(!e||e.isGal){
a=ZmMsg.AB_ADD_CONTACT;
t=ZmOperation.NEW_CONTACT
}}}
ZmOperation.setOperation(i,ZmOperation.CONTACT,t,a);
if(appCtxt.isWebClientOffline()){
i.enable(ZmOperation.CONTACT,false)
}};
ZmBaseController.prototype._setSearchMenu=function(e,a){
var t=e&&e.getSearchMenu&&e.getSearchMenu();
if(!t){
return
}
t.addSelectionListener(ZmOperation.SEARCH,this._searchListener.bind(this,AjxEmailAddress.FROM,a));
t.addSelectionListener(ZmOperation.SEARCH_TO,this._searchListener.bind(this,AjxEmailAddress.TO,a));
if(this.getSearchFromText()){
t.getMenuItem(ZmOperation.SEARCH).setText(this.getSearchFromText())
}
if(this.getSearchToText()){
t.getMenuItem(ZmOperation.SEARCH_TO).setText(this.getSearchToText())
}};
ZmBaseController.prototype._searchListener=function(s,a,r){
var t=this._getSearchFolder(),l=this._actionEv.item,h=this._actionEv.address,e;
if(l&&l.isZmMailMsg&&t&&t.isOutbound()){
var i=l.getAddresses(AjxEmailAddress.TO).getArray(),o=l.getAddresses(AjxEmailAddress.CC).getArray();
e=i.concat(o)
}else{
if(h){
e=h.isAjxEmailAddress?h.getAddress():h
}}
if(e){
var n=appCtxt.getSearchController();
if(s===AjxEmailAddress.FROM){
n.fromSearch(e)
}else{
if(s===AjxEmailAddress.TO){
n.toSearch(e)
}}}};
ZmBaseController.prototype._composeListener=function(t,a){
var a=a||(this._actionEv&&this._actionEv.address),e=a&&a.toString();
if(e){
AjxDispatcher.run("Compose",{
action:ZmOperation.NEW_MESSAGE,inNewWindow:this._app._inNewWindow(t),toOverride:e+AjxEmailAddress.SEPARATOR}
)
}};
ZmBaseController.prototype._contactListener=function(t){
var e=this._handleLoadContactListener.bind(this);
AjxDispatcher.require(["ContactsCore","Contacts"],false,e,null,true)
};
ZmBaseController.prototype._handleLoadContactListener=function(){
var i=AjxDispatcher.run("GetContactController");
var e=this._actionEv.contact;
if(e){
if(e.isDistributionList()){
this._editListener(this._actionEv,e);
return
}
if(e.isLoaded){
var t=e.isGal;
i.show(e,t)
}else{
var a=this._loadContactCallback.bind(this);
e.load(a)
}}else{
var e=this._createNewContact(this._actionEv);
i.show(e,true)
}};
ZmBaseController.prototype.getSearchFromText=function(){
return null
};
ZmBaseController.prototype.getSearchToText=function(){
return null
};
ZmBaseController.prototype._createNewContact=function(t){
var e=new ZmContact(null);
e.initFromEmail(t.address);
return e
};
ZmBaseController.prototype._loadContactCallback=function(t,e){
AjxDispatcher.run("GetContactController").show(e)
};
ZmBaseController.prototype._getSearchFolder=function(){
var e=this._getSearchFolderId();
return e&&appCtxt.getById(e)
};
ZmBaseController.prototype._getSearchFolderId=function(e){
var t=this._activeSearch&&this._activeSearch.search;
return t&&(e||t.isSimple())&&t.folderId
};
ZmBaseController.prototype._goToUrlListener=function(a){
var n=this._getAddress(this._actionEv.address);
var o=n.split("@");
if(!o.length){
return
}
var i=o[1];
var t=i.split(".");
var e="http://"+(t.length<=2?"www."+i:i);
window.open(e,"_blank")
};
ZmBaseController.prototype._getAddress=function(e){
return e.isAjxEmailAddress?e.address:e
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmListController")){
ZmListController=function(e,o,t,i,a){
if(arguments.length==0){
return
}
ZmBaseController.apply(this,arguments);
this._navToolBar={};
this._listView=this._view;
this._list=null;
this._activeSearch=null;
this._newButton=null;
this._actionMenu=null;
this._actionEv=null;
if(this.supportsDnD()){
this._dropTgt=new DwtDropTarget("ZmTag");
this._dropTgt.markAsMultiple();
this._dropTgt.addDropListener(this._dropListener.bind(this))
}
this._menuPopdownListener=this._menuPopdownActionListener.bind(this);
this._itemCountText={};
this._continuation={
count:0,totalItems:0}
};
ZmListController.prototype=new ZmBaseController;
ZmListController.prototype.constructor=ZmListController;
ZmListController.prototype.isZmListController=true;
ZmListController.prototype.toString=function(){
return"ZmListController"
};
ZmListController.CONTINUATION_SEARCH_ITEMS=500;
ZmListController.PROGRESS_DIALOG_INIT="INIT";
ZmListController.PROGRESS_DIALOG_UPDATE="UPDATE";
ZmListController.PROGRESS_DIALOG_CLOSE="CLOSE";
ZmListController.prototype.show=function(e){
this._activeSearch=e;
if(e){
this._currentSearch=e.search;
this._activeSearch.viewId=this._currentSearch.viewId=this._currentViewId
}
this.currentPage=1;
this.maxPage=1
};
ZmListController.prototype.getListView=function(){
return this._view[this._currentViewId]
};
ZmListController.prototype.getCurrentSearchResults=function(){
return this._activeSearch
};
ZmListController.prototype.getSearchString=function(){
return this._currentSearch?this._currentSearch.query:""
};
ZmListController.prototype.setSearchString=function(e){
this._currentSearch.query=e
};
ZmListController.prototype.getSearchStringHint=function(){
return this._currentSearch?this._currentSearch.queryHint:""
};
ZmListController.prototype.getSelection=function(e){
e=e||this.getListView();
return e?e.getSelection():[]
};
ZmListController.prototype.getSelectionCount=function(e){
e=e||this.getListView();
return e?e.getSelectionCount():0
};
ZmListController.prototype.getList=function(){
return this._list
};
ZmListController.prototype.setList=function(e){
if(e!=this._list&&e.isZmList){
if(this._list){
this._list.clear()
}
this._list=e;
this._list.controller=this
}};
ZmListController.prototype.setHasMore=function(e){
if(e&&this._list){
this._list.setHasMore(e);
this._resetNavToolBarButtons()
}};
ZmListController.prototype.getItems=function(){
return this.getSelection()
};
ZmListController.prototype.getItemCount=function(){
return this.getSelectionCount()
};
ZmListController.prototype.handleKeyAction=function(s,r){
var o=this._view[this._currentViewId];
var t=false;
switch(s){
case DwtKeyMap.DBLCLICK:return o.handleKeyAction(s);
case ZmKeyMap.SHIFT_DEL:case ZmKeyMap.DEL:var i=this.getCurrentToolbar();
var n=i&&(i.getButton(ZmOperation.DELETE)||i.getButton(ZmOperation.DELETE_MENU));
if(n&&n.getEnabled()){
this._doDelete(this.getSelection(),(s==ZmKeyMap.SHIFT_DEL));
t=true
}
break;
case ZmKeyMap.NEXT_PAGE:var a=this._navToolBar[this._currentViewId];
var n=a?a.getButton(ZmOperation.PAGE_FORWARD):null;
if(n&&n.getEnabled()){
this._paginate(this._currentViewId,true);
t=true
}
break;
case ZmKeyMap.PREV_PAGE:var a=this._navToolBar[this._currentViewId];
var n=a?a.getButton(ZmOperation.PAGE_BACK):null;
if(n&&n.getEnabled()){
this._paginate(this._currentViewId,false);
t=true
}
break;
case ZmKeyMap.CANCEL:var e=this.isSearchResults&&this.searchResultsController;
if(e){
e._closeListener()
}
break;
default:return ZmBaseController.prototype.handleKeyAction.apply(this,arguments)
}
return t
};
ZmListController.prototype._getActionMenuOps=function(){};
ZmListController.prototype._standardActionMenuOps=function(){
return[ZmOperation.TAG_MENU,ZmOperation.MOVE,ZmOperation.PRINT]
};
ZmListController.prototype._participantOps=function(){
var e=[ZmOperation.SEARCH_MENU];
if(appCtxt.get(ZmSetting.MAIL_ENABLED)){
e.push(ZmOperation.NEW_MESSAGE)
}
if(appCtxt.get(ZmSetting.IM_ENABLED)){
e.push(ZmOperation.IM)
}
if(appCtxt.get(ZmSetting.CONTACTS_ENABLED)){
e.push(ZmOperation.CONTACT)
}
return e
};
ZmListController.prototype._initializeActionMenu=function(){
if(this._actionMenu){
return
}
var e=this._getActionMenuOps();
if(!e){
return
}
var t={
parent:this._shell,menuItems:e,context:this._getMenuContext(),controller:this};
this._actionMenu=new ZmActionMenu(t);
this._addMenuListeners(this._actionMenu);
if(appCtxt.get(ZmSetting.TAGGING_ENABLED)){
this._setupTagMenu(this._actionMenu)
}};
ZmListController.prototype._initializeTabGroup=function(t){
if(this._tabGroups[t]){
return
}
ZmBaseController.prototype._initializeTabGroup.apply(this,arguments);
var e=this._navToolBar[t];
if(e){
this._tabGroups[t].addMember(e.getTabGroupMember())
}
this._tabGroups[t].addMember(this._view[t])
};
ZmListController.prototype._addMenuListeners=function(o){
var t=o.opList;
for(var e=0;
e<t.length;
e++){
var a=t[e];
if(this._listeners[a]){
o.addSelectionListener(a,this._listeners[a],0)
}}
o.addPopdownListener(this._menuPopdownListener)
};
ZmListController.prototype._menuPopdownActionListener=function(a){
var e=this.getListView();
if(!this._pendingActionData){
if(e&&e.handleActionPopdown){
e.handleActionPopdown(a)
}}
var t=e?e.getSelectionCount():-1;
if(t<=1){
this._setItemCountText()
}};
ZmListController.prototype._listSelectionListener=function(e){
if(e.field==ZmItem.F_FLAG){
this._doFlag([e.item]);
return true
}else{
var t=this._listView[this._currentViewId];
if(t){
if(appCtxt.get(ZmSetting.SHOW_SELECTION_CHECKBOX)&&!e.ctrlKey){
if(t.setSelectionHdrCbox){
t.setSelectionHdrCbox(false)
}}
this._resetOperations(this.getCurrentToolbar(),t.getSelectionCount());
if(e.shiftKey){
this._setItemSelectionCountText()
}else{
this._setItemCountText()
}}}
return false
};
ZmListController.prototype._listActionListener=function(e){
this._actionEv=e;
var t=this.getActionMenu();
if(appCtxt.get(ZmSetting.TAGGING_ENABLED)){
this._setTagMenu(t)
}
if(appCtxt.get(ZmSetting.SEARCH_ENABLED)){
this._setSearchMenu(t)
}
this._resetOperations(t,this.getSelectionCount());
this._setItemSelectionCountText()
};
ZmListController.prototype._navBarListener=function(e){
if(!this.isCurrent()){
return
}
var t=e.item.getData(ZmOperation.KEY_ID);
if(t==ZmOperation.PAGE_BACK||t==ZmOperation.PAGE_FORWARD){
this._paginate(this._currentViewId,(t==ZmOperation.PAGE_FORWARD))
}};
ZmListController.prototype._dragListener=function(e){
if(this.isSearchResults&&e.action==DwtDragEvent.DRAG_START){
this.searchResultsController.showOverview(true)
}else{
if(e.action==DwtDragEvent.SET_DATA){
e.srcData={
data:e.srcControl.getDnDSelection(),controller:this}
}else{
if(this.isSearchResults&&(e.action==DwtDragEvent.DRAG_END||e.action==DwtDragEvent.DRAG_CANCEL)){
this.searchResultsController.showOverview(false)
}}}};
ZmListController.prototype._dropListener=function(s){
var r=this._view[this._currentViewId];
var e=r.getTargetItemDiv(s.uiEvent);
var l=r.getItemFromElement(e);
var i=s.srcData.data;
if(s.action==DwtDropEvent.DRAG_ENTER){
s.doIt=(l&&(l instanceof ZmItem)&&!l.isReadOnly()&&this._dropTgt.isValidTarget(i));
if(appCtxt.multiAccounts){
var h=l?l.getAccount().id:null;
var o=(i.account&&i.account.id)||i[0].account.id;
if(h!=o){
s.doIt=false
}}
if(s.doIt){
r.dragSelect(e)
}}else{
if(s.action==DwtDropEvent.DRAG_DROP){
r.dragDeselect(e);
var n=[l];
var t=this.getSelection();
if(t.length){
var a=AjxVector.fromArray(t);
if(a.contains(l)){
n=t
}}
this._doTag(n,i,true)
}else{
if(s.action==DwtDropEvent.DRAG_LEAVE){
r.dragDeselect(e)
}else{
if(s.action==DwtDropEvent.DRAG_OP_CHANGED){}}}}};
ZmListController.prototype.isDraftsFolder=function(){
var e=this._getSearchFolder();
if(!e){
return false
}
return e.nId==ZmFolder.ID_DRAFTS
};
ZmListController.prototype.isOutboxFolder=function(){
var e=this._getSearchFolder();
if(!e){
return false
}
return e.nId==ZmFolder.ID_OUTBOX
};
ZmListController.prototype.isSyncFailuresFolder=function(){
var e=this._getSearchFolder();
if(!e){
return false
}
return e.nId==ZmFolder.ID_SYNC_FAILURES
};
ZmListController.prototype._getList=function(e){
var t=ZmBaseController.prototype._getList.apply(this,arguments);
if(!t){
t=this._list
}
return t
};
ZmListController.prototype._getAllDoneCallback=function(){
return this._checkItemCount.bind(this)
};
ZmListController.handleProgress=function(t){
var e=appCtxt.getCancelMsgDialog();
if(t.state==ZmListController.PROGRESS_DIALOG_INIT){
e.reset();
e.registerCallback(DwtDialog.CANCEL_BUTTON,t.callback);
ZmListController.progressDialogReady=true
}else{
if(t.state==ZmListController.PROGRESS_DIALOG_UPDATE&&ZmListController.progressDialogReady){
e.setMessage(t.summary,DwtMessageDialog.INFO_STYLE,AjxMessageFormat.format(ZmMsg.inProgress));
if(!e.isPoppedUp()){
e.popup()
}}else{
if(t.state==ZmListController.PROGRESS_DIALOG_CLOSE){
e.unregisterCallback(DwtDialog.CANCEL_BUTTON);
e.popdown();
ZmListController.progressDialogReady=false
}}}};
ZmListController.prototype._cacheList=function(e,a){
if(this._list){
var t=e.getResults().getVector();
a=a?a:parseInt(e.getAttribute("offset"));
this._list.cache(a,t)
}else{
this._list=e.getResults(type)
}};
ZmListController.prototype._search=function(r,o,i,h,e,t,s){
var n=this._activeSearch&&this._activeSearch.search;
var a={
query:this.getSearchString(),queryHint:this.getSearchStringHint(),types:n&&n.types||[],userInitiated:n&&n.userInitiated,sortBy:appCtxt.get(ZmSetting.SORTING_PREF,r),offset:o,limit:i,lastId:t,lastSortVal:s};
this._getMoreSearchParams(a);
var l=new ZmSearch(a);
if(e){
this._currentSearch=l
}
appCtxt.getSearchController().redoSearch(l,true,null,h)
};
ZmListController.prototype._paginate=function(l,s,n,i){
var a=false;
var t=this._view[l];
if(!t){
return
}
var o,c;
i=i||t.getLimit(o);
if(t._isPageless){
o=this._list.size();
a=true
}else{
o=t.getNewOffset(s);
a=(o+i>this._list.size());
this.currentPage=this.currentPage+(s?1:-1);
this.maxPage=Math.max(this.maxPage,this.currentPage)
}
if(a&&this._list.hasMore()){
t.offset=o;
if(t._isPageless){
c=i
}else{
var u=(o+i)-this._list.size();
c=u<i&&u>0?u:i;
if(c<i){
o=((o+i)-c)+1
}}
if(this._searchPending){
return false
}
var h=t.getList();
var d=h&&h.getLast();
var r=(d&&d.id)?d.sf:null;
var e=r?d.id:null;
this._setItemCountText(ZmMsg.loading);
this._searchPending=true;
var m=this._handleResponsePaginate.bind(this,l,false,n,o);
this._search(l,o,c,m,true,e,r);
return false
}else{
if(!t._isPageless){
t.offset=o;
this._resetOperations(this._toolbar[l],0);
this._resetNavToolBarButtons(l);
this._setViewContents(l);
this._resetSelection();
return true
}}};
ZmListController.prototype._handleResponsePaginate=function(m,o,r,s,p,e){
var c=p.getResponse();
this._list.setHasMore(c.getAttribute("more"));
this._cacheList(c,s);
var a=this._view[this._currentViewId];
var l=a._isPageless?this.getSelectionCount():0;
this._resetOperations(this._toolbar[m],l);
var t=o?this.getSelection()[0]:null;
var n=t?a.getItemIndex(t):-1;
var u=c&&c.getResults().getArray();
if(a._isPageless&&u&&u.length){
a._itemsToAdd=u
}else{
a._itemsToAdd=null
}
var f=(a._isPageless&&(a.size()==0));
this._setViewContents(m);
if(a.allSelected){
for(var h=0,d=u.length;
h<d;
h++){
a.selectItem(u[h],true);
a.setSelectionCbox(u[h],false)
}
a.setSelectionHdrCbox(true)
}
this._resetNavToolBarButtons(m);
if(!e&&!a._isPageless){
this._resetSelection(n)
}else{
if(f){
a._setNextSelection()
}}
this._searchPending=false
};
ZmListController.prototype._getMoreSearchParams=function(e){};
ZmListController.prototype._checkReplenish=function(o){
var e=this.getListView();
var i=e.getList();
var t=false;
if(i){
var a=e.getLimit()-e.size();
if(a>e.getReplenishThreshold()){
this._replenishList(this._currentViewId,a,o);
t=true
}}
if(o&&!t){
o.run()
}};
ZmListController.prototype._handleEmptyList=function(e){
if(this.currentPage>1){
this._paginate(this._currentViewId,false,0)
}else{
e.removeAll(true);
e._setNoResultsHtml();
this._resetNavToolBarButtons();
e._checkItemCount()
}};
ZmListController.prototype._replenishList=function(s,a,r){
var t=this._view[s].offset+this._view[s].size();
var h=this._list.size();
if(t<h){
var n=(n>h)?h:(t+a);
var o=this._list.getVector().getArray();
var i=o.slice(t,n);
var e=AjxVector.fromArray(i);
this._view[s].replenish(e);
if(r){
r.run()
}}else{
this._getMoreToReplenish(s,a,r)
}};
ZmListController.prototype._resetSelection=function(t){
var a=this.getListView().getList();
if(a){
var e=t>=0?t:0;
var i=a.get(e);
this._view[this._currentViewId].setSelection(i,false)
}};
ZmListController.prototype._getMoreToReplenish=function(t,o,r){
if(this._list.hasMore()){
var i=this._view[t].getList();
var a=i.getLast();
var e=(a&&a.id)?a.sf:null;
var n=e?a.id:null;
var s=this._handleResponseGetMoreToReplenish.bind(this,t,r);
this._search(t,this._list.size(),o,s,false,n,e)
}else{
if(r){
r.run()
}}};
ZmListController.prototype._handleResponseGetMoreToReplenish=function(a,n,t){
var e=t.getResponse();
var i=e.getAttribute("more");
this._list.setHasMore(i);
this._cacheList(e);
var o=e.getResults().getVector();
this._view[a].replenish(o);
this._toolbar[a].enable(ZmOperation.PAGE_FORWARD,i);
if(n){
n.run(t)
}};
ZmListController.prototype._initializeNavToolBar=function(t){
var e=new ZmNavToolBar({
parent:this._toolbar[t],context:t}
);
this._setNavToolBar(e,t)
};
ZmListController.prototype._setNavToolBar=function(t,e){
this._navToolBar[e]=t;
if(this._navToolBar[e]){
var a=this._navBarListener.bind(this);
this._navToolBar[e].addSelectionListener(ZmOperation.PAGE_BACK,a);
this._navToolBar[e].addSelectionListener(ZmOperation.PAGE_FORWARD,a)
}};
ZmListController.prototype._resetNavToolBarButtons=function(e){
var t;
if(e){
t=this._view[e]
}else{
t=this.getListView();
e=this._currentViewId
}
if(!t){
return
}
if(t._isPageless){
this._setItemCountText()
}
if(!this._navToolBar[e]){
return
}
this._navToolBar[e].enable(ZmOperation.PAGE_BACK,t.offset>0);
var a=false;
if(this._list){
a=this._list.hasMore();
if(!a&&((t.offset+t.getLimit())<this._list.size())){
a=true
}}
this._navToolBar[e].enable(ZmOperation.PAGE_FORWARD,a);
this._navToolBar[e].setText(this._getNavText(e))
};
ZmListController.prototype.enablePagination=function(t,e){
if(!this._navToolBar[e]){
return
}
if(t){
this._resetNavToolBarButtons(e)
}else{
this._navToolBar[e].enable([ZmOperation.PAGE_BACK,ZmOperation.PAGE_FORWARD],false)
}};
ZmListController.prototype._getNavText=function(t){
var o=this._getNavStartEnd(t);
if(!o){
return""
}
var a=o.size;
var r="";
if(a===0){
r=AjxMessageFormat.format(ZmMsg.navTextNoItems,ZmMsg[ZmApp.NAME[ZmApp.TASKS]])
}else{
if(a===1){
r=AjxMessageFormat.format(ZmMsg.navTextOneItem,ZmMsg[ZmItem.MSG_KEY[ZmItem.TASK]])
}else{
var s=this._view[t];
var e=o.limit;
if(a<e){
r=AjxMessageFormat.format(ZmMsg.navTextWithTotal,[o.start,o.end,a])
}else{
var n=this._getUpperLimitSizeText(a);
var i=n?ZmMsg.navTextWithTotal:ZmMsg.navTextRange;
r=AjxMessageFormat.format(i,[o.start,o.end,n])
}}}
return r
};
ZmListController.prototype._getNavStartEnd=function(a){
var o=this._view[a];
var t=o.getLimit();
var i=this._list?this._list.size():0;
var n,e;
if(i>0){
n=o.offset+1;
e=Math.min(o.offset+t,i)
}
return(n&&e)?{
start:n,end:e,size:i,limit:t}
:null
};
ZmListController.prototype._getNumTotal=function(){
var e=this._getSearchFolderId();
if(e&&(e!=ZmFolder.ID_TRASH)){
var t=appCtxt.getById(e);
if(t){
return t.numTotal
}}
return null
};
ZmListController.prototype.getActionMenu=function(){
if(!this._actionMenu){
this._initializeActionMenu();
this._resetOperations(this._actionMenu,0)
}
return this._actionMenu
};
ZmListController.prototype._getMenuContext=function(){
return this._app&&this._app._name
};
ZmListController.prototype._getItemCountText=function(){
var h=this._getItemCount();
if(!h){
return""
}
var t=this._view[this._currentViewId],n=t&&t._list,s=t._getItemCountType(),r=this._getNumTotal(),i=r||h,a="type"+AjxStringUtil.capitalizeFirstLetter(ZmItem.MSG_KEY[s]),o=s?AjxMessageFormat.format(ZmMsg[a],i):"";
if(r&&(h!=r)){
return AjxMessageFormat.format(ZmMsg.itemCount1,[h,r,o])
}else{
var e=this._getUpperLimitSizeText(h);
return AjxMessageFormat.format(ZmMsg.itemCount,[e,o])
}};
ZmListController.prototype._getUpperLimitSizeText=function(e){
var a=e;
if(this._list.hasMore()){
var t=e<10?1:e<100?10:100;
a=(Math.floor(e/t))*t+"+"
}
return a
};
ZmListController.prototype._getItemCount=function(){
var t=this.getListView();
var e=t&&t._list;
if(!e){
return 0
}
return e.size()
};
ZmListController.prototype._setItemCountText=function(t){
t=t||this._getItemCountText();
var e=this._itemCountText[this._currentViewId];
if(e){
e.setText(t)
}};
ZmListController.prototype._getItemSelectionCountText=function(){
var n=this._view[this._currentViewId],i=n&&n._list,a=n._getItemCountType(),t=n.getSelectionCount(),e="type"+AjxStringUtil.capitalizeFirstLetter(ZmItem.MSG_KEY[a]),o=a?AjxMessageFormat.format(ZmMsg[e],t):"";
return t>0?AjxMessageFormat.format(ZmMsg.itemSelectionCount,[t,o]):""
};
ZmListController.prototype._setItemSelectionCountText=function(){
this._setItemCountText(this._getItemSelectionCountText())
};
ZmListController.prototype._setupContinuation=function(a,t,o,i,n){
var e=new AjxCallback(this,a,t);
o.finalCallback=this._continueAction.bind(this,{
actionCallback:e,allDoneCallback:i,notIdsOnly:n}
);
o.count=this._continuation.count;
o.idsOnly=!n;
if(!this._continuation.lastItem){
this._continuation.lastItem=o.list.getVector().getLast();
this._continuation.totalItems=o.list.size()
}};
ZmListController.prototype._continueAction=function(i,t){
var a=this._view[this._currentViewId];
var n=t&&t.cancelled;
var u=this._continuation.result;
var e=u?u.getAttribute("more"):(this._list?this._list.hasMore():false);
if(a.allSelected&&e&&!n){
var s=this._currentSearch;
var o=ZmListController.CONTINUATION_SEARCH_ITEMS;
var c={
query:this.getSearchString(),queryHint:this.getSearchStringHint(),types:s.types,sortBy:s.sortBy,limit:o,idsOnly:!i.notIdsOnly};
var r=u?u.getResults():this._list.getArray();
var l=this._continuation.lastItem;
if(!l){
l=r&&r[r.length-1]
}
if(l){
c.lastId=l.id;
c.lastSortVal=l.sf
}else{
c.offset=o+(this._continuation.search?this._continuation.search.offset:0)
}
this._continuation.count=t.numItems;
if(!this._continuation.totalItems){
this._continuation.totalItems=r.length
}
this._continuation.search=new ZmSearch(c);
var d=this._handleResponseContinueAction.bind(this,i.actionCallback);
appCtxt.getSearchController().redoSearch(this._continuation.search,true,null,d)
}else{
if(u){
if(a.allSelected){
if(t.actionTextKey){
var h=u.type;
if(h===ZmId.SEARCH_MAIL){
h=this._list.type
}
t.actionSummary=ZmList.getActionSummary({
actionTextKey:t.actionTextKey,numItems:this._continuation.totalItems,type:h,actionArg:t.actionArg}
)
}
a.deselectAll()
}
this._continuation={
count:0,totalItems:0}
}
if(i.allDoneCallback){
i.allDoneCallback()
}
ZmListController.handleProgress({
state:ZmListController.PROGRESS_DIALOG_CLOSE}
);
ZmBaseController.showSummary(t.actionSummary,t.actionLogItem,t.closeChildWin)
}};
ZmListController.prototype._handleResponseContinueAction=function(t,e){
this._continuation.result=e.getResponse();
var a=this._continuation.result.getResults();
if(a.isZmMailList){
a=a.getArray()
}
if(a.length){
this._continuation.lastItem=a[a.length-1];
this._continuation.totalItems+=a.length;
t.args=t.args||[];
t.args.unshift(a);
t.run()
}else{}};
ZmListController.prototype._checkItemCount=function(){
var e=this._view[this._currentViewId];
e._checkItemCount();
e._handleResponseCheckReplenish(true)
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmTreeController")){
ZmTreeController=function(e){
if(arguments.length==0){
return
}
ZmController.call(this,null);
this.type=e;
this._opc=appCtxt.getOverviewController();
this._listeners={};
this._listeners[ZmOperation.DELETE]=new AjxListener(this,this._deleteListener);
this._listeners[ZmOperation.DELETE_WITHOUT_SHORTCUT]=new AjxListener(this,this._deleteListener);
this._listeners[ZmOperation.MOVE]=new AjxListener(this,this._moveListener);
this._listeners[ZmOperation.EXPAND_ALL]=new AjxListener(this,this._expandAllListener);
this._listeners[ZmOperation.MARK_ALL_READ]=new AjxListener(this,this._markAllReadListener);
this._listeners[ZmOperation.SYNC]=new AjxListener(this,this._syncListener);
this._listeners[ZmOperation.SYNC_ALL]=new AjxListener(this,this._syncAllListener);
this._listeners[ZmOperation.EDIT_PROPS]=new AjxListener(this,this._editPropsListener);
this._listeners[ZmOperation.EMPTY_FOLDER]=new AjxListener(this,this._emptyListener);
this._listeners[ZmOperation.FIND_SHARES]=this._findSharesListener.bind(this);
this._dragSrc=new DwtDragSource(Dwt.DND_DROP_MOVE);
this._dragSrc.addDragListener(new AjxListener(this,this._dragListener));
this._dropTgt=new DwtDropTarget(ZmTreeController.DROP_SOURCES[e]);
this._dropTgt.addDropListener(new AjxListener(this,this._dropListener));
this._treeView={};
this._hideEmpty={};
this._dataTree={};
this._treeSelectionShortcutDelay=ZmTreeController.TREE_SELECTION_SHORTCUT_DELAY
};
ZmTreeController.prototype=new ZmController;
ZmTreeController.prototype.constructor=ZmTreeController;
ZmTreeController.COLOR_CLASS={};
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_ORANGE]="OrangeBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_BLUE]="BlueBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_CYAN]="CyanBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_GREEN]="GreenBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_PURPLE]="PurpleBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_RED]="RedBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_YELLOW]="YellowBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_PINK]="PinkBg";
ZmTreeController.COLOR_CLASS[ZmOrganizer.C_GRAY]="Gray";
ZmTreeController.TREE_SELECTION_SHORTCUT_DELAY=750;
ZmTreeController.DROP_SOURCES={};
ZmTreeController.prototype.resetOperations=function(){};
ZmTreeController.prototype._getHeaderActionMenuOps=function(){};
ZmTreeController.prototype._getActionMenuOps=function(){};
ZmTreeController.prototype._getNewDialog=function(){};
ZmTreeController.prototype._getRenameDialog=function(){};
ZmTreeController.prototype._itemClicked=function(){};
ZmTreeController.prototype._itemDblClicked=function(){};
ZmTreeController.prototype._dropListener=function(){};
ZmTreeController.prototype._getMoveDialogTitle=function(){};
ZmTreeController.prototype._resetOperation=function(t,s,o,a,e,i){
var n=t&&t.getOp(s);
if(!n){
return
}
if(o){
n.setText(o)
}
if(a){
n.setImage(a)
}
if(e!=null){
n.setEnabled(e)
}
if(i!=null){
n.setVisible(i)
}};
ZmTreeController.prototype._resetButtonPerSetting=function(a,i,t){
var e=a.getOp(i);
if(e){
if(t){
e.setVisible(true);
if(appCtxt.isOffline&&!appCtxt.getActiveAccount().isZimbraAccount){
e.setEnabled(false)
}}else{
e.setVisible(false)
}}};
ZmTreeController.prototype._enableRecoverDeleted=function(a,t){
op=a.getOp(ZmOperation.RECOVER_DELETED_ITEMS);
if(!op){
return
}
var e=appCtxt.get(ZmSetting.DUMPSTER_ENABLED);
op.setVisible(e&&t);
op.setEnabled(t)
};
ZmTreeController.prototype._findSharesListener=function(a){
var t=this._getActionedOrganizer(a);
var o=t.getAccount();
if(appCtxt.multiAccounts&&o&&o.isZimbraAccount){
appCtxt.accountList.setActiveAccount(o)
}
var e=appCtxt.getShareSearchDialog();
var i=this._handleAddShare.bind(this);
e.popup(t.type,i)
};
ZmTreeController.prototype._handleAddShare=function(){
var a=appCtxt.getShareSearchDialog();
var t=a.getShares();
a.popdown();
if(t.length===0){
return
}
AjxDispatcher.require("Share");
var s=[];
for(var e=0;
e<t.length;
e++){
var o=t[e];
s.push({
_jsns:"urn:zimbraMail",link:{
l:ZmOrganizer.ID_ROOT,name:o.defaultMountpointName,view:o.view,zid:o.ownerId,rid:o.folderId}}
)
}
var n={
jsonObj:{
BatchRequest:{
_jsns:"urn:zimbra",CreateMountpointRequest:s}}
,asyncMode:true};
appCtxt.getAppController().sendRequest(n)
};
ZmTreeController.prototype.toString=function(){
return"ZmTreeController"
};
ZmTreeController.prototype.show=function(n){
var s=n.overviewId;
this._hideEmpty[s]=n.hideEmpty;
if(!this._treeView[s]||n.forceCreate){
this._treeViewCreated=false;
this._treeView[s]=null;
this._treeView[s]=this.getTreeView(s,true)
}
var e=(appCtxt.multiAccounts&&this.type==ZmOrganizer.ZIMLET);
var a=e?appCtxt.accountList.mainAccount:(this.type==ZmOrganizer.VOICE?s:n.account);
var i=this.getDataTree(a);
if(i){
n.dataTree=i;
var t=ZmOrganizer.OPEN_SETTING[this.type];
n.collapsed=(!e&&(!(!t||(appCtxt.get(t,null,a)!==false))));
var o=this._opc.getOverview(s);
if(o&&o.showNewButtons&&this.type!=ZmOrganizer.ZIMLET&&this.type!=ZmId.ORG_PREF_PAGE){
this._setupOptButton(n)
}
this._treeView[s].set(n);
this._checkTreeView(s)
}
if(!this._treeViewCreated){
this._treeViewCreated=true;
this._postSetup(s,n.account)
}
return this._treeView[s]
};
ZmTreeController.prototype.getTreeView=function(t,e){
if(e&&!this._treeView[t]){
this._treeView[t]=this._setup(t)
}
return this._treeView[t]
};
ZmTreeController.prototype.clearTreeView=function(e){
if(this._treeView[e]){
this._treeView[e].dispose();
delete this._treeView[e]
}};
ZmTreeController.prototype.getDropTarget=function(){
return this._dropTgt
};
ZmTreeController.prototype.getDataTree=function(e){
e=e||appCtxt.getActiveAccount();
var t=this._dataTree[e.id];
if(!t){
t=this._dataTree[e.id]=appCtxt.getTree(this.type,e);
if(t){
t.addChangeListener(this._getTreeChangeListener())
}}
return t
};
ZmTreeController.prototype.dispose=function(){
var e=appCtxt.getActiveAccount();
var t=this._dataTree[e.id];
if(!t){
return
}
t.removeChangeListener(this._getTreeChangeListener())
};
ZmTreeController.prototype.setVisibleIfExists=function(t,e,a){
var i=t.getOp(e);
if(!i){
return
}
i.setVisible(a)
};
ZmTreeController.prototype._setupOptButton=function(t){
var e=ZmOperation.getProp(ZmOperation.OPTIONS,"tooltipKey");
t.optButton={
image:ZmOperation.getProp(ZmOperation.OPTIONS,"image"),tooltip:e?ZmMsg[e]:null,callback:new AjxCallback(this,this._dispOpts)}
};
ZmTreeController.prototype._dispOpts=function(t){
var i=t.dwtObj;
var e=i&&i.getData(ZmTreeView.KEY_TYPE);
if(!e){
return
}
var a=this._getHeaderActionMenu(t);
if(a){
a.popup(0,t.docX,t.docY)
}};
ZmTreeController.prototype._getTreeChangeListener=function(){
if(!this._dataChangeListener){
this._dataChangeListener=appCtxt.isChildWindow?AjxCallback.simpleClosure(this._treeChangeListener,this):new AjxListener(this,this._treeChangeListener)
}
return this._dataChangeListener
};
ZmTreeController.prototype._setup=function(t){
var e=this._initializeTreeView(t);
if(this._opc.getOverview(t).actionSupported){
this._initializeActionMenus()
}
return e
};
ZmTreeController.prototype._postSetup=function(r,s){
var a=this.getTreeView(r);
if(!a.isCheckedStyle&&!ZmOrganizer.HAS_COLOR[this.type]){
return
}
var t=ZmOrganizer.getSystemId(ZmOrganizer.ID_ROOT,s);
var e=a.getTreeItemById(t);
if(!e){
return
}
if(a.isCheckedStyle){
e.showCheckBox(false)
}
var n=e.getItems();
for(var o=0;
o<n.length;
o++){
this._fixupTreeNode(n[o],null,a,true)
}};
ZmTreeController.prototype._fixupTreeNode=function(s,e,t,o){
if(s._isSeparator){
return
}
e=e||s.getData(Dwt.KEY_OBJECT);
if(e){
if(ZmOrganizer.HAS_COLOR[this.type]){
this._setTreeItemColor(s,e)
}
if(t.isCheckedStyle){
if((e.type==this.type&&t.isCheckedStyle)||e.nId==ZmOrganizer.ID_TRASH||e.nId==ZmOrganizer.ID_DRAFTS){
s.setChecked(e.isChecked,true)
}else{
s.showCheckBox(false);
s.enableSelection(true)
}}
this._expandTreeItem(s,o)
}
var n=s.getItems();
for(var a=0;
a<n.length;
a++){
this._fixupTreeNode(n[a],null,t,o)
}};
ZmTreeController.prototype._expandTreeItem=function(o,a){
var t=appCtxt.get(ZmSetting.FOLDERS_EXPANDED);
var e=o.getData(Dwt.KEY_ID);
var i=o.parent;
if(t[e]&&i&&(i instanceof DwtTreeItem)&&i.getExpanded()){
o.setExpanded(true,null,a)
}};
ZmTreeController.prototype._expandTreeItems=function(a){
if(a._isSeparator){
return
}
this._expandTreeItem(a);
var t=a.getItems();
for(var e=0;
e<t.length;
e++){
this._expandTreeItems(t[e])
}};
ZmTreeController.prototype._setTreeItemColor=function(t,e){
t.setImage(e.getIconWithColor())
};
ZmTreeController.prototype._getTreeItemColorClassName=function(a,e){
if(!a||!e){
return null
}
if(e.isInTrash()){
return null
}
var t=e.color?e.color:ZmOrganizer.DEFAULT_COLOR[e.type];
return(t&&(t!=ZmOrganizer.C_NONE))?ZmTreeController.COLOR_CLASS[t]:""
};
ZmTreeController.prototype._initializeTreeView=function(i){
var a=this._opc.getOverview(i);
var t={
parent:a,parentElement:a.getTreeParent(this.type),overviewId:i,type:this.type,headerClass:a.headerClass,dragSrc:(a.dndSupported?this._dragSrc:null),dropTgt:(a.dndSupported?this._dropTgt:null),treeStyle:a.treeStyle,isCheckedByDefault:a.isCheckedByDefault,allowedTypes:this._getAllowedTypes(),allowedSubTypes:this._getAllowedSubTypes()};
t.id=ZmId.getTreeId(i,t.type);
if(t.type&&t.type.match(/TASK|ADDRBOOK|FOLDER|BRIEFCASE|CALENDAR|PREF_PAGE/)&&(!t.headerClass||t.headerClass=="overviewHeader")){
t.headerClass="FirstOverviewHeader overviewHeader"
}
var e=this._createTreeView(t);
e.addSelectionListener(new AjxListener(this,this._treeViewListener));
e.addTreeListener(new AjxListener(this,this._treeListener));
return e
};
ZmTreeController.prototype._createTreeView=function(e){
return new ZmTreeView(e)
};
ZmTreeController.prototype._initializeActionMenus=function(){
var i=this;
var a=this._createActionMenu;
var t=this._getHeaderActionMenuOps();
if(!this._headerActionMenu&&t){
var e=[this._shell,t];
this._headerActionMenu=new AjxCallback(i,a,e)
}
var t=this._getActionMenuOps();
if(!this._actionMenu&&t){
var e=[this._shell,t];
this._actionMenu=new AjxCallback(i,a,e)
}};
ZmTreeController.prototype._getHeaderActionMenu=function(e){
if(this._headerActionMenu instanceof AjxCallback){
var t=this._headerActionMenu;
this._headerActionMenu=t.run()
}
return this._headerActionMenu
};
ZmTreeController.prototype._getActionMenu=function(a,t){
var e=this;
if(t&&t.type==ZmOrganizer.SEARCH){
e=this._opc.getTreeController(ZmOrganizer.SEARCH)
}
if(e._actionMenu instanceof AjxCallback){
var i=e._actionMenu;
e._actionMenu=i.run()
}
return e._actionMenu
};
ZmTreeController.prototype._createActionMenu=function(o,t){
if(!t){
return
}
var s=appCtxt.getCurrentController()&&appCtxt.getCurrentController().getKeyMapName();
var r=s?("ZmActionMenu_"+s):Dwt.getNextId("ZmActionMenu_");
r=(s&&this.type)?r+"_"+this.type:r;
var n=new ZmActionMenu({
parent:o,menuItems:t,id:r}
);
t=n.opList;
for(var e=0;
e<t.length;
e++){
var a=t[e];
if(this._listeners[a]){
n.addSelectionListener(a,this._listeners[a])
}}
n.addPopdownListener(new AjxListener(this,this._menuPopdownActionListener));
return n
};
ZmTreeController.prototype._getAllowedTypes=function(){
var e={};
e[this.type]=true;
return e
};
ZmTreeController.prototype._getAllowedSubTypes=function(){
var e={};
e[this.type]=true;
return e
};
ZmTreeController.prototype._doCreate=function(params){
params.type=this.type;
var funcName=ZmOrganizer.CREATE_FUNC[this.type];
if(funcName){
var func=eval(funcName);
return func(params)
}};
ZmTreeController.prototype._doDelete=function(e){
e._delete()
};
ZmTreeController.prototype._doEmpty=function(e){
var t=false;
e.empty(t,null,this._doEmptyHandler.bind(this,e))
};
ZmTreeController.prototype._doEmptyHandler=function(t){
appCtxt.setStatusMsg({
msg:AjxMessageFormat.format(ZmMsg.folderEmptied,t.getName())}
);
var e=appCtxt.getCurrentController();
if(!e||!e._getSearchFolderId||!e.getListView){
return
}
var i=e._getSearchFolderId();
if(i!==t.id){
return
}
var a=e.getListView();
a._resetList();
a._setNoResultsHtml()
};
ZmTreeController.prototype._doRename=function(e,t){
e.rename(t)
};
ZmTreeController.prototype._doMove=function(e,t){
e.move(t)
};
ZmTreeController.prototype._doMarkAllRead=function(e){
e.markAllRead()
};
ZmTreeController.prototype._doSync=function(e){
e.sync()
};
ZmTreeController.prototype._treeViewListener=function(l){
if(l.detail!=DwtTree.ITEM_ACTIONED&&l.detail!=DwtTree.ITEM_SELECTED&&l.detail!=DwtTree.ITEM_DBL_CLICKED){
return
}
var o=l.item;
var r=o.getData(ZmTreeView.KEY_TYPE);
if(!r){
return
}
var d=o.getData(Dwt.KEY_OBJECT);
if(d){
this._actionedOrganizer=d;
if(d.noSuchFolder){
var t=appCtxt.getFolderTree();
if(t){
t.handleDeleteNoSuchFolder(d)
}
return
}
if(d&&d.type==ZmOrganizer.SEARCH){
var n=this._opc.getTreeController(ZmOrganizer.SEARCH);
if(n){
n._actionedOrganizer=d;
n._actionedOverviewId=o.getData(ZmTreeView.KEY_ID)
}}}
var e=o.getData(Dwt.KEY_ID);
var i=this._actionedOverviewId=o.getData(ZmTreeView.KEY_ID);
var c=this._opc.getOverview(i);
if(!c){
return
}
var s=DwtUiEvent.getTargetWithProp(l,"id");
var a=(l.detail==DwtTree.ITEM_SELECTED)&&o._extraCell&&s&&(o._extraCell.id==s.id);
if((l.detail==DwtTree.ITEM_ACTIONED)||(a)){
if(c.actionSupported){
var h=this.getItemActionMenu(l,d);
if(h){
this.resetOperations(h,r,e);
h.popup(0,l.docX,l.docY)
}}}else{
if((l.detail==DwtTree.ITEM_SELECTED)&&d){
if(appCtxt.multiAccounts&&(d instanceof ZmOrganizer)){
this._handleMultiAccountItemSelection(l,c,o,d)
}else{
this._handleItemSelection(l,c,o,d)
}}else{
if((l.detail==DwtTree.ITEM_DBL_CLICKED)&&d){
this._itemDblClicked(d)
}}}};
ZmTreeController.prototype.getItemActionMenu=function(t,e){
var a=(e.nId==ZmOrganizer.ID_ROOT||e.isDataSource(ZmAccount.TYPE_IMAP))?this._getHeaderActionMenu(t):this._getActionMenu(t,e);
return a
};
ZmTreeController.prototype._handleItemSelection=function(t,n,o,e){
n.itemSelected(o);
if(t.kbNavEvent){
Dwt.scrollIntoView(o._itemDiv,n.getHtmlElement());
ZmController.noFocus=true
}
if(n._treeSelectionShortcutDelayActionId){
AjxTimedAction.cancelAction(n._treeSelectionShortcutDelayActionId)
}
if((n.selectionSupported||e._showFoldersCallback)&&!o._isHeader){
if(t.kbNavEvent){
if(t.enter||this._treeSelectionShortcutDelay){
var i=new AjxTimedAction(this,ZmTreeController.prototype._treeSelectionTimedAction,[e,n]);
n._treeSelectionShortcutDelayActionId=AjxTimedAction.scheduleAction(i,this._treeSelectionShortcutDelay)
}}else{
if((appCtxt.multiAccounts&&(e instanceof ZmOrganizer))||(e.type==ZmOrganizer.VOICE)){
appCtxt.getCurrentApp().getOverviewContainer().deselectAll(n);
var a=e.account||appCtxt.accountList.mainAccount;
appCtxt.accountList.setActiveAccount(a)
}
this._itemSelected(e)
}}};
ZmTreeController.prototype._itemSelected=function(e){
if(e&&e._showFoldersCallback){
e._showFoldersCallback.run()
}else{
this._itemClicked(e)
}};
ZmTreeController.prototype._handleMultiAccountItemSelection=function(t,i,a,e){
this._handleItemSelection(t,i,a,e)
};
ZmTreeController.prototype._treeSelectionTimedAction=function(e,t){
if(t._treeSelectionShortcutDelayActionId){
AjxTimedAction.cancelAction(t._treeSelectionShortcutDelayActionId)
}
this._itemSelected(e)
};
ZmTreeController.prototype._treeListener=function(s){
var o=s&&s.item;
var a=o&&o._tree&&o._tree.overviewId;
var h=appCtxt.getOverviewController().getOverview(a);
var n=h.account;
if(appCtxt.multiAccounts&&n){
appCtxt.accountList.setActiveAccount(n)
}
var i=s.detail==DwtTree.ITEM_EXPANDED;
var e=(s.detail==DwtTree.ITEM_COLLAPSED||i)?o.getData(Dwt.KEY_ID):null;
if(e&&!o._isHeader){
var r=appCtxt.get(ZmSetting.FOLDERS_EXPANDED,e)||false;
if(typeof(r)=="string"){
r=(r==="true")
}
if(!h.skipImplicit&&r!==i){
appCtxt.set(ZmSetting.FOLDERS_EXPANDED,i,e)
}
if(i){
this._expandTreeItems(o)
}}
if(!(s&&s.detail&&h&&h.isAppOverview&&o._isHeader)){
return
}
var t=appCtxt.getSettings(n);
var l=t.getSetting(ZmOrganizer.OPEN_SETTING[this.type]);
if(l){
l.setValue(s.detail==DwtTree.ITEM_EXPANDED)
}};
ZmTreeController.prototype._treeChangeListener=function(e){
this._evHandled={};
for(var t in this._treeView){
this._changeListener(e,this._treeView[t],t)
}};
ZmTreeController.prototype._changeListener=function(ev,treeView,overviewId){
if(this._evHandled[overviewId]){
return
}
if(!treeView.allowedTypes[ev.type]&&!treeView.allowedSubTypes[ev.type]){
return
}
var organizers=ev.getDetail("organizers");
if(!organizers&&ev.source){
organizers=[ev.source]
}
for(var i=0;
i<organizers.length;
i++){
var organizer=organizers[i];
var node=treeView.getTreeItemById(organizer.id);
if(!node&&(ev.event!=ZmEvent.E_CREATE)){
continue
}
var fields=ev.getDetail("fields");
if(ev.event==ZmEvent.E_FLAGS){
var flag=ev.getDetail("flag");
var state=ev.getDetail("state");
if((flag==ZmItem.FLAG_UNREAD)&&!state){
node.setText(organizer.getName(false));
this._evHandled[overviewId]=true
}}else{
if(ev.event==ZmEvent.E_DELETE){
if(organizer.nId==ZmFolder.ID_TRASH||organizer.nId==ZmFolder.ID_SPAM){
node.setText(organizer.getName(false))
}else{
node.dispose()
}
this._checkTreeView(overviewId);
this._evHandled[overviewId]=true
}else{
if(ev.event==ZmEvent.E_CREATE||ev.event==ZmEvent.E_MOVE){
if(appCtxt.multiAccounts){
var overview=this._opc.getOverview(overviewId);
if(overview&&overview.account!=organizer.getAccount()){
continue
}}
var parentNode=this._getParentNode(organizer,ev,overviewId);
var idx=parentNode?ZmTreeView.getSortIndex(parentNode,organizer,eval(ZmTreeView.COMPARE_FUNC[organizer.type])):null;
if(parentNode&&(ev.event==ZmEvent.E_CREATE)){
var type=((organizer.parent.nId==ZmOrganizer.ID_ROOT)||organizer.parent.isRemoteRoot())?ev.type:organizer.parent.type;
if(type!==this.type||!treeView._isAllowed(organizer.parent,organizer)){
continue
}
if(organizer.isOfflineGlobalSearch){
appCtxt.getApp(ZmApp.MAIL).getOverviewContainer().addSearchFolder(organizer);
return
}else{
node=this._addNew(treeView,parentNode,organizer,idx)
}
this.createDataSource(organizer)
}else{
if(ev.event==ZmEvent.E_MOVE){
var selectedItem=treeView.getSelected();
if(AjxUtil.isArray1(selectedItem)){
selectedItem=null
}
node.dispose();
if(parentNode){
node=this._addNew(treeView,parentNode,organizer,idx)
}
if(!treeView.getSelected()&&selectedItem){
treeView.setSelected(selectedItem.id,true,true)
}}}
if(parentNode){
parentNode.setExpanded(true);
this._fixupTreeNode(node,organizer,treeView)
}
this._checkTreeView(overviewId);
this._evHandled[overviewId]=true
}else{
if(ev.event==ZmEvent.E_MODIFY){
if(!fields){
return
}
if(fields[ZmOrganizer.F_TOTAL]||fields[ZmOrganizer.F_SIZE]||fields[ZmOrganizer.F_UNREAD]||fields[ZmOrganizer.F_NAME]){
node.setToolTipContent(organizer.getToolTip(true));
if(appCtxt.multiAccounts&&organizer.type==ZmOrganizer.FOLDER){
appCtxt.getApp(ZmApp.MAIL).getOverviewContainer().updateTooltip(organizer.nId)
}}
if(fields[ZmOrganizer.F_NAME]||fields[ZmOrganizer.F_UNREAD]||fields[ZmOrganizer.F_FLAGS]||fields[ZmOrganizer.F_COLOR]||((organizer.nId==ZmFolder.ID_DRAFTS||organizer.rid==ZmFolder.ID_DRAFTS||organizer.nId==ZmOrganizer.ID_OUTBOX)&&fields[ZmOrganizer.F_TOTAL])){
var parentNode=this._getParentNode(organizer,ev,overviewId);
if(!parentNode){
return
}
this._updateOverview(parentNode,node,fields,organizer,treeView);
this._evHandled[overviewId]=true
}}}}}}};
ZmTreeController.prototype._updateOverview=function(parentNode,node,fields,organizer,treeView){
node.setText(organizer.getName(treeView._showUnread));
if(fields&&fields[ZmOrganizer.F_NAME]){
if(parentNode&&(parentNode.getNumChildren()>1)){
var nodeSelected=node._selected;
node.dispose();
var idx=ZmTreeView.getSortIndex(parentNode,organizer,eval(ZmTreeView.COMPARE_FUNC[organizer.type]));
node=treeView._addNew(parentNode,organizer,idx);
if(nodeSelected){
treeView.setSelected(organizer,true)
}}else{
node.setDndText(organizer.getName())
}
appCtxt.getAppViewMgr().updateTitle()
}
this._fixupTreeNode(node,organizer,treeView)
};
ZmTreeController.prototype._getParentNode=function(e,a,i){
if(e.parent){
var t=(e.parent.nId==ZmOrganizer.ID_ROOT)?a.type:null;
return this._opc.getOverview(i).getTreeItemById(e.parent.id,t)
}};
ZmTreeController.prototype._addNew=function(i,a,t,e){
return i._addNew(a,t,e)
};
ZmTreeController.prototype._newListener=function(a,i){
this._pendingActionData=this._getActionedOrganizer(a);
var t=this._getNewDialog();
if(!this._newCb){
this._newCb=new AjxCallback(this,this._newCallback)
}
if(this._pendingActionData&&!appCtxt.getById(this._pendingActionData.id)){
this._pendingActionData=appCtxt.getFolderTree(i).root
}
if(!i&&appCtxt.multiAccounts){
var e=this._opc.getOverview(this._actionedOverviewId);
i=e&&e.account
}
ZmController.showDialog(t,this._newCb,this._pendingActionData,i);
t.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,t)
};
ZmTreeController.prototype.createDataSource=function(e){};
ZmTreeController.prototype._renameListener=function(e){
this._pendingActionData=this._getActionedOrganizer(e);
var t=this._getRenameDialog();
if(!this._renameCb){
this._renameCb=new AjxCallback(this,this._renameCallback)
}
ZmController.showDialog(t,this._renameCb,this._pendingActionData);
t.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,t)
};
ZmTreeController.prototype._deleteListener=function(e){
this._doDelete(this._getActionedOrganizer(e))
};
ZmTreeController.prototype._emptyListener=function(e){
this._doEmpty(this._getActionedOrganizer(e))
};
ZmTreeController.prototype._moveListener=function(e){
this._pendingActionData=this._getActionedOrganizer(e);
var t=appCtxt.getChooseFolderDialog();
if(!this._moveCb){
this._moveCb=new AjxCallback(this,this._moveCallback)
}
ZmController.showDialog(t,this._moveCb,this._getMoveParams(t));
t.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,t)
};
ZmTreeController.prototype._getMoveParams=function(t){
var e={};
e[ZmFolder.ID_SPAM]=true;
return{
data:this._pendingActionData,treeIds:[this.type],overviewId:t.getOverviewId(appCtxt.getCurrentAppName()+"_"+this.type),omit:e,title:AjxStringUtil.htmlEncode(this._getMoveDialogTitle()),description:ZmMsg.targetFolder,appName:ZmOrganizer.APP[this.type]}
};
ZmTreeController.prototype._expandAllListener=function(i){
var e=this._getActionedOrganizer(i);
var t=this.getTreeView(this._actionedOverviewId);
var a=t.getTreeItemById(e.id);
window.duringExpandAll=true;
a.setExpanded(true,true);
window.duringExpandAll=false;
if(window.afterExpandAllCallback){
window.afterExpandAllCallback();
window.afterExpandAllCallback=null
}};
ZmTreeController.prototype._markAllReadListener=function(e){
this._doMarkAllRead(this._getActionedOrganizer(e))
};
ZmTreeController.prototype._syncAllListener=function(r){
for(var n in this._treeView){
var o=this.getTreeView(n);
var h=ZmOrganizer.getSystemId(ZmOrganizer.ID_ROOT,appCtxt.getActiveAccount());
var l=o.getTreeItemById(h);
var e=l&&l.getItems();
if(e){
for(var s=0;
s<e.length;
s++){
var t=e[s];
var a=t&&t.getData&&t.getData(Dwt.KEY_OBJECT);
if(a&&(a.isFeed()||a.hasFeeds())){
this._syncFeeds(a)
}}}}};
ZmTreeController.prototype._syncListener=function(e){
this._syncFeeds(this._getActionedOrganizer(e))
};
ZmTreeController.prototype._syncFeeds=function(o){
if(o.isFeed()){
this._doSync(o)
}else{
if(o.hasFeeds()){
var e=o.children.getArray();
var n=o.children.size();
for(var t=0;
t<n;
t++){
if(e[t].isFeed()||(e[t].hasFeeds&&e[t].hasFeeds())){
this._syncFeeds(e[t])
}}}}};
ZmTreeController.prototype._editPropsListener=function(t){
var e=appCtxt.getFolderPropsDialog();
e.popup(this._getActionedOrganizer(t))
};
ZmTreeController.prototype._dragListener=function(e){
switch(e.action){
case DwtDragEvent.SET_DATA:e.srcData={
data:e.srcControl.getData(Dwt.KEY_OBJECT),controller:this};
break
}};
ZmTreeController.prototype._menuPopdownActionListener=function(){
if(this._pendingActionData){
return
}
var e=this.getTreeView(this._actionedOverviewId);
if(this._actionedOrganizer&&(e.getSelected()!=this._actionedOrganizer)){
var t=e.getTreeItemById(this._actionedOrganizer.id);
if(t){
t._setActioned(false)
}}};
ZmTreeController.prototype._newCallback=function(e){
this._doCreate(e);
this._clearDialog(this._getNewDialog())
};
ZmTreeController.prototype._renameCallback=function(e,t){
this._doRename(e,t);
this._clearDialog(this._getRenameDialog())
};
ZmTreeController.prototype._moveCallback=function(e){
this._doMove(this._pendingActionData,e);
this._clearDialog(appCtxt.getChooseFolderDialog())
};
ZmTreeController.prototype._deleteShieldYesCallback=function(e){
this._doDelete(e);
this._clearDialog(this._deleteShield)
};
ZmTreeController.prototype._emptyShieldYesCallback=function(e){
this._doEmpty(e);
this._clearDialog(this._emptyShield)
};
ZmTreeController.prototype._getEmptyShieldWarning=function(t){
var e=this._pendingActionData=this._getActionedOrganizer(t);
var a=this._emptyShield=appCtxt.getOkCancelMsgDialog();
a.reset();
a.registerCallback(DwtDialog.OK_BUTTON,this._emptyShieldYesCallback,this,e);
a.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,this._emptyShield);
var o=(e.nId!=ZmFolder.ID_TRASH)?(AjxMessageFormat.format(ZmMsg.confirmEmptyFolder,e.getName())):ZmMsg.confirmEmptyTrashFolder;
a.setMessage(o,DwtMessageDialog.WARNING_STYLE);
var n=(e.nId==ZmFolder.ID_TRASH||e.nId==ZmFolder.ID_SPAM)?DwtDialog.OK_BUTTON:DwtDialog.CANCEL_BUTTON;
a.associateEnterWithButton(n);
a.popup(null,n);
if(!(e.nId==ZmFolder.ID_SPAM||e.isInTrash())){
var i=a.getButton(DwtDialog.CANCEL_BUTTON);
i.focus()
}};
ZmTreeController.prototype._getActionedOrganizer=function(e){
if(this._actionedOrganizer){
return this._actionedOrganizer
}
var a=e.item;
while(a){
var t=a.getData(Dwt.KEY_OBJECT);
if(t instanceof ZmOrganizer){
this._actionedOrganizer=t;
return this._actionedOrganizer
}
a=a.parent
}
return null
};
ZmTreeController.prototype._checkTreeView=function(i){
if(!i||!this._treeView[i]){
return
}
var t=this._opc.getOverview(i).account;
var a=this.getDataTree(t);
var e=(ZmOrganizer.HIDE_EMPTY[this.type]&&a&&(a.size()==0));
this._treeView[i].setVisible(!e)
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmTagTreeController")){
ZmTagTreeController=function(){
ZmTreeController.call(this,ZmOrganizer.TAG);
this._listeners[ZmOperation.NEW_TAG]=this._newListener.bind(this);
this._listeners[ZmOperation.RENAME_TAG]=this._renameListener.bind(this);
this._listeners[ZmOperation.TAG_COLOR_MENU]=this._colorListener.bind(this)
};
ZmTagTreeController.prototype=new ZmTreeController;
ZmTagTreeController.prototype.constructor=ZmTagTreeController;
ZmTagTreeController.prototype.isZmTagTreeController=true;
ZmTagTreeController.prototype.toString=function(){
return"ZmTagTreeController"
};
ZmTagTreeController.prototype._getActionMenu=function(){
var t=ZmTreeController.prototype._getActionMenu.call(this);
if(t&&!t._initialized){
var e=t.getMenuItem(ZmOperation.TAG_COLOR_MENU);
if(e){
e.getMenu().addSelectionListener(this._listeners[ZmOperation.TAG_COLOR_MENU])
}
t._initialized=true
}
return t
};
ZmTagTreeController.prototype.resetOperations=function(a,t,i){
var e=appCtxt.getById(i);
a.enableAll(true);
if(e.isSystem()){
a.enable([ZmOperation.RENAME_TAG,ZmOperation.TAG_COLOR_MENU,ZmOperation.DELETE_WITHOUT_SHORTCUT],false)
}
a.enable(ZmOperation.MARK_ALL_READ,(e&&(e.numUnread>0)))
};
ZmTagTreeController.prototype._getHeaderActionMenuOps=function(){
return[ZmOperation.NEW_TAG]
};
ZmTagTreeController.prototype._getActionMenuOps=function(){
return[ZmOperation.NEW_TAG,ZmOperation.MARK_ALL_READ,ZmOperation.RENAME_TAG,ZmOperation.DELETE_WITHOUT_SHORTCUT,ZmOperation.TAG_COLOR_MENU]
};
ZmTagTreeController.prototype._getNewDialog=function(){
return appCtxt.getNewTagDialog()
};
ZmTagTreeController.prototype._getRenameDialog=function(){
return appCtxt.getRenameTagDialog()
};
ZmTagTreeController.prototype._itemClicked=function(t){
var e;
switch(appCtxt.getCurrentAppName()){
case ZmApp.CONTACTS:e=ZmItem.CONTACT;
break;
case ZmApp.CALENDAR:e=ZmItem.APPT;
break;
case ZmApp.BRIEFCASE:e=ZmItem.BRIEFCASE_ITEM;
break;
case ZmApp.TASKS:e=ZmItem.TASK;
break;
default:e=ZmId.SEARCH_MAIL;
break
}
var i={
query:t.createQuery(),searchFor:e,noGal:true,inclSharedItems:true,getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML),accountName:(appCtxt.multiAccounts?t.getAccount().name:null)};
var a=appCtxt.getSearchController();
a.searchAllAccounts=false;
a.search(i)
};
ZmTagTreeController.prototype._deleteListener=function(t){
var e=this._pendingActionData=this._getActionedOrganizer(t);
var a=this._deleteShield=appCtxt.getYesNoMsgDialog();
a.reset();
a.registerCallback(DwtDialog.NO_BUTTON,this._clearDialog,this,this._deleteShield);
a.registerCallback(DwtDialog.YES_BUTTON,this._deleteShieldYesCallback,this,e);
var i=AjxMessageFormat.format(ZmMsg.askDeleteTag,e.getName(false,ZmOrganizer.MAX_DISPLAY_NAME_LENGTH));
a.setMessage(i,DwtMessageDialog.WARNING_STYLE);
a.popup()
};
ZmTagTreeController.prototype._colorListener=function(a){
var e=this._getActionedOrganizer(a);
if(e){
var t=a.item.getData(ZmOperation.MENUITEM_ID);
if(String(t).match(/^#/)){
e.setRGB(t)
}else{
e.setColor(t)
}}};
ZmTagTreeController.prototype._dropListener=function(o){
var n=o.srcData.data;
if(o.action==DwtDropEvent.DRAG_ENTER){
var i=(n instanceof Array)?n[0]:n;
var t=o.targetControl.getData(Dwt.KEY_OBJECT);
if(t.id==ZmOrganizer.ID_ROOT){
o.doIt=false
}else{
if(i instanceof ZmItem&&i.isReadOnly()){
o.doIt=false
}else{
if(appCtxt.multiAccounts&&t.getAccount()!=i.account){
o.doIt=false
}else{
o.doIt=this._dropTgt.isValidTarget(n)
}}}}else{
if(o.action==DwtDropEvent.DRAG_DROP){
var e=o.srcData.controller;
var a=(n instanceof Array)?n:[n];
e._doTag(a,o.targetControl.getData(Dwt.KEY_OBJECT),true)
}}};
ZmTagTreeController.prototype._changeListener=function(r,a,h){
var t=r.getDetail("fields");
var o=r.getDetail("organizers");
for(var n=0;
n<o.length;
n++){
var e=o[n];
if(r.event==ZmEvent.E_MODIFY&&((t&&t[ZmOrganizer.F_COLOR]))){
var s=a.getTreeItemById(e.id);
if(s){
s.setImage(e.getIconWithColor())
}}else{
ZmTreeController.prototype._changeListener.call(this,r,a,h)
}}};
ZmTagTreeController.prototype._setTreeItemColor=function(t,e){}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmFolderTreeController")){
ZmFolderTreeController=function(t,e){
if(!arguments.length){
return
}
ZmTreeController.call(this,(t||ZmOrganizer.FOLDER));
this._listeners[ZmOperation.NEW_FOLDER]=this._newListener.bind(this);
this._listeners[ZmOperation.PRIORITY_FILTER]=this._priorityFilterListener.bind(this);
this._listeners[ZmOperation.RENAME_FOLDER]=this._renameListener.bind(this);
this._listeners[ZmOperation.SHARE_FOLDER]=this._shareFolderListener.bind(this);
this._listeners[ZmOperation.EMPTY_FOLDER]=this._emptyListener.bind(this);
this._listeners[ZmOperation.RECOVER_DELETED_ITEMS]=this._recoverListener.bind(this);
this._listeners[ZmOperation.SYNC_OFFLINE_FOLDER]=this._syncOfflineFolderListener.bind(this)
};
ZmFolderTreeController.prototype=new ZmTreeController;
ZmFolderTreeController.prototype.constructor=ZmFolderTreeController;
ZmFolderTreeController.prototype.isZmFolderTreeController=true;
ZmFolderTreeController.prototype.toString=function(){
return"ZmFolderTreeController"
};
ZmFolderTreeController.prototype.show=function(o){
var a=o.omit||{};
for(var n in ZmFolder.HIDE_ID){
a[n]=true
}
var i=this.type!=ZmOrganizer.VOICE&&this.getDataTree(o.account);
if(i){
for(var e in ZmFolder.HIDE_NAME){
var t=i.getByName(e);
if(t){
a[t.id]=true
}}}
o.omit=a;
return ZmTreeController.prototype.show.call(this,o)
};
ZmFolderTreeController.prototype.resetOperations=function(c,i,b){
var m=ZmMsg.emptyFolder;
var s=appCtxt.getById(b);
var v=((s.numTotal>0)||(s.children&&(s.children.size()>0)));
var h=true;
var d=s.rid;
if(d==ZmFolder.ID_ROOT||d==ZmFolder.ID_INBOX||d==ZmFolder.ID_SENT||d==ZmFolder.ID_DRAFTS){
h=false
}
var g=ZmOrganizer.normalizeId(b,this.type);
if(g==ZmOrganizer.ID_ROOT||(!s.isSystem()&&!s.isSystemEquivalent())){
var a=(!s.link||s.isAdmin());
if(appCtxt.isOffline){
a=!s.getAccount().isMain&&s.getAccount().isZimbraAccount
}
c.enableAll(true);
var u=s.parent&&s.parent.isReadOnly();
c.enable([ZmOperation.DELETE_WITHOUT_SHORTCUT,ZmOperation.MOVE,ZmOperation.EDIT_PROPS],!u);
c.enable(ZmOperation.SYNC,s.isFeed());
c.enable(ZmOperation.SYNC_ALL,s.isFeed()||s.hasFeeds());
c.enable(ZmOperation.SHARE_FOLDER,a);
c.enable(ZmOperation.EMPTY_FOLDER,((v||s.link)&&h&&!appCtxt.isExternalAccount()));
c.enable(ZmOperation.RENAME_FOLDER,!(u||s.isDataSource()||appCtxt.isExternalAccount()));
c.enable(ZmOperation.NEW_FOLDER,!(s.disallowSubFolder||appCtxt.isExternalAccount()));
if(s.isRemote()&&s.isReadOnly()){
c.enable([ZmOperation.NEW_FOLDER,ZmOperation.MARK_ALL_READ,ZmOperation.EMPTY_FOLDER],false)
}
if(appCtxt.isExternalAccount()){
c.enable([ZmOperation.DELETE_WITHOUT_SHORTCUT,ZmOperation.MOVE],false)
}}else{
if(s.isSystemEquivalent()){
g=s.getSystemEquivalentFolderId()
}
c.enableAll(false);
if(!s.disallowSubFolder&&(g==ZmFolder.ID_INBOX||g==ZmFolder.ID_SENT||g==ZmFolder.ID_TRASH)){
c.enable(ZmOperation.NEW_FOLDER,true)
}
if(g==ZmFolder.ID_SPAM||g==ZmFolder.ID_TRASH||g==ZmFolder.ID_CHATS){
if(g==ZmFolder.ID_SPAM){
m=ZmMsg.emptyJunk
}else{
if(g==ZmFolder.ID_TRASH){
m=ZmMsg.emptyTrash
}}
c.enable(ZmOperation.EMPTY_FOLDER,v)
}
if(!s.link&&(g==ZmFolder.ID_INBOX||g==ZmFolder.ID_SENT||g==ZmFolder.ID_DRAFTS)){
c.enable([ZmOperation.SHARE_FOLDER,ZmOperation.EDIT_PROPS],true)
}
if(appCtxt.multiAccounts){
var a=!s.getAccount().isMain&&s.getAccount().isZimbraAccount;
if(g==ZmFolder.ID_SPAM||g==ZmFolder.ID_TRASH){
a=false
}
c.enable([ZmOperation.SHARE_FOLDER,ZmOperation.EDIT_PROPS],a)
}
if(appCtxt.isOffline&&g==ZmOrganizer.ID_SYNC_FAILURES&&v){
c.enable(ZmOperation.EMPTY_FOLDER,true)
}}
c.enable(ZmOperation.OPEN_IN_TAB,true);
c.enable(ZmOperation.EXPAND_ALL,(s.size()>0));
if(g!=ZmOrganizer.ID_ROOT&&!s.isReadOnly()){
c.enable(ZmOperation.MARK_ALL_READ,!s.isRemoteRoot()&&(s.numUnread>0||s.link))
}
var l=c.getOp(ZmOperation.EMPTY_FOLDER);
if(l){
l.setText(m)
}
var o=(g==ZmOrganizer.ID_TRASH);
var e=c.getOp(ZmOperation.SYNC);
if(e){
var f=c.getOp(ZmOperation.SYNC_ALL);
var x=s.hasFeeds();
if(s.isFeed()){
e.setEnabled(true);
e.setVisible(true);
e.setText(ZmMsg.checkFeed);
if(f){
f.setEnabled(true);
f.setVisible(true);
f.setText(ZmMsg.checkAllFeed)
}}else{
if(x&&!o){
if(f){
f.setEnabled(true);
f.setVisible(true);
f.setText(ZmMsg.checkAllFeed)
}}else{
var k=appCtxt.get(ZmSetting.POP_ACCOUNTS_ENABLED)||appCtxt.get(ZmSetting.IMAP_ACCOUNTS_ENABLED);
if(!appCtxt.isOffline&&k){
var w=AjxDispatcher.run("GetDataSourceCollection");
var n=w.getItemsFor(ZmOrganizer.normalizeId(s.id));
if(n.length>0){
e.setText(ZmMsg.checkExternalMail);
e.setEnabled(true);
e.setVisible(true)
}else{
e.setVisible(false)
}}else{
e.setVisible(false)
}
if((!x||o)&&f){
f.setVisible(false)
}}}}
e=c.getOp(ZmOperation.SYNC_OFFLINE_FOLDER);
if(e){
if(!s.isOfflineSyncable){
e.setVisible(false)
}else{
e.setVisible(true);
e.setEnabled(true);
var p=(s.isOfflineSyncing)?ZmMsg.syncOfflineFolderOff:ZmMsg.syncOfflineFolderOn;
e.setText(p)
}}
var r=appCtxt.get(ZmSetting.PRIORITY_INBOX_ENABLED);
var t=c.getOp(ZmOperation.PRIORITY_FILTER);
if(t){
t.setVisible(r);
t.setEnabled(r)
}
this._enableRecoverDeleted(c,o);
this._resetButtonPerSetting(c,ZmOperation.SHARE_FOLDER,appCtxt.get(ZmSetting.SHARING_ENABLED))
};
ZmFolderTreeController.prototype._getHeaderActionMenuOps=function(){
if(appCtxt.isExternalAccount()){
return[ZmOperation.EXPAND_ALL]
}
return[ZmOperation.NEW_FOLDER,ZmOperation.SEP,ZmOperation.PRIORITY_FILTER,ZmOperation.EXPAND_ALL,ZmOperation.SYNC,ZmOperation.FIND_SHARES]
};
ZmFolderTreeController.prototype._getActionMenuOps=function(){
return[ZmOperation.NEW_FOLDER,ZmOperation.SYNC,ZmOperation.SYNC_ALL,ZmOperation.MARK_ALL_READ,ZmOperation.EMPTY_FOLDER,ZmOperation.RECOVER_DELETED_ITEMS,ZmOperation.SHARE_FOLDER,ZmOperation.MOVE,ZmOperation.DELETE_WITHOUT_SHORTCUT,ZmOperation.RENAME_FOLDER,ZmOperation.EDIT_PROPS,ZmOperation.SYNC_OFFLINE_FOLDER,ZmOperation.OPEN_IN_TAB,ZmOperation.EXPAND_ALL]
};
ZmFolderTreeController.prototype._getAllowedSubTypes=function(){
var e={};
e[ZmOrganizer.FOLDER]=true;
e[ZmOrganizer.SEARCH]=true;
return e
};
ZmFolderTreeController.prototype._getNewDialog=function(){
return appCtxt.getNewFolderDialog()
};
ZmFolderTreeController.prototype._getRenameDialog=function(){
return appCtxt.getRenameFolderDialog()
};
ZmFolderTreeController.prototype._itemClicked=function(t){
if(appCtxt.isOffline){
var m=t.getAccount();
if(m&&m.inNewMailMode){
m.inNewMailMode=false;
var a=appCtxt.getOverviewController()._overviewContainer;
for(var c in a){
a[c].updateAccountInfo(m,true,true)
}}}
if(t.type==ZmOrganizer.SEARCH){
var r=this._opc.getTreeController(ZmOrganizer.SEARCH);
r._itemClicked(t)
}else{
if(t.id==ZmFolder.ID_ATTACHMENTS){
var l=AjxDispatcher.run("GetAttachmentsController");
l.show()
}else{
var e=ZmId.SEARCH_MAIL;
if(t.isInTrash()){
var n=appCtxt.getCurrentAppName();
if(n==ZmApp.CONTACTS){
e=ZmItem.CONTACT
}}
var u=appCtxt.getSearchController();
var m=t.getAccount();
var f=appCtxt.get(ZmSetting.SORTING_PREF,t.nId);
if(!f){
f=(u.currentSearch&&t.nId==u.currentSearch.folderId)?null:ZmSearch.DATE_DESC
}else{
var h=appCtxt.getApp(ZmApp.MAIL).getGroupMailBy();
if(h==ZmItem.CONV&&(f==ZmSearch.NAME_ASC||f==ZmSearch.NAME_DESC)){
f=appCtxt.get(ZmSetting.SORTING_PREF,appCtxt.getCurrentViewId());
if(!f){
f=ZmSearch.DATE_DESC
}
appCtxt.set(ZmSetting.SORTING_PREF,f,t.nId)
}}
var s={
query:t.createQuery(),searchFor:e,getHtml:(t.nId==ZmFolder.ID_DRAFTS)||appCtxt.get(ZmSetting.VIEW_AS_HTML),types:((t.nId==ZmOrganizer.ID_SYNC_FAILURES)?[ZmItem.MSG]:null),sortBy:f,accountName:(m&&m.name)};
u.resetSearchAllAccounts();
if(appCtxt.multiAccounts){
if(t.link&&t.perm==null){
var o=appCtxt.getFolderTree(m);
if(o){
var p=new AjxCallback(this,this._getPermissionsResponse,[s]);
o.getPermissions({
callback:p,folderIds:[t.id]}
)
}
return
}
if(appCtxt.isOffline&&m.hasNotSynced()&&!m.__syncAsked){
m.__syncAsked=true;
var d=appCtxt.getYesNoMsgDialog();
d.registerCallback(DwtDialog.YES_BUTTON,this._syncAccount,this,[d,m]);
d.setMessage(ZmMsg.neverSyncedAsk,DwtMessageDialog.INFO_STYLE);
d.popup()
}}
u.search(s)
}}};
ZmFolderTreeController.prototype._syncAccount=function(e,t){
e.popdown();
t.sync()
};
ZmFolderTreeController.prototype._getPermissionsResponse=function(e){
appCtxt.getSearchController().search(e)
};
ZmFolderTreeController.prototype._doSync=function(a){
var t=AjxDispatcher.run("GetDataSourceCollection");
var e=ZmOrganizer.normalizeId(a.id);
var i=t.getItemsFor(e);
if(i.length>0){
t.importMailFor(e)
}else{
ZmTreeController.prototype._doSync.call(this,a)
}};
ZmFolderTreeController.prototype._syncFeeds=function(t){
if(!appCtxt.isOffline&&t&&!t.isFeed()){
var a=(appCtxt.get(ZmSetting.POP_ACCOUNTS_ENABLED)||appCtxt.get(ZmSetting.IMAP_ACCOUNTS_ENABLED))?t.getDataSources(null,true):null;
if(a){
var e=AjxDispatcher.run("GetDataSourceCollection");
e.importMail(a);
return
}}
ZmTreeController.prototype._syncFeeds.call(this,t)
};
ZmFolderTreeController.prototype._addNew=function(i,a,t,e){
if(ZmFolder.HIDE_ID[t.id]){
return false
}
return i._addNew(a,t,e)
};
ZmFolderTreeController.prototype._deleteListener=function(a){
var e=this._getActionedOrganizer(a);
var o=appCtxt.isOffline?this.getDataTree().getById(ZmFolder.ID_TRASH):null;
if(o&&o.disallowSubFolder&&e.numTotal>0){
var s=appCtxt.getMsgDialog();
s.setMessage(ZmMsg.errorCannotDeleteFolder);
s.popup();
return
}
if(e.nId==ZmFolder.ID_SPAM||e.isInTrash()||(o&&o.disallowSubFolder)){
this._pendingActionData=e;
var i=this._deleteShield=appCtxt.getOkCancelMsgDialog();
i.reset();
i.registerCallback(DwtDialog.OK_BUTTON,this._deleteShieldYesCallback,this,e);
i.registerCallback(DwtDialog.CANCEL_BUTTON,this._clearDialog,this,this._deleteShield);
var t;
if(e.type===ZmOrganizer.SEARCH){
t=ZmMsg.confirmDeleteSavedSearch
}else{
if(e.nId==ZmFolder.ID_TRASH){
t=ZmMsg.confirmEmptyTrashFolder
}else{
if(e.nId==ZmFolder.ID_SPAM){
t=ZmMsg.confirmEmptyFolder
}else{
t=ZmMsg.confirmDeleteFolder
}}}
var n=AjxMessageFormat.format(t,e.getName());
i.setMessage(n,DwtMessageDialog.WARNING_STYLE);
i.popup()
}else{
this._doMove(e,appCtxt.getById(ZmFolder.ID_TRASH))
}};
ZmFolderTreeController.prototype._emptyListener=function(e){
this._getEmptyShieldWarning(e)
};
ZmFolderTreeController.prototype._recoverListener=function(e){
appCtxt.getDumpsterDialog().popup(this._getSearchFor(),this._getSearchTypes())
};
ZmFolderTreeController.prototype._getSearchFor=function(e){
return ZmId.SEARCH_MAIL
};
ZmFolderTreeController.prototype._getSearchTypes=function(e){
return[ZmItem.MSG]
};
ZmFolderTreeController.prototype._syncOfflineFolderListener=function(t){
var e=this._getActionedOrganizer(t);
if(e){
e.toggleSyncOffline()
}};
ZmFolderTreeController.prototype._dragListener=function(t){
if(t.action==DwtDragEvent.DRAG_START){
var e=t.srcControl.getData(Dwt.KEY_OBJECT);
t.srcData={
data:e,controller:this};
if(!(e instanceof ZmFolder)||e.isSystem()){
t.operation=Dwt.DND_DROP_NONE
}}};
ZmFolderTreeController.prototype._dropListener=function(c){
var n=c.targetControl.getData(Dwt.KEY_OBJECT);
var t=c.srcData.data;
var o=(c.shiftKey||c.uiEvent.shiftKey);
if(c.action==DwtDropEvent.DRAG_ENTER){
if(!t){
c.doIt=false;
return
}
var l=c.targetControl.getData(ZmTreeView.KEY_TYPE);
if(t instanceof ZmFolder){
c.doIt=n.mayContain(t,l)&&!n.disallowSubFolder
}else{
if(t instanceof ZmTag){
c.doIt=false
}else{
if(this._dropTgt.isValidTarget(t)){
c.doIt=n.mayContain(t,l);
var e;
var m=AjxUtil.toArray(t);
for(var a=0;
a<m.length;
a++){
if(m[a] instanceof ZmItem){
e|=m[a].getDefaultDndAction(o)
}}
var d=document.getElementById(DwtId.DND_PLUS_ID);
if(e&&d){
var h=((e&ZmItem.DND_ACTION_COPY)!=0);
Dwt.setVisibility(d,h)
}}else{
c.doIt=false
}}}}else{
if(c.action==DwtDropEvent.DRAG_DROP){
if(t instanceof ZmFolder){
this._doMove(t,n)
}else{
var u=c.srcData.controller;
var r=(t instanceof Array)?t:[t];
if(appCtxt.multiAccounts&&!o&&!n.getAccount().isMain&&this._isMovingAcrossAccount(r,n)){
var s=appCtxt.getYesNoMsgDialog();
s.registerCallback(DwtDialog.YES_BUTTON,this._continueMovingAcrossAccount,this,[s,u,r,n]);
s.setMessage(ZmMsg.moveAcrossAccountWarning,DwtMessageDialog.WARNING_STYLE);
s.popup()
}else{
u._doMove(r,n,null,o)
}}}}};
ZmFolderTreeController.prototype._isMovingAcrossAccount=function(e,n){
for(var a=0;
a<e.length;
a++){
var o=e[a];
var t=o.getAccount();
if(t&&t!=n.getAccount()){
return true
}}
return false
};
ZmFolderTreeController.prototype._continueMovingAcrossAccount=function(a,e,t,i){
a.popdown();
e._doMove(t,i)
};
ZmTreeController.prototype._priorityFilterListener=function(t){
var e=appCtxt.getPriorityMessageFilterDialog();
ZmController.showDialog(e)
};
ZmFolderTreeController.prototype._shareFolderListener=function(e){
this._pendingActionData=this._getActionedOrganizer(e);
appCtxt.getSharePropsDialog().popup(ZmSharePropsDialog.NEW,this._pendingActionData)
};
ZmFolderTreeController.prototype._getMoveDialogTitle=function(){
return AjxMessageFormat.format(ZmMsg.moveFolder,this._pendingActionData.name)
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmSearchTreeController")){
ZmSearchTreeController=function(){
ZmFolderTreeController.call(this,ZmOrganizer.SEARCH);
this._listeners[ZmOperation.RENAME_SEARCH]=this._renameListener.bind(this)
};
ZmSearchTreeController.prototype=new ZmFolderTreeController;
ZmSearchTreeController.prototype.constructor=ZmSearchTreeController;
ZmSearchTreeController.prototype.isZmSearchTreeController=true;
ZmSearchTreeController.prototype.toString=function(){
return"ZmSearchTreeController"
};
ZmSearchTreeController.APP_JOIN_CHAR="-";
ZmSearchTreeController.prototype.show=function(i){
var o=i.overviewId;
if(!this._treeView[o]||i.forceCreate){
this._treeView[o]=this._setup(o)
}
var t=this.getDataTree(i.account);
if(t){
i.dataTree=t;
i.searchTypes={};
i.omit=i.omit||{};
i.omit[ZmFolder.ID_TRASH]=true;
i.omitParents=true;
var e=ZmOrganizer.OPEN_SETTING[this.type];
i.collapsed=!(!e||(appCtxt.get(e,null,i.account)!==false));
var a=this._opc.getOverview(o);
if(a&&a.showNewButtons){
this._setupOptButton(i)
}
this._treeView[o].set(i);
this._checkTreeView(o)
}
return this._treeView[o]
};
ZmSearchTreeController.prototype.getTreeStyle=function(){
return null
};
ZmSearchTreeController.prototype.resetOperations=function(a,t,i){
a.enableAll(true);
var e=appCtxt.getById(i);
a.enable(ZmOperation.EXPAND_ALL,(e.size()>0))
};
ZmSearchTreeController.prototype._getHeaderActionMenuOps=function(){
return[ZmOperation.EXPAND_ALL]
};
ZmSearchTreeController.prototype._getActionMenuOps=function(){
return[ZmOperation.DELETE_WITHOUT_SHORTCUT,ZmOperation.RENAME_SEARCH,ZmOperation.EDIT_PROPS,ZmOperation.MOVE,ZmOperation.EXPAND_ALL]
};
ZmSearchTreeController.prototype._getAllowedSubTypes=function(){
return ZmTreeController.prototype._getAllowedSubTypes.call(this)
};
ZmSearchTreeController.prototype._getNewDialog=function(){
return appCtxt.getNewSearchDialog()
};
ZmSearchTreeController.prototype._itemClicked=function(e){
if(e._showFoldersCallback){
e._showFoldersCallback.run();
return
}
appCtxt.getSearchController().redoSearch(e.search,false,{
getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML)}
)
};
ZmSearchTreeController.prototype._getMoveDialogTitle=function(){
return AjxMessageFormat.format(ZmMsg.moveSearch,this._pendingActionData.name)
};
ZmSearchTreeController.prototype._checkTreeView=function(o){
var t=this._treeView[o];
if(!o||!t){
return
}
var i=this._opc.getOverview(o).account;
var e=(appCtxt.multiAccounts&&!i.isMain)?(ZmOrganizer.getSystemId(ZmOrganizer.ID_ROOT,i)):ZmOrganizer.ID_ROOT;
var a=ZmOrganizer.HIDE_EMPTY[this.type]&&!t.getTreeItemById(e).getItemCount();
this._treeView[o].setVisible(!a)
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmShareTreeController")){
ZmShareTreeController=function(){
ZmTreeController.call(this,ZmOrganizer.SHARE)
};
ZmShareTreeController.prototype=new ZmTreeController;
ZmShareTreeController.prototype.constructor=ZmShareTreeController;
ZmShareTreeController.prototype.toString=function(){
return"ZmShareTreeController"
};
ZmShareTreeController.prototype.getDataTree=function(t){
var e=new ZmFolderTree(ZmOrganizer.SHARE);
var a={
id:ZmOrganizer.ID_ROOT,name:ZmMsg.sharedFoldersHeader};
e.root=ZmFolderTree.createFolder(ZmOrganizer.SHARE,null,a,e);
return e
};
ZmShareTreeController.prototype._createTreeView=function(e){
return new ZmShareTreeView(e)
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmOverviewController")){
ZmOverviewController=function(e){
ZmController.call(this,e);
this._overviewContainer={};
this._overview={};
this._controller={};
this._appOverviewId={}
};
ZmOverviewController.CONTROLLER={};
ZmOverviewController.DEFAULT_FOLDER_ID=ZmFolder.ID_INBOX;
ZmOverviewController.prototype=new ZmController;
ZmOverviewController.prototype.constructor=ZmOverviewController;
ZmOverviewController.prototype.toString=function(){
return"ZmOverviewController"
};
ZmOverviewController.prototype.createOverviewContainer=function(t,a){
t.parent=t.parent||this._shell;
t.controller=this;
t.id=ZmId.getOverviewContainerId(t.containerId);
var e=this._overviewContainer[t.containerId]=new ZmAccountOverviewContainer(t);
a.containerId=t.id;
e.initialize(a);
return e
};
ZmOverviewController.prototype.createOverview=function(t){
t.parent=t.parent||this._shell;
var e=this._overview[t.overviewId]=new ZmOverview(t,this);
return e
};
ZmOverviewController.prototype.getOverviewContainer=function(e){
var e=e||appCtxt.getCurrentAppName();
return this._overviewContainer[e]
};
ZmOverviewController.prototype.getOverview=function(e){
return this._overview[e]
};
ZmOverviewController.prototype.getTreeController=function(treeId,noCreate){
if(!treeId){
return null
}
if(!this._controller[treeId]&&!noCreate){
var className=ZmOverviewController.CONTROLLER[treeId];
if(className&&window[className]){
var treeControllerCtor=eval(ZmOverviewController.CONTROLLER[treeId]);
if(treeControllerCtor){
this._controller[treeId]=new treeControllerCtor(treeId)
}}}
return this._controller[treeId]
};
ZmOverviewController.prototype.getTreeData=function(e){
return e?appCtxt.getTree(e):null
};
ZmOverviewController.prototype.getTreeView=function(t,e){
if(!t||!e){
return null
}
if(!this.getOverview(t)){
return null
}
return this.getOverview(t).getTreeView(e)
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmSearchController")){
ZmSearchController=function(e){
ZmController.call(this,e);
this._inited=false;
this._contactSource=ZmItem.CONTACT;
this._results=null;
if(appCtxt.get(ZmSetting.SEARCH_ENABLED)){
this._setView()
}};
ZmSearchController.prototype=new ZmController;
ZmSearchController.prototype.constructor=ZmSearchController;
ZmSearchController.prototype.isZmSearchController=true;
ZmSearchController.prototype.toString=function(){
return"ZmSearchController"
};
ZmSearchController.QUERY_ISREMOTE="is:remote OR is:local";
ZmSearchController.prototype.getSearchToolbar=function(){
return this._searchToolBar
};
ZmSearchController.prototype.dateSearch=function(n,e){
n=n||new Date();
var i=AjxDateFormat.getDateInstance(AjxDateFormat.SHORT);
var a=i.format(n);
var t=appCtxt.getApp(ZmApp.MAIL).getGroupMailBy();
var o="date:"+a;
this.search({
query:o,types:[t],searchFor:e,origin:ZmId.SEARCH,userInitiated:true}
)
};
ZmSearchController.prototype.fromSearch=function(e){
var t=appCtxt.getApp(ZmApp.MAIL).getGroupMailBy();
var a=AjxUtil.map(AjxUtil.toArray(e),function(i){
return"from:"+((i&&i.isAjxEmailAddress)?i.getAddress():i)
}
);
this.search({
query:a.join(" OR "),types:[t],origin:ZmId.SEARCH,userInitiated:true}
)
};
ZmSearchController.prototype.toSearch=function(e){
var t=appCtxt.getApp(ZmApp.MAIL).getGroupMailBy();
var a=AjxUtil.map(AjxUtil.toArray(e),function(o){
return"tocc:"+((o&&o.isAjxEmailAddress)?o.getAddress():o)
}
);
var i={
types:[t],origin:ZmId.SEARCH,userInitiated:true,query:a.join(" OR ")};
if(this.currentSearch&&this.currentSearch.folderId==ZmFolder.ID_SENT){
if(a.length>1){
i.query="("+i.query+")"
}
i.query="in:sent AND "+i.query
}
this.search(i)
};
ZmSearchController.prototype.setSearchField=function(e){
if(appCtxt.get(ZmSetting.SHOW_SEARCH_STRING)&&this._searchToolBar){
this._searchToolBar.setSearchFieldValue(e)
}else{
this._currentQuery=e
}};
ZmSearchController.prototype.getSearchFieldValue=function(){
return this._searchToolBar?this._searchToolBar.getSearchFieldValue():""
};
ZmSearchController.prototype.setEnabled=function(e){
if(this._searchToolBar){
this._searchToolBar.setEnabled(e)
}};
ZmSearchController.prototype.setDefaultSearchType=function(e){
if(!this._searchToolBar){
return
}
var t=this._searchToolBar.getButton(ZmSearchToolBar.TYPES_BUTTON).getMenu();
t.checkItem(ZmOperation.MENUITEM_ID,e);
this._searchMenuListener(null,e,true)
};
ZmSearchController.prototype._setView=function(){
this.searchPanel=new DwtComposite({
parent:this._container,className:"SearchPanel",posStyle:Dwt.ABSOLUTE_STYLE}
);
this._searchToolBar=new ZmMainSearchToolBar({
parent:this.searchPanel,id:ZmId.SEARCH_TOOLBAR}
);
this._createTabGroup();
this._tabGroup.addMember(this._searchToolBar.getChildren());
this._searchToolBar.registerEnterCallback(this._toolbarSearch.bind(this));
this._searchToolBar.addSelectionListener(ZmSearchToolBar.SEARCH_BUTTON,this._searchButtonListener.bind(this))
};
ZmSearchController.prototype._addMenuListeners=function(s){
var a=this._searchMenuListener.bind(this);
var t=s.getItems();
for(var o=0;
o<t.length;
o++){
var n=t[o];
n.addSelectionListener(a);
var e=n.getData(ZmOperation.MENUITEM_ID);
if(e==ZmId.SEARCH_MAIL){
n.setChecked(true,true)
}}};
ZmSearchController.prototype.search=function(e){
if(e.query&&(e.query.indexOf("$set:")==0||e.query.indexOf("$cmd:")==0)){
appCtxt.getClientCmdHandler().execute((e.query.substr(5)),this);
return
}
e.searchAllAccounts=this.searchAllAccounts;
var t=this._handleResponseSearch.bind(this,e.callback);
this._doSearch(e,e.noRender,t,e.errorCallback)
};
ZmSearchController.prototype._handleResponseSearch=function(t,e){
if(t){
t.run(e)
}};
ZmSearchController.prototype.redoSearch=function(i,e,o,s,t){
var n={};
n.query=i.query;
n.queryHint=i.queryHint;
n.types=i.types;
n.forceTypes=i.forceTypes;
n.sortBy=i.sortBy;
n.offset=i.offset;
n.limit=i.limit;
n.fetch=i.fetch;
n.searchId=i.searchId;
n.lastSortVal=i.lastSortVal;
n.endSortVal=i.endSortVal;
n.lastId=i.lastId;
n.soapInfo=i.soapInfo;
n.accountName=i.accountName;
n.searchFor=this._searchFor;
n.idsOnly=i.idsOnly;
n.inDumpster=i.inDumpster;
n.userInitiated=i.userInitiated;
n.sessionId=i.sessionId;
n.isEmpty=i.isEmpty;
n.markRead=i.markRead;
if(o){
for(var a in o){
n[a]=o[a]
}}
this._doSearch(n,e,s,t)
};
ZmSearchController.prototype.resetSearchAllAccounts=function(){
var e=this.searchAllAccounts&&this._searchToolBar.getButton(ZmSearchToolBar.TYPES_BUTTON);
var o=e&&e.getMenu();
var i=o&&o.getItemById(ZmOperation.MENUITEM_ID,ZmId.SEARCH_ALL_ACCOUNTS);
if(i){
i.setChecked(false,true);
var a=o.getSelectedItem();
var t=this._inclSharedItems?this._getSharedImage(a):a.getImage();
e.setImage(t);
this.searchAllAccounts=false
}};
ZmSearchController.prototype.resetSearchToolbar=function(){
var e=this._searchToolBar.getButton(ZmSearchToolBar.TYPES_BUTTON);
var t=e?e.getMenu().getItemById(ZmOperation.MENUITEM_ID,ZmId.SEARCH_GAL):null;
if(t){
t.setVisible(appCtxt.getActiveAccount().isZimbraAccount)
}};
ZmSearchController.prototype.getTypeFromSearchFor=function(e){
return e===ZmId.SEARCH_MAIL?appCtxt.getApp(ZmApp.MAIL).getGroupMailBy():e
};
ZmSearchController.prototype.getSearchForFromType=function(e){
return(e===ZmItem.MSG||e===ZmItem.CONV)?ZmId.SEARCH_MAIL:e
};
ZmSearchController.prototype.updateOverview=function(e){
var t=e||appCtxt.getCurrentSearch();
var r,a;
if(t&&(t.isSimple()||t.searchId)){
if(t.searchId){
r=this._getNormalizedId(t.searchId);
a=ZmOrganizer.SEARCH
}else{
if(t.folderId){
r=this._getNormalizedId(t.folderId);
var o=appCtxt.getFolderTree();
var i=o&&o.getById(r);
a=i?i.type:ZmOrganizer.FOLDER;
if(t.searchFor==ZmItem.TASK){
a=ZmOrganizer.TASKS
}}else{
if(t.tagId){
r=this._getNormalizedId(t.tagId);
a=ZmOrganizer.TAG
}}}
if(a){
var s=appCtxt.getCurrentApp();
var n=s&&s.getOverview();
if(n){
n.setSelected(r,a)
}}}};
ZmSearchController.prototype._getSuitableSortBy=function(t){
var i;
var e;
switch(t){
case ZmItem.CONV:e=ZmId.VIEW_CONVLIST;
break;
case ZmItem.MSG:e=ZmId.VIEW_TRAD;
break;
case ZmItem.CONTACT:e=ZmId.VIEW_CONTACT_SIMPLE;
break;
case ZmItem.APPT:e=ZmId.VIEW_CAL;
break;
case ZmItem.TASK:e=ZmId.VIEW_TASKLIST;
break;
case ZmId.SEARCH_GAL:e=ZmId.VIEW_CONTACT_SIMPLE;
break;
case ZmItem.BRIEFCASE_ITEM:e=ZmId.VIEW_BRIEFCASE_DETAIL;
break
}
if(e){
i=appCtxt.get(ZmSetting.SORTING_PREF,e)
}
var a=this._searchToolBar.getSearchFieldValue();
if(a&&a.length>0){
if(i===ZmSearch.RCPT_ASC||i===ZmSearch.RCPT_DESC){
i=i===ZmSearch.RCPT_ASC?ZmSearch.DATE_ASC:ZmSearch.DATE_DESC
}else{
if(i===ZmSearch.FLAG_ASC||i===ZmSearch.FLAG_DESC){
i=i===ZmSearch.FLAG_ASC?ZmSearch.DATE_ASC:ZmSearch.DATE_DESC
}else{
if(i===ZmSearch.ATTACH_ASC||i===ZmSearch.ATTACH_DESC){
i=i===ZmSearch.ATTACH_ASC?ZmSearch.DATE_ASC:ZmSearch.DATE_DESC
}else{
if(i===ZmSearch.PRIORITY_ASC||i===ZmSearch.PRIORITY_DESC){
i=i===ZmSearch.PRIORITY_ASC?ZmSearch.DATE_ASC:ZmSearch.DATE_DESC
}}}}}
return i
};
ZmSearchController.prototype._doSearch=function(i,d,u,s){
var e=this._searchFor=i.searchFor||this._searchFor||ZmSearchToolBar.MENU_ITEMS[0];
appCtxt.notifyZimlets("onSearch",[i.query]);
if(!i.skipUpdateSearchToolbar&&this._searchToolBar){
var c=(appCtxt.get(ZmSetting.SHOW_SEARCH_STRING)||i.userText)?i.query:null;
this._searchToolBar.setSearchFieldValue(c||"");
if(appCtxt.multiAccounts&&i.userText&&this.searchAllAccounts){
appCtxt.getCurrentApp().getOverviewContainer().deselectAll()
}}
var r=i.types;
var h=!r?e:AjxUtil.toArray(r)[0];
e=this.getSearchForFromType(h);
if(!i.forceTypes){
h=this.getTypeFromSearchFor(e)
}
var r=AjxVector.fromArray([h]);
if(e==ZmId.SEARCH_MAIL){
i=appCtxt.getApp(ZmApp.MAIL).getSearchParams(i)
}
if(e==ZmItem.TASK){
var a=AjxDispatcher.run("GetTaskListController");
i.allowableTaskStatus=a&&a.getAllowableTaskStatus()
}
if(i.searchAllAccounts&&!i.queryHint){
i.queryHint=appCtxt.accountList.generateQuery(null,r);
i.accountName=appCtxt.accountList.mainAccount.name
}else{
if(i.inclSharedItems||this._inclSharedItems){
i.queryHint=ZmSearchController.generateQueryForShares(h)
}}
i.contactSource=!i.noGal&&(h===ZmItem.CONTACT||h===ZmId.SEARCH_GAL)?this._contactSource:null;
if(i.contactSource==ZmId.SEARCH_GAL){
i.expandDL=true
}
i.sortBy=i.sortBy||this._getSuitableSortBy(h);
i.types=r;
var p=new ZmSearch(i);
if(e===ZmId.SEARCH_MAIL&&(i.inDumpster||(!i.isViewSwitch&&p.folderId&&p.folderId==ZmFolder.ID_DRAFTS))){
p.types=AjxVector.fromArray([ZmItem.MSG]);
p.isDefaultToMessageView=true
}
var m=this._handleResponseDoSearch.bind(this,p,d,u,i.noUpdateOverview);
var t=this._handleOfflineDoSearch.bind(this,p,m);
if(p.folderId==ZmFolder.ID_OUTBOX){
var l=true
}
if(!s){
s=this._handleErrorDoSearch.bind(this,p);
if(!i.errorCallback){
i.errorCallback=s
}}
p.calController=null;
if(e==ZmItem.APPT&&!i.forceSearch&&!i.inDumpster){
var f,o;
if(p.userInitiated&&ZmApp.SEARCH_RESULTS_TAB[ZmApp.CALENDAR]){
f=appCtxt.getApp(ZmApp.SEARCH).getSearchResultsController(p.sessionId,ZmApp.CALENDAR);
o=f.getCurrentViewId()
}
var n=AjxDispatcher.run("GetCalController",o,f);
if(n&&h===ZmItem.APPT){
p.calController=n;
n.handleUserSearch(i,m)
}else{
p.execute({
offlineCache:i&&i.offlineCache,callback:m,errorCallback:s,offlineCallback:t,offlineRequest:l}
)
}}else{
p.execute({
offlineCache:i&&i.offlineCache,callback:m,errorCallback:s,offlineCallback:t,offlineRequest:l}
)
}};
ZmSearchController.prototype._handleResponseDoSearch=function(i,t,n,o,e){
var a=e&&e.getResponse();
if(!a){
return
}
if(!a.type){
a.type=i.types.get(0)
}
this.currentSearch=i;
if(!t){
this._showResults(a,i,o)
}
if(n){
n.run(e)
}};
ZmSearchController.prototype._handleOfflineDoSearch=function(e,a){
if(e.types&&e.types.replaceObject(ZmItem.CONV,ZmItem.MSG)){
e.isDefaultToMessageView=true
}
var t=this._handleOfflineResponseDoSearch.bind(this,e,a);
ZmOfflineDB.search(e,t)
};
ZmSearchController.prototype._showResults=function(o,i,s){
this._results=o=(o&&o.isZmSearchResult)?o:new ZmSearchResult(i);
if(appCtxt.get(ZmSetting.SAVED_SEARCHES_ENABLED)){
var n=this._searchToolBar&&this._searchToolBar.getButton(ZmSearchToolBar.SAVE_BUTTON);
if(n){
n.setEnabled(this._contactSource!=ZmId.SEARCH_GAL)
}}
var r=i.calController?appCtxt.getApp(ZmApp.CALENDAR):appCtxt.getApp(ZmItem.APP[o.type])||appCtxt.getCurrentApp();
var t=r.getName();
if(i.userInitiated&&ZmApp.SEARCH_RESULTS_TAB[t]){
var e=(i.calController&&i.calController.searchResultsController)||appCtxt.getApp(ZmApp.SEARCH).getSearchResultsController(i.sessionId,t);
e.show(o,i.calController);
this._searchToolBar.setSearchFieldValue("")
}else{
if(r.showSearchResults){
var a=this._handleLoadShowResults.bind(this,o,i,s);
r.currentSearch=i;
r.currentQuery=i.query;
r.showSearchResults(o,a)
}}};
ZmSearchController.prototype.openNewSearchTab=function(){
this._toolbarSearch({
isEmpty:true,origin:ZmId.SEARCH}
)
};
ZmSearchController.prototype._handleLoadShowResults=function(t,e,a){
appCtxt.setCurrentList(t.getResults(t.type));
if(!a){
this.updateOverview(e)
}};
ZmSearchController.prototype._handleErrorDoSearch=function(t,e){
if(e.code==ZmCsfeException.MAIL_NO_SUCH_TAG||e.code==ZmCsfeException.MAIL_QUERY_PARSE_ERROR||e.code==ZmCsfeException.MAIL_TOO_MANY_TERMS||(e.code==ZmCsfeException.MAIL_NO_SUCH_FOLDER&&!(e.data.itemId&&e.data.itemId.length))){
var a=e.getErrorMsg();
appCtxt.setStatusMsg(a,ZmStatusView.LEVEL_WARNING);
return true
}
return false
};
ZmSearchController.generateQueryForShares=function(r,n){
var l=window.parentAppCtxt||window.appCtxt;
var s=[];
var a=l.getApp(ZmItem.APP[r]);
if(!a){
return null
}
var e=a.getRemoteFolderIds(n);
for(var o=0;
o<e.length;
o++){
var t=e[o];
var h=AjxUtil.isNumeric(t)?t:['"',t,'"'].join("");
s.push("inid:"+h)
}
if(s.length>0){
s.push("is:local");
return s.join(" OR ")
}
return null
};
ZmSearchController.prototype._searchButtonListener=function(e){
this._toolbarSearch({
ev:e,zimletEvent:"onSearchButtonClick",origin:ZmId.SEARCH}
)
};
ZmSearchController.prototype._toolbarSearch=function(i){
var e=i.searchFor||this._searchToolBar.getSearchType();
if(e&&e.listener){
e.listener.run(i.ev)
}else{
var o=!i.isEmpty?i.query||this._searchToolBar.getSearchFieldValue():"";
var t=(o.length>0);
if(o){
this._currentQuery=null
}else{
o=this._currentQuery||""
}
appCtxt.notifyZimlets(i.zimletEvent,[o]);
var a={
query:o,userText:t,userInitiated:true,getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML),searchFor:e,skipUpdateSearchToolbar:i.skipUpdateSearchToolbar,origin:i.origin,sessionId:i.sessionId,errorCallback:i.errorCallback,sortBy:i.sortBy,isEmpty:i.isEmpty||!o};
this.search(a)
}};
ZmSearchController.prototype._searchMenuListener=function(r,e,n){
var i=this._searchToolBar.getButton(ZmSearchToolBar.TYPES_BUTTON);
if(!i){
return
}
var t=i.getMenu();
var h=r?r.item:(t.getItemById(ZmOperation.MENUITEM_ID,e));
if(!h||(!!(h._style&DwtMenuItem.SEPARATOR_STYLE))){
return
}
e=h.getData(ZmOperation.MENUITEM_ID);
var a=t.getSelectedItem();
var c=t.getItemById(ZmOperation.MENUITEM_ID,ZmId.SEARCH_SHARED);
if(e==ZmId.SEARCH_GAL){
this._contactSource=ZmId.SEARCH_GAL;
if(c){
c.setChecked(false,true);
c.setEnabled(false)
}}else{
if(c){
if(e==ZmItem.APPT||e==ZmId.SEARCH_CUSTOM){
if(this._sharedMenuItemChecked==null){
this._sharedMenuItemChecked=c.getChecked()
}
c.setChecked(false,true);
c.setEnabled(false)
}else{
c.setEnabled(true);
if(this._sharedMenuItemChecked){
c.setChecked(true,true)
}
this._sharedMenuItemChecked=null
}}
this._contactSource=ZmItem.CONTACT
}
this._inclSharedItems=c&&c.getChecked();
var o=t.getItemById(ZmOperation.MENUITEM_ID,ZmId.SEARCH_ALL_ACCOUNTS);
if(o){
if(e==ZmItem.APPT){
this.resetSearchAllAccounts();
o.setEnabled(false)
}else{
o.setEnabled(true);
this.searchAllAccounts=o&&o.getChecked()
}}
if(e==ZmId.SEARCH_SHARED){
var s=this.searchAllAccounts?o.getImage():a.getImage();
if(this._inclSharedItems){
s=this._getSharedImage(a)
}
i.setImage(s)
}else{
if(e==ZmId.SEARCH_ALL_ACCOUNTS){
var s=(this.searchAllAccounts&&!this._inclSharedItems)?h.getImage():(this._inclSharedItems)?this._getSharedImage(a):a.getImage();
i.setImage(s)
}else{
this._searchFor=e;
var s=h.getImage();
if(this._inclSharedItems){
s=this._getSharedImage(a)
}else{
if(this.searchAllAccounts){
s=o.getImage()
}}
i.setImage(s)
}}
var l=ZmMsg[ZmSearchToolBar.TT_MSG_KEY[e]];
if(e!=ZmId.SEARCH_SHARED&&e!=ZmId.SEARCH_ALL_ACCOUNTS){
i.setToolTipContent(l);
i.setAttribute("aria-label",l)
}
if(!n){
setTimeout(this._searchToolBar.focus.bind(this._searchToolBar),10)
}};
ZmSearchController.prototype._getSharedImage=function(e){
var t=e&&e.getData(ZmOperation.MENUITEM_ID);
return(t&&ZmSearchToolBar.SHARE_ICON[t])?ZmSearchToolBar.SHARE_ICON[t]:ZmSearchToolBar.ICON[t]
};
ZmSearchController.prototype._getNormalizedId=function(a){
var t=a;
var e=appCtxt.getActiveAccount();
if(!e.isMain&&a.indexOf(":")==-1){
t=e.id+":"+a
}
return t
};
ZmSearchController.prototype._handleOfflineResponseDoSearch=function(a,o,t){
if(a.sortBy===ZmSearch.DATE_DESC){
t.sort(function(s,n){
return n.d-s.d
}
)
}else{
if(a.sortBy===ZmSearch.DATE_ASC){
t.sort(function(s,n){
return s.d-n.d
}
)
}}
var e=new ZmSearchResult(a);
if(a.searchFor===ZmId.SEARCH_MAIL||a.parsedSearchFor===ZmId.SEARCH_MAIL){
a.types=new AjxVector([ZmItem.MSG]);
e.set({
m:t}
)
}else{
if(a.searchFor===ZmItem.CONTACT||a.contactSource===ZmItem.CONTACT){
e.set({
cn:t}
)
}}
var i=new ZmCsfeResult(e);
o(i);
if(a.folderId==ZmFolder.ID_OUTBOX||a.folderId==ZmFolder.ID_DRAFTS){
ZmOffline.updateFolderCountCallback(a.folderId,t.length)
}};
ZmSearchController.prototype._addOfflineDrafts=function(a,e){
var i=this._addOfflineDraftsCallback.bind(this,a,e);
var t={
methodName:"SaveDraftRequest"};
ZmOfflineDB.getItemInRequestQueue(t,i,i)
};
ZmSearchController.prototype._addOfflineDraftsCallback=function(a,e,t){
var i=ZmOffline.generateMsgResponse(t);
this._handleResponseDoIndexedDBSearch(a,[].concat(e).concat(i))
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmSearchResultsController")){
ZmSearchResultsController=function(e,i,t,a){
ZmController.apply(this,arguments);
this._initialize()
};
ZmSearchResultsController.prototype=new ZmController;
ZmSearchResultsController.prototype.constructor=ZmSearchController;
ZmSearchResultsController.prototype.isZmSearchResultsController=true;
ZmSearchResultsController.prototype.toString=function(){
return"ZmSearchResultsController"
};
ZmSearchResultsController.DEFAULT_TAB_TEXT=ZmMsg.search;
ZmSearchResultsController.getDefaultViewType=function(){
return ZmId.VIEW_SEARCH_RESULTS
};
ZmSearchResultsController.prototype.getDefaultViewType=ZmSearchResultsController.getDefaultViewType;
ZmSearchResultsController.prototype.show=function(t,a){
var e=t.type;
t.search.sessionId=this.sessionId;
var i=this._resultsApp=appCtxt.getApp(ZmItem.APP[e])||appCtxt.getCurrentApp();
if(!a){
i.showSearchResults(t,this._displayResults.bind(this,t.search),this)
}else{
this._displayResults(t.search,a)
}
appCtxt.searchAppName=i.getName();
this._curSearch=t.search;
this.inactive=true
};
ZmSearchResultsController.prototype.showOverview=function(e){
var i=this._resultsApp.getOverview(),t=appCtxt.getAppViewMgr();
if(i){
var a={};
a[ZmAppViewMgr.C_TREE]=e?i:this._filterPanel;
t.setViewComponents(this.viewId,a,true);
t.displayComponent(ZmAppViewMgr.C_TREE_FOOTER,e,true)
}};
ZmSearchResultsController.prototype._initialize=function(){
this._toolbar=new ZmSearchResultsToolBar({
parent:this._container,controller:this,id:DwtId.makeId(ZmId.SEARCHRESULTS_TOOLBAR,this._currentViewId),noMenuButton:true}
);
this._toolbar.getButton(ZmSearchToolBar.SEARCH_BUTTON).addSelectionListener(this._searchListener.bind(this));
var e=this._toolbar.getButton(ZmSearchToolBar.SAVE_BUTTON);
if(e){
e.addSelectionListener(this._saveListener.bind(this))
}
this._toolbar.registerEnterCallback(this._searchListener.bind(this));
this.isPinned=false
};
ZmSearchResultsController.prototype._displayResults=function(h,s){
var n=s.getApp().getName();
if(!this._filterPanel||this._filterPanel._resultsApp!==n){
this._filterPanel=new ZmSearchResultsFilterPanel({
parent:this._container,controller:this,id:DwtId.makeId(ZmId.SEARCHRESULTS_PANEL,this._currentViewId),resultsApp:n}
)
}
this._resultsController=s;
var e={};
e[ZmAppViewMgr.C_TREE]=this._filterPanel;
e[ZmAppViewMgr.C_TOOLBAR_TOP]=s.getCurrentToolbar();
e[ZmAppViewMgr.C_APP_CONTENT]=s.getViewMgr?s.getViewMgr():s.getCurrentView();
if(appCtxt.getCurrentViewId().indexOf(this._currentViewId)!==-1){
appCtxt.getAppViewMgr().setViewComponents(this._currentViewId,e,true)
}else{
var o={};
o[ZmAppViewMgr.CB_POST_REMOVE]=this._postRemoveCallback.bind(this);
o[ZmAppViewMgr.CB_POST_SHOW]=this._postShowCallback.bind(this);
e[ZmAppViewMgr.C_SEARCH_RESULTS_TOOLBAR]=this._toolbar;
this._app.createView({
viewId:this._currentViewId,viewType:this._currentViewType,elements:e,callbacks:o,controller:this,hide:[ZmAppViewMgr.C_TREE_FOOTER],tabParams:this._getTabParams()}
);
this._app.pushView(this._currentViewId);
this._filterPanel.reset();
if(!this._button){
this._button=appCtxt.getAppChooser().getButton(this.tabId);
Dwt.addClass(this._button.getHtmlElement(),"SearchTabButton");
this._button.addSelectionListener(this._pinnedListener.bind(this))
}}
if(h&&h.query){
this._filterPanel.resetBasicFiltersToQuery(h.query)
}
if(h&&h.origin==ZmId.SEARCH){
this._toolbar.setSearch(h)
}
var a=s.getCurrentSearchResults&&s.getCurrentSearchResults();
var t=(a&&a.getResults())||s.getList();
var l=t&&t.size&&t.size();
var i=(t&&t.hasMore&&t.hasMore())?"+":"";
var r=l?AjxMessageFormat.format(ZmMsg.searchResultsLabel,[l,i]):h.isEmpty?ZmMsg.searchResultsEnterSearch:ZmMsg.searchResultsLabelNone;
this._toolbar.setLabel(r,false);
if(s&&s.updateTimeIndicator){
s.updateTimeIndicator()
}
setTimeout(this._toolbar.focus.bind(this._toolbar),100)
};
ZmSearchResultsController.prototype._postHideCallback=function(){};
ZmSearchResultsController.prototype._postRemoveCallback=function(){
this._app.deleteSessionController({
appName:this._resultsApp.getName(),controllerClass:"ZmSearchResultsController",sessionId:this.sessionId}
)
};
ZmSearchResultsController.prototype._postShowCallback=function(){
if(appCtxt.isWebClientOfflineSupported){
this.getApp().resetWebClientOfflineOperations(this)
}};
ZmSearchResultsController.prototype._getTabParams=function(){
return{
id:this.tabId,leftImage:"Pin",rightImage:"CloseGray",rightHoverImage:"Close",text:ZmSearchResultsController.DEFAULT_TAB_TEXT,textPrecedence:90,tooltip:ZmSearchResultsController.DEFAULT_TAB_TEXT,style:DwtLabel.IMAGE_BOTH}
};
ZmSearchResultsController.prototype._searchListener=function(i,r){
var a=this._toolbar,t=a&&a._searchField.getInputElement();
if(t&&a._acList){
a._settingSearch=true;
a._acList._complete(t);
a._settingSearch=false
}
var e=appCtxt.getCurrentViewId();
var s=e?appCtxt.get(ZmSetting.SORTING_PREF,e):null;
var o=this._toolbar.getSearchFieldValue();
var n={
ev:i,zimletEvent:r||"onSearchButtonClick",query:o,isEmpty:!o,sessionId:this.sessionId,skipUpdateSearchToolbar:true,origin:ZmId.SEARCHRESULTS,searchFor:this._curSearch&&this._curSearch.searchFor,sortBy:s,errorCallback:this._errorCallback.bind(this)};
a.setLabel(ZmMsg.searching);
appCtxt.getSearchController()._toolbarSearch(n)
};
ZmSearchResultsController.prototype._errorCallback=function(e){
var t=ZmCsfeException.getErrorMsg(e.code);
t=t||ZmMsg.unknownError;
this._toolbar.setLabel(t,true);
return true
};
ZmSearchResultsController.prototype._saveListener=function(t){
var e=appCtxt.getOverviewController().getTreeController(ZmOrganizer.SEARCH);
if(!e._newCb){
e._newCb=e._newCallback.bind(e)
}
var a={
search:this._curSearch,appName:this._resultsApp.getName()};
ZmController.showDialog(e._getNewDialog(),e._newCb,a)
};
ZmSearchResultsController.prototype._pinnedListener=function(t){
if(!Dwt.hasClass(t.target,"ImgPin")&&!Dwt.hasClass(t.target,"ImgUnpin")){
return
}
this.isPinned=!this.isPinned;
var e=appCtxt.getAppChooser().getButton(this.tabId);
e.setImage(this.isPinned?"Unpin":"Pin",DwtLabel.LEFT)
};
ZmSearchResultsController.prototype._closeListener=function(e){
appCtxt.getAppViewMgr().popView(false,this.getCurrentViewId())
};
ZmSearchResultsController.prototype.addSearchTerm=function(a,t,e){
return this._toolbar.addSearchTerm(a,t,e)
};
ZmSearchResultsController.prototype.removeSearchTerm=function(t,e){
this._toolbar.removeSearchTerm(t,e)
};
ZmSearchResultsController.prototype.getSearchTerms=function(a,t){
var e=this._toolbar._searchField.getAddresses();
var i=AjxUtil.map(e,function(n,o){
return new ZmSearchToken(n)
}
);
return i
}
}
if(AjxPackage.define("zimbraMail.share.controller.ZmActionController")){
ZmActionController=function(){
this._actionStack=new ZmActionStack(1);
this._statusTransitions=ZmActionController._substituteTransitions(appCtxt.getSkinHint("toast","transitions")||ZmToast.DEFAULT_TRANSITIONS);
this._outsideListener=new AjxListener(this,ZmActionController.prototype._outsideMouseDownListener);
appCtxt.getKeyboardMgr().addListener(DwtEvent.ONKEYDOWN,this._outsideListener)
};
ZmActionController.prototype.toString=function(){
return"ZmActionController"
};
ZmActionController.prototype.actionPerformed=function(t){
var e=this._actionStack.logAction(t);
if(e){
this.dismiss();
e.onComplete(new AjxCallback(this,this._handleActionComplete))
}
return e
};
ZmActionController.prototype._handleActionComplete=function(e){
this._active=true
};
ZmActionController.prototype.getUndoLink=function(t,a){
if(t instanceof ZmAction){
var e=ZmActionController._registerCallback(new AjxCallback(this,this.undoCurrent));
return["<a onclick='ZmActionController.callRegisteredCallback(",e,")' href='javascript:;' class='undo'>",a||ZmMsg.undo,"</a>"].join("")
}else{
return""
}};
ZmActionController.prototype.getStatusTransitions=function(){
return this._statusTransitions
};
ZmActionController.prototype.undo=function(e){
if(this._active){
this.dismiss();
e.undo()
}};
ZmActionController.prototype.undoCurrent=function(){
if(this._actionStack.canUndo()){
if(this._actionStack.actionIsComplete()){
if(this._active){
this.dismiss()
}
this._actionStack.undo()
}else{
this._actionStack.onComplete(new AjxCallback(this,function(e){
setTimeout(AjxCallback.simpleClosure(this.undo,this,e),0)
}
))
}}};
ZmActionController.prototype.onPopup=function(){
var e=appCtxt.getOutsideMouseEventMgr();
var t={
id:"ZmActionController",obj:this,elementId:ZmId.TOAST,outsideListener:this._outsideListener};
e.startListening(t)
};
ZmActionController.prototype.dismiss=function(){
appCtxt.dismissStatusMsg(true);
var e=appCtxt.getOutsideMouseEventMgr();
e.stopListening("ZmActionController");
this._active=false
};
ZmActionController._substituteTransitions=function(o){
var a=[];
var t=false;
for(var e=0;
e<o.length;
e++){
var n=o[e];
if(n){
if(n.type==ZmToast.PAUSE.type){
if(!t){
t=true;
a.push(ZmToast.HOLD)
}}else{
a.push(n)
}}}
return a
};
ZmActionController._registeredCallbacks=[];
ZmActionController._registerCallback=function(t){
var e=ZmActionController._registeredCallbacks.length;
ZmActionController._registeredCallbacks[e]=t;
return e
};
ZmActionController.callRegisteredCallback=function(t){
var e=ZmActionController._registeredCallbacks[t];
if(e){
if(e instanceof AjxCallback){
e.run()
}else{
if(AjxUtil.isFunction(e)){
e()
}}}};
ZmActionController.prototype._outsideMouseDownListener=function(e){
this.dismiss()
}
}
if(AjxPackage.define("zimbraMail.im.model.ZmRoster")){
ZmRoster=function(e){
ZmModel.call(this,ZmEvent.S_ROSTER);
this._gateways={
byService:{}
,byDomain:{}
,array:[]};
this._notificationBuffer=[];
this._imApp=e
};
ZmRoster.prototype=new ZmModel;
ZmRoster.prototype.constructor=ZmRoster;
ZmRoster.F_PRESENCE="ZmRoster.presence";
ZmRoster.NOTIFICATION_FOO_TIMEOUT=10000;
ZmRoster.GATEWAY_EVENT="gateway list";
ZmRoster.prototype.toString=function(){
return"ZmRoster"
};
ZmRoster.prototype.getPrivacyList=function(){
return this._privacyList=this._privacyList||new ZmImPrivacyList(this)
};
ZmRoster.prototype.getChatList=function(){
if(!this._chatList){
this._chatList=new ZmChatList(this)
}
return this._chatList
};
ZmRoster.prototype.getMyAddress=function(){
return ZmImApp.INSTANCE.getService().getMyAddress()
};
ZmRoster.prototype.getRosterItem=function(a,e){
if(!a){
return null
}
a=a.toLowerCase();
var t=this.getRosterItemList().getByAddr(a);
if(t){
return t
}
if(e){
a=ZmImAddress.parse(a);
t=a?this.getRosterItemList().getByAddr(a.screenName):null;
if(t){
return t
}
if(a){
a=this.makeServerAddress(a.screenName,a.service);
if(a){
return this.getRosterItemList().getByAddr(a)
}}}};
ZmRoster.prototype.getRosterItemList=function(){
if(!this._rosterItemList){
this._rosterItemList=new ZmRosterItemList()
}
return this._rosterItemList
};
ZmRoster.prototype.getPresence=function(){
if(!this._rosterPresence){
this._rosterPresence=new ZmRosterPresence()
}
return this._rosterPresence
};
ZmRoster.prototype.notifyPresence=function(){
var e={};
e[ZmRoster.F_PRESENCE]=this.getPresence();
this._notify(ZmEvent.E_MODIFY,{
fields:e}
)
};
ZmRoster.prototype.reload=function(t){
this.getRosterItemList().removeAllItems();
var a=new AjxCallback(this,this._handleResponseReload);
var e={
asyncMode:true,noBusyOverlay:t};
ZmImApp.INSTANCE.getService().getRoster(a,e)
};
ZmRoster.prototype._handleResponseReload=function(r){
if(!r){
return
}
var s=this.getRosterItemList();
if(r.items&&r.items.item){
var t=r.items.item;
if(t.length){
var e=new Array(t.length);
for(var a=0;
a<t.length;
a++){
var n=t[a];
if(n.subscription=="TO"||n.subscription=="BOTH"){
var o=new ZmRosterPresence();
o.setFromJS(n.presence);
e[a]=new ZmRosterItem(n.addr,s,n.name,o,n.groups)
}}
s.addItems(e)
}}
if(r.presence){
if(/XA|AWAY/.test(r.presence.show)){
r.presence.show="ONLINE";
this.setPresence("ONLINE")
}
this.getPresence().setFromJS(r.presence);
this.notifyPresence()
}
ZmImApp.INSTANCE.getService().startIgnoreNotify()
};
ZmRoster.prototype.createRosterItem=function(a,t,e){
ZmImApp.INSTANCE.getService().createRosterItem(a,t,e)
};
ZmRoster.prototype.setPresence=function(e,t,a,i){
ZmImApp.INSTANCE.getService().setPresence(e,t,a,i);
ZmImApp.INSTANCE.getService().startIgnoreNotify()
};
ZmRoster.prototype.pushNotification=function(e){
if(!this._gateways){
this._notificationBuffer.push(e)
}else{
this.handleNotification(e)
}};
ZmRoster.prototype.refresh=function(){
this._requestGateways(new AjxCallback(this,this.reload))
};
ZmRoster.prototype.handleNotification=function(e){
ZmImApp.INSTANCE.getService().handleNotification(e)
};
ZmRoster.prototype.getConferenceTree=function(){
AjxDispatcher.require(["IMConference"]);
if(!this._conferenceTree){
this._conferenceTree=new ZmTree(ZmOrganizer.CONFERENCE_ITEM);
this._conferenceTree.root=new ZmOrganizer({
tree:this._conferenceTree}
)
}
return this._conferenceTree
};
ZmRoster.prototype.getConferenceServices=function(i,a){
var e=this.getConferenceTree();
if(!e.root.children.size()||a){
var t=new AjxCallback(this,this._handleResponceGetConferenceServices,[i]);
ZmImApp.INSTANCE.getService().getConferenceServices(t)
}else{
i.run(e.root.children.getArray())
}};
ZmRoster.prototype._handleResponceGetConferenceServices=function(h,s){
var t=this.getConferenceTree();
var a=t.root;
for(var n=0,r=s.length;
n<r;
n++){
var o={
id:s[n].addr,tree:t,name:s[n].name,parent:a};
var e=new ZmConferenceService(o);
a.children.add(e)
}
h.run(a.children.getArray())
};
ZmRoster.prototype.joinChatRequest=function(e,i){
var t=AjxSoapDoc.create("IMJoinConferenceRoomRequest","urn:zimbraIM");
var a=t.getMethod();
a.setAttribute("thread",e);
a.setAttribute("addr",i);
appCtxt.getAppController().sendRequest({
soapDoc:t,asyncMode:true}
)
};
ZmRoster.prototype.sendSubscribeAuthorization=function(e,t,a){
ZmImApp.INSTANCE.getService().sendSubscribeAuthorization(e,t,a)
};
ZmRoster.prototype.addGatewayListListener=function(e){
this._evtMgr.addListener(ZmRoster.GATEWAY_EVENT,e)
};
ZmRoster.prototype.reconnectGateway=function(e){
ZmImApp.INSTANCE.getService().reconnectGateway(e);
ZmImApp.INSTANCE.getService().startIgnoreNotify()
};
ZmRoster.prototype.unregisterGateway=function(e,t){
ZmImApp.INSTANCE.getService().unregisterGateway(e,t);
ZmImApp.INSTANCE.getService().startIgnoreNotify()
};
ZmRoster.prototype.registerGateway=function(e,i,a,t){
ZmImApp.INSTANCE.getService().registerGateway(e,i,a,t);
ZmImApp.INSTANCE.getService().startIgnoreNotify();
this.getGatewayByType(e).nick=i
};
ZmRoster.prototype._requestGateways=function(e){
ZmImApp.INSTANCE.getService().getGateways(new AjxCallback(this,this._handleRequestGateways,[e]))
};
ZmRoster.prototype._handleRequestGateways=function(s,n){
var a={};
var e={};
for(var t=0;
t<n.length;
++t){
var o=n[t]=new ZmImGateway(n[t]);
a[n[t].type.toLowerCase()]=o;
e[n[t].domain.toLowerCase()]=o
}
this._gateways={
byService:a,byDomain:e,array:n};
for(var t=0;
t<this._notificationBuffer.length;
++t){
this.handleNotification(this._notificationBuffer[t])
}
this._notificationBuffer=[];
this._evtMgr.notifyListeners(ZmRoster.GATEWAY_EVENT,{
roster:this}
);
if(s){
s.run()
}};
ZmRoster.prototype.getGatewayByType=function(e){
return this._gateways.byService[e.toLowerCase()]
};
ZmRoster.prototype.getGatewayByDomain=function(e){
return this._gateways.byDomain[e.toLowerCase()]
};
ZmRoster.prototype.getGateways=function(){
return this._gateways.array
};
ZmRoster.prototype.makeServerAddress=function(t,e){
return ZmImApp.INSTANCE.getService().makeServerAddress(t,e)
};
ZmRoster.prototype.makeGenericAddress=function(e){
e=this.breakDownAddress(e);
if(e.type.toLowerCase()=="xmpp"){
e.type="local"
}
return ZmImAddress.make(e.type,e.addr)
};
ZmRoster.prototype.breakDownAddress=function(i){
var t=/@(.*)$/;
var e=t.exec(i);
if(e){
var a=this.getGatewayByDomain(e[1]);
if(a){
return{
type:a.type,addr:i.substr(0,e.index),gateway:a}
}}
return{
type:"XMPP",addr:i}
};
ZmRoster.prototype.getGroups=function(){
return AjxVector.fromArray(this.getRosterItemList().getGroupsArray())
};
ZmRoster.prototype.setIdle=function(e){
if(ZmImApp.INSTANCE.getService().isLoggedIn()){
ZmImApp.INSTANCE.getService().setIdle(e,this._idleTimer.timeout)
}};
ZmRoster.prototype.onServiceAddChatMessage=function(e){
appCtxt.getApp(ZmApp.IM).prepareVisuals();
var i=this.getRosterItem(e.from);
if(i){
i._notifyTyping(false)
}
var a=this.getChatList();
var t=a.getChatByThread(e.thread);
if(t==null){
if(!e.fromMe){
t=a.getChatByRosterAddr(e.from,true,true)
}else{
t=a.getChatByRosterAddr(e.to,false)
}
if(t){
t.setThread(e.thread)
}}
if(t){
if(!e.fromMe){
if(appCtxt.get(ZmSetting.IM_PREF_FLASH_BROWSER)){
AjxDispatcher.require("Alert");
ZmBrowserAlert.getInstance().start(ZmMsg.newInstantMessage)
}
if(appCtxt.get(ZmSetting.IM_PREF_DESKTOP_ALERT)){
AjxDispatcher.require("Alert");
ZmDesktopAlert.getInstance().start(ZmMsg.newInstantMessage,e.getTextBody())
}}
t.addMessage(e)
}};
ZmRoster.prototype.onServiceAddBuddy=function(r,i,o,t,a){
var s=this.getRosterItemList();
var n=new ZmRosterItem(r,s,i,o,t);
s.addItem(n);
if(a){
this._newRosterItemtoastFormatter=this._newRosterItemtoastFormatter||new AjxMessageFormat(ZmMsg.imNewRosterItemToast);
var e=this._newRosterItemtoastFormatter.format([n.getDisplayName()]);
ZmTaskbarController.INSTANCE.setMessage(e)
}};
ZmRoster.prototype.onServiceRemoveBuddy=function(o,t){
var i=this.getRosterItemList();
var a=i.getByAddr(o);
if(a){
var e=a.getDisplayName();
i.removeItem(a);
if(t){
this._removeRosterItemToastFormatter=this._removeRosterItemToastFormatter||new AjxMessageFormat(ZmMsg.imRemoveRosterItemToast);
ZmTaskbarController.INSTANCE.setMessage(this._removeRosterItemToastFormatter.format([e]))
}}};
ZmRoster.prototype.onServiceRequestBuddyAuth=function(t){
var e=this.getRosterItem(t);
ZmTaskbarController.INSTANCE.showSubscribeRequest(t,e)
};
ZmRoster.prototype.onServiceSetBuddyPresence=function(n,s,i){
var o=n.getPresence().getShow();
if(n.getPresence().setFromJS(s)){
n._notifyPresence();
if(o!=ZmRosterPresence.SHOW_UNKNOWN){
this._presenceToastFormatter=this._presenceToastFormatter||new AjxMessageFormat(ZmMsg.imStatusToast);
var t=this._presenceToastFormatter.format([n.getDisplayName(),AjxStringUtil.htmlEncode(n.getPresence().getShowText())]);
var e=o==n.getPresence().getShow();
if(i&&((!e&&appCtxt.get(ZmSetting.IM_PREF_NOTIFY_PRESENCE))||(e&&appCtxt.get(ZmSetting.IM_PREF_NOTIFY_STATUS)))){
ZmTaskbarController.INSTANCE.setMessage(t);
var a=this.getChatList().getChatByRosterAddr(s.from);
if(a){
a.addMessage(ZmChatMessage.system(t))
}}}}};
ZmRoster.prototype.onServiceLoggedIn=function(t){
if(!this._idleTimer){
this._idleTimer=new DwtIdleTimer(appCtxt.get(ZmSetting.IM_PREF_IDLE_TIMEOUT)*60*1000,new AjxCallback(this,this.setIdle));
if(!appCtxt.get(ZmSetting.IM_PREF_REPORT_IDLE)){
this._idleTimer.kill()
}}
this._notify(ZmEvent.E_LOAD,{
loggedIn:true}
);
var a=new AjxCallback(this,this._loggedInGatewayCallback,[t]);
var e={
asyncMode:true,noBusyOverlay:true};
ZmImApp.INSTANCE.getService().getGateways(a,e)
};
ZmRoster.prototype._loggedInGatewayCallback=function(e,t){
this._handleRequestGateways(null,t);
ZmImApp.INSTANCE.getService().initializePresence(e?e.presence:null);
this.reload();
if(e&&e.callback){
e.callback.run(this)
}};
ZmRoster.prototype.onServiceLoggedOut=function(){
if(this.getPresence().setFromJS({
show:ZmRosterPresence.SHOW_OFFLINE}
)){
this.notifyPresence()
}
this.getRosterItemList().removeAllItems();
this._notify(ZmEvent.E_LOAD,{
loggedIn:false}
)
};
ZmRosterTreeGroups=function(e){
this._groups=e.getGroups()
};
ZmRosterTreeGroups.prototype.constructor=ZmRosterTreeGroups;
ZmRosterTreeGroups.prototype.autocompleteMatch=function(r,h){
r=r.toLowerCase();
var e=[];
var t=this._groups;
var s=t.size();
for(var o=0;
o<s;
o++){
var n=t.get(o);
if(n.toLowerCase().indexOf(r)==0){
e.push({
data:n,text:n}
)
}}
h.run(e)
};
ZmRosterTreeGroups.prototype.getArray=function(){
return this._groups
}
}
if(AjxPackage.define("zimbraMail.im.view.ZmImOverview")){
ZmImOverview=function(e,a){
if(!a){
a={}
}
var t={
parent:e,parentElement:a.parentElement,className:"ZmImOverview",posStyle:a.posStyle||Dwt.ABSOLUTE_STYLE};
DwtComposite.call(this,t);
this._groupItems={};
this._itemsById={};
delete a.parentElement;
this._options=a;
this._sortBy=appCtxt.get("IM_PREF_BUDDY_SORT");
this._actionMenuOps={
root:[ZmOperation.NEW_ROSTER_ITEM,ZmOperation.NEW_ROSTER_GROUP,ZmOperation.SEP,ZmOperation.IM_TOGGLE_OFFLINE,ZmOperation.IM_TOGGLE_BLOCKED,ZmOperation.SEP,ZmOperation.IM_SORT_BY_PRESENCE,ZmOperation.IM_SORT_BY_NAME],buddy:[ZmOperation.IM_NEW_CHAT,ZmOperation.IM_BUDDY_ARCHIVE,ZmOperation.SEP,ZmOperation.EDIT_PROPS,ZmOperation.DELETE,ZmOperation.SEP,ZmOperation.IM_CREATE_CONTACT,ZmOperation.IM_ADD_TO_CONTACT,ZmOperation.IM_EDIT_CONTACT],group:[ZmOperation.NEW_ROSTER_ITEM,ZmOperation.IM_DELETE_GROUP]};
this._actionMenuPopdownListener=new AjxListener(this,this._actionMenuPopdownListener);
this._im_dragSrc=new DwtDragSource(Dwt.DND_DROP_MOVE);
this._im_dragSrc.addDragListener(new AjxListener(this,this._dragListener));
this.__filters=[];
this.__filterOffline=appCtxt.get(ZmSetting.IM_PREF_HIDE_OFFLINE);
if(this.__filterOffline){
this.__filters.push(ZmImOverview.FILTER_OFFLINE_BUDDIES)
}
this.__filterBlocked=appCtxt.get(ZmSetting.IM_PREF_HIDE_BLOCKED);
if(this.__filterBlocked){
this.__filters.push(ZmImOverview.FILTER_BLOCKED_BUDDIES)
}
this._modelListeners=[];
this._init()
};
ZmImOverview.prototype=new DwtComposite;
ZmImOverview.prototype.constructor=ZmImOverview;
ZmImOverview.prototype.toString=function(){
return"ZmImOverview"
};
ZmImOverview.NO_MESSAGE=0;
ZmImOverview.NOT_LOGGED_IN=1;
ZmImOverview.LOADING=2;
ZmImOverview.NO_BUDDIES=3;
ZmImOverview.prototype.dispose=function(){
for(var e in this._actionMenuOps){
var n=this._actionMenuOps[e]._dwtControl;
if(n){
n.dispose()
}}
for(var t=0,a=this._modelListeners.length;
t<a;
t++){
var o=this._modelListeners[t];
o.modelObject.removeChangeListener(o.listener)
}
DwtComposite.prototype.dispose.call(this)
};
ZmImOverview.prototype.getTree=function(){
return this._tree
};
ZmImOverview.prototype._dragListener=function(e){
var t=e.srcControl.getData("ZmImOverview.data");
switch(e.action){
case DwtDragEvent.SET_DATA:if(t.buddy){
e.srcData=t.buddy;
e.srcData._drag_from_group=e.srcControl.parent.getData("ZmImOverview.data").group
}
break
}};
ZmImOverview.prototype._setCheck=function(e,t){
e.setImage(t?"Check":null)
};
ZmImOverview.prototype._setCheckOp=function(a,i,t){
var e=a.getMenuItem(i);
if(e){
this._setCheck(e,t)
}};
ZmImOverview.prototype._updateFilter=function(t,e){
if(e){
this.addFilter(t)
}else{
this.removeFilter(t)
}};
ZmImOverview.prototype._newGroupOkCallback=function(a){
var t;
if(!a.value){
t=ZmMsg.nameEmpty
}else{
if(this._groupItems[a.value]){
t=ZmMsg.imGroupExists
}}
if(t){
var e=appCtxt.getMsgDialog();
e.reset();
e.setMessage(t,DwtMessageDialog.CRITICAL_STYLE);
e.popup()
}else{
this._updateSpecialItems(ZmImOverview.NO_MESSAGE);
this.getGroupItem(a.value).setExpanded(true);
a.dialog.popdown()
}};
ZmImOverview.prototype._actionMenuListener=function(a,i){
var e=i.item.getData(ZmOperation.KEY_ID);
switch(e){
case ZmOperation.IM_SORT_BY_PRESENCE:this.sort(ZmImApp.BUDDY_SORT_PRESENCE,true);
break;
case ZmOperation.IM_SORT_BY_NAME:this.sort(ZmImApp.BUDDY_SORT_NAME,true);
break;
case ZmOperation.IM_TOGGLE_OFFLINE:this.__filterOffline=!this.__filterOffline;
appCtxt.getSettings().getSetting(ZmSetting.IM_PREF_HIDE_OFFLINE).setValue(this.__filterOffline);
this._updateFilter(ZmImOverview.FILTER_OFFLINE_BUDDIES,this.__filterOffline);
break;
case ZmOperation.IM_TOGGLE_BLOCKED:this.__filterBlocked=!this.__filterBlocked;
appCtxt.getSettings().getSetting(ZmSetting.IM_PREF_HIDE_BLOCKED).setValue(this.__filterBlocked);
this._updateFilter(ZmImOverview.FILTER_BLOCKED_BUDDIES,this.__filterBlocked);
break;
case ZmOperation.NEW_ROSTER_GROUP:this._newGroupOkCallbackObj=this._newGroupOkCallbackObj||new AjxCallback(this,this._newGroupOkCallback);
AjxDispatcher.require(["IM"]);
var r={
title:ZmMsg.imCreateNewGroup,label:ZmMsg.imGroupName,callback:this._newGroupOkCallbackObj};
ZmPromptDialog.getInstance().popup(r);
break;
default:var s=appCtxt.getApp("IM").getImController();
var n=s._listeners[e];
if(n){
var t={
dwtObj:i.dwtObj};
if(a&&this._actionedItem){
var o=this._actionedItem.getData("ZmImOverview.data");
t.type=o.type;
t.buddy=o.buddy;
t.group=o.group;
t.actionedItem=this._actionedItem
}
n.handleEvent(t)
}}};
ZmImOverview.PRESENCE_SORT_INDEX={
CHAT:1,ONLINE:2,AWAY:3,XA:4,DND:5,OFFLINE:6,UNKNOWN:7};
ZmImOverview.CMP_SORT_BY_NAME=function(t,e){
t=t.getData("ZmImOverview.data").buddy.getDisplayName();
e=e.getData("ZmImOverview.data").buddy.getDisplayName();
return t<e?-1:(t>e?1:0)
};
ZmImOverview.CMP_SORT_BY_PRESENCE=function(i,t){
var e=ZmImOverview.PRESENCE_SORT_INDEX[i.getData("ZmImOverview.data").buddy.getPresence().getShow()]||100;
var o=ZmImOverview.PRESENCE_SORT_INDEX[t.getData("ZmImOverview.data").buddy.getPresence().getShow()]||100;
if(e==o){
return ZmImOverview.CMP_SORT_BY_NAME(i,t)
}
return e-o
};
ZmImOverview.prototype.sort=function(t,e){
if(t&&(t!=this._sortBy)){
this._sortBy=t;
appCtxt.getSettings().getSetting("IM_PREF_BUDDY_SORT").setValue(t)
}
if(e){
if(this._sortActionId){
AjxTimedAction.cancelAction(this._sortActionId)
}
this._doSort()
}else{
if(!this._sortActionId){
this._doSortAction=this._doSortAction||new AjxTimedAction(this,this._doSort);
this._sortActionId=AjxTimedAction.scheduleAction(this._doSortAction,1000)
}}};
ZmImOverview.prototype._doSort=function(){
this._sortActionId=null;
var e=this._rootItem;
var t=e.getItems();
var n=this._sortBy==ZmImApp.BUDDY_SORT_PRESENCE?ZmImOverview.CMP_SORT_BY_PRESENCE:ZmImOverview.CMP_SORT_BY_NAME;
for(var a=0;
a<t.length;
++a){
var o=t[a];
o.sort(n)
}};
ZmImOverview.prototype.chatWithBuddy=function(e){
ZmTaskbarController.INSTANCE.chatWithRosterItem(e);
ZmImOverview._popdownDialog()
};
ZmImOverview.prototype._actionMenuPopdownListener=function(){
if(this._actionedItem){
this._actionedItem._setActioned(false)
}};
ZmImOverview.prototype._getActionMenu=function(o,c,d){
var t=this._actionMenuOps[o];
if(t){
var e=t._dwtControl;
if(!e){
var l=this;
while(l&&!(l instanceof DwtDialog)){
l=l.parent
}
e=t._dwtControl=new ZmActionMenu({
parent:this,menuItems:t}
);
var a=new AjxListener(this,this._actionMenuListener,[true]);
for(var n=0;
n<e.opList.length;
++n){
var u=e.opList[n];
e.addSelectionListener(u,a)
}
e.addPopdownListener(this._actionMenuPopdownListener)
}
if(o=="buddy"){
var h=c.getContact();
e.getOp(ZmOperation.IM_ADD_TO_CONTACT).setVisible(!h);
e.getOp(ZmOperation.IM_CREATE_CONTACT).setVisible(!h);
e.getOp(ZmOperation.IM_EDIT_CONTACT).setVisible(!!h)
}else{
if(o=="root"){
var r=ZmImApp.loggedIn();
for(var n=0,s=e.opList.length;
n<s;
n++){
var u=e.getMenuItem(e.opList[n]);
if(u){
u.setEnabled(r)
}}
if(r){
this._setCheckOp(e,ZmOperation.IM_TOGGLE_OFFLINE,this.__filterOffline);
this._setCheckOp(e,ZmOperation.IM_TOGGLE_BLOCKED,this.__filterBlocked);
this._setCheckOp(e,ZmOperation.IM_SORT_BY_PRESENCE,this._sortBy==ZmImApp.BUDDY_SORT_PRESENCE);
this._setCheckOp(e,ZmOperation.IM_SORT_BY_NAME,this._sortBy==ZmImApp.BUDDY_SORT_NAME)
}}}
return e
}};
ZmImOverview.prototype._treeMouseUpListener=function(a){
if((a.button==DwtMouseEvent.RIGHT)){
if(!this._treeViewActionMenu){
var n=[ZmOperation.NEW_ROSTER_ITEM,ZmOperation.IM_NEW_CHAT];
this._treeViewActionMenu=new ZmActionMenu({
parent:this.shell,menuItems:n}
);
var o=new AjxListener(this,this._actionMenuListener,[false]);
for(var e=0,t=n.length;
e<t;
e++){
this._treeViewActionMenu.addSelectionListener(n[e],o)
}}
this._treeViewActionMenu.popup(0,a.docX,a.docY)
}};
ZmImOverview.prototype._treeSelectionListener=function(a){
if(a.detail!=DwtTree.ITEM_ACTIONED&&a.detail!=DwtTree.ITEM_SELECTED&&a.detail!=DwtTree.ITEM_DBL_CLICKED){
return
}
var i=a.item.getData("ZmImOverview.data");
var t=i.type;
var o=i.group;
var e=i.buddy;
if(a.detail==DwtTree.ITEM_ACTIONED){
var n=this._getActionMenu(t,e,o);
if(n){
this._actionedItem=a.item;
n.popup(0,a.docX,a.docY)
}}else{
if(a.detail==DwtTree.ITEM_SELECTED&&e){
if(this._options.singleClick){
DwtMenu.closeActiveMenu();
this.chatWithBuddy(e)
}else{
ZmTaskbarController.INSTANCE.selectChatForRosterItem(e)
}}else{
if(a.detail==DwtTree.ITEM_DBL_CLICKED){
if(!this._options.singleClick){
if(e){
this.chatWithBuddy(e)
}else{
if(o){
a.item.setExpanded(!a.item.getExpanded())
}}}}}}};
ZmImOverview.prototype._init=function(){
var a=this._groupDropTgt=new DwtDropTarget(["ZmRosterItem"]);
a.addDropListener(new AjxListener(this,this._groupDropListener));
var i={
parent:this,className:this._options.overviewId?"OverviewTree":null};
var t=this._tree=new DwtTree(i);
t.getHtmlElement().style.width="100%";
if(!this._options.overviewId){
t.getHtmlElement().style.overflow="auto"
}
if(!this._options.inactiveTree){
t.addSelectionListener(new AjxListener(this,this._treeSelectionListener))
}
t.addListener(DwtEvent.ONMOUSEUP,new AjxListener(this,this._treeMouseUpListener));
this._rootItem=new DwtHeaderTreeItem({
parent:t,overview:this,className:"overviewHeader",noNodeCell:this._options.noHeaderNodeCell}
);
this._rootItem.setData("ZmImOverview.data",{
type:"root"}
);
this._rootItem.setText(ZmMsg.buddyList);
this._rootItem.enableSelection(false);
var o=this._roster=AjxDispatcher.run("GetRoster");
this._listen(o,new AjxListener(this,this._rosterListener));
this._listen(o.getRosterItemList(),new AjxListener(this,this._rosterItemListListener));
var e=ZmImApp.loggedIn();
if(e){
buddyList=o.getRosterItemList()
}
if(e&&buddyList.size()){
this._updateSpecialItems(ZmImOverview.NO_MESSAGE);
buddyList.getVector().foreach(this._createBuddy,this);
this.sort()
}else{
this._updateSpecialItems(e?ZmImOverview.NO_BUDDIES:ZmImOverview.NOT_LOGGED_IN)
}
t.addSeparator();
if(!this._options.overviewId){
this.addControlListener(new AjxListener(this,this._controlListener))
}
if(this._options.expanded){
this._rootItem.setExpanded(true)
}else{
t.addTreeListener(new AjxListener(this,this._treeListener))
}};
ZmImOverview.prototype._treeListener=function(e){
if(!this._didInitialExpand&&(e.detail==DwtTree.ITEM_EXPANDED)&&e.items.length&&(e.items[0]==this._rootItem)){
var t=this._groupItems[ZmMsg.buddies];
if(t){
t.setExpanded(true)
}
this._didInitialExpand=true
}};
ZmImOverview.prototype._controlListener=function(i){
var t={
x:i.oldWidth,y:i.oldHeight};
var e={
x:i.newWidth,y:i.newHeight};
if(t.x!=e.x||t.y!=e.y){
var a=e.y;
if(AjxEnv.isIE){
a-=2
}
this._tree.setSize(Dwt.DEFAULT,a)
}};
ZmImOverview._popdownDialog=function(){
if(ZmImNewChatDlg._INSTANCE){
ZmImNewChatDlg._INSTANCE.popdown()
}};
ZmImOverview.login=function(){
ZmImApp.INSTANCE.login()
};
ZmImOverview.newBuddy=function(){
ZmImApp.INSTANCE.prepareVisuals();
ZmImOverview._popdownDialog();
ZmImApp.INSTANCE.getImController()._newRosterItemListener()
};
ZmImOverview.prototype._updateSpecialItems=function(t){
var e=this._rootItem.getExpanded();
if(t==ZmImOverview.NO_MESSAGE){
if(this._infoItem){
this._infoItem.dispose();
this._infoItem=null
}
if(ZmImOverview.FILTER_SEARCH&&!this._filterItem){
this._filterItem=new ZmBuddyFilterItem({
parent:this._rootItem,overview:this}
);
this._filterItem.setData("ZmImOverview.data",{
type:"filter"}
)
}}else{
if(!this._infoItem){
this._rootItem.removeChildren();
this._filterItem=null;
this._groupItems={};
this._infoItem=new ZmInfoTreeItem({
parent:this._rootItem}
);
this._infoItem.setData("ZmImOverview.data",{
type:"infoItem"}
)
}
var a;
switch(t){
case ZmImOverview.NOT_LOGGED_IN:a=AjxMessageFormat.format(ZmMsg.imNotLoggedIn,"ZmImOverview.login()");
break;
case ZmImOverview.LOADING:a=ZmMsg.loading;
break;
case ZmImOverview.NO_BUDDIES:a=AjxMessageFormat.format(ZmMsg.imNoBuddies,"ZmImOverview.newBuddy()");
break
}
this._infoItem.setText(a)
}
if(e){
this._rootItem.setExpanded(true)
}};
ZmImOverview.prototype._listen=function(e,t){
e.addChangeListener(t);
this._modelListeners.push({
modelObject:e,listener:t}
)
};
ZmImOverview.prototype._rosterListener=function(e){
if(e.event==ZmEvent.E_LOAD){
this._updateSpecialItems(e.getDetails().loggedIn?ZmImOverview.LOADING:ZmImOverview.NOT_LOGGED_IN)
}};
ZmImOverview.prototype._rosterItemListListener=function(t){
var e=t.getDetail("fields");
if(t.event==ZmEvent.E_LOAD){
if(!t.source.size()){
this._updateSpecialItems(ZmImOverview.NO_BUDDIES)
}}else{
if(t.event==ZmEvent.E_CREATE){
if(this._infoItem){
this._updateSpecialItems(ZmImOverview.NO_MESSAGE)
}
var a=AjxVector.fromArray(t.getItems());
a.foreach(this._createBuddy,this);
if(a.size()){
this.sort()
}}else{
if(t.event==ZmEvent.E_MODIFY){
this._modifyBuddies(t.getItems(),e)
}else{
if(t.event==ZmEvent.E_REMOVE||t.event==ZmEvent.E_DELETE){
var a=AjxVector.fromArray(t.getItems());
a.foreach(this._removeBuddy,this)
}}}}};
ZmImOverview.prototype._groupDropListener=function(o){
if(!o.srcData){
return false
}
if(o.action==DwtDropEvent.DRAG_ENTER){
o.doIt=this._groupDropTgt.isValidTarget(o.srcData)
}else{
if(o.action==DwtDropEvent.DRAG_DROP){
var i=o.srcData;
var t=i._drag_from_group;
var n=o.targetControl.getData("ZmImOverview.data").group;
var e=AjxVector.fromArray(i.getGroups());
if(t!=n&&e.indexOf(n)==-1){
e.remove(t);
e.add(n);
var a=i.getDisplayName();
var s=i.getAddress();
AjxDispatcher.run("GetRoster").createRosterItem(s,a,e.join(","))
}}}};
ZmImOverview.prototype._getBuddyIcon=function(e){
var a=AjxDispatcher.run("GetRoster");
var t=a.getPrivacyList();
return t.isDenied(e.getAddress())?"BlockUser":e.getPresence().getIcon()
};
ZmImOverview.prototype._createBuddy=function(e){
return this._createTreeItems("buddy",e)
};
ZmImOverview.prototype._createTreeItems=function(s,o){
var e=o.getGroups();
if(e.length==0){
e=s=="buddy"?[ZmMsg.buddies]:[null]
}
var l=o.getDisplayName();
var r=this._getBuddyIcon(o);
var n=[];
var d=this._rootItem.getExpanded();
for(var t=0;
t<e.length;
++t){
var c=this.getGroupItem(e[t]);
var u=new DwtTreeItem({
parent:c,index:this.getSortIndex(o,c),text:AjxStringUtil.htmlEncode(l),imageInfo:r,singleClickAction:this._options.singleClick}
);
u.addClassName("ZmImPresence-"+o.getPresence().getShow());
u.setToolTipContent("-");
u.getToolTipContent=AjxCallback.simpleClosure(o.getToolTip,o);
u.setData("ZmImOverview.data",{
type:s,buddy:o}
);
u.setDragSource(this._im_dragSrc);
n.push(u);
if(this._options.expanded||(d&&(e[t]==ZmMsg.buddies))){
c.setExpanded(true)
}
var h=this._itemsById[o.getAddress()];
if(!h){
h=this._itemsById[o.getAddress()]=new AjxVector()
}
h.add(u)
}
this.applyFilters(n)
};
ZmImOverview.prototype._modifyBuddies=function(e,r){
var o=false;
var d=false;
for(var n=0,h=e.length;
n<h;
n++){
var l=e[n];
var c=this._itemsById[l.getAddress()];
if(c){
var u=ZmRosterItem.F_GROUPS in r;
if(u){
this._removeBuddy(l);
this._createTreeItems("buddy",l)
}else{
var t=ZmRosterItem.F_PRESENCE in r;
var m=ZmRosterItem.F_UNREAD in r;
var s=ZmRosterItem.F_NAME in r;
var a=ZmRosterItem.F_TYPING in r;
o=o||t;
d=d||s;
c.foreach(function(f){
if(t){
f.setImage(this._getBuddyIcon(l));
f.setClassName(f.getClassName());
f.addClassName("ZmImPresence-"+l.getPresence().getShow())
}
if(m||s){
var i=l.getDisplayName();
if(l.getUnread()){
i+=" ("+l.getUnread()+")";
i=i.bold()
}
f.setText(i)
}
if(a){
f.condClassName(r[ZmRosterItem.F_TYPING],"ZmRosterItem-typing")
}}
,this);
this.applyFilters(c.getArray())
}}}
if((o&&(this._sortBy==ZmImApp.BUDDY_SORT_PRESENCE))||(d)){
this.sort()
}};
ZmImOverview.prototype._removeBuddy=function(t){
var e=this._itemsById[t.getAddress()];
e.foreach("dispose");
this._itemsById[t.getAddress()]=null
};
ZmImOverview.prototype.getGroupItem=function(t){
if(!t){
return this._rootItem
}
var e=this._groupItems[t];
if(!e){
e=this._groupItems[t]=new DwtTreeItem({
parent:this._rootItem,index:this.getSortIndex(t),text:AjxStringUtil.htmlEncode(t),imageInfo:"ImGroup"}
);
e.setToolTipContent("-");
e.getToolTipContent=function(){
var a=this.getData("ZmImOverview.data");
return AjxMessageFormat.format(ZmMsg.imGroupItemTooltip,[a.group,this.getItemCount()])
};
e.setData("ZmImOverview.data",{
type:"group",group:t}
);
e.setDropTarget(this._groupDropTgt)
}
return e
};
ZmImOverview.prototype.getSortIndex=function(c,h){
var s="buddy";
if(h==null){
s="group";
h=this._rootItem;
c=c.toLowerCase()
}
var n=h.getItems();
for(var t=0;
t<n.length;
++t){
var d=n[t];
var e=d.getData("ZmImOverview.data");
if(e.type=="filter"||e.type=="infoItem"){
continue
}
if(s=="buddy"){
if(this._sortBy==ZmImApp.BUDDY_SORT_NAME){
var o=e.buddy.getDisplayName();
if(o&&o.toLowerCase()>c.getDisplayName()){
break
}}else{
if(this._sortBy==ZmImApp.BUDDY_SORT_PRESENCE){
var l=ZmImOverview.PRESENCE_SORT_INDEX[e.buddy.getPresence().getShow()]||100;
var r=ZmImOverview.PRESENCE_SORT_INDEX[c.getPresence().getShow()]||100;
if(l>r){
break
}}}}else{
var o=e.group;
if(o&&o.toLowerCase()>c){
break
}}}
return t
};
ZmImOverview.prototype.addFilter=function(t){
for(var e=this.__filters.length;
--e>=0;
){
if(this.__filters[e]===t){
this.__filters.splice(e,1)
}}
this.__filters.push(t);
this.applyFilters()
};
ZmImOverview.prototype.removeFilter=function(t){
if(!this.__filters.length){
return
}
for(var e=this.__filters.length;
--e>=0;
){
if(this.__filters[e]===t){
this.__filters.splice(e,1)
}}
this.applyFilters(null,true)
};
ZmImOverview.prototype.applyFilters=function(s,o){
var e=this.__filters;
if(!e.length&&!o){
return
}
this._firstFilterItem=null;
var n=function(c){
var m=false;
for(var d=c.length;
--d>=0;
){
var u=c[d];
var g=true;
for(var i=e.length;
--i>=0;
){
var p=e[i];
if(p.call(this,u)){
g=false;
break
}}
if(!this._firstFilterItem&&g){
this._firstFilterItem=u
}
m=m||g;
u.setVisible(g)
}
return m
};
if(s){
n.call(this,s)
}else{
if(this._rootItem){
var r=this._rootItem;
var t=r.getItems();
for(var a=t.length;
--a>=0;
){
var h=t[a];
var s=h.getItems();
var l=n.call(this,s)||s.length==0;
h.setVisible(l);
if(l){
h.setExpanded(true)
}}}}};
ZmImOverview.FILTER_OFFLINE_BUDDIES=function(a){
var e=a.getData("ZmImOverview.data").buddy;
var t=e.getPresence();
return t.getShow()==ZmRosterPresence.SHOW_OFFLINE
};
ZmImOverview.FILTER_BLOCKED_BUDDIES=function(t){
var e=t.getData("ZmImOverview.data").buddy;
return AjxDispatcher.run("GetRoster").getPrivacyList().isDenied(e.getAddress())
};
ZmImOverview.FILTER_SEARCH={
func:function(a){
var t=this.__searchInputEl.value.toLowerCase();
var e=a.getData("ZmImOverview.data").buddy;
if(/^#/.test(t)){
return e.getAddress().indexOf(t.substr(1))<0
}else{
return e.getDisplayName().toLowerCase().indexOf(t)<0
}}
,_doKeyPress:function(){
var e=this.__searchInputEl.value;
if(!/\S/.test(e)||e==ZmMsg.filter){
this.removeFilter(ZmImOverview.FILTER_SEARCH.func)
}else{
this.addFilter(ZmImOverview.FILTER_SEARCH.func)
}}
,inputFocus:function(){
Dwt.delClass(this.__searchInputEl,"DwtSimpleInput-hint","DwtSimpleInput-focused");
if(this.__searchInputEl.value==ZmMsg.filter){
this.__searchInputEl.value=""
}else{
try{
this.__searchInputEl.select()
}
catch(e){}}}
,inputBlur:function(){
Dwt.delClass(this.__searchInputEl,"DwtSimpleInput-focused","DwtSimpleInput-hint");
if(!/\S/.test(this.__searchInputEl.value)){
this.__searchInputEl.value=ZmMsg.filter
}}
,inputKeyPress:function(t){
if(!t){
t=window.event
}
if(this.__searchInputTimeout){
clearTimeout(this.__searchInputTimeout)
}
if(t.keyCode==27){
this.__searchInputEl.value="";
ZmImOverview.FILTER_SEARCH._doKeyPress.call(this);
ZmImOverview.FILTER_SEARCH.inputBlur.call(this);
this.__searchInputEl.blur()
}
if(t.keyCode==13){
ZmImOverview.FILTER_SEARCH._doKeyPress.call(this);
if(!/\S/.test(this.__searchInputEl.value)){
return
}
if(this._firstFilterItem){
var e=this._firstFilterItem.getData("ZmImOverview.data").buddy;
this.chatWithBuddy(e);
this.__searchInputEl.value="";
ZmImOverview.FILTER_SEARCH.inputBlur.call(this);
this.__searchInputEl.blur()
}}
this.__searchInputTimeout=setTimeout(AjxCallback.simpleClosure(ZmImOverview.FILTER_SEARCH._doKeyPress,this),500)
}};
ZmBuddyFilterItem=function(e){
this.overview=e.overview;
e.className="ZmBuddyFilterItem";
DwtTreeItem.call(this,e)
};
ZmBuddyFilterItem.prototype=new DwtTreeItem;
ZmBuddyFilterItem.prototype.constructor=ZmBuddyFilterItem;
ZmBuddyFilterItem.prototype.toString=function(){
return"ZmBuddyFilterItem"
};
ZmBuddyFilterItem.prototype._createHtmlFromTemplate=function(t,a){
var i=this.getHtmlElement();
i.className="ZmBuddyFilterItem";
var e=i.ownerDocument.createElement("input");
this.overview.__searchInputEl=e;
e.autocomplete="off";
e.className="DwtSimpleInput";
i.appendChild(e);
e.onkeydown=AjxCallback.simpleClosure(ZmImOverview.FILTER_SEARCH.inputKeyPress,this.overview);
e.onfocus=AjxCallback.simpleClosure(ZmImOverview.FILTER_SEARCH.inputFocus,this.overview);
e.onblur=AjxCallback.simpleClosure(ZmImOverview.FILTER_SEARCH.inputBlur,this.overview);
e.onblur()
};
ZmInfoTreeItem=function(e){
e.className="ZmInfoTreeItem";
DwtTreeItem.call(this,e)
};
ZmInfoTreeItem.prototype=new DwtTreeItem;
ZmInfoTreeItem.prototype.constructor=ZmInfoTreeItem;
ZmInfoTreeItem.prototype.TEMPLATE="im.Chat#ZmInfoTreeItem";
ZmInfoTreeItem.prototype.toString=function(){
return"ZmInfoTreeItem"
}
}
if(AjxPackage.define("zimbraMail.im.view.ZmTaskbar")){
ZmTaskbar=function(e){
ZmToolBar.call(this,e);
ZmTaskbar.INSTANCE=this;
this._setMouseEvents();
this.shell.addControlListener(new AjxListener(this,this._shellControlListener))
};
ZmTaskbar.prototype=new ZmToolBar;
ZmTaskbar.prototype.constructor=ZmTaskbar;
ZmTaskbar.prototype.toString=function(){
return"ZmTaskbar"
};
ZmTaskbar.prototype.zShow=function(e){
this.setZIndex(e?Dwt.Z_VIEW+10:Dwt.Z_HIDDEN)
};
ZmTaskbar.prototype.expandItem=function(a,t,e){
if(t&&this.expandedItem){
this.expandedItem._expand(false)
}
a._expand(t,e);
this.expandedItem=t?a:null
};
ZmTaskbar.prototype.toggleExpanded=function(e){
this.expandItem(e,!e.expanded)
};
ZmTaskbar.prototype.conditionalExpand=function(e){
if(!this.expandedItem){
this.expandItem(e,true,true);
return true
}else{
return false
}};
ZmTaskbar.prototype._shellControlListener=function(e){
if((e.oldWidth!=e.newWidth)&&this.expandedItem){
this.expandedItem.positionContent()
}};
ZmTaskbarItem=function(a){
DwtComposite.call(this,a);
this._createHtml();
this._contentClassName=a.contentClassName;
var e={
style:DwtButton.TOGGLE_STYLE,parent:this,parentElement:this._buttonEl};
var t=a.buttonConstructor||DwtToolBarButton;
this.button=new t(e);
this.button.addSelectionListener(a.selectionListener);
if(a.op){
this.button.setText(ZmMsg[ZmOperation.getProp(a.op,"textKey")]);
this.button.setImage(ZmOperation.getProp(a.op,"image"));
this.button.setToolTipContent(ZmMsg[ZmOperation.getProp(a.op,"tooltipKey")])
}
this._rightAlign=a.rightAlign;
this._data=a.data
};
ZmTaskbarItem.prototype=new DwtComposite;
ZmTaskbarItem.prototype.constructor=ZmTaskbarItem;
ZmTaskbarItem.prototype.TEMPLATE="share.App#ZmTaskbarItem";
ZmTaskbarItem.prototype.toString=function(){
return"ZmTaskbarItem"
};
ZmTaskbarItem.prototype.getPopup=function(){
if(!this._popup){
AjxDispatcher.require(["IMCore","IM"]);
var args={
parent:this,parentElement:this._contentEl,taskbarItem:this,taskbar:this.parent,data:this._data};
var ctor=window.eval(this._contentClassName);
this._popup=new ctor(args)
}
return this._popup
};
ZmTaskbarItem.prototype._expand=function(a,t){
this.expanded=a;
Dwt.setVisible(this._contentEl,a);
this.button.setSelected(a);
var e=this.getPopup();
if(a){
this.showAlert(false);
e.popup(t);
this.positionContent()
}else{
e.popdown()
}};
ZmTaskbarItem.prototype.positionContent=function(){
if(this._rightAlign){
var e=Dwt.toWindow(this.button.getHtmlElement(),0,0).x;
var a=this.button.getW();
var t=this.parent.getBounds();
var i=1;
this._contentEl.style.right=t.x+t.width-e-a-i
}};
ZmTaskbarItem.prototype._createHtml=function(){
var e={
id:this._htmlElId};
this._createHtmlFromTemplate(this.TEMPLATE,e);
this._contentEl=document.getElementById(e.id+"_content");
this._buttonEl=document.getElementById(e.id+"_button")
}
}
if(AjxPackage.define("zimbraMail.im.controller.ZmTaskbarController")){
ZmTaskbarController=function(n){
ZmController.call(this,null);
ZmTaskbarController.INSTANCE=this;
var o=Dwt.byId(ZmId.SKIN_TASKBAR);
if(!o){
return
}
this._chatData={};
this._chatMru=[];
var i={
parent:appCtxt.getShell(),id:ZmId.TASKBAR,className:"ZmTaskbar",posStyle:Dwt.ABSOLUTE_STYLE};
this._toolbar=n[ZmAppViewMgr.C_TASKBAR]=new ZmTaskbar(i);
this._toolbar.addListener(DwtEvent.ONMOUSEDOWN,new AjxListener(this,this._toolbarMouseDownListener));
var r={
contentClassName:"ZmPresencePopup",op:ZmId.OP_IM_PRESENCE_MENU};
this._presenceItem=this._createItem(r);
this._toolbar.addSeparator();
this._newBuddySelectionListenerObj=new AjxListener(this,this._newBuddySelectionListener);
var a={
contentClassName:"ZmNewBuddyPopup",selectionListener:this._newBuddySelectionListenerObj,op:ZmId.OP_NEW_ROSTER_ITEM};
this._newBuddyItem=this._createItem(a);
this._newBuddyItem.button.setText("");
var t={
contentClassName:"ZmBuddyListPopup",op:ZmId.OP_IM_BUDDY_LIST};
this._createItem(t);
this._toolbar.addFiller(null);
this._chatButtonIndex=this._toolbar.getNumChildren()+1;
this._messageButton=new DwtToolBarButton({
parent:this._toolbar}
);
this._messageButton.setText(ZmMsg.betaIM);
this._messageButton.setEnabled(false);
var e=appCtxt.getSkinHint("presence","height")||24;
Dwt.setSize(o,Dwt.DEFAULT,e);
var s=ZmImApp.INSTANCE.getRoster();
this._updatePresenceButton(ZmImApp.loggedIn()?s.getPresence():null);
s.addChangeListener(new AjxListener(this,this._rosterChangeListener));
s.addGatewayListListener(new AjxListener(this,this._gatewayListListener));
ZmImApp.INSTANCE.getRoster().getChatList().addChangeListener(new AjxListener(this,this._chatListListener));
ZmImApp.INSTANCE.getRoster().getRosterItemList().addChangeListener(new AjxListener(this,this._rosterListChangeListener))
};
ZmTaskbarController.prototype=new ZmController;
ZmTaskbarController.prototype.constructor=ZmTaskbarController;
ZmTaskbarController.prototype.toString=function(){
return"ZmTaskbarController"
};
ZmTaskbarController.prototype.setMessage=function(e){
this._messageButton.setText(e);
if(this._resetMessageActionId){
AjxTimedAction.cancelAction(this._resetMessageActionId);
this._resetMessageActionId=0
}
this._resetMessageAction=this._resetMessageAction||new AjxTimedAction(this,this._resetMessage);
this._resetMessageActionId=AjxTimedAction.scheduleAction(this._resetMessageAction,3000)
};
ZmTaskbarController.prototype._resetMessage=function(e){
this._messageButton.setText(ZmMsg.betaIM);
this._resetMessageActionId=0
};
ZmTaskbarController.prototype.createChatItem=function(e,a){
this._addChatToMru(e);
var o=this._toolbar.addSeparator(null,this._chatButtonIndex++);
var t={
index:this._chatButtonIndex++,contentClassName:"ZmChatPopup",selectionListener:new AjxListener(this,this._chatSelectionListener,[e]),data:{
chat:e,statusListener:new AjxListener(this,this._chatStatusListener,[e]),closeListener:new AjxListener(this,this._closeChatListener,[e]),minimizeListener:new AjxListener(this,this._minimizeChatListener,[e])}};
var i=this._createItem(t);
i.button.setToolTipContent(new AjxCallback(this,this._getChatToolTip,[e]));
i.button.addListener(DwtEvent.ONMOUSEDOWN,new AjxListener(this,this._chatMouseDownListener,[e]));
this._chatData[e.id]={
chat:e,item:i,separator:o};
var n="Close";
i.button.setHoverImage(n);
this._closeClass=this._closeClass||AjxImg.getClassForImage(n);
this._toolbar.expandItem(i,true,a);
this._chatData[e.id].chatWidget=i.getPopup().chatWidget;
this._chatChangeListenerListenerObj=this._chatChangeListenerListenerObj||new AjxListener(this,this._chatChangeListenerListener);
e.addChangeListener(this._chatChangeListenerListenerObj);
return i
};
ZmTaskbarController.prototype.endChat=function(e){
e.sendClose();
ZmImApp.INSTANCE.getRoster().getChatList().removeChat(e)
};
ZmTaskbarController.prototype.selectChat=function(e,a){
var t=this._chatData[e.id];
if(t){
this._expandChatItem(t.item,e,true);
if(a){
t.chatWidget.setEditorContent(AjxStringUtil.trim(a))
}}};
ZmTaskbarController.prototype.selectChatForRosterItem=function(t){
var i=ZmImApp.INSTANCE.getRoster().getChatList().getChatsByRosterAddr(t.getAddress());
var e=null;
for(var a in i){
if(i[a].getRosterSize()==1){
e=i[a];
break
}}
if(e==null&&i.length>0){
e=i[0]
}
if(e!=null){
this.selectChat(e)
}};
ZmTaskbarController.prototype.chatWithContacts=function(t,e,i){
var a=t.map("getBuddy").sub(AjxCallback.isNull);
if(a.size()>0){
this.chatWithRosterItem(a.get(0),i)
}};
ZmTaskbarController.prototype.chatWithRosterItem=function(t,a){
var e=ZmImApp.INSTANCE.getRoster().getChatList().getChatByRosterItem(t,true);
this.selectChat(e,a)
};
ZmTaskbarController.prototype.getChatWidgetForChat=function(e){
var t=this._chatData[e.id];
return t?t.chatWidget:null
};
ZmTaskbarController.prototype.showSubscribeRequest=function(n,t){
this._subscribeData=this._subscribeData||{};
if(this._subscribeData[n]){
return
}
var o=this._toolbar.addSeparator(null,this._chatButtonIndex+1);
var e={
index:this._chatButtonIndex+1,op:ZmId.OP_IM_INVITE,rightAlign:true,contentClassName:"ZmSubscribePopup",data:{
addr:n,buddy:t}};
var a=this._createItem(e);
this._subscribeData[n]={
item:a,separator:o};
this._subscribeRequestTooltip=this._subscribeRequestTooltip||new AjxMessageFormat(ZmMsg.imInvitationFrom);
var i=this._subscribeRequestTooltip.format(t?t.getDisplayName():n);
a.button.setToolTipContent(i);
if(!this._toolbar.conditionalExpand(a)){
a.showAlert(true)
}
a.addDisposeListener(new AjxListener(this,this._subscribeDisposeListener,[n]))
};
ZmTaskbarController.prototype.showNewBuddyPopup=function(){
this._toolbar.expandItem(this._newBuddyItem,true);
return this._newBuddyItem.getPopup()
};
ZmTaskbarController.prototype.showGatewayPopup=function(t){
if(this._gatewayData){
var e=this._gatewayData[t];
if(e){
this._toolbar.expandItem(e.item,true)
}}};
ZmTaskbarController.prototype._subscribeDisposeListener=function(t){
var e=this._subscribeData[t];
this._toolbar.removeSeparator(e.separator);
delete this._subscribeData[t]
};
ZmTaskbarController.prototype._addChatToMru=function(e){
if(this._chatMru.length>=4){
for(var o=this._chatMru.length,a=o-1;
a>=0;
a--){
var t=this._chatMru[a];
var n=this._chatData[t.id].item;
if(!n.expanded&&!n.isAlertShown()){
this.endChat(t);
break
}}}
this._chatMru.unshift(e)
};
ZmTaskbarController.prototype._updateChatMru=function(e){
if(this._chatMru.length&&(this._chatMru[0]!=e)){
this._removeChatFromMru(e);
this._chatMru.unshift(e)
}};
ZmTaskbarController.prototype._removeChatFromMru=function(e){
for(var t=0,a=this._chatMru.length;
t<a;
t++){
if(this._chatMru[t]==e){
this._chatMru.splice(t,1);
return
}}};
ZmTaskbarController.prototype._chatMouseDownListener=function(e,a){
if(a.button!=DwtMouseEvent.RIGHT){
return
}
this._actionedChat=e;
if(!this._chatActionMenu){
var t={
parent:appCtxt.getShell(),controller:this,context:ZmId.TASKBAR,menuType:"Chat",menuItems:[ZmId.OP_IM_CLOSE_CHAT,ZmId.OP_IM_CLOSE_ALL_CHATS,ZmId.OP_IM_CLOSE_OTHER_CHATS]};
this._chatActionMenu=new ZmActionMenu(t);
this._chatActionMenu.getOp(ZmId.OP_IM_CLOSE_CHAT).addSelectionListener(new AjxListener(this,this._closeChatMenuListener));
this._chatActionMenu.getOp(ZmId.OP_IM_CLOSE_ALL_CHATS).addSelectionListener(new AjxListener(this,this._closeAllChatsListener));
this._chatActionMenu.getOp(ZmId.OP_IM_CLOSE_OTHER_CHATS).addSelectionListener(new AjxListener(this,this._closeOtherChatsListener))
}
this._chatActionMenu.popup(0,a.docX,a.docY)
};
ZmTaskbarController.prototype._closeChatMenuListener=function(){
this.endChat(this._actionedChat);
this._actionedChat=null
};
ZmTaskbarController.prototype._closeAllChatsListener=function(){
var e=[];
for(var o in this._chatData){
e.push(this._chatData[o].chat)
}
for(var t=0,a=e.length;
t<a;
t++){
this.endChat(e[t])
}
this._actionedChat=null
};
ZmTaskbarController.prototype._closeOtherChatsListener=function(){
var o=[];
for(var n in this._chatData){
var e=this._chatData[n].chat;
if(e!=this._actionedChat){
o.push(e)
}}
for(var t=0,a=o.length;
t<a;
t++){
this.endChat(o[t])
}
this._actionedChat=null
};
ZmTaskbarController.prototype._newBuddyListener=function(){
ZmImApp.INSTANCE.prepareVisuals();
ZmImApp.INSTANCE.getImController()._newRosterItemListener()
};
ZmTaskbarController.prototype._toolbarMouseDownListener=function(e){
if(e.button==DwtMouseEvent.LEFT&&this._toolbar.expandedItem){
this._toolbar.expandItem(this._toolbar.expandedItem,false)
}};
ZmTaskbarController.prototype._rosterListChangeListener=function(s){
if(s.event==ZmEvent.E_MODIFY){
var t=s.getDetail("fields");
var o=s.getItems();
for(var e=0;
e<o.length;
e++){
var h=o[e];
if(h instanceof ZmRosterItem){
var a;
a=a||ZmImApp.INSTANCE.getRoster().getChatList();
var d=a.getChatsByRosterAddr(h.getAddress());
for(var n in d){
var l=d[n];
var r=this.getChatWidgetForChat(d[n]);
if(r){
r._rosterItemChangeListener(h,t)
}}}}}};
ZmTaskbarController.prototype._chatListListener=function(a){
if(a.event==ZmEvent.E_CREATE){
var e=a.getDetails().items[0];
var i=this._chatData[e.id];
var t;
if(i){
this._toolbar.conditionalExpand(i.item)
}else{
t=this.createChatItem(e,a.getDetails().background)
}}else{
if(a.event==ZmEvent.E_DELETE){
var e=a._details.items[0];
this._deleteChatItem(e)
}}};
ZmTaskbarController.prototype._deleteChatItem=function(e){
this._removeChatFromMru(e);
e.removeChangeListener(this._chatChangeListenerListenerObj);
var t=this._chatData[e.id];
if(t){
this._toolbar.removeSeparator(t.separator);
t.item.dispose();
this._chatButtonIndex-=1;
delete this._chatData[e.id]
}};
ZmTaskbarController.prototype._getChatToolTip=function(e,a){
var t=e.getRosterItem().getToolTip();
a.run(t)
};
ZmTaskbarController.prototype._expandChatItem=function(t,e,a){
this._updateChatMru(e);
this._toolbar.expandItem(t,a);
var i=this._chatData[e.id].chatWidget;
i._onMinimize(!a);
if(a){
i.focus()
}};
ZmTaskbarController.prototype._chatSelectionListener=function(e,a){
if(e&&a.target&&(a.target.className==this._closeClass)){
this.endChat(e)
}else{
var t=a.dwtObj.parent;
this._expandChatItem(t,e,!t.expanded)
}};
ZmTaskbarController.prototype._selectionListener=function(e){
this._toolbar.toggleExpanded(e.dwtObj.parent)
};
ZmTaskbarController.prototype._newBuddySelectionListener=function(e){
if(ZmImApp.loggedIn()){
this._toolbar.toggleExpanded(this._newBuddyItem)
}else{
ZmImApp.INSTANCE.login({
callback:this._newBuddySelectionListenerObj}
)
}};
ZmTaskbarController.prototype._chatChangeListenerListener=function(i){
var e=i.source;
var t=this._chatData[e.id];
if(t&&!t.item.expanded){
var a=i.getDetail("fields")[ZmChat.F_MESSAGE];
if(a&&!a.fromMe&&!a.isSystem){
t.item.showAlert(true);
this._updateChatMru(e)
}}};
ZmTaskbarController.prototype._closeChatListener=function(e){
this.endChat(e)
};
ZmTaskbarController.prototype._minimizeChatListener=function(e){
var t=this._chatData[e.id].item;
this._expandChatItem(t,e,false);
t.button.setDisplayState(DwtControl.SELECTED);
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._minimzeTimedAction,t),250)
};
ZmTaskbarController.prototype._minimzeTimedAction=function(e){
e.button.setDisplayState(DwtControl.NORMAL)
};
ZmTaskbarController.prototype._chatStatusListener=function(t,e){
var a=this._chatData[t.id].item;
a.button.setImage(e.statusImage);
var i=e.title?AjxStringUtil.clipByLength(e.title,15):"";
a.button.setText(i)
};
ZmTaskbarController.prototype._createItem=function(e){
e.parent=this._toolbar;
e.selectionListener=e.selectionListener||new AjxListener(this,this._selectionListener);
return new ZmTaskbarItem(e)
};
ZmTaskbarController.prototype._rosterChangeListener=function(a){
if(a.event==ZmEvent.E_MODIFY){
var e=a.getDetail("fields");
if(ZmRoster.F_PRESENCE in e){
var t=ZmImApp.INSTANCE.getRoster().getPresence();
this._updatePresenceButton(t)
}}};
ZmTaskbarController.prototype._updatePresenceButton=function(a){
var t=this._presenceItem.button;
t.setImage(a?a.getIcon():"Offline");
var e=a?AjxStringUtil.htmlEncode(a.getShowText()):ZmMsg.imStatusOffline;
var i=ZmImApp.INSTANCE.getServiceController().getMyPresenceTooltip(e);
t.setToolTipContent(i)
};
ZmTaskbarController.prototype._gatewayListListener=function(s){
if(!ZmImApp.INSTANCE.getServiceController().capabilities[ZmImServiceController.ACCOUNTS]){
return
}
this._gatewayData=this._gatewayData||{};
var h=s.roster.getGateways();
for(var a=1,n=h.length;
a<n;
a++){
var r=h[a];
if(!this._gatewayData[r.type]){
for(var e in this._gatewayData){
this._toolbar.addSeparator();
break
}
var t={
buttonConstructor:ZmStatusImageButton,contentClassName:"ZmGatewayPopup",data:r,rightAlign:true};
var o=this._createItem(t);
o.button.setImage("WebSearch");
this._gatewayData[r.type]={
item:o};
r.addListener(ZmImGateway.EVENT_SET_STATE,new AjxListener(this,this._gatewayEventListener,[r]))
}
this._updateGatewayButton(r)
}};
ZmTaskbarController.prototype._gatewayEventListener=function(e){
this._updateGatewayButton(e)
};
ZmTaskbarController.prototype._updateGatewayButton=function(i){
var a=this._presenceItem.button.getImage();
var e;
if(i.isOnline()){
e=this._gatewayOnlineFormat=this._gatewayOnlineFormat||new AjxMessageFormat(ZmMsg.imStatusGatewayOnline)
}else{
e=this._gatewayOfflineFormat=this._gatewayOfflineFormat||new AjxMessageFormat(ZmMsg.imStatusGatewayOffline);
a="Offline"
}
var o=e.format([ZmMsg["imGateway_"+i.type],i.nick]);
var t=this._gatewayData[i.type].item.button;
t.setToolTipContent(o);
t.setStatusImage(a)
};
ZmStatusImageButton=function(e){
e.className="ZmStatusImageButton";
DwtButton.call(this,e)
};
ZmStatusImageButton.prototype=new DwtButton;
ZmStatusImageButton.prototype.constructor=ZmStatusImageButton;
ZmStatusImageButton.prototype.TEMPLATE="share.App#ZmStatusImageButton";
ZmStatusImageButton.prototype.toString=function(){
return"ZmStatusImageButton"
};
ZmStatusImageButton.prototype.dispose=function(){
this._statusIconEl=null;
DwtMenuItem.prototype.dispose.call(this)
};
ZmStatusImageButton.prototype.setStatusImage=function(e){
if(this._statusIconEl){
AjxImg.setImage(this._statusIconEl,e)
}};
ZmStatusImageButton.prototype._createHtmlFromTemplate=function(e,t){
DwtButton.prototype._createHtmlFromTemplate.call(this,e,t);
this._statusIconEl=document.getElementById(t.id+"_status_icon")
}
}
if(AjxPackage.define("zimbraMail.core.ZmAppViewMgr")){
ZmAppViewMgr=function(i,t,e,a){
ZmAppViewMgr._setContainerIds();
this._shell=i;
this._controller=t;
this._isNewWindow=e;
this._hasSkin=a;
this._shellSz=this._shell.getSize();
this._shell.addControlListener(this._shellControlListener.bind(this));
this._sashSupported=(window.skin&&typeof window.skin.setTreeWidth=="function");
if(appCtxt.get(ZmSetting.HISTORY_SUPPORT_ENABLED)&&!e&&!AjxEnv.isPrism){
this._historyMgr=appCtxt.getHistoryMgr();
this._historyMgr.addListener(this._historyChangeListener.bind(this))
}
this._hashViewId={};
this._nextHashIndex=0;
this._curHashIndex=0;
this._noHistory=false;
this._ignoreHistoryChange=false;
this._lastViewId=null;
this._currentViewId=null;
this._hidden=[];
this._toRemove=[];
this._view={};
this._component={};
this._app={};
this._emptyView={
component:{}
,callback:{}
,hide:{}};
this._viewByTabId={};
this._pushCallback=this.pushView.bind(this);
this._popCallback=this.popView.bind(this);
this._createLoadingView()
};
ZmAppViewMgr.prototype.isZmAppViewMgr=true;
ZmAppViewMgr.prototype.toString=function(){
return"ZmAppViewMgr"
};
ZmAppViewMgr.C_BANNER="banner";
ZmAppViewMgr.C_USER_INFO="userInfo";
ZmAppViewMgr.C_QUOTA_INFO="quota";
ZmAppViewMgr.C_SEARCH="search";
ZmAppViewMgr.C_APP_CHOOSER="appChooser";
ZmAppViewMgr.C_TREE="tree";
ZmAppViewMgr.C_TOOLBAR_TOP="topToolbar";
ZmAppViewMgr.C_NEW_BUTTON="newButton";
ZmAppViewMgr.C_APP_CONTENT="main";
ZmAppViewMgr.C_SASH="sash";
ZmAppViewMgr.C_TREE_FOOTER="treeFooter";
ZmAppViewMgr.C_SEARCH_RESULTS_TOOLBAR="searchResultsToolbar";
ZmAppViewMgr.C_TASKBAR="taskbar";
ZmAppViewMgr.LEFT_NAV=[ZmAppViewMgr.C_NEW_BUTTON,ZmAppViewMgr.C_TREE,ZmAppViewMgr.C_TREE_FOOTER,ZmAppViewMgr.C_SASH];
ZmAppViewMgr.GLOBAL="Global";
ZmAppViewMgr.APP="App";
ZmAppViewMgr.CONT_ID_KEY={};
ZmAppViewMgr.CB_PRE_HIDE="PRE_HIDE";
ZmAppViewMgr.CB_POST_HIDE="POST_HIDE";
ZmAppViewMgr.CB_PRE_SHOW="PRE_SHOW";
ZmAppViewMgr.CB_POST_SHOW="POST_SHOW";
ZmAppViewMgr.CB_PRE_UNLOAD="PRE_UNLOAD";
ZmAppViewMgr.CB_POST_REMOVE="POST_REMOVE";
ZmAppViewMgr.PENDING_VIEW="ZmAppViewMgr.PENDING_VIEW";
ZmAppViewMgr.BROWSER_BACK="BACK";
ZmAppViewMgr.BROWSER_FORWARD="FORWARD";
ZmAppViewMgr.TAB_BUTTON_MAX_TEXT=15;
ZmAppViewMgr._setContainerIds=function(){
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_BANNER]=ZmId.SKIN_LOGO;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_USER_INFO]=ZmId.SKIN_USER_INFO;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_QUOTA_INFO]=ZmId.SKIN_QUOTA_INFO;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_SEARCH]=ZmId.SKIN_SEARCH;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_SEARCH_RESULTS_TOOLBAR]=ZmId.SKIN_SEARCH_RESULTS_TOOLBAR;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_APP_CHOOSER]=ZmId.SKIN_APP_CHOOSER;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_TREE]=ZmId.SKIN_TREE;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_TREE_FOOTER]=ZmId.SKIN_TREE_FOOTER;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_TOOLBAR_TOP]=ZmId.SKIN_APP_TOP_TOOLBAR;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_NEW_BUTTON]=ZmId.SKIN_APP_NEW_BUTTON;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_APP_CONTENT]=ZmId.SKIN_APP_MAIN;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_SASH]=ZmId.SKIN_SASH;
ZmAppViewMgr.CONT_ID_KEY[ZmAppViewMgr.C_TASKBAR]=ZmId.SKIN_TASKBAR;
ZmAppViewMgr.ALL_COMPONENTS=AjxUtil.keys(ZmAppViewMgr.CONT_ID_KEY)
};
ZmAppViewMgr.prototype.getViewComponent=function(n,e){
var t=this._view[e||this._currentViewId]||this._emptyView;
var o=t.app||appCtxt.getCurrentAppName();
var i=this._view[o];
var a=this._view[ZmAppViewMgr.GLOBAL];
return((t&&t.component[n])||(i&&i.component[n])||(a&&a.component[n]))
};
ZmAppViewMgr.prototype.getCurrentViewComponent=ZmAppViewMgr.prototype.getViewComponent;
ZmAppViewMgr.prototype._getView=function(e,a){
var t;
if(e==ZmAppViewMgr.GLOBAL){
t=this._view[e]||this.createView({
viewId:e}
)
}else{
if(e==ZmAppViewMgr.APP){
e=a||appCtxt.getCurrentAppName();
t=this._view[e]||this.createView({
viewId:e}
)
}else{
t=this._view[e||this._currentViewId]||this.createView({
viewId:e}
)
}}
return t
};
ZmAppViewMgr.prototype.setViewComponents=function(m,h,u,a){
var d=this._getView(m,a);
if(!d){
return
}
var s=0;
var e=AjxUtil.arraySize(h);
for(var c in h){
var r=h[c];
if(!r){
continue
}
if(this.isHidden(c,m)){
continue
}
var t=u&&!this.isHidden(c,this._currentViewId);
if(t){
var l=this._component[c]&&this._component[c].control;
if(l&&(l!=r)){
this.showComponent(c,false,l)
}}
d.component[c]=r;
if(this._hasSkin){
this.getContainer(c,r)
}
this.displayComponent(c,t,false,null,true);
if(c==ZmAppViewMgr.C_SASH){
if(this._sashSupported){
r.registerCallback(this._appTreeSashCallback,this);
if(appCtxt.get(ZmSetting.FOLDER_TREE_SASH_WIDTH)){
var n=appCtxt.get(ZmSetting.FOLDER_TREE_SASH_WIDTH);
var o=skin.getTreeWidth();
this._appTreeSashCallback(n-o)
}}
r.setCursor("default")
}
s++
}
if(u){
this.fitAll()
}};
ZmAppViewMgr.prototype.addComponents=ZmAppViewMgr.prototype.setViewComponents;
ZmAppViewMgr.prototype.isHidden=function(n,e){
var t=this._view[e||this._currentViewId]||this._emptyView;
var o=t.app||appCtxt.getCurrentAppName();
var i=this._view[o];
var a=this._view[ZmAppViewMgr.GLOBAL];
if(t&&t.component[n]){
return false
}else{
if(t&&t.hide[n]){
return true
}else{
if(i&&i.component[n]){
return false
}else{
if(i&&i.hide[n]){
return true
}else{
if(a&&a.component[n]){
return false
}else{
return a&&a.hide[n]
}}}}}};
ZmAppViewMgr.prototype.setHiddenComponents=function(t,e,n,s){
e=AjxUtil.toArray(e);
var a=this._getView(t,s);
if(!a){
return
}
for(var o=0;
o<e.length;
o++){
a.hide[e[o]]=n
}};
ZmAppViewMgr.prototype.showSkinElement=function(a,e,t){
if(this._hasSkin){
skin.show(a,e,t)
}};
ZmAppViewMgr.prototype.showComponent=function(a,e,t){
t=t||this.getViewComponent(a);
if(t){
if(e){
t.zShow(true);
t.noTab=false
}else{
if(t.getPosition()==Dwt.ABSOLUTE_STYLE){
t.setLocation(Dwt.LOC_NOWHERE,Dwt.LOC_NOWHERE)
}
t.zShow(false);
t.noTab=true
}}};
ZmAppViewMgr.prototype.displayComponent=function(o,e,a,t,i){
this.showSkinElement(o,e,i);
this.showComponent(o,e,t);
if(a){
this._fitToContainer(o)
}};
ZmAppViewMgr.prototype.getContainer=function(s,t){
var a=this._component[s]=this._component[s]||{};
if(!a.container){
var n=ZmAppViewMgr.CONT_ID_KEY[s];
var e=document.getElementById(n);
if(!e){
return null
}
a.container=e;
if(t){
e.innerHTML="";
var o=this._getContainerBounds(s);
var i=Boolean(this.getViewComponent(ZmAppViewMgr.C_TOOLBAR_TOP));
if(o){
t.setBounds(o.x,o.y,o.width,o.height,i)
}}}
return a.container
};
ZmAppViewMgr.prototype.getCurrentViewId=function(){
return this._currentViewId
};
ZmAppViewMgr.prototype.getCurrentViewType=function(){
var e=this._view[this._currentViewId];
return e?e.type:""
};
ZmAppViewMgr.prototype.getLastViewId=function(){
return this._lastViewId
};
ZmAppViewMgr.prototype.getCurrentView=function(e){
return this.getViewComponent(ZmAppViewMgr.C_APP_CONTENT,e||this._currentViewId)
};
ZmAppViewMgr.prototype.getAppView=function(e){
return this._app[e]&&this._app[e].viewId
};
ZmAppViewMgr.prototype.setAppView=function(t,e){
if(!t||!e){
return
}
var t=this._app[t];
if(!t){
t=this._app[t]={}
}
t.viewId=e
};
ZmAppViewMgr.prototype.getViewsByType=function(a,o){
var i=[];
for(var e in this._view){
var t=this._view[e];
if(t.type==a&&(!o||t.visible)){
i.push(t)
}}
return i
};
ZmAppViewMgr.prototype.createView=function(o){
o=o||{};
var e=o.viewId;
if(!e){
return null
}
var t=this._view[e]={
id:e,type:o.viewType||e,component:o.elements||{}
,controller:o.controller,callback:o.callbacks||{}
,app:o.appName,isAppView:o.isAppView,isTransient:o.isTransient,isFullScreen:o.isFullScreen,hide:AjxUtil.arrayAsHash(o.hide||[])};
if(o.appName&&!this._app[o.appName]){
this._app[o.appName]={}
}
if(!this._isNewWindow&&o.tabParams){
t.tabParams=o.tabParams;
t.isTabView=true;
this._viewByTabId[o.tabParams.id]=e
}
var i=o.isAppView&&o.elements&&o.elements[ZmAppViewMgr.C_APP_CONTENT],a=i&&i.getHtmlElement();
if(a){
a.setAttribute("role","main")
}
return t
};
ZmAppViewMgr.prototype.pushView=function(u,t){
if(!u){
return false
}
u=this._viewByTabId[u]||u;
var l=this._view[u]||this._emptyView;
var a=(u==ZmAppViewMgr.PENDING_VIEW);
if(!a&&!l){
return false
}
if(a){
u=this._pendingView
}
var e=l.controller;
if(u==this._currentViewId){
if(e){
e._restoreFocus()
}
return true
}
if(l.isTabView){
var d=l.tabParams;
var r=d&&d.tabCallback&&d.tabCallback.run(this._currentViewId,u);
if(d&&!r){
var f=appCtxt.getAppChooser();
var s=f.getButton(d.id);
if(!s){
s=f.addButton(d.id,d);
s.setHoverImage("Close","right")
}}}
if(a){
t=true
}
var c=this._view[this._currentViewId]||this._emptyView;
if(!this._hideView(this._currentViewId,t||c.isTabView,false,u)){
this._pendingAction=this._pushCallback;
this._pendingView=u;
return false
}
this.setViewComponents(u,l.component);
var h=c.controller;
var o=c.isTransient||(h&&h.isTransient(this._currentViewId,u));
if(this._currentViewId&&(this._currentViewId!=u)&&!o){
this._hidden.push(this._currentViewId)
}
this._removeFromHidden(u);
var m=this._lastViewId;
this._lastViewId=this._currentViewId;
this._currentViewId=u;
if(!this._showView(u,t,(u!=this._currentViewId))){
this._currentViewId=this._lastViewId;
this._lastViewId=m;
this._pendingAction=this._pushCallback;
this._pendingView=u;
return false
}
if(this._noHistory){
this._noHistory=false
}else{
if(u!=ZmId.VIEW_LOADING){
this._nextHashIndex++;
this._curHashIndex=this._nextHashIndex;
this._hashViewId[this._curHashIndex]=u;
if(this._historyMgr){
this._historyMgr.add(this._curHashIndex)
}}}
this._layout(this._currentViewId);
if(e&&e.setCurrentViewId){
e.setCurrentViewId(u)
}
if(l.isAppView){
this.setAppView(l.app,u)
}
if(this._toRemove.length){
for(var n=0;
n<this._toRemove.length;
n++){
this._removeFromHidden(this._toRemove[n])
}
this._toRemove=[]
}
return true
};
ZmAppViewMgr.prototype.popView=function(t,r,o){
r=this._viewByTabId[r]||r;
var n=this._view[r]||this._emptyView;
if(!this._currentViewId){
return false
}
var a=(t==ZmAppViewMgr.PENDING_VIEW);
if(a){
r=t;
t=true
}
if(r&&!a&&(this._currentViewId!=r)){
if(n.isTabView&&(this._currentViewId!=r)){
this.pushView(r)
}else{
return false
}}
var l=false,i=false;
var e=null;
var s=this._view[this._currentViewId]||this._emptyView;
if(!this._hidden.length&&!this._isNewWindow){
l=!s.isTabView;
i=true;
e=appCtxt.getCurrentAppName()||appCtxt.startApp
}
if(!this._hideView(this._currentViewId,t,l)){
this._pendingAction=this._popCallback;
this._pendingView=null;
return false
}
this._deactivateView(this._currentViewId);
if(s.isTabView){
appCtxt.getAppChooser().removeButton(s.tabParams.id);
var h=s.callback[ZmAppViewMgr.CB_POST_REMOVE];
if(h){
h.run()
}}
if(i){
if(e){
this._controller.activateApp(ZmApp.MAIL)
}
return !l
}
this._lastViewId=this._currentViewId;
this._currentViewId=this._hidden.pop();
if(!this._currentViewId&&this._isNewWindow){
window.close();
return false
}
if(!this._showView(this._currentViewId,this._popCallback,null,t,true)){
return false
}
this._removeFromHidden(this._currentViewId);
if(this._historyMgr&&!o){
if(this._noHistory){
this._noHistory=false
}else{
this._ignoreHistoryChange=true;
history.back()
}}
this._layout(this._currentViewId);
return true
};
ZmAppViewMgr.prototype.setView=function(t,o){
var e=this.pushView(t,o);
if(e){
for(var a=0;
a<this._hidden.length;
a++){
this._deactivateView(this._hidden[a])
}
this._hidden=[]
}
return e
};
ZmAppViewMgr.prototype.stageView=function(e){
this._removeFromHidden(e);
this._hidden.push(e)
};
ZmAppViewMgr.prototype.isAppView=function(e){
var t=this._view[e||this._currentViewId]||this._emptyView;
return t.isAppView
};
ZmAppViewMgr.prototype.isFullScreen=function(e){
var t=this._view[e||this._currentViewId]||this._emptyView;
return t.isFullScreen
};
ZmAppViewMgr.prototype.showPendingView=function(e){
if(e&&this._pendingAction){
this._pendingAction.run(ZmAppViewMgr.PENDING_VIEW)
}
if(!e){
if(this._browserAction==ZmAppViewMgr.BROWSER_BACK){
this._ignoreHistoryChange=true;
history.forward()
}else{
if(this._browserAction==ZmAppViewMgr.BROWSER_FORWARD){
this._ignoreHistoryChange=true;
history.back()
}}
this._browserAction=null
}
this._pendingAction=this._pendingView=null
};
ZmAppViewMgr.prototype.fitAll=function(){
this._shell.relayout();
this._fitToContainer(ZmAppViewMgr.ALL_COMPONENTS)
};
ZmAppViewMgr.prototype.getPendingViewId=function(){
return this._pendingView
};
ZmAppViewMgr.prototype.updateTitle=function(){
this._setTitle(this._currentViewId)
};
ZmAppViewMgr.prototype.setTabTitle=function(e,o){
var t=this._view[e||this._currentViewId]||this._emptyView;
var i=t.tabParams;
var a=!appCtxt.isChildWindow&&i&&appCtxt.getAppChooser().getButton(i.id);
if(a){
a.setText(AjxStringUtil.htmlEncode(o))
}};
ZmAppViewMgr.prototype.isOkToUnload=function(){
for(var e in this._view){
var t=this._view[e];
var i=t&&t.callback&&t.callback[ZmAppViewMgr.CB_PRE_UNLOAD];
if(i){
var a=i.run(e);
if(!a){
return false
}}}
return true
};
ZmAppViewMgr.prototype._createLoadingView=function(){
this.loadingView=new DwtControl({
parent:this._shell,className:"DwtListView",posStyle:Dwt.ABSOLUTE_STYLE,id:ZmId.LOADING_VIEW}
);
var e=this.loadingView.getHtmlElement();
e.innerHTML=AjxTemplate.expand("share.App#Loading",this._htmlElId);
var t={};
t[ZmAppViewMgr.C_APP_CONTENT]=this.loadingView;
this.createView({
viewId:ZmId.VIEW_LOADING,elements:t}
)
};
ZmAppViewMgr.prototype._fitToContainer=function(e,h){
var e=AjxUtil.toArray(e);
for(var a=0;
a<e.length;
a++){
var r=e[a];
if(!h&&AjxEnv.isIE&&(r==ZmAppViewMgr.C_TASKBAR)){
if(!this._ieHackAction){
this._ieHackAction=new AjxTimedAction(this,this._fitToContainer,[[ZmAppViewMgr.C_TASKBAR],true])
}
AjxTimedAction.scheduleAction(this._ieHackAction,1)
}
var m=this.getContainer(r);
if(m){
var s=this.getViewComponent(r);
if(s&&(s.getZIndex()!=Dwt.Z_HIDDEN)){
var o=this._getComponentPosition(r);
var d=(o==Dwt.STATIC_STYLE);
var u=s.getHtmlElement();
if(o){
u.style.position=o
}
var c=this._component[r];
if(d){
if(u.parentNode!=m){
m.appendChild(u)
}
if(s.adjustSize){
s.adjustSize()
}}else{
var n=Dwt.getBounds(m);
var t=Dwt.getInsets(m);
Dwt.insetBounds(n,t);
c.bounds=n;
var l=Boolean(this._component[ZmAppViewMgr.C_TOOLBAR_TOP].control);
s.setBounds(n.x,n.y,n.width,n.height,l)
}
c.control=s
}}}
if(window.DBG&&DBG.getDebugLevel()>=AjxDebug.DBG2){
this._debugShowMetrics(e)
}};
ZmAppViewMgr.prototype._getComponentPosition=function(e){
return appCtxt.getSkinHint(e,"position")
};
ZmAppViewMgr.prototype._getContainerBounds=function(o){
var e=this._getComponentPosition(o);
if(e==Dwt.STATIC_STYLE){
return null
}
var a=this.getContainer(o);
if(a){
var i=Dwt.getBounds(a);
var t=Dwt.getInsets(a);
Dwt.insetBounds(i,t);
return i
}
return null
};
ZmAppViewMgr.prototype._layout=function(t){
if(this._hasSkin){
return
}
var a=this.getViewComponent(ZmAppViewMgr.C_TOOLBAR_TOP);
if(a){
var o=a.getSize();
var e=o.y?o.y:a.getHtmlElement().clientHeight;
a.setBounds(0,0,this._shellSz.x,e)
}
var i=this.getCurrentView();
if(i){
i.setBounds(0,e,this._shellSz.x,this._shellSz.y-e,Boolean(a))
}};
ZmAppViewMgr.prototype._hideView=function(e,o,n,a){
if(!e){
return true
}
var t=this._view[e]||this._emptyView;
var i=true;
var s=t.callback[ZmAppViewMgr.CB_PRE_HIDE];
if(s){
i=s.run(e,o,a)
}
if(i){
if(!n){
this._setViewVisible(e,false)
}
if(appCtxt.get(ZmSetting.USE_KEYBOARD_SHORTCUTS)){
appCtxt.getKeyboardMgr().clearKeySeq()
}
s=t.callback[ZmAppViewMgr.CB_POST_HIDE];
if(s){
s.run(e,a)
}}
return i
};
ZmAppViewMgr.prototype._showView=function(e,o,i){
if(!e){
return true
}
var t=this._view[e]||this._emptyView;
var a=true;
var n=t.callback[ZmAppViewMgr.CB_PRE_SHOW];
if(n){
a=n.run(e,i,o)
}
if(a){
this._setViewVisible(e,true);
n=t.callback[ZmAppViewMgr.CB_POST_SHOW];
if(n){
n.run(e,i)
}}
appCtxt.notifyZimlets("onShowView",[e,i]);
return a
};
ZmAppViewMgr.prototype._setViewVisible=function(l,h){
var r=this._view[l]||this._emptyView;
r.visible=h;
if(h){
for(var a=0;
a<ZmAppViewMgr.ALL_COMPONENTS.length;
a++){
var s=ZmAppViewMgr.ALL_COMPONENTS[a];
var n=this.getViewComponent(s,this._lastViewId);
if(n){
this.displayComponent(s,false,null,n,true)
}
var o=this.getViewComponent(s,l);
if(o){
if(!this.isHidden(s,l)){
this.displayComponent(s,true,null,o,true)
}}}
if(this._hasSkin){
this.fitAll()
}
this._setTitle(l);
if(r.isTabView){
var e=r.tabParams.id;
this._controller.setActiveTabId(e)
}
if(r.app){
this._controller.setActiveApp(r)
}}else{
for(var s in r.component){
this.showComponent(s,false)
}
var t=this._view[r.app];
if(t){
for(var s in t.component){
this.showComponent(s,false)
}}}};
ZmAppViewMgr.prototype._removeFromHidden=function(e){
AjxUtil.arrayRemove(this._hidden,e)
};
ZmAppViewMgr.prototype._deactivateView=function(e){
e=e||this._currentViewId;
var t=this._view[e]||this._emptyView;
for(var i in t.component){
var a=this.getViewComponent(i,e);
if(a&&a.deactivate){
a.deactivate()
}}};
ZmAppViewMgr.prototype._setTitle=function(e){
var t=this.getCurrentView();
if(t&&t.getTitle){
var a=t.getTitle();
Dwt.setTitle(a?a:ZmMsg.zimbraTitle)
}};
ZmAppViewMgr.prototype._shellControlListener=function(i){
if(i.oldWidth!=i.newWidth||i.oldHeight!=i.newHeight){
this._shellSz.x=i.newWidth;
this._shellSz.y=i.newHeight;
var a=i.newWidth-i.oldWidth;
var n=i.newHeight-i.oldHeight;
if(this._isNewWindow){
var e=this._view[this._currentViewId]||this._emptyView;
if(e.component){
var t=e.component[ZmAppViewMgr.C_TOOLBAR_TOP];
if(t){
t.setSize(i.newWidth,Dwt.DEFAULT)
}
var o=this.getCurrentView();
if(o){
o.setSize(i.newWidth,i.newHeight-t.getH())
}}}else{
this.fitAll()
}}};
ZmAppViewMgr.prototype._debugShowMetrics=function(o){
for(var t=0;
t<o.length;
t++){
var n=o[t];
var e=this.getContainer(n);
if(e){
var a=Dwt.getBounds(e)
}}};
ZmAppViewMgr.prototype._historyChangeListener=function(a){
if(appCtxt.inStartup){
return
}
if(!(a&&a.data)){
return
}
if(this._ignoreHistoryChange){
this._ignoreHistoryChange=false;
return
}
var i=DwtBaseDialog.getActiveDialog();
if(i&&i.isPoppedUp()){
i.popdown()
}
var t=parseInt(a.data);
this._noHistory=true;
var e=this._hashViewId[t];
if(t==(this._curHashIndex-1)){
this._browserAction=ZmAppViewMgr.BROWSER_BACK;
this.popView()
}else{
if(t==(this._curHashIndex+1)){
this._browserAction=ZmAppViewMgr.BROWSER_FORWARD;
this.pushView(e)
}else{
this._browserAction=null;
this.pushView(e)
}}
this._curHashIndex=t
};
ZmAppViewMgr.prototype._appTreeSashCallback=function(i){
if(!window.skin){
return
}
var e=skin.getTreeWidth();
if(e===null){
return 0
}
if(!this.treeMinSize){
this.treeMinSize=DwtCssStyle.asPixelCount(window.skin.hints.tree.minWidth||150);
this.treeMaxSize=DwtCssStyle.asPixelCount(window.skin.hints.tree.maxWidth||1000)
}
if(e+i>this.treeMaxSize){
i=Math.max(0,this.treeMaxSize-e)
}
if(e+i<this.treeMinSize){
i=Math.min(0,this.treeMinSize-e)
}
var t=e+i;
skin.setTreeWidth(t);
var a=this;
setTimeout(function(){
a.fitAll()
}
,0);
return i
}
}
if(AjxPackage.define("zimbraMail.core.ZmRequestMgr")){
ZmRequestMgr=function(e){
this._controller=e;
appCtxt.setRequestMgr(this);
ZmCsfeCommand.setServerUri(appCtxt.get(ZmSetting.CSFE_SERVER_URI));
var t=appCtxt.get(ZmSetting.CLIENT_VERSION);
ZmCsfeCommand.clientVersion=(!t||t.indexOf("@")==0)?"dev build":t;
this._shell=appCtxt.getShell();
this._highestNotifySeen=0;
this._cancelActionId={};
this._pendingRequests={};
this._useXml=appCtxt.get(ZmSetting.USE_XML);
this._logRequest=appCtxt.get(ZmSetting.LOG_REQUEST);
this._stdTimeout=appCtxt.get(ZmSetting.TIMEOUT);
this._unreadListener=new AjxListener(this,this._unreadChangeListener)
};
ZmRequestMgr._SENT=1;
ZmRequestMgr._RESPONSE=2;
ZmRequestMgr._CANCEL=3;
ZmRequestMgr.RETRY_MAX=2;
ZmRequestMgr.RETRY_DELAY=5;
ZmRequestMgr.RETRY_ON_EXCEPTION={};
ZmRequestMgr.RETRY_ON_EXCEPTION[ZmCsfeException.EMPTY_RESPONSE]=true;
ZmRequestMgr._nextReqId=1;
ZmRequestMgr.OFFLINE_HEAP_DUMP="heapdump_upload";
ZmRequestMgr.OFFLINE_MUST_RESYNC="resync";
ZmRequestMgr.OFFLINE_MUST_GAL_RESYNC="gal_resync";
ZmRequestMgr.OFFLINE_FOLDER_MOVE_FAILED="foldermove_failed";
ZmRequestMgr.prototype.toString=function(){
return"ZmRequestMgr"
};
ZmRequestMgr.prototype.sendRequest=function(g){
var t=g.response;
if(t){
if(g.reqId){
g=this._pendingRequests[g.reqId]||g;
g.response=t
}
g.asyncMode=true;
return this._handleResponseSendRequest(g,new ZmCsfeResult(t))
}
if(g.offlineRequest||appCtxt.isWebClientOffline()){
if(g.offlineCallback){
g.offlineCallback.run(g)
}
return
}
var d=g.reqId=("Req_"+ZmRequestMgr._nextReqId++);
var s=g.timeout=(g.timeout!=null)?g.timeout:this._stdTimeout;
if(s){
s=s*1000
}
var y=g.asyncMode?new AjxCallback(this,this._handleResponseSendRequest,[g]):null;
if(g.sensitive){
var f=document.location.protocol==ZmSetting.PROTO_HTTP;
var i=appCtxt.get(ZmSetting.PROTOCOL_MODE)==ZmSetting.PROTO_MIXED;
if(f&&i){
return this._sensitiveRequest(g,d)
}}
var a=new ZmCsfeCommand();
var e=g.accountName;
if(!e){
var h=appCtxt.getActiveAccount();
e=(h&&h.id!=ZmAccountList.DEFAULT_ID)?h.name:null
}
var l=null;
if(g.useChangeToken&&(!e||(e===appCtxt.accountList.mainAccount.name))){
l=this._changeToken
}
var n,r;
if(g.restUri){
n={
restUri:g.restUri,asyncMode:g.asyncMode,callback:y}
}else{
n={
jsonObj:g.jsonObj,soapDoc:g.soapDoc,accountName:e,useXml:this._useXml,changeToken:l,asyncMode:g.asyncMode,callback:y,logRequest:this._logRequest,highestNotifySeen:this._highestNotifySeen,noAuthToken:true,skipAuthCheck:g.skipAuthCheck,resend:g.resend,noSession:g.noSession,useStringify1:(AjxEnv.isIE||AjxEnv.isModernIE)&&g.fromChildWindow,emptyResponseOkay:g.emptyResponseOkay};
r=g.methodName=ZmCsfeCommand.getMethodName(n.jsonObj||n.soapDoc)
}
appCtxt.currentRequestParams=g;
var u=s?[d,g.errorCallback,g.noBusyOverlay]:null;
if(!g.noBusyOverlay){
var o=null;
var c=false;
if(s){
o=new AjxCallback(this,this.cancelRequest,u);
this._shell.setBusyDialogText(ZmMsg.askCancel);
c=true
}
this._shell.setBusy(true,d,c,s,o)
}else{
if(s){
var m=new AjxTimedAction(this,this.cancelRequest,u);
this._cancelActionId[d]=AjxTimedAction.scheduleAction(m,s)
}}
this._pendingRequests[d]=a;
try{
var t=g.restUri?a.invokeRest(n):a.invoke(n);
a.state=ZmRequestMgr._SENT
}
catch(p){
this._handleResponseSendRequest(g,new ZmCsfeResult(p,true));
return
}
return(g.asyncMode)?d:(this._handleResponseSendRequest(g,t))
};
ZmRequestMgr.prototype._handleResponseSendRequest=function(t,d){
var c=(t.response!=null);
if(!c&&!appCtxt.isWebClientOffline()){
if(!this._pendingRequests[t.reqId]){
return
}
if(this._pendingRequests[t.reqId].state==ZmRequestMgr._CANCEL){
return
}
this._pendingRequests[t.reqId].state=ZmRequestMgr._RESPONSE;
if(!t.noBusyOverlay){
this._shell.setBusy(false,t.reqId)
}}
var a,l;
try{
if(t.asyncMode&&!t.restUri){
a=d.getResponse()
}else{
if(d._isException){
throw d._data
}else{
a=d
}}
if(a.Header){
l=this._handleHeader(a.Header)
}}
catch(n){
var e=t.errorCallback;
if(e){
var i=e.run(n,t);
if(!i){
this._handleException(n,t)
}}else{
var o=function(u,m){
if(u&&(u.length>0)){
for(var f in u){
if(u[f]==m){
return true
}}}
return false
}
(t.ignoreErrs,n.code);
if(n.code===ZmCsfeException.EMPTY_RESPONSE&&t.offlineCallback){
t.offlineCallback(t);
if(appCtxt.isWebClientOffline()&&!t.noBusyOverlay){
this._shell.setBusy(false,t.reqId)
}
o=true
}
if(!o){
this._handleException(n,t)
}}
var h=d.getHeader();
if(h){
this._handleHeader(h);
this._handleNotifications(h)
}
this._clearPendingRequest(t.reqId);
return
}
if(t.asyncMode&&!t.restUri){
d.set(a.Body)
}
if(!appCtxt.isOffline&&!c){
this._controller._kickPolling(true)
}
var s=ZmCsfeCommand.getMethodName(t.jsonObj||t.soapDoc);
if(t.asyncMode&&t.callback){
t.callback.run(d)
}
this._handleNotifications(a.Header,s);
this._clearPendingRequest(t.reqId);
if(l&&(!appCtxt.isOffline||!appCtxt.multiAccounts)&&!t.more){
this._refreshHandler(l)
}
if(!t.asyncMode){
return a.Body
}
var r=this._controller;
if(r._evtMgr&&r._evtMgr.isListenerRegistered(ZmAppEvent.RESPONSE)){
r._evt.request=s;
r.notify(ZmAppEvent.RESPONSE)
}};
ZmRequestMgr.prototype.cancelRequest=function(i,e,t){
if(!this._pendingRequests[i]){
return
}
if(this._pendingRequests[i].state==ZmRequestMgr._RESPONSE){
return
}
this._pendingRequests[i].state=ZmRequestMgr._CANCEL;
if(!t){
this._shell.setBusy(false,i)
}
this._pendingRequests[i].cancel();
if(e){
var a=new AjxException("Request canceled",AjxException.CANCELED,"ZmRequestMgr.prototype.cancelRequest");
e.isAjxCallback?e.run(a):e(a)
}
this._clearPendingRequest(i)
};
ZmRequestMgr.prototype._clearPendingRequest=function(a){
var t=this._pendingRequests[a];
if(t){
if(t.iframeId){
var e=document.getElementById(t.iframeId);
if(e){
e.parentNode.removeChild(e)
}}
delete this._pendingRequests[a]
}
var i=this._cancelActionId[a];
if(i&&i!=-1){
AjxTimedAction.cancelAction(i);
this._cancelActionId[a]=-1
}};
ZmRequestMgr.prototype._handleHeader=function(s){
var t=s&&s.context;
if(!t){
return
}
if(t.change){
this._changeToken=t.change.token
}
if(t.zdsync&&t.zdsync.account){
var e=t.zdsync.account;
for(var o=0;
o<e.length;
o++){
var n=appCtxt.accountList.getAccount(e[o].id);
if(n){
var a=e[o].dialog;
if(a){
this._handleOfflineInfoDialog(a[0],n)
}
n.updateState(e[o])
}}}
if(t.refresh){
this._controller.runAppFunction("_clearDeferredFolders");
this._loadTrees(t.refresh);
this._controller.runAppFunction("_createVirtualFolders");
this._highestNotifySeen=0
}
return t.refresh
};
ZmRequestMgr.prototype._handleOfflineInfoDialog=function(a,i){
if(!a.type){
return
}
var e;
switch(a.type){
case ZmRequestMgr.OFFLINE_HEAP_DUMP:e=ZmMsg.offlineHeapDump;
break;
case ZmRequestMgr.OFFLINE_MUST_RESYNC:e=AjxMessageFormat.format(ZmMsg.offlineMustReSync,i.name);
break;
case ZmRequestMgr.OFFLINE_MUST_GAL_RESYNC:e=AjxMessageFormat.format(ZmMsg.offlineMustGalReSync,i.name);
break;
case ZmRequestMgr.OFFLINE_FOLDER_MOVE_FAILED:appCtxt.setStatusMsg(ZmMsg.offlineMoveFolderError);
break;
default:}
if(!e){
return
}
var t=appCtxt.getOkCancelMsgDialog();
t.setMessage(e);
t.registerCallback(DwtDialog.OK_BUTTON,this._handleOfflineDialogAction,this,[t,a.type,i.id,true]);
t.registerCallback(DwtDialog.CANCEL_BUTTON,this._handleOfflineDialogAction,this,[t,a.type,i.id,false]);
t.popup()
};
ZmRequestMgr.prototype._handleOfflineDialogAction=function(o,a,t,i){
var e={
jsonObj:{
DialogActionRequest:{
_jsns:"urn:zimbraOffline",type:a,id:t,action:i?"yes":"no"}}
,callback:new AjxCallback(this,this._handleOfflineDialogActionResp,o),errorCallback:new AjxCallback(this,this._handleOfflineDialogActionResp,o),asyncMode:true};
this.sendRequest(e)
};
ZmRequestMgr.prototype._handleOfflineDialogActionResp=function(t,e){
if(t.isPoppedUp()){
t.popdown()
}};
ZmRequestMgr.prototype._handleException=function(e,a){
var t=false;
if(ZmRequestMgr.RETRY_ON_EXCEPTION[e.code]){
a.retryCount=a.retryCount||0;
if(a.retryCount<ZmRequestMgr.RETRY_MAX){
a.resend=ZmCsfeCommand.RETRY;
a.retryCount++;
AjxTimedAction.scheduleAction(new AjxTimedAction(this,function(){
this.sendRequest(a)
}
),ZmRequestMgr.RETRY_DELAY*1000);
t=true
}}
if(!t){
this._controller._handleException(e,a)
}};
ZmRequestMgr.prototype._handleNotifications=function(s,a){
if(s&&s.context&&s.context.notify){
for(var n=0;
n<s.context.notify.length;
n++){
var o=s.context.notify[n];
var t=o.seq;
var e=s.context&&ZmCsfeCommand.extractSessionId(s.context.session);
if(o.seq>this._highestNotifySeen&&!(e&&ZmCsfeCommand._staleSession[e])){
this._highestNotifySeen=t;
this._notifyHandler(o,a)
}else{}}}};
ZmRequestMgr.prototype._refreshHandler=function(e){
AjxDebug.println(AjxDebug.NOTIFY,"REFRESH block received");
if(!appCtxt.inStartup){
this._controller._execPoll()
}
if(e.version){
if(!this._canceledReload){
var i=appCtxt.get(ZmSetting.SERVER_VERSION);
if(i!=e.version){
appCtxt.set(ZmSetting.SERVER_VERSION,e.version);
if(i){
var a=appCtxt.getYesNoMsgDialog();
a.reset();
a.registerCallback(DwtDialog.YES_BUTTON,this._reloadYesCallback,this,[a,i,e.version]);
a.registerCallback(DwtDialog.NO_BUTTON,this._reloadNoCallback,this,[a,e]);
var t=AjxMessageFormat.format(ZmMsg.versionChangeRestart,[i,e.version]);
a.setMessage(t,DwtMessageDialog.WARNING_STYLE);
a.popup();
appCtxt.reloadAppCache(true);
return
}}}}
if(!this._recentlyRefreshed){
this._controller.runAppFunction("refresh",false,e);
this._recentlyRefreshed=true;
this._lastSkippedRefresh=null
}else{
this._lastSkippedRefresh=e
}
if(!this._refreshTimer){
this._refreshTimer=new AjxTimedAction(this,this._refreshTimeout)
}
AjxTimedAction.scheduleAction(this._refreshTimer,5000)
};
ZmRequestMgr.prototype._refreshTimeout=function(){
if(this._lastSkippedRefresh){
this._controller.runAppFunction("refresh",false,this._lastSkippedRefresh);
this._lastSkippedRefresh=null
}
this._recentlyRefreshed=false
};
ZmRequestMgr.prototype._loadTrees=function(a){
var t={};
var e=appCtxt.multiAccounts?appCtxt.accountList.mainAccount:null;
this._loadTree(ZmOrganizer.TAG,t,a.tags,null,e);
this._loadTree(ZmOrganizer.FOLDER,t,a.folder[0],"folder",e)
};
ZmRequestMgr.prototype._reloadYesCallback=function(t){
t.popdown();
window.onbeforeunload=null;
var e=AjxUtil.formatUrl();
ZmZimbraMail.sendRedirect(e)
};
ZmRequestMgr.prototype._reloadNoCallback=function(e,t){
e.popdown();
this._canceledReload=true;
this._refreshHandler(t)
};
ZmRequestMgr.prototype._loadTree=function(a,t,n,s,o){
var i=(a==ZmOrganizer.TAG);
var e=appCtxt.getTree(a,o);
if(e){
e.reset()
}else{
e=i?new ZmTagTree(o):new ZmFolderTree()
}
appCtxt.setTree(a,e,o);
e.addChangeListener(this._unreadListener);
e.getUnreadHash(t);
e.loadFromJs(n,s,o)
};
ZmRequestMgr.prototype._notifyHandler=function(t,e){
AjxDebug.println(AjxDebug.NOTIFY,"Notification block:");
AjxDebug.dumpObj(AjxDebug.NOTIFY,t);
this._controller.runAppFunction("preNotify",false,t);
if(t.deleted&&t.deleted.id){
this._handleDeletes(t.deleted)
}
if(t.created){
this._handleCreates(t.created)
}
if(t.modified){
this._handleModifies(t.modified)
}
if(ZmOffline.isOnlineMode()&&(t.deleted||t.created||t.modified)){
appCtxt.webClientOfflineHandler.scheduleSyncRequest(t,e)
}
this._controller.runAppFunction("postNotify",false,t)
};
ZmRequestMgr.prototype._handleDeletes=function(o){
var t=o.id.split(",");
this._controller.runAppFunction("deleteNotify",false,t);
for(var e=0;
e<t.length;
e++){
var n=t[e];
if(!n){
continue
}
var a=appCtxt.cacheGet(n);
if(a&&a.notifyDelete){
a.notifyDelete();
appCtxt.cacheRemove(n);
a=null
}}};
ZmRequestMgr.prototype._handleCreates=function(h){
this._controller.runAppFunction("createNotify",false,h);
for(var e in h){
if(h.hasOwnProperty(e)){
var r=h[e];
for(var a=0;
a<r.length;
a++){
var n=r[a];
if(n._handled){
continue
}
if(appCtxt.cacheGet(n.id)&&e!="tag"){
continue
}
if(e=="tag"){
var s=appCtxt.multiAccounts&&ZmOrganizer.parseId(n.id).account;
var t=appCtxt.getTagTree(s);
if(t){
t.root.notifyCreate(n)
}}else{
if(e=="folder"||e=="search"||e=="link"){
var o=n.l;
var l=appCtxt.getById(o);
if(l&&l.notifyCreate&&l.type!=ZmOrganizer.TAG){
l.notifyCreate(n,e)
}}}}}}};
ZmRequestMgr.prototype._handleModifies=function(a){
this._controller.runAppFunction("modifyNotify",false,a);
for(var t in a){
if(t=="mbx"){
var c=a[t];
for(var n=0;
n<c.length;
n++){
var e=c[n];
var l=e.acct;
var s=l&&appCtxt.accountList.getAccount(l);
var u=appCtxt.getSettings(s).getSetting(ZmSetting.QUOTA_USED);
u.notifyModify({
_name:t,s:e.s,account:s}
)
}
continue
}
var r=a[t];
for(var n=0;
n<r.length;
n++){
var h=r[n];
if(h._handled){
continue
}
var d=appCtxt.cacheGet(h.id);
if(!d&&t=="cn"&&AjxDispatcher.loaded("ContactsCore")){
var o=appCtxt.getApp(ZmApp.CONTACTS);
if(o.isContactListLoaded()){
d=o.getContactList().getById(h.id)
}}
if(d&&d.notifyModify){
h._isRemote=(t=="folder"&&d.link);
d.notifyModify(h)
}}}};
ZmRequestMgr.prototype._unreadChangeListener=function(n){
if(n.event==ZmEvent.E_MODIFY){
var o=n.getDetail("fields");
if(o&&o[ZmOrganizer.F_UNREAD]){
var a=n.getDetail("organizers");
var s=a?a[0]:null;
var e=s?(s.isSystem()?s.nId:s.id):null;
var h=appCtxt.getCurrentSearch();
if(h){
var i=appCtxt.multiAccounts&&appCtxt.getById(h.folderId);
var t=(i&&i.getAccount()==appCtxt.getActiveAccount())?i.nId:h.folderId;
if(e&&(e==t||e==h.tagId)){
Dwt.setTitle(h.getTitle())
}}
var r=appCtxt.getApp(ZmApp.MAIL);
if(r){
r.setNewMailNotice(s)
}}}};
ZmRequestMgr.prototype._sensitiveRequest=function(r,o){
r.noSession=true;
var e=ZmCsfeCommand.getRequestStr(r);
var s=document.location;
var t=appCtxt.get(ZmSetting.HTTPS_PORT);
if(t&&t!=ZmSetting.DEFAULT_HTTPS_PORT){
t=":"+t
}
var a=document.createElement("IFRAME");
a.style.display="none";
a.id=Dwt.getNextId();
document.body.appendChild(a);
var n=Dwt.getIframeDoc(a);
n.write("<form ","id=",a.id,"-form ","target=",a.id,"-iframe ","method=POST ","action='https://",s.hostname,t,appContextPath,"/public/secureRequest.jsp'",">","<input type=hidden name=reqId value='",o,"'>","<textarea name=data>",AjxStringUtil.htmlEncode(e),"</textarea>","</form>","<iframe name=",a.id,"-iframe></iframe>");
n.close();
r.iframeId=a.id;
this._pendingRequests[o]=r;
var i=n.getElementById(a.id+"-form");
i.submit()
}
}
if(AjxPackage.define("zimbraMail.core.ZmZimbraMail")){
ZmZimbraMail=function(n){
if(arguments.length==0){
return
}
ZmController.call(this,null);
appCtxt.setZimbraMail(this);
appCtxt.setAppController(this);
window._zimbraMail=this;
this._evt=new ZmAppEvent();
this._evtMgr=new AjxEventMgr();
for(var t in ZmZimbraMail._listeners){
var o=ZmZimbraMail._listeners[t];
if(o&&o.length){
for(var e=0;
e<o.length;
e++){
this._evtMgr.addListener(t,o[e])
}}}
ZmZimbraMail.addListener=AjxCallback.simpleClosure(this.addListener,this);
ZmZimbraMail.addAppListener=AjxCallback.simpleClosure(this.addAppListener,this);
ZmOperation.initialize();
this._createSettings(n);
this._createEnabledApps();
this._initializeSettings(n);
this._postInitializeSettings();
document.body.className="user_font_"+appCtxt.get(ZmSetting.FONT_NAME);
Dwt.delClass(document.documentElement,"user_font_size_normal","user_font_size_"+appCtxt.get(ZmSetting.FONT_SIZE));
this._shell=appCtxt.getShell();
this._userShell=n.userShell;
this._requestMgr=new ZmRequestMgr(this);
this._appIframeView={};
this._activeApp=null;
this._sessionTimer=new AjxTimedAction(null,ZmZimbraMail.executeSessionTimer);
this._sessionTimerId=-1;
this._pollActionId=null;
this._pollRequest=null;
this._pollInstantNotifications=false;
this.statusView=null;
ZmZimbraMail._exitTimer=new AjxTimedAction(null,ZmZimbraMail.exitSession);
ZmZimbraMail._exitTimerId=-1;
ZmZimbraMail.stayOnPagePrompt=false;
ZmZimbraMail.STAYONPAGE_INTERVAL=2;
if(appCtxt.get(ZmSetting.HISTORY_SUPPORT_ENABLED)&&!AjxEnv.isSafari){
window.historyMgr=appCtxt.getHistoryMgr()
}
this._appViewMgr=new ZmAppViewMgr(this._shell,this,false,true);
var a=[ZmAppViewMgr.C_SEARCH_RESULTS_TOOLBAR,ZmAppViewMgr.C_TASKBAR];
if(!appCtxt.get(ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL)){
a.push(ZmAppViewMgr.C_TREE_FOOTER)
}
this._appViewMgr.setHiddenComponents(ZmAppViewMgr.GLOBAL,a,true);
AjxDispatcher.setPackageLoadFunction("Zimlet",new AjxCallback(this,this._postLoadZimlet));
AjxDispatcher.setPreLoadFunction(new AjxCallback(this,function(){
this._appViewMgr.pushView(ZmId.VIEW_LOADING)
}
));
AjxDispatcher.setPostLoadFunction(new AjxCallback(this,function(){
if(!AjxUtil.arrayContains(this._appViewMgr._toRemove,ZmId.VIEW_LOADING)){
this._appViewMgr._toRemove.push(ZmId.VIEW_LOADING)
}}
));
for(var e in ZmApp.QS_ARG){
ZmApp.QS_ARG_R[ZmApp.QS_ARG[e]]=e
}
this._shell.addGlobalSelectionListener(new AjxListener(this,this._globalSelectionListener));
appCtxt.initWebOffline();
this.startup(n)
};
ZmZimbraMail.prototype=new ZmController;
ZmZimbraMail.prototype.constructor=ZmZimbraMail;
ZmZimbraMail.prototype.isZmZimbraMail=true;
ZmZimbraMail.prototype.toString=function(){
return"ZmZimbraMail"
};
ZmMsg.BETA_documents=[ZmMsg.documents,ZmMsg.beta].join(" ");
ZmApp.MAIN="ZmZimbraMail";
ZmApp.DROP_TARGETS[ZmApp.MAIN]={};
ZmZimbraMail._listeners={};
ZmZimbraMail.UI_LOAD_BEGIN="ui_load_begin";
ZmZimbraMail.UI_LOAD_END="ui_load_end";
ZmZimbraMail.UI_NETWORK_UP="network_up";
ZmZimbraMail.UI_NETWORK_DOWN="network_down";
ZmZimbraMail.run=function(a){
if(a.noSplashScreen){
ZmZimbraMail.killSplash()
}
window.appCtxt=new ZmAppCtxt();
appCtxt.rememberMe=false;
if(a.offlineMode){
appCtxt.isOffline=true
}
var t=a.userShell=window.document.getElementById(ZmId.SKIN_SHELL);
if(!t){
alert("Could not get user shell - skin file did not load properly")
}
var e=new DwtShell({
userShell:t,docBodyScrollable:false,id:ZmId.SHELL}
);
appCtxt.setShell(e);
new ZmZimbraMail(a)
};
ZmZimbraMail.unload=function(){
if(!ZmZimbraMail._endSessionDone){
ZmZimbraMail._endSession()
}
if(ZmZimbraMail._isLogOff){
ZmZimbraMail._isLogOff=false;
if(window._zimbraMail){
window._zimbraMail.setSessionTimer(false)
}
ZmCsfeCommand.noAuth=true
}
ZmZimbraMail.closeChildWindows();
ZmZimbraMail.stayOnPagePrompt=false;
ZmZimbraMail.setExitTimer(false);
ZmZimbraMail.sessionTimerInvoked=false;
window._zimbraMail=window.onload=window.onunload=window.onresize=window.document.onkeypress=null;
delete _zimbraMail
};
ZmZimbraMail.closeChildWindows=function(){
var t=window._zimbraMail&&window._zimbraMail._childWinList;
if(t){
for(var e=0;
e<t.size();
e++){
var a=t.get(e);
if(a.win){
a.win.onbeforeunload=null;
a.win.parentController=null;
a.win.close()
}}}};
ZmZimbraMail.hashSortCompare=function(n,i,e){
var o=i?Number(n[i]):0;
var t=e?Number(n[e]):0;
if(o>t){
return 1
}
if(o<t){
return -1
}
return 0
};
ZmZimbraMail.killSplash=function(){
Dwt.hide("skin_container_splash_screen")
};
ZmZimbraMail.prototype.startup=function(o){
if(appCtxt.isOffline){
this.sendClientEventNotify(ZmZimbraMail.UI_LOAD_BEGIN)
}
appCtxt.inStartup=true;
if(typeof(skin)=="undefined"){}
skin.show("skin",true);
appCtxt.getShell().relayout();
if(!this._components){
this._components={};
this._components[ZmAppViewMgr.C_SASH]=new DwtSash({
parent:this._shell,style:DwtSash.HORIZONTAL_STYLE,className:"console_inset_app_l",threshold:20,id:ZmId.MAIN_SASH}
);
this._components[ZmAppViewMgr.C_SASH].addListener(DwtEvent.ONMOUSEUP,ZmZimbraMail._folderTreeSashRelease);
this._components[ZmAppViewMgr.C_BANNER]=this._createBanner();
this._components[ZmAppViewMgr.C_USER_INFO]=this._userNameField=this._createUserInfo("BannerTextUser",ZmAppViewMgr.C_USER_INFO,ZmId.USER_NAME);
this._components[ZmAppViewMgr.C_QUOTA_INFO]=this._usedQuotaField=this._createUserInfo("BannerTextQuota",ZmAppViewMgr.C_QUOTA_INFO,ZmId.USER_QUOTA);
if(appCtxt.isOffline){
this._initOfflineUserInfo()
}}
if(!this.statusView){
this.statusView=new ZmStatusView(this._shell,"ZmStatus",Dwt.ABSOLUTE_STYLE,ZmId.STATUS_VIEW)
}
this._registerOrganizers();
for(var e in ZmSearch.TYPE){
ZmSearch.TYPE_MAP[ZmSearch.TYPE[e]]=e
}
ZmZimbraMail.registerViewsToTypeMap();
this._getStartApp(o);
appCtxt.startApp=o.startApp;
this._postRenderCallbacks=[];
this._postRenderLast=0;
if(o.startApp==ZmApp.MAIL){
this._doingPostRenderStartup=true;
var s=new AjxCallback(this,function(){
AjxDispatcher.require("Startup2");
var i=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
if(appCtxt.get(ZmSetting.CALENDAR_ENABLED,null,i)){
this.handleCalendarComponents()
}
if(appCtxt.get(ZmSetting.TASKS_ENABLED,null,i)){
this.handleTaskComponents()
}
this._appViewMgr.loadingView.setVisible(false)
}
);
this.addPostRenderCallback(s,0,0,true);
var s=new AjxCallback(this,function(){
AjxDispatcher.require("Startup2");
var i=new DwtIdleTimer(30*1000,function(){
AjxDispatcher.require("TinyMCE",true);
i.kill()
}
)
}
);
this.addPostRenderCallback(s,0,0,true)
}
var a=AjxUtil.get(o,"getInfoResponse");
if(a){
this._requestMgr.sendRequest({
response:a}
)
}
var n=new AjxCallback(this,this._handleResponseGetMetaData,o);
appCtxt.accountList.mainAccount.loadMetaData(n);
this._initDelegatedSenderAddrs();
if(appCtxt.isOffline){
var t=appCtxt.get(ZmSetting.OFFLINE_UPDATE_NOTIFY);
this._offlineUpdateChannelPref(t)
}};
ZmZimbraMail.prototype._initDelegatedSenderAddrs=function(){
var t=AjxSoapDoc.create("DiscoverRightsRequest","urn:zimbraAccount");
t.set("right","sendAs");
t.set("right","sendOnBehalfOf");
t.set("right","sendAsDistList");
t.set("right","sendOnBehalfOfDistList");
var e=new ZmBatchCommand(null,appCtxt.accountList.mainAccount.name);
var i=this._initDelegatedSenderEmails.bind(this);
e.addNewRequestParams(t,i,i);
var a=this._handleOfflineDelegatedSenderEmails.bind(this,i);
e.run(null,null,a)
};
ZmZimbraMail.prototype._getDelegatedSenderEmails=function(m,d){
var s=[];
if(!m||!m.length){
return s
}
for(var o=0;
o<m.length;
o++){
var r=m[o].target;
var u=m[o].right;
var n=d+"DistList";
if(u!==d&&u!==n){
continue
}
var l=u===n;
for(var a=0;
a<r.length;
a++){
var h=r[a];
var t=h.email;
for(var e=0;
e<t.length;
e++){
var c=t[e].addr;
s.push({
addr:c,isDL:l,displayName:h.d}
)
}}}
return s
};
ZmZimbraMail.prototype._initDelegatedSenderEmails=function(e){
var t=e.getResponse();
if(ZmOffline.isOnlineMode()){
localStorage.setItem("DiscoverRightsResponse",JSON.stringify(t))
}
var i=t&&t.DiscoverRightsResponse;
var a=i&&i.targets;
appCtxt.sendAsEmails=this._getDelegatedSenderEmails(a,"sendAs");
appCtxt.sendOboEmails=this._getDelegatedSenderEmails(a,"sendOnBehalfOf")
};
ZmZimbraMail.prototype._handleOfflineDelegatedSenderEmails=function(a){
var e=localStorage.getItem("DiscoverRightsResponse");
if(e){
var t=new ZmCsfeResult({
BatchResponse:JSON.parse(e)}
);
a.run(t)
}};
ZmZimbraMail.registerViewsToTypeMap=function(){
for(var t in ZmOrganizer.VIEWS){
var a=ZmOrganizer.VIEWS[t];
for(var e=0;
e<a.length;
e++){
ZmOrganizer.TYPE[a[e]]=t
}}};
ZmZimbraMail.prototype._createSettings=function(o){
if(o.batchInfoResponse){
var t=o.batchInfoResponse.Body.BatchResponse;
var a=t.GetInfoResponse[0];
if(!a){
a={}
}
a.domainSettings=o.settings;
o.getInfoResponse={
Header:o.batchInfoResponse.Header,Body:{
GetInfoResponse:a}};
var i=AjxUtil.get(o.getInfoResponse,"Header","context","session");
if(i){
ZmCsfeCommand.setSessionId(i)
}
if(t.SearchResponse){
o.searchResponse={
Body:{
SearchResponse:t.SearchResponse[0]}}
}}
var e=new ZmSettings();
appCtxt.setSettings(e);
e.setUserSettings({
info:o.getInfoResponse.Body.GetInfoResponse,preInit:true}
)
};
ZmZimbraMail.prototype._initializeSettings=function(n){
var o=n.getInfoResponse.Body.GetInfoResponse;
var a=appCtxt.getSettings();
a.setUserSettings(o,null,true,true,true);
a.userSettingsLoaded=true;
var t=appCtxt.get(ZmSetting.BRANCH);
if(window.DBG&&!DBG.isDisabled()){}
if(n.settings){
for(var e in n.settings){
var s=a.getSettingByName(e);
if(s){
a.getSetting(s).setValue(n.settings[e])
}}}
if(appCtxt.isOffline){
appCtxt.set(ZmSetting.POLLING_INTERVAL,60,null,null,true)
}
if(n.devMode=="1"){
appCtxt.set(ZmSetting.DEV,true)
}
if(n.protocolMode){
var i=(n.protocolMode.indexOf(":")==-1)?n.protocolMode+":":n.protocolMode;
appCtxt.set(ZmSetting.PROTOCOL_MODE,i)
}
if(n.httpPort){
appCtxt.set(ZmSetting.HTTP_PORT,n.httpPort)
}
if(n.httpsPort){
appCtxt.set(ZmSetting.HTTPS_PORT,n.httpsPort)
}
if(!appCtxt.get(ZmSetting.SPAM_ENABLED)){
ZmFolder.HIDE_ID[ZmFolder.ID_SPAM]=true
}};
ZmZimbraMail.prototype._postInitializeSettings=function(){
this._setCustomInvalidEmailPats()
};
ZmZimbraMail.prototype._setCustomInvalidEmailPats=function(){
var o=appCtxt.getSettings().getSetting(ZmSetting.EMAIL_VALIDATION_REGEX);
var e=[];
if(o){
e=o.value
}
for(var a=0;
a<e.length;
a++){
var t=e[a];
if(t&&t!=""){
AjxEmailAddress.customInvalidEmailPats.push(new RegExp(t))
}}};
ZmZimbraMail.prototype._handleResponseGetMetaData=function(e){
if(appCtxt.get(ZmSetting.CONTACTS_ENABLED)){
var t=appCtxt.multiAccounts?"GetContactsForAllAccounts":"GetContacts";
AjxDispatcher.run({
method:t,callback:this._handleResponseLoadUserSettings.bind(this,e)}
)
}else{
this._handleResponseLoadUserSettings(e)
}};
ZmZimbraMail.prototype.showMiniCalendar=function(){
var e=appCtxt.getCalManager();
e.getMiniCalendar();
appCtxt.getAppViewMgr().displayComponent(ZmAppViewMgr.C_TREE_FOOTER,true);
e.highlightMiniCal();
e.startDayRollTimer()
};
ZmZimbraMail.prototype.showReminder=function(){
var e=appCtxt.getApp(ZmApp.CALENDAR).getReminderController();
e.refresh()
};
ZmZimbraMail.prototype.showTaskReminder=function(){
var t=appCtxt.getTaskManager();
var e=t.getReminderController();
e.refresh()
};
ZmZimbraMail.prototype._isProtocolHandlerAccessed=function(){
if(AjxEnv.isFirefox){
if(!localStorage||localStorage.zimbra_mailto_init){
return true
}
localStorage.zimbra_mailto_init=true
}
return false
};
ZmZimbraMail.prototype._handleResponseLoadUserSettings=function(t,e){
if(appCtxt.multiAccounts){
var a=new AjxCallback(this,this._handleResponseStartup,[t,e]);
appCtxt.accountList.loadAccounts(a)
}else{
this._handleResponseStartup(t,e)
}};
ZmZimbraMail.prototype._handleResponseStartup=function(o,g){
o=o||{};
if(o.settingOverrides){
this._needOverviewLayout=true;
for(var e in o.settingOverrides){
var p=appCtxt.getSetting(e);
if(p){
p.setValue(o.settingOverrides[e])
}}}
if(o.preset){
var r=o.preset.split(",");
for(var s=0;
s<r.length;
s++){
var l=r[s].split(":");
var p=appCtxt.getSettings().getSetting(l[0]);
if(p&&p.canPreset){
p.setValue(l[1])
}}}
if(!appCtxt.isOffline){
if(appCtxt.get(ZmSetting.INSTANT_NOTIFY)&&appCtxt.get(ZmSetting.INSTANT_NOTIFY_INTERVAL)==appCtxt.get(ZmSetting.POLLING_INTERVAL)){
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this.setInstantNotify,[true]),4000)
}else{
this.setPollInterval(true)
}}else{
if(appCtxt.get(ZmSetting.OFFLINE_SUPPORTS_MAILTO)&&window.platform&&window.platform.isRegisteredProtocolHandler("mailto")){
this.registerMailtoHandler(!AjxEnv.isWindows,true)
}}
window.onbeforeunload=ZmZimbraMail._confirmExitMethod;
if(!this._components[ZmAppViewMgr.C_APP_CHOOSER]){
this._components[ZmAppViewMgr.C_APP_CHOOSER]=this._appChooser=this._createAppChooser()
}
ZmApp.initialize();
if(appCtxt.get(ZmSetting.DEFAULT_TIMEZONE)){
AjxTimezone.DEFAULT_RULE=AjxTimezone._guessMachineTimezone(appCtxt.get(ZmSetting.DEFAULT_TIMEZONE));
AjxTimezone.DEFAULT=AjxTimezone.getClientId(AjxTimezone.DEFAULT_RULE.serverId)
}
this.notify(ZmAppEvent.PRE_STARTUP);
o.result=g;
var f=new AjxCallback(this,this._handleResponseStartup1,o);
if(this._doingPostRenderStartup){
this.addAppListener(o.startApp,ZmAppEvent.POST_RENDER,new AjxListener(this,this._postRenderStartup));
if(!appCtxt.isWebClientOffline()){
this._searchResponse=o.searchResponse
}}else{
AjxDispatcher.require("Startup2")
}
var m=new AjxCallback(this,function(){
this.runAppFunction("startup",false,o.result)
}
);
this.addPostRenderCallback(m,2,0,true);
m=new AjxCallback(this,function(){
this._setupTabGroups();
this.focusContentPane()
}
);
this.addPostRenderCallback(m,3,100);
m=new AjxCallback(this,function(){
AjxDispatcher.enableLoadFunctions(true);
appCtxt.inStartup=false;
this.notify(ZmAppEvent.POST_STARTUP);
var i=appCtxt.getSearchController();
i.getSearchToolbar().initAutocomplete();
if(appCtxt.isOffline){
i.resetSearchToolbar()
}
if(appCtxt.get(ZmSetting.OFFLINE_SUPPORTS_MAILTO)&&appCtxt.isOffline){
this.handleOfflineMailTo(location.search)
}}
);
this.addPostRenderCallback(m,5,100);
if(appCtxt.get(ZmSetting.MAIL_ENABLED)&&!appCtxt.isExternalAccount()&&navigator.registerProtocolHandler&&!this._isProtocolHandlerAccessed()){
m=new AjxCallback(this,function(){
try{
navigator.registerProtocolHandler("mailto",AjxUtil.formatUrl({
qsArgs:{
view:"compose",to:"%s"}
,qsReset:true}
),ZmMsg.zimbraTitle)
}
catch(i){}}
);
this.addPostRenderCallback(m,6,100)
}
this.activateApp(o.startApp,false,f,this._errorCallback,o);
var c=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
if(appCtxt.get(ZmSetting.CALENDAR_ENABLED,null,c)&&!this._doingPostRenderStartup&&(o.startApp!=ZmApp.CALENDAR)){
this.handleCalendarComponents()
}
if(appCtxt.get(ZmSetting.TASKS_ENABLED,null,c)&&!this._doingPostRenderStartup&&(o.startApp!=ZmApp.TASKS)){
this.handleTaskComponents()
}
if(appCtxt.get(ZmSetting.IMPORT_ON_LOGIN_ENABLED)){
var t=new ZmDataSourceCollection();
var d=appCtxt.getDataSourceCollection();
var u=d&&d.getPopAccounts();
var n=d&&d.getImapAccounts();
var h={};
if(u){
for(var s=0;
s<u.length;
s++){
h[u[s].id]=u[s]
}}
if(n){
for(var s=0;
s<n.length;
s++){
h[n[s].id]=n[s]
}}
if(u||n){
var a=new AjxTimedAction(t,t.checkStatus,[h,2000]);
AjxTimedAction.scheduleAction(a,10000)
}}};
ZmZimbraMail.prototype.handleTaskComponents=function(){
var t=new AjxTimedAction(this,this.showTaskReminder);
var e=appCtxt.isOffline?0:ZmTasksApp.REMINDER_START_DELAY;
AjxTimedAction.scheduleAction(t,e)
};
ZmZimbraMail.prototype.handleCalendarComponents=function(){
if(appCtxt.get(ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL)){
var a=new AjxTimedAction(this,this.showMiniCalendar);
var e=appCtxt.isOffline?0:ZmCalendarApp.MINICAL_DELAY;
AjxTimedAction.scheduleAction(a,e)
}
AjxDispatcher.require(["ContactsCore","MailCore","CalendarCore","Calendar"]);
var t=new AjxTimedAction(this,this.showReminder);
var e=appCtxt.isOffline?0:ZmCalendarApp.REMINDER_START_DELAY;
AjxTimedAction.scheduleAction(t,e)
};
ZmZimbraMail.prototype._handleResponseStartup1=function(o){
this._setExternalLinks();
this.setUserInfo();
this._setRefresh();
if(appCtxt.get(ZmSetting.SEARCH_ENABLED)){
this._components[ZmAppViewMgr.C_SEARCH]=appCtxt.getSearchController().getSearchToolbar()
}else{
Dwt.hide(ZmId.SKIN_SEARCH)
}
var t=this.getNewButton();
var i={
parent:this._shell,context:ZmOperation.NEW_MENU,buttons:ZmOperation.NONE,controller:this,refElementId:ZmId.SKIN_APP_NEW_BUTTON};
var e=this._newToolbar=new ZmButtonToolBar(i);
t.reparent(e);
this._components[ZmAppViewMgr.C_NEW_BUTTON]=e;
if(o.unitTest){
var a=window.unitTestManager;
appCtxt.addZimletsLoadedListener(a.runTests.bind(a),0)
}
this.getKeyMapMgr();
this.setSessionTimer(true);
ZmZimbraMail.killSplash();
this.runAppFunction("addComponents",false,this._components);
this._appViewMgr.setViewComponents(ZmAppViewMgr.GLOBAL,this._components,true);
this._checkLicense();
if(!this._doingPostRenderStartup){
this._postRenderStartup()
}};
ZmZimbraMail.prototype._setRefresh=function(){
var t=document.getElementById(ZmId.SKIN_REFRESH);
if(!t){
return
}
var e=appCtxt.refreshButton=new DwtToolBarButton({
parent:DwtShell.getShell(window),id:ZmId.OP_CHECK_MAIL}
);
e.setImage("RefreshAll");
e.setToolTipContent(ZmMsg.checkMailPrefUpdate,true);
e.reparentHtmlElement(ZmId.SKIN_REFRESH);
var a=this._refreshListener.bind(this);
e.addSelectionListener(a)
};
ZmZimbraMail.prototype._refreshListener=function(){
if(!appCtxt.isWebClientOffline()){
this.runAppFunction("runRefresh")
}};
ZmZimbraMail.prototype._checkLicense=function(t){
var e=appCtxt.get(ZmSetting.LICENSE_STATUS);
var i=ZmSetting.LICENSE_MSG[e];
if(i){
AjxDispatcher.require("Startup2");
var a=appCtxt.getMsgDialog();
a.reset();
a.setMessage(i,DwtMessageDialog.WARNING_STYLE);
a.popup()
}};
ZmZimbraMail.prototype._postRenderStartup=function(e){
this._postRenderCallbacks.sort(function(i,t){
return i.order-t.order
}
);
this._runNextPostRenderCallback()
};
ZmZimbraMail.prototype._runNextPostRenderCallback=function(){
if(this._postRenderCallbacks&&this._postRenderCallbacks.length){
var e=this._postRenderCallbacks.shift();
if(!e){
return
}
AjxTimedAction.scheduleAction(new AjxTimedAction(this,function(){
e.callback.run();
this._runNextPostRenderCallback()
}
),e.delay)
}else{
if(appCtxt.isOffline){
this.sendClientEventNotify(ZmZimbraMail.UI_LOAD_END);
if(AjxEnv.isPrism){
this._firstTimeNetworkChange=true;
var t=new ZimbraNetworkChecker();
t.addEventListener("offline",function(a){
window.appCtxt.getAppController().handleNetworkChange(false)
}
,false);
t.addEventListener("online",function(a){
window.appCtxt.getAppController().handleNetworkChange(true)
}
,false)
}}}};
ZmZimbraMail.prototype.handleNetworkChange=function(e){
this._isPrismOnline=e;
if(this._isUserOnline||this._firstTimeNetworkChange){
this._updateNetworkStatus(e)
}};
ZmZimbraMail.prototype._updateNetworkStatus=function(e){
if((e&&this._currentNetworkStatus==ZmZimbraMail.UI_NETWORK_UP)||(!e&&this._currentNetworkStatus==ZmZimbraMail.UI_NETWORK_DOWN)){
return
}
if(e){
if(!this._firstTimeNetworkChange){
this.setStatusMsg(ZmMsg.networkChangeOnline)
}else{
this._firstTimeNetworkChange=false;
this._isUserOnline=e
}
this._currentNetworkStatus=ZmZimbraMail.UI_NETWORK_UP;
this.sendClientEventNotify(this._currentNetworkStatus,true)
}else{
this.setStatusMsg(ZmMsg.networkChangeOffline,ZmStatusView.LEVEL_WARNING);
this._currentNetworkStatus=ZmZimbraMail.UI_NETWORK_DOWN;
this.sendClientEventNotify(this._currentNetworkStatus)
}
this._networkStatusIcon.setToolTipContent(e?ZmMsg.networkStatusOffline:ZmMsg.networkStatusOnline,true);
this._networkStatusIcon.getHtmlElement().innerHTML=AjxImg.getImageHtml(e?"Connect":"Disconnect");
var t=e?ZmMsg.imStatusOnline:ZmMsg.imStatusOffline;
this._networkStatusText.getHtmlElement().innerHTML=t.substr(0,1).toUpperCase()+t.substr(1)
};
ZmZimbraMail.prototype.addPostRenderCallback=function(i,e,t,a){
if(!this._doingPostRenderStartup&&a){
i.run()
}else{
e=e||this._postRenderLast++;
this._postRenderCallbacks.push({
callback:i,order:e,delay:t||0}
)
}};
ZmZimbraMail.prototype._isInternalApp=function(e){
return !ZmApp.SETTING[e]||(appCtxt.get(ZmApp.SETTING[e],null,appCtxt.multiAccounts&&appCtxt.accountList.mainAccount))
};
ZmZimbraMail.prototype._isIframeApp=function(e){
return !this._isInternalApp(e)&&appCtxt.get(ZmApp.UPSELL_SETTING[e])
};
ZmZimbraMail.prototype._getStartApp=function(r){
var t;
var n=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
if(r&&r.app){
t=ZmApp.QS_ARG_R[r.app.toLowerCase()];
if(!this._isInternalApp(t)&&!this._isIframeApp(t)){
t=null
}}
if(!t){
for(var s in ZmApp.DEFAULT_SORT){
ZmApp.DEFAULT_APPS.push(s)
}
ZmApp.DEFAULT_APPS.sort(function(h,i){
return ZmZimbraMail.hashSortCompare(ZmApp.DEFAULT_SORT,h,i)
}
);
var e=null;
for(var o=0;
o<ZmApp.DEFAULT_APPS.length;
o++){
var s=ZmApp.DEFAULT_APPS[o];
if(this._isInternalApp(s)){
e=s;
break
}}
t=this._getDefaultStartAppName(n)
}
var a=AjxStringUtil.parseQueryString();
if(a&&a.view&&!a.app){
t=ZmApp.QS_VIEWS[a.view]
}
r.startApp=t;
r.qsParams=a
};
ZmZimbraMail.prototype._getDefaultStartAppName=function(o){
o=o||(appCtxt.multiAccounts&&appCtxt.accountList.mainAccount)||null;
for(var n in ZmApp.DEFAULT_SORT){
ZmApp.DEFAULT_APPS.push(n)
}
ZmApp.DEFAULT_APPS.sort(function(s,i){
return ZmZimbraMail.hashSortCompare(ZmApp.DEFAULT_SORT,s,i)
}
);
var e=null;
for(var t=0;
t<ZmApp.DEFAULT_APPS.length;
t++){
var n=ZmApp.DEFAULT_APPS[t];
var a=ZmApp.SETTING[n];
if(!a||appCtxt.get(a,null,o)){
return n
}}};
ZmZimbraMail.prototype.cancelRequest=function(a,e,t){
this._requestMgr.cancelRequest(a,e,t)
};
ZmZimbraMail.prototype.sendRequest=function(e){
return this._requestMgr.sendRequest(e)
};
ZmZimbraMail.prototype.runAppFunction=function(h,e){
var s=[];
for(var o=2;
o<arguments.length;
o++){
s.push(arguments[o])
}
for(var o=0;
o<ZmApp.APPS.length;
o++){
var r=ZmApp.APPS[o];
var l=this._isIframeApp(r)?ZmApp.UPSELL_SETTING[r]:ZmApp.SETTING[r];
var n=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
if(!l||appCtxt.get(l,null,n)||e){
var a=appCtxt.getApp(r,null,n);
var t=a&&a[h];
if(t&&(typeof(t)=="function")){
t.apply(a,s)
}}}
appCtxt.notifyZimlets("runAppFunction",[h])
};
ZmZimbraMail.prototype._createEnabledApps=function(a){
this._apps={};
for(var n in ZmApp.CLASS){
if(!a||a[n]){
ZmApp.APPS.push(n)
}}
ZmApp.APPS.sort(function(s,i){
return ZmZimbraMail.hashSortCompare(ZmApp.LOAD_SORT,s,i)
}
);
for(var t=0;
t<ZmApp.APPS.length;
t++){
var n=ZmApp.APPS[t];
var o=this._isInternalApp(n);
var e=this._isIframeApp(n);
if(o||e||n===ZmApp.BRIEFCASE){
ZmApp.ENABLED_APPS[n]=o||e;
this._createApp(n);
this._apps[n].isIframe=e
}}};
ZmZimbraMail.addListener=function(e,t){
if(!ZmZimbraMail._listeners[e]){
ZmZimbraMail._listeners[e]=[]
}
ZmZimbraMail._listeners[e].push(t)
};
ZmZimbraMail.addAppListener=function(e,t,a){
t=[e,t].join("_");
ZmZimbraMail.addListener(t,a)
};
ZmZimbraMail.prototype.addListener=function(e,t){
return this._evtMgr.addListener(e,t)
};
ZmZimbraMail.prototype.removeListener=function(e,t){
return this._evtMgr.removeListener(e,t)
};
ZmZimbraMail.prototype.addAppListener=function(a,e,t){
e=[a,e].join("_");
return this.addListener(e,t)
};
ZmZimbraMail.prototype.removeAppListener=function(a,e,t){
e=[a,e].join("_");
return this.removeListener(e,t)
};
ZmZimbraMail.prototype.sendNoOp=function(){
var t={
NoOpRequest:{
_jsns:"urn:zimbraMail"}};
var e=appCtxt.isOffline&&appCtxt.accountList.mainAccount.name;
this.sendRequest({
jsonObj:t,asyncMode:true,noBusyOverlay:true,accountName:e}
)
};
ZmZimbraMail.prototype.sendClientEventNotify=function(t,e){
var a={
jsonObj:{
ClientEventNotifyRequest:{
_jsns:"urn:zimbraOffline",e:t}}
,asyncMode:true};
if(e){
a.callback=new AjxCallback(this,this.handleClientEventNotifyResponse,t);
a.noBusyOverlay=true;
if(this.clientEventNotifyReqId){
appCtxt.getRequestMgr().cancelRequest(this.clientEventNotifyReqId)
}
this.clientEventNotifyTimerId=AjxTimedAction.scheduleAction(new AjxTimedAction(this,this.sendClientEventNotify,[t,true]),3000)
}else{
a.callback=new AjxCallback(this,this.setInstantNotify,true)
}
this.clientEventNotifyReqId=this.sendRequest(a)
};
ZmZimbraMail.prototype.handleClientEventNotifyResponse=function(t,e){
if(!e.isException()&&e.getResponse()){
if(this.clientEventNotifyTimerId){
AjxTimedAction.cancelAction(this.clientEventNotifyTimerId);
this.clientEventNotityTimerId=null
}
this.setInstantNotify(true)
}};
ZmZimbraMail.prototype.setInstantNotify=function(e){
if(e){
this._pollInstantNotifications=true;
this._pollInterval=appCtxt.get(ZmSetting.INSTANT_NOTIFY_INTERVAL);
if(this._pollActionId){
AjxTimedAction.cancelAction(this._pollActionId);
this._pollActionId=null
}
this._kickPolling(true)
}else{
this._pollInstantNotifications=false;
this._cancelInstantNotify();
this.setPollInterval(true)
}};
ZmZimbraMail.prototype.getInstantNotify=function(){
return this._pollInstantNotifications
};
ZmZimbraMail.prototype.registerMailtoHandler=function(n,i){
if(appCtxt.get(ZmSetting.OFFLINE_SUPPORTS_MAILTO)&&window.platform){
try{
if(i){
if(n){
var e=appCtxt.get(ZmSetting.OFFLINE_WEBAPP_URI,null,appCtxt.accountList.mainAccount);
window.platform.registerProtocolHandler("mailto",e+"&mailto=%s");
if(AjxEnv.isWindows){
var a=new ZimbraDesktopShell;
a.defaultClient=true
}}
var o=AjxCallback.simpleClosure(this.handleOfflineMailTo,this);
window.platform.registerProtocolCallback("mailto",o)
}else{
window.platform.unregisterProtocolHandler("mailto");
if(AjxEnv.isWindows){
var a=new ZimbraDesktopShell;
a.defaultClient=false
}}}
catch(t){}}};
ZmZimbraMail.prototype.handleOfflineMailTo=function(a,n){
if(window.platform&&!window.platform.isRegisteredProtocolHandler("mailto")){
return false
}
var o=this.getApp(ZmApp.MAIL);
var e=(a.indexOf("mailto"));
if(e>=0){
var i="to="+decodeURIComponent(a.substring(e+7));
i=i.replace(/\?/g,"&");
var t=o._showComposeView(n,i);
this._checkOfflineMailToAttachments(t,i);
return true
}
return false
};
ZmZimbraMail.prototype._checkOfflineMailToAttachments=function(o,r){
var a=r||location.search;
var n=a.match(/\bto=([^&]+)/);
var h=n?AjxStringUtil.urlComponentDecode(n[1]):null;
n=a.match(/\battachments=([^&]+)/);
var t=n?(AjxStringUtil.urlComponentDecode(n[1]).replace(/\+/g," ")):null;
if(h&&h.indexOf("mailto")==0){
h=h.replace(/mailto:/,"");
var e=h.split("?");
if(e.length>1){
e=e[1];
n=e.match(/\battachments=([^&]+)/);
if(!t){
t=n?(AjxStringUtil.urlComponentDecode(n[1]).replace(/\+/g," ")):null
}}}
if(t){
t=t.replace(/;$/,"");
t=t.split(";");
this._mailtoAttachmentsLength=t.length;
this._attachmentsProcessed=0;
this.attachment_ids=[];
for(var s=0;
s<t.length;
s++){
this._handleMailToAttachment(t[s],o)
}}};
ZmZimbraMail.prototype._handleMailToAttachment=function(r,h){
var n=r;
var t=n.replace(/^.*\\/,"");
try{
netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect")
}
catch(l){
return
}
try{
var o=Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
o.initWithPath(n);
var u=this._getAttachmentContentType(o);
var a=Components.classes["@mozilla.org/network/file-input-stream;1"].createInstance(Components.interfaces.nsIFileInputStream);
a.init(o,-1,-1,false);
var s=Components.classes["@mozilla.org/binaryinputstream;1"].createInstance(Components.interfaces.nsIBinaryInputStream);
s.setInputStream(a);
var d=new XMLHttpRequest();
d.open("POST",appCtxt.get(ZmSetting.CSFE_UPLOAD_URI)+"&fmt=extended,raw",true);
d.setRequestHeader("Cache-Control","no-cache");
d.setRequestHeader("X-Requested-With","XMLHttpRequest");
d.setRequestHeader("Content-Type",(u||"application/octet-stream"));
d.setRequestHeader("Content-Disposition",'attachment; filename="'+AjxUtil.convertToEntities(t)+'"');
var i=d;
d.onreadystatechange=AjxCallback.simpleClosure(this._handleUploadResponse,this,i,h);
d.sendAsBinary(s.readBytes(s.available()));
delete d
}
catch(c){
this._attachmentsProcessed++
}};
ZmZimbraMail.prototype._getAttachmentContentType=function(t){
var a;
try{
a=Components.classes["@mozilla.org/mime;1"].getService(Components.interfaces.nsIMIMEService).getTypeFromFile(t)
}
catch(e){
a="application/octet-stream"
}
return a
};
ZmZimbraMail.prototype._handleUploadResponse=function(req,controller){
if(req){
if(req.readyState==4&&req.status==200){
var resp=eval("["+req.responseText+"]");
this._attachmentsProcessed++;
this.popupUploadErrorDialog(ZmItem.MSG,resp[0]);
if(resp.length>2){
var respObj=resp[2];
for(var i=0;
i<respObj.length;
i++){
if(respObj[i].aid!="undefined"){
this.attachment_ids.push(respObj[i].aid)
}}
if(this.attachment_ids.length>0&&this._attachmentsProcessed==this._mailtoAttachmentsLength){
var attachment_list=this.attachment_ids.join(",");
if(!controller){
var msg=new ZmMailMsg();
controller=AjxDispatcher.run("GetComposeController");
controller._setView({
action:ZmOperation.NEW_MESSAGE,msg:msg,inNewWindow:false}
)
}
var callback=new AjxCallback(controller,controller._handleResponseSaveDraftListener);
controller.sendMsg(attachment_list,ZmComposeController.DRAFT_TYPE_MANUAL,callback);
this.getAppViewMgr().pushView(controller.getCurrentViewId())
}}}}};
ZmZimbraMail.prototype.setPollInterval=function(e){
if(!this._pollInstantNotifications){
this._pollInterval=appCtxt.get(ZmSetting.POLLING_INTERVAL)*1000;
if(this._pollInterval){
if(e){
this._kickPolling(true)
}}else{
if(this._pollActionId){
AjxTimedAction.cancelAction(this._pollActionId);
this._pollActionId=null
}}
return true
}else{
this._pollInterval=appCtxt.get(ZmSetting.INSTANT_NOTIFY_INTERVAL);
return false
}};
ZmZimbraMail.prototype._cancelInstantNotify=function(){
if(this._pollRequest){
this._requestMgr.cancelRequest(this._pollRequest);
this._pollRequest=null
}
if(this._pollActionId){
AjxTimedAction.cancelAction(this._pollActionId);
this._pollActionId=null
}};
ZmZimbraMail.prototype._kickPolling=function(a){
DBG.println(AjxDebug.DBG2,["ZmZimbraMail._kickPolling ",this._pollInterval,", ",this._pollActionId,", ",this._pollRequest?"request_pending":"no_request_pending"].join(""));
if(this._pollActionId){
AjxTimedAction.cancelAction(this._pollActionId);
this._pollActionId=null
}
if(a&&this._pollInstantNotifications){
var e=appCtxt.get(ZmSetting.INSTANT_NOTIFY_INTERVAL);
if(this._pollInterval>e){
this._pollInterval=e
}}
if(this._pollInterval&&!this._pollRequest){
try{
this._pollActionId=AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._execPoll),this._pollInterval)
}
catch(t){
this._pollActionId=null
}}};
ZmZimbraMail.prototype._execPoll=function(){
this._cancelInstantNotify();
var n={
NoOpRequest:{
_jsns:"urn:zimbraMail"}}
,o=n.NoOpRequest;
try{
if(this._pollInstantNotifications){
var i=ZmCsfeCommand.getSessionId();
if(i){
o.wait=1;
o.limitToOneBlocked=1
}}
var a={
jsonObj:n,asyncMode:true,callback:this._handleResponseDoPoll.bind(this),errorCallback:this._handleErrorDoPoll.bind(this),noBusyOverlay:true,timeout:appCtxt.get(ZmSetting.INSTANT_NOTIFY_TIMEOUT),accountName:appCtxt.isOffline&&appCtxt.accountList.mainAccount.name};
this._pollRequest=this.sendRequest(a);
var t=appCtxt.accountList;
if(appCtxt.isOffline&&!t.isInitialSyncing()&&t.isSyncStatus(ZmZimbraAccount.STATUS_RUNNING)){
this.sendNoOp()
}}
catch(e){
this._handleErrorDoPoll(e)
}};
ZmZimbraMail.prototype._handleErrorDoPoll=function(t){
if(this._pollRequest){
if(this._pollActionId){
AjxTimedAction.cancelAction(this._pollActionId);
this._pollActionId=null
}
this._requestMgr.cancelRequest(this._pollRequest);
this._pollRequest=null
}
if(this._pollInstantNotifications){
this._pollInterval*=2;
if(this._pollInterval>(1000*60*2)){
this._pollInterval=1000*60*2
}}
var e=(t.code==ZmCsfeException.SVC_AUTH_EXPIRED||t.code==ZmCsfeException.SVC_AUTH_REQUIRED||t.code==ZmCsfeException.NO_AUTH_TOKEN);
if(!e){
this._kickPolling(false)
}
return !e
};
ZmZimbraMail.prototype._handleResponseDoPoll=function(e){
this._pollRequest=null;
var t=e.getResponse().NoOpResponse;
if(t.waitDisallowed){
this._waitDisallowed=true;
this.setInstantNotify(false)
}else{
this._kickPolling(true)
}};
ZmZimbraMail.prototype.getKeyMapMgr=function(){
var e=appCtxt.getKeyboardMgr();
if(!e.__keyMapMgr){
this._initKeyboardHandling()
}
return e.__keyMapMgr
};
ZmZimbraMail.prototype._initKeyboardHandling=function(){
var e=appCtxt.getKeyboardMgr();
if(e.__keyMapMgr){
return
}
if(appCtxt.get(ZmSetting.USE_KEYBOARD_SHORTCUTS)){
e.enable(true);
e.registerKeyMap(new ZmKeyMap());
e.pushDefaultHandler(this)
}else{
e.enable(false)
}};
ZmZimbraMail.prototype._setupTabGroups=function(){
var t=appCtxt.getRootTabGroup();
if(appCtxt.get(ZmSetting.SEARCH_ENABLED)){
t.addMember(appCtxt.getSearchController().getTabGroup())
}
t.addMember(this._userNameField);
t.addMember(this._usedQuotaField);
if(this._helpButton){
t.addMember(this._helpButton)
}
t.addMember(appCtxt.getAppChooser().getTabGroupMember());
t.addMember(appCtxt.refreshButton);
t.addMember(this._newToolbar);
var e=appCtxt.getCurrentApp();
var a=e&&e.getOverview();
if(a){
t.addMember(a);
ZmController._currentOverview=a
}
appCtxt.getKeyboardMgr().setTabGroup(t)
};
ZmZimbraMail.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.FOLDER,{
app:ZmApp.MAIL,nameKey:"folder",defaultFolder:ZmOrganizer.ID_INBOX,soapCmd:"FolderAction",firstUserId:256,orgClass:"ZmFolder",orgPackage:"MailCore",treeController:"ZmMailFolderTreeController",labelKey:"mailFolders",itemsKey:"messages",hasColor:true,defaultColor:ZmOrganizer.C_NONE,treeType:ZmOrganizer.FOLDER,dropTargets:[ZmOrganizer.FOLDER],views:["message","conversation"],folderKey:"mailFolder",mountKey:"mountFolder",createFunc:"ZmOrganizer.create",compareFunc:"ZmFolder.sortCompare",newOp:ZmOperation.NEW_FOLDER,displayOrder:100,childWindow:true,openSetting:ZmSetting.FOLDER_TREE_OPEN}
);
ZmOrganizer.registerOrg(ZmOrganizer.SEARCH,{
app:ZmApp.MAIN,nameKey:"savedSearch",precondition:ZmSetting.SAVED_SEARCHES_ENABLED,soapCmd:"FolderAction",firstUserId:256,orgClass:"ZmSearchFolder",treeController:"ZmSearchTreeController",labelKey:"searches",hasColor:true,defaultColor:ZmOrganizer.C_NONE,treeType:ZmOrganizer.FOLDER,folderKey:"savedSearch",disableShare:true,dropTargets:[ZmOrganizer.FOLDER,ZmOrganizer.SEARCH],createFunc:"ZmSearchFolder.create",compareFunc:"ZmFolder.sortCompare",openSetting:ZmSetting.SEARCH_TREE_OPEN,displayOrder:300}
);
ZmOrganizer.registerOrg(ZmOrganizer.SHARE,{
orgClass:"ZmShareProxy",treeController:"ZmShareTreeController",labelKey:"sharedFoldersHeader",compareFunc:"ZmFolder.sortCompare",displayOrder:101,hideEmpty:false}
);
ZmOrganizer.registerOrg(ZmOrganizer.TAG,{
app:ZmApp.MAIN,nameKey:"tag",precondition:ZmSetting.TAGGING_ENABLED,soapCmd:"TagAction",firstUserId:64,orgClass:"ZmTag",treeController:"ZmTagTreeController",hasColor:true,defaultColor:ZmOrganizer.C_ORANGE,labelKey:"tags",treeType:ZmOrganizer.TAG,createFunc:"ZmTag.create",compareFunc:"ZmTag.sortCompare",newOp:ZmOperation.NEW_TAG,openSetting:ZmSetting.TAG_TREE_OPEN,displayOrder:400}
);
ZmOrganizer.registerOrg(ZmOrganizer.ZIMLET,{
orgClass:"ZmZimlet",treeController:"ZmZimletTreeController",labelKey:"zimlets",compareFunc:"ZmZimlet.sortCompare",openSetting:ZmSetting.ZIMLET_TREE_OPEN,hideEmpty:true}
);
this._name=ZmApp.MAIN;
ZmApp.prototype._setupDropTargets.call(this)
};
ZmZimbraMail.prototype.getApp=function(e){
if(!ZmApp.ENABLED_APPS[e]){
return null
}
if(!this._apps[e]){
this._createApp(e)
}
return this._apps[e]
};
ZmZimbraMail.prototype.getAppViewMgr=function(){
return this._appViewMgr
};
ZmZimbraMail.prototype.getActiveApp=function(){
return this._activeApp
};
ZmZimbraMail.prototype.getPreviousApp=function(){
return this._previousApp
};
ZmZimbraMail.prototype.activateApp=function(n,t,h,i,a){
var o=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
var c=this._isIframeApp(n);
var s=this._appViewMgr.getAppView(n);
if(s&&!t){
if(this._appViewMgr.pushView(s)){
this._appViewMgr.setAppView(n,s);
if(c){
var r=[ZmMsg.zimbraTitle,n].join(": ");
Dwt.setTitle(r)
}}
if(h){
h.run()
}}else{
if(!this._apps[n]){
this._createApp(n)
}
if(c){
this._createAppIframeView(n);
if(h){
h.run()
}}else{
var l=new AjxCallback(this,this._handleResponseActivateApp,[h,n]);
var e=[n,ZmAppEvent.PRE_LAUNCH].join("_");
this._evt.item=this._apps[n];
this.notify(e);
a=a||{};
a.searchResponse=this._searchResponse;
this._apps[n].launch(a,l);
delete this._searchResponse
}}};
ZmZimbraMail.prototype._handleResponseActivateApp=function(a,e){
if(a){
a.run()
}
if(ZmApp.DEFAULT_SEARCH[e]){
appCtxt.getSearchController().setDefaultSearchType(ZmApp.DEFAULT_SEARCH[e])
}
var t=[e,ZmAppEvent.POST_LAUNCH].join("_");
this._evt.item=this._apps[e];
this.notify(t)
};
ZmZimbraMail.prototype.setActiveApp=function(h){
var s=h.app;
if(!h.isTabView){
this._components[ZmAppViewMgr.C_APP_CHOOSER].setSelected(s)
}
var i=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
var t=!ZmApp.SETTING[s]||appCtxt.get(ZmApp.SETTING[s],null,i);
this._activeTabId=null;
if(s===ZmApp.SEARCH){
this._setSearchTabNewButtonProps(h.controller._resultsController)
}
if(this._activeApp!=s){
if(this._activeApp){
var e=this._apps[this._activeApp];
if(e){
e.activate(false,h.id)
}
this._previousApp=this._activeApp
}
this._activeApp=s;
if(t){
var e=this._apps[this._activeApp];
if(appCtxt.get(ZmSetting.SEARCH_ENABLED)){
var r;
var o;
if(s===ZmApp.SEARCH){
o=h.controller._resultsController._currentSearch;
var n=o&&o.types;
r=n&&n.size()>0&&n.get(0)
}else{
o=e.currentSearch;
r=e.getInitialSearchType();
if(!r){
r=ZmApp.DEFAULT_SEARCH[s]
}}
if(r){
appCtxt.getSearchController().setDefaultSearchType(r)
}
var a=appCtxt.getSearchController().getSearchToolbar();
if(appCtxt.get(ZmSetting.SHOW_SEARCH_STRING)&&a){
var l=o?o.query:e.currentQuery;
l=s===ZmApp.SEARCH?"":l;
a.setSearchFieldValue(l||"")
}}
if(e){
if(appCtxt.inStartup&&this._doingPostRenderStartup){
var c=new AjxCallback(this,function(){
e.activate(true)
}
);
this.addPostRenderCallback(c,1,0,true)
}else{
e.activate(true)
}}}
this._evt.item=this._apps[s];
this.notify(ZmAppEvent.ACTIVATE)
}else{
if(this._activeApp&&this._apps[this._activeApp]){
this._apps[this._activeApp].stopAlert()
}}};
ZmZimbraMail.prototype._setSearchTabNewButtonProps=function(o){
var e;
if(o.isZmCalViewController){
e=appCtxt.getApp(ZmApp.CALENDAR)
}else{
var i=o._currentSearch;
var a=i&&i.types;
var t=a&&a.size()>0&&a.get(0);
e=t&&appCtxt.getApp(ZmItem.APP[t])
}
if(e){
appCtxt.getAppController().setNewButtonProps(e.getNewButtonProps())
}};
ZmZimbraMail.prototype.getAppChooserButton=function(t){
var e=this._components[ZmAppViewMgr.C_APP_CHOOSER];
return e&&e.getButton(t)
};
ZmZimbraMail.prototype.appRendered=function(e){
var t=[e,ZmAppEvent.POST_RENDER].join("_");
this.notify(t);
if(window._facadeCleanup){
window._facadeCleanup();
window._facadeCleanup=null
}};
ZmZimbraMail.prototype.addApp=function(t){
var e=t.getName();
this._apps[e]=t;
ZmApp.ENABLED_APPS[e]=true
};
ZmZimbraMail.prototype._createApp=function(appName){
if(!appName||this._apps[appName]){
return
}
var appClass=eval(ZmApp.CLASS[appName]);
this.addApp(new appClass(this._shell))
};
ZmZimbraMail.prototype._setExternalLinks=function(){
var a;
if(!appCtxt.isOffline&&(appCtxt.get(ZmSetting.IS_ADMIN)||appCtxt.get(ZmSetting.IS_DELEGATED_ADMIN))){
a=appCtxt.get(ZmSetting.ADMIN_REFERENCE);
if(!a){
a=["https://",location.hostname,":7071"].join("")
}}
var e=document.getElementById("skin_container_links");
if(e){
var t={
showOfflineLink:(!appCtxt.isOffline&&appCtxt.get(ZmSetting.SHOW_OFFLINE_LINK)),helpIcon:(appCtxt.getSkinHint("helpButton","hideIcon")?null:"Help"),logoutIcon:(appCtxt.getSkinHint("logoutButton","hideIcon")?null:"Logoff"),logoutText:(appCtxt.isOffline?ZmMsg.setup:ZmMsg.logOff),adminUrl:a};
e.innerHTML=AjxTemplate.expand("share.App#UserInfo",t)
}
e=document.getElementById("skin_container_help_button");
if(e){
this._helpButton=this.getHelpButton(DwtShell.getShell(window));
this._helpButton.reparentHtmlElement("skin_container_help_button")
}
e=document.getElementById("skin_dropMenu");
if(e){
this._helpButton=this.getDropMenuOptions(DwtShell.getShell(window),e,a)
}};
ZmZimbraMail.ONLINE_HELP_URL="http://help.zimbra.com/?";
ZmZimbraMail.NEW_FEATURES_URL="http://www.zimbra.com/products/whats_new.html?";
ZmZimbraMail.DEFAULT_CONTACT_ICON=appContextPath+"/img/large/ImgPerson_48.png?v="+window.cacheKillerVersion;
ZmZimbraMail.DEFAULT_CONTACT_ICON_SMALL=appContextPath+"/img/large/ImgPerson_32.png?v="+window.cacheKillerVersion;
ZmZimbraMail.prototype.getDropMenuOptions=function(o,e,s){
var i=new DwtLinkButton({
parent:o,className:DwtButton.LINK_BUTTON_CLASS,parentElement:e,elementTag:"DIV"}
);
i.whatToShow={};
i.setSize(Dwt.DEFAULT);
i.setAlign(DwtLabel.ALIGN_LEFT);
i.setText(ZmMsg.help);
i.setAttribute("aria-label",ZmMsg.userActions);
var n=new ZmPopupMenu(i);
var a=new AjxListener(this,this._helpListener);
i.addSelectionListener(a);
var t;
if(s){
t=n.createMenuItem("adminLink",{
text:ZmMsg.adminLinkLabel}
);
t.addSelectionListener(new AjxListener(null,ZmZimbraMail.adminLinkCallback,s))
}
t=n.createMenuItem("standardHtmlLink",{
text:ZmMsg.htmlClient}
);
t.addSelectionListener(ZmZimbraMail.standardHtmlLinkCallback);
n.createSeparator();
t=n.createMenuItem("documentation",{
text:ZmMsg.productHelp}
);
t.addSelectionListener(a);
t=n.createMenuItem("onlinehelp",{
text:ZmMsg.onlineHelp}
);
t.addSelectionListener(new AjxListener(this,this._onlineHelpListener));
t=n.createMenuItem("newFeatures",{
text:ZmMsg.newFeatures}
);
t.addSelectionListener(new AjxListener(this,this._newFeaturesListener));
t=n.createMenuItem("showCurrentShortcuts",{
text:ZmMsg.shortcuts}
);
t.addSelectionListener(this._showCurrentShortcuts.bind(this));
n.createSeparator();
t=n.createMenuItem(ZmZimbraMail.HELP_MENU_ABOUT,{
text:ZmMsg.about}
);
t.addSelectionListener(new AjxListener(this,this._aboutListener));
n.createSeparator();
if(!appCtxt.isExternalAccount()&&appCtxt.get(ZmSetting.WEBCLIENT_OFFLINE_ENABLED)){
t=n.createMenuItem("offlineSettings",{
text:ZmMsg.offlineSettings}
);
t.addSelectionListener(new AjxListener(this,this._offlineSettingsListener))
}
if(AjxEnv.isFirefox&&(AjxEnv.browserVersion>=23)&&!appCtxt.isExternalAccount()){
t=n.createMenuItem("socialfoxSettings",{
text:ZmMsg.socialfoxEnableSidebar}
);
t.addSelectionListener(this._socialfoxSettingsListener.bind(this))
}
if(appCtxt.get(ZmSetting.CHANGE_PASSWORD_ENABLED)){
t=n.createMenuItem("changePassword",{
text:ZmMsg.changePassword}
);
t.addSelectionListener(new AjxListener(this,this._changePasswordListener))
}
t=n.createMenuItem(ZmZimbraMail.HELP_MENU_LOGOFF,{
text:ZmMsg.logOff}
);
t.addSelectionListener(new AjxListener(null,ZmZimbraMail.logOff));
i.setMenu(n);
this.setupHelpMenu(i);
return i
};
ZmZimbraMail.HELP_MENU_ABOUT="about";
ZmZimbraMail.HELP_MENU_LOGOFF="logOff";
ZmZimbraMail.prototype.setupHelpMenu=function(t){
t=t||this._helpButton;
if(!t){
return
}
var a=t.getMenu();
if(!a){
return
}
var i=!appCtxt.isWebClientOffline();
if(i){
a.enableAll(true)
}else{
a.enableAll(false);
var e=[ZmZimbraMail.HELP_MENU_ABOUT];
a.enable(e,true)
}};
ZmZimbraMail.prototype.getNewButton=function(){
var t=this._newButton;
if(!t){
var e=ZmId.getButtonId(null,ZmOperation.NEW_MENU);
var o={
parent:appCtxt.getShell(),id:e,posStyle:DwtControl.ABSOLUTE_STYLE,className:"ZToolbarButton ZNewButton"};
t=this._newButton=new DwtToolBarButton(o);
t.setText(ZmMsg._new);
ZmOperation.addNewMenu(t);
var i=this._newButtonListener.bind(this);
var a=this._newDropDownListener.bind(this,i);
this._newDropDownListener=a;
t.addSelectionListener(i);
t.addDropDownSelectionListener(a)
}
return t
};
ZmZimbraMail.prototype._newDropDownListener=function(s,o){
var a=this.getNewButton();
var r=a.getMenu();
var e=r.getItems();
for(var t=0;
t<r.getItemCount();
t++){
e[t].addSelectionListener(s)
}
var n=this._newDropDownListener;
a.removeDropDownSelectionListener(n);
a.popup();
delete this._newDropDownListener
};
ZmZimbraMail.prototype._newButtonListener=function(t,o,i){
if(!t&&!o){
return
}
o=o||t.item.getData(ZmOperation.KEY_ID);
if(!o||o==ZmOperation.NEW_MENU){
o=ZmController._defaultNewId
}
var a=ZmApp.OPS_R[o];
if(a){
i=i||{};
i.ev=t;
appCtxt.getApp(a).handleOp(o,i)
}else{
var e=appCtxt.getCurrentController();
if(e){
e._newListener(t,o)
}}};
ZmZimbraMail.prototype.setNewButtonProps=function(t){
var e=this.getNewButton();
if(e){
e.setText(t.text);
e.setToolTipContent(t.tooltip);
e.setImage(t.icon);
e.setEnabled(!t.disabled);
ZmController._defaultNewId=t.defaultId;
t.hidden?e.setVisibility(false):e.setVisibility(true)
}};
ZmZimbraMail.prototype.getHelpButton=function(i){
var a=new DwtLinkButton({
parent:i,className:DwtButton.LINK_BUTTON_CLASS}
);
a.dontStealFocus();
a.setSize(Dwt.DEFAULT);
a.setAlign(DwtLabel.ALIGN_LEFT);
a.setText(ZmMsg.help);
var o=new ZmPopupMenu(a);
var t=new AjxListener(this,this._helpListener);
a.addSelectionListener(t);
var e=o.createMenuItem("documentation",{
text:ZmMsg.productHelp}
);
e.addSelectionListener(t);
var e=o.createMenuItem("onlinehelp",{
text:ZmMsg.onlineHelp}
);
e.addSelectionListener(new AjxListener(this,this._onlineHelpListener));
e=o.createMenuItem("newFeatures",{
text:ZmMsg.newFeatures}
);
e.addSelectionListener(new AjxListener(this,this._newFeaturesListener));
e=o.createMenuItem("showCurrentShortcuts",{
text:ZmMsg.shortcuts}
);
e.addSelectionListener(this._showCurrentShortcuts.bind(this));
o.createSeparator();
e=o.createMenuItem("about",{
text:ZmMsg.about}
);
e.addSelectionListener(new AjxListener(this,this._aboutListener));
a.setMenu(o);
return a
};
ZmZimbraMail.prototype._helpListener=function(e){
ZmZimbraMail.helpLinkCallback()
};
ZmZimbraMail.prototype._getVersion=function(){
return appCtxt.get(ZmSetting.CLIENT_VERSION)
};
ZmZimbraMail.prototype._getQueryParams=function(){
var t=appCtxt.getCurrentAppName().toLowerCase();
var e=appCtxt.isOffline?"zd":"zcs";
return["utm_source=",t,"&utm_medium=",e,"&utm_content=",this._getVersion(),"&utm_campaign=help"].join("")
};
ZmZimbraMail.prototype._onlineHelpListener=function(t){
ZmZimbraMail.unloadHackCallback();
var e=[ZmZimbraMail.ONLINE_HELP_URL,this._getQueryParams()].join("");
window.open(e)
};
ZmZimbraMail.prototype._newFeaturesListener=function(t){
ZmZimbraMail.unloadHackCallback();
var e=[ZmZimbraMail.NEW_FEATURES_URL,this._getQueryParams()].join("");
window.open(e)
};
ZmZimbraMail.prototype._changePasswordListener=function(e){
appCtxt.getChangePasswordWindow(e)
};
ZmZimbraMail.prototype._aboutListener=function(o){
var a=appCtxt.getMsgDialog();
a.reset();
var t=this._getVersion();
var e=appCtxt.get(ZmSetting.CLIENT_RELEASE);
var i=appCtxt.isOffline?ZmMsg.aboutMessageZD:ZmMsg.aboutMessage;
a.setMessage(AjxMessageFormat.format(i,[t,e]),DwtMessageDialog.INFO_STYLE,ZmMsg.about);
a.popup()
};
ZmZimbraMail.prototype._offlineSettingsListener=function(t){
var e;
if(AjxEnv.isOfflineSupported){
e=appCtxt.getOfflineSettingsDialog()
}else{
e=appCtxt.getMsgDialog();
e.setMessage(ZmMsg.offlineSupportedBrowser,"",ZmMsg.offlineSettings)
}
e.popup()
};
ZmZimbraMail.prototype._socialfoxSettingsListener=function(t){
var e=new ZmSocialfoxActivationDialog();
e.popup()
};
ZmZimbraMail.prototype._initOfflineUserInfo=function(){
var e=this._userNameField.getHTMLElId();
this._userNameField.getHtmlElement().innerHTML=AjxTemplate.expand("share.App#NetworkStatus",{
id:e}
);
this._userNameField.addClassName("BannerTextUserOffline");
var i={
parent:this._userNameField,parentElement:(e+"_networkStatusIcon")};
this._networkStatusIcon=new DwtComposite(i);
var t={
parent:this._userNameField,parentElement:(e+"_networkStatusText")};
this._networkStatusText=new DwtComposite(t);
var a=document.getElementById("skin_container_tree_top");
if(a){
Dwt.setSize(a,Dwt.DEFAULT,"20")
}};
ZmZimbraMail.prototype._offlineUpdateChannelPref=function(a){
try{
netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
var e=Components.classes["@mozilla.org/preferences-service;1"].getService(Components.interfaces.nsIPrefBranch);
if(e){
e.setCharPref("app.update.channel",a)
}}
catch(t){}};
ZmZimbraMail.prototype.setUserInfo=function(){
if(appCtxt.isOffline){
return
}
var e=appCtxt.getLoggedInUsername();
var a=(appCtxt.get(ZmSetting.DISPLAY_NAME))||e;
if(a){
var t=this._userNameField.getHtmlElement();
t.innerHTML=AjxStringUtil.htmlEncode(AjxStringUtil.clipByLength(a,24));
t.setAttribute("aria-label",a);
if(AjxEnv.isLinux){
t.style.lineHeight="13px"
}}
this.setQuotaInfo(e,a)
};
ZmZimbraMail.prototype.setQuotaInfo=function(e,r){
var i=appCtxt.get(ZmSetting.QUOTA);
var s=(appCtxt.get(ZmSetting.QUOTA_USED))||0;
var n={
id:this._usedQuotaField._htmlElId,login:e,username:r,quota:i,usedQuota:s,size:(AjxUtil.formatSize(s,false,1))};
var o;
if(n.quota){
o="UsedLimited";
n.limit=AjxUtil.formatSize(n.quota,false,1);
n.percent=Math.min(Math.round((n.usedQuota/n.quota)*100),100);
n.desc=AjxMessageFormat.format(ZmMsg.usingDescLimited,[n.size,"("+n.percent+"%)",n.limit])
}else{
n.desc=AjxMessageFormat.format(ZmMsg.usingDescUnlimited,[n.size]);
o="UsedUnlimited"
}
var a=this._usedQuotaField.getHtmlElement();
a.innerHTML=AjxTemplate.expand("share.Quota#"+o,n);
a.setAttribute("aria-label",n.desc);
var t=AjxTemplate.expand("share.Quota#Tooltip",n);
this._components[ZmAppViewMgr.C_USER_INFO].setToolTipContent(t);
this._components[ZmAppViewMgr.C_QUOTA_INFO].setToolTipContent(t)
};
ZmZimbraMail.setExitTimer=function(t){
if(t&&ZmZimbraMail.stayOnPagePrompt){
if(ZmZimbraMail._exitTimerId==-1){
ZmZimbraMail._exitTimerId=AjxTimedAction.scheduleAction(ZmZimbraMail._exitTimer,ZmZimbraMail.STAYONPAGE_INTERVAL*60*1000);
if(AjxEnv.isFirefox){
var a=AjxMessageFormat.format(ZmMsg.appExitPrompt,[ZmZimbraMail.STAYONPAGE_INTERVAL]);
var e=appCtxt.getMsgDialog();
e.setMessage(a,DwtMessageDialog.CRITICAL_STYLE);
setTimeout(function(){
e.popup()
}
,1000*2)
}}}else{
if(!t&&ZmZimbraMail._exitTimerId){
AjxTimedAction.cancelAction(ZmZimbraMail._exitTimerId);
ZmZimbraMail._exitTimerId=-1
}}};
ZmZimbraMail.logOff=function(o,i){
if(appCtxt.isChildWindow){
window.close();
return
}
if(appCtxt.isWebClientOfflineSupported&&(o||i)){
return ZmOffline.handleLogOff(o,i)
}
ZmZimbraMail._isLogOff=true;
if(appCtxt.isOffline&&AjxEnv.isWindows&&appCtxt.get(ZmSetting.OFFLINE_SUPPORTS_DOCK_UPDATE)){
window.platform.icon().imageSpec="resource://webapp/icons/default/launcher.ico";
window.platform.icon().title=null
}
var e={
path:appContextPath,qsArgs:{
loginOp:i?"relogin":"logout"}};
if(i){
e.qsArgs.username=appCtxt.getLoggedInUsername()
}
if(appCtxt.isExternalAccount()){
var a=appCtxt.getUserDomain();
e.qsArgs.virtualacctdomain=a?a:""
}
var t=AjxUtil.formatUrl(e);
ZmZimbraMail.sendRedirect(t);
if(AjxEnv.isFirefox){
ZmZimbraMail.setExitTimer(true)
}};
ZmZimbraMail.exitSession=function(){
ZmZimbraMail.logOff()
};
ZmZimbraMail.executeSessionTimer=function(){
ZmZimbraMail.sessionTimerInvoked=true;
ZmZimbraMail.logOff()
};
ZmZimbraMail.getConfirmExitMethod=function(){
return this._confirmExitMethod
};
ZmZimbraMail._onClickLogOff=function(){
if(AjxEnv.isIE){
var e=DwtUiEvent.getEvent();
e.returnValue=false
}
ZmZimbraMail.logOff()
};
ZmZimbraMail.adminLinkCallback=function(e){
ZmZimbraMail.unloadHackCallback();
var t=window.parentAppCtxt||window.appCtxt;
window.open(e)
};
ZmZimbraMail.standardHtmlLinkCallback=function(){
var e={
path:appContextPath,qsArgs:{
client:"standard"}};
var t=AjxUtil.formatUrl(e);
ZmZimbraMail.sendRedirect(t)
};
ZmZimbraMail.helpLinkCallback=function(i){
ZmZimbraMail.unloadHackCallback();
var o=window.parentAppCtxt||window.appCtxt;
var a;
if(!o.isOffline){
try{
a=i||skin.hints.helpButton.url
}
catch(n){}
a=a||o.get(ZmSetting.HELP_URI);
var t=a.match(/\?/)?"&":"?";
a=[a,t,"locid=",AjxEnv.DEFAULT_LOCALE].join("")
}else{
a=o.get(ZmSetting.HELP_URI).replace(/\/$/,"");
a=[a,"help","en_US","Zimbra_Mail_Help.htm"].join("/")
}
window.open(a)
};
ZmZimbraMail.sendRedirect=function(t){
if(AjxEnv.isIE){
var e=new AjxTimedAction(null,ZmZimbraMail.redir,[t]);
AjxTimedAction.scheduleAction(e,1)
}else{
ZmZimbraMail.redir(t)
}};
ZmZimbraMail.redir=function(a){
try{
window.location=a
}
catch(t){}};
ZmZimbraMail.prototype.setSessionTimer=function(t){
var e=appCtxt.get(ZmSetting.IDLE_SESSION_TIMEOUT)*1000;
if(e<=0){
return
}
if(t){
this._sessionTimerId=AjxTimedAction.scheduleAction(this._sessionTimer,e);
DwtEventManager.addListener(DwtEvent.ONMOUSEUP,ZmZimbraMail._userEventHdlr);
this._shell.setHandler(DwtEvent.ONMOUSEUP,ZmZimbraMail._userEventHdlr);
if(document.attachEvent){
document.attachEvent("onkeydown",ZmZimbraMail._userEventHdlr)
}
window.onkeydown=ZmZimbraMail._userEventHdlr
}else{
AjxTimedAction.cancelAction(this._sessionTimerId);
this._sessionTimerId=-1;
DwtEventManager.removeListener(DwtEvent.ONMOUSEUP,ZmZimbraMail._userEventHdlr);
this._shell.clearHandler(DwtEvent.ONMOUSEUP);
if(document.detachEvent){
document.detachEvent("onkeydown",ZmZimbraMail._userEventHdlr)
}
window.onkeydown=null
}};
ZmZimbraMail.prototype.addChildWindow=function(a,t){
if(this._childWinList==null){
this._childWinList=new AjxVector()
}
var e={
win:a,childId:t};
this._childWinList.add(e);
return e
};
ZmZimbraMail.prototype.getChildWindow=function(o){
var a=this._childWinList;
if(a&&o){
for(var t=0;
t<a.size();
t++){
var e=a.get(t);
if(o===e.win||o.childId===e.childId){
return e
}}}
return null
};
ZmZimbraMail.prototype.removeChildWindow=function(o){
var a=this._childWinList;
if(a){
for(var t=0;
t<a.size();
t++){
var e=a.get(t);
if(o==e.win){
e.win=null;
break
}}}};
ZmZimbraMail.prototype._handleException=function(s,t){
var i=false;
if(s.code==ZmCsfeException.MAIL_NO_SUCH_FOLDER){
var e=[ZmOrganizer.CALENDAR,ZmOrganizer.ADDRBOOK];
if(s.data.itemId&&s.data.itemId.length){
var h=s.data.itemId[0];
var o=h.lastIndexOf(":");
var n=h.substring(0,o);
var l=h.substring(o+1,h.length);
var a=appCtxt.getFolderTree();
for(var r=0;
r<e.length;
r++){
i|=a.handleNoSuchFolderError(e[r],n,l,true)
}}}else{
if(appCtxt.isWebClientOffline()&&s.code===ZmCsfeException.EMPTY_RESPONSE){
i=true
}}
if(!i){
ZmController.prototype._handleException.apply(this,arguments)
}};
ZmZimbraMail._confirmExitMethod=function(){
if(!ZmCsfeCommand.noAuth){
appCtxt.accountList.saveImplicitPrefs();
if(appCtxt.get(ZmSetting.WARN_ON_EXIT)&&!ZmZimbraMail._isOkToExit()){
if(ZmZimbraMail.stayOnPagePrompt){
return
}
ZmZimbraMail._isLogOff=false;
var e=(appCtxt.isOffline)?ZmMsg.appExitWarningZD:ZmMsg.appExitWarning;
if(ZmZimbraMail.sessionTimerInvoked){
ZmZimbraMail.stayOnPagePrompt=true;
e=AjxMessageFormat.format(e+ZmMsg.appExitTimeWarning,[ZmZimbraMail.STAYONPAGE_INTERVAL])
}
if(!AjxEnv.isFirefox){
ZmZimbraMail.setExitTimer(true)
}
return e
}
ZmZimbraMail._endSession()
}
if(window.ZmDesktopAlert){
ZmDesktopAlert.closeNotification()
}
ZmZimbraMail._endSessionDone=true
};
ZmZimbraMail._isOkToExit=function(){
var t=window._zimbraMail;
if(!t){
return true
}
var e=t._appViewMgr.isOkToUnload()&&ZmZimbraMail._childWindowsOkToUnload();
if(e&&!AjxEnv.isPrism&&t._pollRequest){
t._requestMgr.cancelRequest(t._pollRequest)
}
return e
};
ZmZimbraMail._childWindowsOkToUnload=function(){
var t=window._zimbraMail?window._zimbraMail._childWinList:null;
if(t){
for(var e=0;
e<t.size();
e++){
var a=t.get(e);
if(a.win&&a.win.ZmNewWindow&&a.win.ZmNewWindow._confirmExitMethod()){
return false
}}}
return true
};
ZmZimbraMail.handleNetworkStatusClick=function(){
var e=window.appCtxt.getAppController();
if(!e._isPrismOnline){
return
}
e._isUserOnline=!e._isUserOnline;
e._updateNetworkStatus(e._isUserOnline)
};
ZmZimbraMail.unloadHackCallback=function(){
window.onbeforeunload=null;
var e=function(){
window.onbeforeunload=ZmZimbraMail._confirmExitMethod
};
AjxTimedAction.scheduleAction((new AjxTimedAction(null,e)),3000)
};
ZmZimbraMail._userEventHdlr=function(t){
var e=window._zimbraMail;
if(e){
AjxTimedAction.cancelAction(e._sessionTimerId);
var a=appCtxt.get(ZmSetting.IDLE_SESSION_TIMEOUT)*1000;
if(a<=0){
return
}
e._sessionTimerId=AjxTimedAction.scheduleAction(e._sessionTimer,a)
}};
ZmZimbraMail.prototype._createBanner=function(){
var e=new DwtComposite({
parent:this._shell,posStyle:Dwt.ABSOLUTE_STYLE,id:ZmId.BANNER}
);
var a=appCtxt.getSkinHint("banner","url")||appCtxt.get(ZmSetting.LOGO_URI);
var t={
url:a,isOffline:appCtxt.isOffline};
e.getHtmlElement().innerHTML=AjxTemplate.expand("share.App#Banner",t);
e.getHtmlElement().style.height="100%";
return e
};
ZmZimbraMail.prototype._createUserInfo=function(a,n,o){
var e=appCtxt.getSkinHint(n,"position");
var t=e||Dwt.ABSOLUTE_STYLE;
var i=new DwtComposite({
parent:this._shell,className:a,posStyle:t,id:o,isFocusable:true}
);
i._setMouseEventHdlrs();
return i
};
ZmZimbraMail.prototype._createAppChooser=function(){
var t=[];
for(var i in ZmApp.CHOOSER_SORT){
if(i==ZmAppChooser.SPACER||i==ZmAppChooser.B_HELP||i==ZmAppChooser.B_LOGOUT){
continue
}
if(this._isInternalApp(i)||this._isIframeApp(i)){
t.push(i)
}}
t.sort(function(n,o){
return ZmZimbraMail.hashSortCompare(ZmApp.CHOOSER_SORT,n,o)
}
);
var a=new ZmAppChooser({
parent:this._shell,buttons:t,id:ZmId.APP_CHOOSER,refElementId:ZmId.SKIN_APP_CHOOSER}
);
var e=new AjxListener(this,this._appButtonListener);
a.addSelectionListener(e);
return a
};
ZmZimbraMail.prototype._appButtonListener=function(t){
try{
var i=t.item.getData(Dwt.KEY_ID);
if(i==ZmAppChooser.B_HELP){
window.open(appCtxt.get(ZmSetting.HELP_URI))
}else{
if(i==ZmAppChooser.B_LOGOUT){
ZmZimbraMail.logOff()
}else{
if(i&&ZmApp.ENABLED_APPS[i]&&(i!=this._activeTabId)){
this.activateApp(i);
if(appCtxt.zimletsPresent()){
appCtxt.getZimletMgr().notifyZimlets("onSelectApp",i)
}}else{
var a=(DwtUiEvent.getTargetWithProp(t,"id")==t.item._getIconEl(DwtLabel.RIGHT));
if(a){
this._appViewMgr.popView(false,i)
}else{
if(i!=this._activeTabId){
this._appViewMgr.pushView(i)
}}}}}}
catch(e){
this._handleException(e)
}};
ZmZimbraMail.prototype.getAppChooser=function(){
return this._appChooser
};
ZmZimbraMail.prototype.setActiveTabId=function(e){
this._activeTabId=e;
this._appChooser.setSelected(e)
};
ZmZimbraMail.prototype.setStatusMsg=function(e){
e=Dwt.getParams(arguments,ZmStatusView.MSG_PARAMS);
this.statusView.setStatusMsg(e)
};
ZmZimbraMail.prototype.dismissStatusMsg=function(e){
this.statusView.dismissStatusMsg(e)
};
ZmZimbraMail.prototype.getKeyMapName=function(){
var e=appCtxt.getCurrentController();
if(e&&e.getKeyMapName){
return e.getKeyMapName()
}
return ZmKeyMap.MAP_GLOBAL
};
ZmZimbraMail.prototype.handleKeyAction=function(h,c){
var e=ZmApp.GOTO_ACTION_CODE_R[h];
if(e){
DwtMenu.closeActiveMenu();
if(e==this.getActiveApp()){
return false
}
if(appCtxt.isWebClientOffline()&&!AjxUtil.arrayContains(ZmOffline.SUPPORTED_APPS,e)){
return false
}
this.activateApp(e);
return true
}
if(c&&(c.keyCode==13||c.keyCode==3)&&!(c.altKey||c.ctrlKey||c.metaKey||c.shiftKey)&&c.target&&(c.target.id!=DwtKeyboardMgr.FOCUS_FIELD_ID)){
return false
}
DwtMenu.closeActiveMenu();
switch(h){
case ZmKeyMap.DBG_NONE:appCtxt.setStatusMsg("Setting Debug Level To: "+AjxDebug.NONE);
break;
case ZmKeyMap.DBG_1:appCtxt.setStatusMsg("Setting Debug Level To: "+AjxDebug.DBG1);
break;
case ZmKeyMap.DBG_2:appCtxt.setStatusMsg("Setting Debug Level To: "+AjxDebug.DBG2);
break;
case ZmKeyMap.DBG_3:appCtxt.setStatusMsg("Setting Debug Level To: "+AjxDebug.DBG3);
break;
case ZmKeyMap.DBG_TIMING:var r=DBG._showTiming;
var t=r?"off":"on";
appCtxt.setStatusMsg("Turning Timing Info "+t);
break;
case ZmKeyMap.QUICK_REMINDER:var s=appCtxt.multiAccounts&&appCtxt.accountList.mainAccount;
if(appCtxt.get(ZmSetting.CALENDAR_ENABLED,null,s)&&!appCtxt.isWebClientOffline()){
var l=appCtxt.getCalManager();
l.showQuickReminder()
}
break;
case ZmKeyMap.LOGOFF:ZmZimbraMail.logOff();
break;
case ZmKeyMap.FOCUS_SEARCH_BOX:var a=appCtxt.getSearchController().getSearchToolbar();
if(a){
var m=a.getSearchField();
appCtxt.getKeyboardMgr().grabFocus(m);
if(ZmSearchAutocomplete){
ZmSearchAutocomplete._ignoreNextKey=true
}}
break;
case ZmKeyMap.FOCUS_CONTENT_PANE:this.focusContentPane();
break;
case ZmKeyMap.FOCUS_TOOLBAR:this.focusToolbar();
break;
case ZmKeyMap.UNDO:if(!appCtxt.isChildWindow){
var d=appCtxt.getActionController();
if(d){
d.undoCurrent()
}}
break;
case ZmKeyMap.SHORTCUTS:this._showCurrentShortcuts();
break;
case ZmKeyMap.CANCEL:var n=false;
var o=(DwtMouseEventCapture.getId()=="DwtControl")?DwtMouseEventCapture.getCaptureObj():null;
var i=o&&o.targetObj;
if(i&&(i._dragging==DwtControl._DRAGGING)){
o.release();
i.__lastDestDwtObj=null;
i._setDragProxyState(false);
DwtControl.__badDrop(i,DwtShell.mouseEvent);
n=true
}
if(n){
break
}
default:var u=appCtxt.getCurrentController();
return(u&&u.handleKeyAction)?u.handleKeyAction(h,c):false
}
return true
};
ZmZimbraMail.prototype.focusContentPane=function(){
var e=appCtxt.getCurrentController();
var t=e&&e._getDefaultFocusItem();
if(t){
appCtxt.getKeyboardMgr().grabFocus(t)
}};
ZmZimbraMail.prototype.focusToolbar=function(){
var e=appCtxt.getCurrentController();
var t=e?e.getCurrentToolbar():null;
if(t){
appCtxt.getKeyboardMgr().grabFocus(t)
}};
ZmZimbraMail.prototype._createAppIframeView=function(e){
var r=[e,"iframe"].join("_"),o=(e===ZmApp.SOCIAL),s={
appName:e}
,a=this._appIframeView[e];
if(!a){
a=this._appIframeView[e]=o?new ZmCommunityView(s):new ZmAppIframeView(s);
var n={}
,i={};
n[ZmAppViewMgr.C_APP_CONTENT]=a;
i[ZmAppViewMgr.CB_POST_SHOW]=this._displayAppIframeView.bind(this);
var t=[ZmAppViewMgr.C_TREE,ZmAppViewMgr.C_TREE_FOOTER,ZmAppViewMgr.C_TOOLBAR_TOP,ZmAppViewMgr.C_NEW_BUTTON,ZmAppViewMgr.C_SASH];
this._appViewMgr.createView({
viewId:r,appName:e,controller:this,elements:n,hide:t,isTransient:true,isFullScreen:true,callbacks:i}
)
}
this._appViewMgr.pushView(r);
a.activate(true)
};
ZmZimbraMail.prototype._displayAppIframeView=function(e){
appCtxt.getApp(this._getDefaultStartAppName()).setOverviewPanelContent(false)
};
ZmZimbraMail.prototype._postLoadZimlet=function(){
appCtxt.setZimletsPresent(true)
};
ZmZimbraMail.prototype._globalSelectionListener=function(o){
if(this._waitDisallowed){
this._waitDisallowed=false;
this.setInstantNotify(true)
}
if(!appCtxt.areZimletsLoaded()){
return
}
var i=o.item;
var r=(i&&i.getText)?(i.getText()||i._toggleText):null;
if(i&&!r){
r=i.getData(ZmOperation.KEY_ID)||i.getData(Dwt.KEY_ID)
}
if(r){
var a;
if(i instanceof ZmAppButton){
a="app"
}else{
if(i instanceof DwtMenuItem){
a="menuitem"
}else{
if(i instanceof DwtButton){
a="button"
}else{
if(i instanceof DwtTreeItem){
if(!i.getSelected()){
return
}
a="treeitem"
}else{
a=i.toString()
}}}}
var t=appCtxt.getAppViewMgr();
var e=t.getCurrentViewId();
var s=t.getLastViewId();
var n=(AjxStringUtil.split((""+r)," ")).join("");
appCtxt.notifyZimlets("onAction",[a,n,e,s])
}};
ZmZimbraMail._folderTreeSashRelease=function(t){
var e=skin.getTreeWidth();
if(e){
appCtxt.set(ZmSetting.FOLDER_TREE_SASH_WIDTH,e)
}};
ZmZimbraMail._endSession=function(){
if(!AjxEnv.isPrism&&navigator.onLine){
var t={
jsonObj:{
EndSessionRequest:{
_jsns:"urn:zimbraAccount"}}
,asyncMode:!appCtxt.get("FORCE_CLEAR_COOKIES"),emptyResponseOkay:true};
var e=appCtxt.getAppController();
e&&e.sendRequest(t)
}};
ZmZimbraMail.prototype.notify=function(e){
this._evtMgr.notifyListeners(e,this._evt)
};
ZmZimbraMail.prototype._showCurrentShortcuts=function(){
var t=appCtxt.getShortcutsPanel();
var c=this.getKeyMapName();
var e=appCtxt.getAppController().getKeyMapMgr();
var d=e.getAncestors(c);
var u=(d&&d.length>0);
d.unshift(c);
var n=[];
if(u){
if(d.length>1&&d[d.length-1]==ZmKeyMap.MAP_GLOBAL){
d.pop();
n.push(ZmKeyMap.MAP_GLOBAL)
}}
var l={}
,h={};
l.type=ZmShortcutList.TYPE_APP;
l.maps=d;
var o=[l];
if(n.length){
h.type=ZmShortcutList.TYPE_APP;
h.maps=n;
o.push(h)
}
var r={};
r.type=ZmShortcutList.TYPE_SYS;
r.maps=[];
var m=appCtxt.getCurrentController();
var a=["list","editor","tabView"];
for(var s=0;
s<a.length;
s++){
if(m&&m.mapSupported(a[s])){
r.maps.push(a[s])
}}
r.maps.push("button","menu","tree","dialog","toolbarHorizontal");
o.push(r);
t.popup(o)
};
ZmOrganizer.ZIMLET="ZIMLET"
}
if(AjxPackage.define("zimbraMail.calendar.model.ZmCalBaseItem")){
ZmCalBaseItem=function(t,a,i,e){
if(arguments.length==0){
return
}
ZmItem.call(this,t,i,a);
this.id=i||-1;
this.uid=-1;
this.folderId=e||this._getDefaultFolderId();
this.fragment="";
this.name="";
this.allDayEvent="0";
this.startDate=null;
this.endDate=null;
this.timezone=AjxTimezone.getServerId(AjxTimezone.DEFAULT);
this.alarm=false;
this.alarmData=null;
this.isException=false;
this.recurring=false;
this.priority=null;
this.ptst=null;
this.status=ZmCalendarApp.STATUS_CONF;
this._reminderMinutes=0;
this.otherAttendees=false
};
ZmCalBaseItem.prototype=new ZmItem;
ZmCalBaseItem.prototype.constructor=ZmCalBaseItem;
ZmCalBaseItem.prototype.toString=function(){
return"ZmCalBaseItem"
};
ZmCalBaseItem.PERSON="PERSON";
ZmCalBaseItem.OPTIONAL_PERSON="OPT_PERSON";
ZmCalBaseItem.GROUP="GROUP";
ZmCalBaseItem.LOCATION="LOCATION";
ZmCalBaseItem.EQUIPMENT="EQUIPMENT";
ZmCalBaseItem.FORWARD="FORWARD";
ZmCalBaseItem.PSTATUS_ACCEPT="AC";
ZmCalBaseItem.PSTATUS_DECLINED="DE";
ZmCalBaseItem.PSTATUS_DEFERRED="DF";
ZmCalBaseItem.PSTATUS_DELEGATED="DG";
ZmCalBaseItem.PSTATUS_NEEDS_ACTION="NE";
ZmCalBaseItem.PSTATUS_COMPLETED="CO";
ZmCalBaseItem.PSTATUS_TENTATIVE="TE";
ZmCalBaseItem.PSTATUS_WAITING="WA";
ZmCalBaseItem.FBA_TO_PTST={
B:ZmCalBaseItem.PSTATUS_ACCEPT,F:ZmCalBaseItem.PSTATUS_DECLINED,T:ZmCalBaseItem.PSTATUS_TENTATIVE};
ZmCalBaseItem._pstatusString={
NE:ZmMsg._new,TE:ZmMsg.tentative,AC:ZmMsg.accepted,DE:ZmMsg.declined,DG:ZmMsg.delegated};
ZmCalBaseItem.compareByTimeAndDuration=function(t,e){
if(t.getStartTime()>e.getStartTime()){
return 1
}
if(t.getStartTime()<e.getStartTime()){
return -1
}
if(t.getDuration()<e.getDuration()){
return 1
}
if(t.getDuration()>e.getDuration()){
return -1
}
return 0
};
ZmCalBaseItem.createFromDom=function(t,a,e){
var i=new ZmCalBaseItem(ZmItem.APPT,a.list);
i._loadFromDom(t,(e||{}
));
return i
};
ZmCalBaseItem.prototype.getName=function(){
return this.name||""
};
ZmCalBaseItem.prototype.getEndTime=function(){
return this.endDate.getTime()
};
ZmCalBaseItem.prototype.getStartTime=function(){
return this.startDate.getTime()
};
ZmCalBaseItem.prototype.getAlarmInstStart=function(){
return this._alarmInstStart
};
ZmCalBaseItem.prototype.getDuration=function(){
return this.getEndTime()-this.getStartTime()
};
ZmCalBaseItem.prototype.getLocation=function(){
return this.location||""
};
ZmCalBaseItem.prototype.isAllDayEvent=function(){
return this.allDayEvent=="1"
};
ZmCalBaseItem.prototype.getParticipantStatusStr=function(){
return ZmCalBaseItem._pstatusString[this.ptst]
};
ZmCalBaseItem.prototype.getUniqueId=function(e){
if(e){
if(!this._startTimeUniqId){
this._startTimeUniqId=this.id+"_"+this.getStartTime()
}
return this._startTimeUniqId
}else{
if(this._uniqId==null){
this._uniqId=Dwt.getNextId()
}
return(this.id+"_"+this._uniqId)
}};
ZmCalBaseItem.prototype.isMultiDay=function(){
var t=this.startDate;
var e=this.endDate;
if(!t&&!e){
return false
}
if(!t){
return false
}
if(e.getHours()==0&&e.getMinutes()==0&&e.getSeconds()==0){
e=new Date(e.getTime()-2*AjxDateUtil.MSEC_PER_HOUR)
}
return(t.getDate()!=e.getDate())||(t.getMonth()!=e.getMonth())||(t.getFullYear()!=e.getFullYear())
};
ZmCalBaseItem.prototype.getDurationText=function(a,e){
var i=this.isAllDayEvent();
var n=this.isMultiDay();
if(i){
if(a){
return""
}
var s=this.startDate;
var t=new Date(this.endDate.getTime()-(n?2*AjxDateUtil.MSEC_PER_HOUR:0));
var o=n?ZmMsg.apptTimeAllDayMulti:ZmMsg.apptTimeAllDay;
return AjxMessageFormat.format(o,[s,t])
}
if(e){
return ZmCalBaseItem._getTTHour(this.startDate)
}
var o=n?ZmMsg.apptTimeInstanceMulti:ZmMsg.apptTimeInstance;
return AjxMessageFormat.format(o,[this.getDateInLocalTimezone(this.startDate),this.getDateInLocalTimezone(this.endDate),""])
};
ZmCalBaseItem.prototype.isAlarmInRange=function(){
if(!this.alarmData){
return false
}
var t=this.alarmData[0];
if(!t){
return false
}
this._nextAlarmTime=this.adjustMS(t.nextAlarm,this.tzo);
this._alarmInstStart=this.adjustMS(t.alarmInstStart,this.tzo);
var e=(new Date()).getTime();
return(e>=this._nextAlarmTime)
};
ZmCalBaseItem.prototype.adjustMS=function(e,a){
var t=this.isAllDayEvent()?(a+new Date(e).getTimezoneOffset()*60*1000):0;
return parseInt(e,10)+t
};
ZmCalBaseItem.prototype.isAlarmInstance=function(){
var e=this.alarmData?this.alarmData[0]:null;
if(!e||!e.alarmInstStart||!this.startDate){
return false
}
this._alarmInstStart=this.adjustMS(e.alarmInstStart,this.tzo);
return(this._alarmInstStart==this.startDate.getTime())
};
ZmCalBaseItem.prototype.hasAlarmData=function(){
return(this.alarmData!=null)
};
ZmCalBaseItem.prototype._loadFromDom=function(a,e){
this.uid=a.uid;
this.folderId=a.l||this._getDefaultFolderId();
this.invId=a.invId;
this.isException=e.ex;
this.id=a.id;
this.name=this._getAttr(a,e,"name");
this.fragment=this._getAttr(a,e,"fr");
this.status=this._getAttr(a,e,"status");
this.ptst=this._getAttr(a,e,"ptst");
this.allDayEvent=(e.allDay||a.allDay)?"1":"0";
this.organizer=a.or&&a.or.a;
this.isOrg=this._getAttr(a,e,"isOrg");
this.transparency=this._getAttr(a,e,"transp");
if(e.allDay==false){
this.allDayEvent="0"
}
this.alarm=this._getAttr(a,e,"alarm");
this.alarmData=this._getAttr(a,e,"alarmData");
if(!this.alarmData&&this.isException){
this.alarmData=a.alarmData
}
this.priority=parseInt(this._getAttr(a,e,"priority"));
this.recurring=e.recur!=null?e.recur:a.recur;
this.ridZ=this.recurring&&e&&e.ridZ;
this.fba=this._getAttr(a,e,"fba");
var s=e.s!=null?e.s:a.inst&&a.inst.length>0&&a.inst[0].s;
if(s){
var r=this.tzo=e.tzo!=null?e.tzo:a.tzo;
var n=this.isAllDayEvent()?(r+new Date(s).getTimezoneOffset()*60*1000):0;
var o=parseInt(s,10)+n;
this.startDate=new Date(o);
this.uniqStartTime=this.startDate.getTime()
}
var i=this._getAttr(a,e,"dur");
if(i){
var t=o+(parseInt(i));
this.endDate=new Date(t)
}
this.otherAttendees=this._getAttr(a,e,"otherAtt");
this.location=this._getAttr(a,e,"loc")
};
ZmCalBaseItem.prototype._getDefaultFolderId=function(){
return ZmOrganizer.ID_CALENDAR
};
ZmCalBaseItem.prototype._getAttr=function(e,a,t){
return a[t]!=null?a[t]:a.ex?null:e[t]
};
ZmCalBaseItem.prototype._addLocationToRequest=function(e){
e.loc=this.getLocation()
};
ZmCalBaseItem._getTTHour=function(t){
var e=AjxDateFormat.getTimeInstance(AjxDateFormat.SHORT);
return e.format(t)
};
ZmCalBaseItem.prototype.getReminderLocation=function(){
return(this.alarmData[0].loc||"")
};
ZmCalBaseItem.prototype.getReminderName=function(){
return(this.alarmData[0].name||"")
};
ZmCalBaseItem.prototype.getAlarmData=function(){
return this.alarmData
};
ZmCalBaseItem.prototype.isAlarmOld=function(){
if(!this.alarmData){
return false
}
var a=this.alarmData[0];
this._nextAlarmTime=a.nextAlarm;
this._alarmInstStart=a.alarmInstStart;
var e=(new Date()).getTime();
var t=(e-this._nextAlarmTime);
if(t>2*60*1000){
return true
}
return false
};
ZmCalBaseItem.prototype.getRestUrl=function(){
if(this.restUrl){
return this.restUrl
}
var e=appCtxt.getById(this.folderId);
var t=e?([e.getRestUrl(),"/?id=",AjxStringUtil.urlComponentEncode(this.id||this.invId)].join("")):null;
return t
};
ZmCalBaseItem.prototype.getDateInLocalTimezone=function(t){
var o=this.getTimezone();
var e=AjxTimezone.getServerId(AjxTimezone.DEFAULT);
if(o!=e){
var i=AjxTimezone.getOffset(AjxTimezone.DEFAULT,t);
var a=AjxTimezone.getOffset(AjxTimezone.getClientId(o),t);
return new Date(t.getTime()+(i-a)*60*1000)
}
return t
}
}
if(AjxPackage.define("zimbraMail.calendar.model.ZmCalItem")){
ZmCalItem=function(t,a,i,e){
if(arguments.length==0){
return
}
ZmCalBaseItem.call(this,t,a,i,e);
this.notesTopPart=null;
this.attachments=null;
this.viewMode=ZmCalItem.MODE_NEW;
this._recurrence=new ZmRecurrence(this);
this._noBusyOverlay=null;
this._sendNotificationMail=true;
this.identity=null;
this.isProposeTimeMode=false;
this.isForwardMode=false;
this.alarmActions=new AjxVector();
this.alarmActions.add(ZmCalItem.ALARM_DISPLAY);
this._useAbsoluteReminder=false;
this._ignoreVersion=false
};
ZmCalItem.prototype=new ZmCalBaseItem;
ZmCalItem.prototype.constructor=ZmCalItem;
ZmCalItem.prototype.toString=function(){
return"ZmCalItem"
};
ZmCalItem.MODE_NEW="NEW";
ZmCalItem.MODE_EDIT="EDIT";
ZmCalItem.MODE_COPY_SINGLE_INSTANCE="COPY_INST";
ZmCalItem.MODE_EDIT_SINGLE_INSTANCE="EDIT_INST";
ZmCalItem.MODE_EDIT_SERIES="EDIT_SER";
ZmCalItem.MODE_DELETE="DELETE";
ZmCalItem.MODE_DELETE_INSTANCE="DELETE_INST";
ZmCalItem.MODE_DELETE_SERIES="DELETE_SER";
ZmCalItem.MODE_NEW_FROM_QUICKADD="NEW_FROM_QUICK";
ZmCalItem.MODE_GET="GET";
ZmCalItem.MODE_FORWARD="FORWARD";
ZmCalItem.MODE_FORWARD_SINGLE_INSTANCE="FORWARD_INST";
ZmCalItem.MODE_FORWARD_SERIES="FORWARD_SER";
ZmCalItem.MODE_FORWARD_INVITE="FORWARD_INV";
ZmCalItem.MODE_PROPOSE_TIME="PROPOSE_TIME";
ZmCalItem.MODE_PURGE=15;
ZmCalItem.MODE_LAST=15;
ZmCalItem.FORWARD_MAPPING={};
ZmCalItem.FORWARD_MAPPING[ZmCalItem.MODE_FORWARD]=ZmCalItem.MODE_EDIT;
ZmCalItem.FORWARD_MAPPING[ZmCalItem.MODE_FORWARD_SINGLE_INSTANCE]=ZmCalItem.MODE_EDIT_SINGLE_INSTANCE;
ZmCalItem.FORWARD_MAPPING[ZmCalItem.MODE_FORWARD_SERIES]=ZmCalItem.MODE_EDIT_SERIES;
ZmCalItem.FORWARD_MAPPING[ZmCalItem.MODE_FORWARD_INVITE]=ZmCalItem.MODE_EDIT;
ZmCalItem.PRIORITY_LOW=9;
ZmCalItem.PRIORITY_LOW_RANGE=[6,7,8,9];
ZmCalItem.PRIORITY_NORMAL=5;
ZmCalItem.PRIORITY_NORMAL_RANGE=[0,5];
ZmCalItem.PRIORITY_HIGH=1;
ZmCalItem.PRIORITY_HIGH_RANGE=[1,2,3,4];
ZmCalItem.ROLE_CHAIR="CHA";
ZmCalItem.ROLE_REQUIRED="REQ";
ZmCalItem.ROLE_OPTIONAL="OPT";
ZmCalItem.ROLE_NON_PARTICIPANT="NON";
ZmCalItem.SERVER_WEEK_DAYS=["SU","MO","TU","WE","TH","FR","SA"];
ZmCalItem.ATTACHMENT_CHECKBOX_NAME="__calAttCbox__";
ZmCalItem.ATT_LINK_IMAGE="mainImage";
ZmCalItem.ATT_LINK_MAIN="main";
ZmCalItem.ATT_LINK_DOWNLOAD="download";
ZmCalItem.REMINDER_UNIT_MINUTES="minutes";
ZmCalItem.REMINDER_UNIT_HOURS="hours";
ZmCalItem.REMINDER_UNIT_DAYS="days";
ZmCalItem.REMINDER_UNIT_WEEKS="weeks";
ZmCalItem.REMINDER_NONE="none";
ZmCalItem.ALARM_DISPLAY="DISPLAY";
ZmCalItem.ALARM_EMAIL="EMAIL";
ZmCalItem.ALARM_DEVICE_EMAIL="DEVICE_EMAIL";
ZmCalItem.MSEC_LIMIT_PER_WEEK=AjxDateUtil.MSEC_PER_DAY*7;
ZmCalItem.MSEC_LIMIT_PER_MONTH=AjxDateUtil.MSEC_PER_DAY*7*5;
ZmCalItem.MSEC_LIMIT_PER_YEAR=AjxDateUtil.MSEC_PER_DAY*366;
ZmCalItem.prototype.getCompNum=function(){
return this.compNum||"0"
};
ZmCalItem.prototype.getFolder=function(){};
ZmCalItem.prototype.getOrganizer=function(){
return this.organizer||""
};
ZmCalItem.prototype.getOrganizerName=function(){
return this.organizerName
};
ZmCalItem.prototype.getSentBy=function(){
return this.sentBy||""
};
ZmCalItem.prototype.getOrigStartDate=function(){
return this._origStartDate||this.startDate
};
ZmCalItem.prototype.getOrigStartTime=function(){
return this.getOrigStartDate().getTime()
};
ZmCalItem.prototype.getOrigEndDate=function(){
return this._origEndDate||this.endDate
};
ZmCalItem.prototype.getOrigEndTime=function(){
return this.getOrigEndDate().getTime()
};
ZmCalItem.prototype.getOrig=function(){
return this._orig
};
ZmCalItem.prototype.getOrigTimezone=function(){
return this._origTimezone||this.timezone
};
ZmCalItem.prototype.getRecurBlurb=function(){
return this._recurrence.getBlurb()
};
ZmCalItem.prototype.getRecurrence=function(){
return this._recurrence
};
ZmCalItem.prototype.getRecurType=function(){
return this._recurrence.repeatType
};
ZmCalItem.prototype.getTimezone=function(){
return this.timezone
};
ZmCalItem.prototype.getSummary=function(e){};
ZmCalItem.prototype.getToolTip=function(e){};
ZmCalItem.prototype.isCustomRecurrence=function(){
return this._recurrence.repeatCustom=="1"||this._recurrence.repeatEndType!="N"
};
ZmCalItem.prototype.isOrganizer=function(){
return(typeof(this.isOrg)==="undefined")||(this.isOrg==true)
};
ZmCalItem.prototype.isRecurring=function(){
return(this.recurring||(this._rawRecurrences!=null))
};
ZmCalItem.prototype.hasAttachments=function(){
return this.getAttachments()!=null
};
ZmCalItem.prototype.hasAttendeeForType=function(e){
return false
};
ZmCalItem.prototype.hasAttendees=function(){
return false
};
ZmCalItem.prototype.hasPersonAttendees=function(){
return false
};
ZmCalItem.prototype.setAllDayEvent=function(e){
this.allDayEvent=e?"1":"0"
};
ZmCalItem.prototype.setName=function(e){
this.name=e
};
ZmCalItem.prototype.setOrganizer=function(e){
this.organizer=e!=""?e:null
};
ZmCalItem.prototype.setRecurType=function(e){
this._recurrence.repeatType=e
};
ZmCalItem.prototype.setType=function(e){
this.type=e
};
ZmCalItem.prototype.setOrigTimezone=function(e){
this._origTimezone=e
};
ZmCalItem.prototype.setFolderId=function(e){
this.folderId=e||ZmOrganizer.ID_CALENDAR
};
ZmCalItem.prototype.getLocalFolderId=function(){
var t=this.folderId;
if(this.isShared()){
var e=appCtxt.getById(this.folderId);
if(e){
t=e.id
}}
return t
};
ZmCalItem.prototype.setEndDate=function(t,e){
if(this._origEndDate==null&&this.endDate!=null&&this.endDate!=""){
this._origEndDate=new Date(this.endDate.getTime())
}
this.endDate=new Date(t instanceof Date?t.getTime():t);
if(!e){
this._resetCached()
}};
ZmCalItem.prototype.setStartDate=function(e,t){
if(this._origStartDate==null&&this.startDate!=null&&this.startDate!=""){
this._origStartDate=new Date(this.startDate.getTime())
}
this.startDate=new Date(e instanceof Date?e.getTime():e);
if(!t){
this._resetCached()
}
if(this.recurring&&this._recurrence){
this._recurrence.setRecurrenceStartTime(this.startDate.getTime())
}};
ZmCalItem.prototype.setTimezone=function(e,t){
if(this._origTimezone==null){
this._origTimezone=e
}
this.timezone=e;
if(!t){
this._resetCached()
}};
ZmCalItem.prototype.setEndTimezone=function(e){
if(this._origEndTimezone==null){
this._origEndTimezone=e
}
this.endTimezone=e
};
ZmCalItem.prototype.setViewMode=function(e){
this.viewMode=e||ZmCalItem.MODE_NEW;
if(this.viewMode==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE){
this._recurrence.repeatType="NON"
}};
ZmCalItem.prototype.getViewMode=function(e){
return this.viewMode
};
ZmCalItem.prototype.getNotesPart=function(o){
if(this.notesTopPart){
var e=o||ZmMimeTable.TEXT_PLAIN;
var t=this.notesTopPart.getContentForType(e);
if(!t){
if(e==ZmMimeTable.TEXT_PLAIN){
var i=document.createElement("div");
t=this.notesTopPart.getContentForType(ZmMimeTable.TEXT_HTML);
i.innerHTML=t||"";
var a=AjxStringUtil.convertHtml2Text(i);
return a.substring(1)
}else{
if(e==ZmMimeTable.TEXT_HTML){
t=AjxStringUtil.convertToHtml(this.notesTopPart.getContentForType(ZmMimeTable.TEXT_PLAIN))
}}}
return t
}else{
return this.fragment
}};
ZmCalItem.prototype.getRemoteFolderOwner=function(){
var t=AjxDispatcher.run("GetCalController");
if(t.isMovingBetwAccounts(this,this.folderId)){
return null
}
var a=this.getFolder();
var e=a&&a.link&&a.owner;
var i=(!e&&appCtxt.multiAccounts&&a.getAccount());
if(i){
e=i.name
}
return e
};
ZmCalItem.prototype.isReadOnly=function(){
var a=this.getFolder();
if(appCtxt.multiAccounts){
var e=appCtxt.accountList.getAccountByEmail(this.organizer);
var t=appCtxt.accountList.getAccountByEmail(a.getAccount().getEmail());
if(e==t){
return false
}}
return(!this.isOrganizer()||(a.link&&a.isReadOnly()))
};
ZmCalItem.prototype.isFolderReadOnly=function(){
var e=this.getFolder();
return(e&&e.isReadOnly())
};
ZmCalItem.prototype.isVersionIgnored=function(){
return this._ignoreVersion
};
ZmCalItem.prototype.setIgnoreVersion=function(e){
this._ignoreVersion=e
};
ZmCalItem.prototype.resetRepeatWeeklyDays=function(){
if(this.startDate){
this._recurrence.repeatWeeklyDays=[ZmCalItem.SERVER_WEEK_DAYS[this.startDate.getDay()]]
}};
ZmCalItem.prototype.resetRepeatMonthlyDayList=function(){
if(this.startDate){
this._recurrence.repeatMonthlyDayList=[this.startDate.getDate()]
}};
ZmCalItem.prototype.resetRepeatYearlyMonthsList=function(e){
this._recurrence.repeatYearlyMonthsList=e
};
ZmCalItem.prototype.resetRepeatCustomDayOfWeek=function(){
if(this.startDate){
this._recurrence.repeatCustomDayOfWeek=ZmCalItem.SERVER_WEEK_DAYS[this.startDate.getDay()]
}};
ZmCalItem.prototype.isOverlapping=function(e,n){
if(n&&this.folderId!=e.folderId){
return false
}
var t=this.getStartTime();
var i=this.getEndTime();
var o=e.getStartTime();
var a=e.getEndTime();
return(t<a)&&(i>o)
};
ZmCalItem.prototype.isInRange=function(a,t){
var e=this.getStartTime();
var i=this.getEndTime();
return(e<t&&i>a)
};
ZmCalItem.prototype.isValidDuration=function(){
var i=this.getStartTime();
var t=this.getEndTime();
if(this.endTimezone&&this.endTimezone!=this.timezone){
var e=AjxTimezone.getRule(this.timezone).standard.offset;
var a=AjxTimezone.getRule(this.endTimezone).standard.offset;
i=i-(e*60000);
t=t-(a*60000)
}
return(i<=t)
};
ZmCalItem.prototype.isValidDurationRecurrence=function(){
var e=true;
var a=this.getRecurType();
var t=this.getDuration();
switch(a){
case ZmRecurrence.DAILY:e=t<=AjxDateUtil.MSEC_PER_DAY;
break;
case ZmRecurrence.WEEKLY:e=t<=ZmCalItem.MSEC_LIMIT_PER_WEEK;
break;
case ZmRecurrence.MONTHLY:e=t<=ZmCalItem.MSEC_LIMIT_PER_MONTH;
break;
case ZmRecurrence.YEARLY:e=t<=ZmCalItem.MSEC_LIMIT_PER_YEAR;
break;
default:break
}
return e
};
ZmCalItem.prototype.parseAlarmData=function(){
if(!this.alarmData){
return
}
for(var t=0;
t<this.alarmData.length;
t++){
var a=this.alarmData[t].alarm;
if(a){
for(var e=0;
e<a.length;
e++){
this.parseAlarm(a[e])
}}}};
ZmCalItem.prototype.parseAlarm=function(o){
if(!o){
return
}
var t,n,s,a;
var i=o.trigger;
var e=(i&&(i.length>0))?i[0].rel:null;
t=(e&&(e.length>0))?e[0].m:null;
s=(e&&(e.length>0))?e[0].d:null;
n=(e&&(e.length>0))?e[0].h:null;
a=(e&&(e.length>0))?e[0].w:null;
this._reminderMinutes=0;
if(o.action==ZmCalItem.ALARM_DISPLAY){
if(t!=null){
this._reminderMinutes=t;
this._origReminderUnits=ZmCalItem.REMINDER_UNIT_MINUTES
}
if(n!=null){
n=parseInt(n);
this._reminderMinutes=n*60;
this._origReminderUnits=ZmCalItem.REMINDER_UNIT_HOURS
}
if(s!=null){
s=parseInt(s);
this._reminderMinutes=s*24*60;
this._origReminderUnits=ZmCalItem.REMINDER_UNIT_DAYS
}
if(a!=null){
a=parseInt(a);
this._reminderMinutes=a*7*24*60;
this._origReminderUnits=ZmCalItem.REMINDER_UNIT_WEEKS
}}};
ZmCalItem.prototype.isStartInRange=function(a,t){
var e=this.getStartTime();
return(e<t&&e>=a)
};
ZmCalItem.prototype.isEndInRange=function(t,e){
var a=this.getEndTime();
return(a<=e&&a>t)
};
ZmCalItem.prototype.setDateRange=function(i,t,n,a){
var o=i.startDate;
var r=i.endDate;
this.endDate.setTime(i.endDate.getTime());
this.startDate.setTime(i.startDate.getTime())
};
ZmCalItem.prototype.getDateRange=function(e,a,t){
return{
startDate:this.startDate,endDate:this.endDate}
};
ZmCalItem.prototype.setAttachments=function(a){
this.attachments=[];
if(a&&a.length>0){
var t=a.split(",");
for(var e=0;
e<t.length;
e++){
this.attachments[e]={
id:t[e]}
}}};
ZmCalItem.prototype.getAttachments=function(){
var t=this.message?this.message.attachments:null;
if(t){
if(this._validAttachments==null){
this._validAttachments=[];
for(var e=0;
e<t.length;
++e){
if(this.message.isRealAttachment(t[e])||t[e].contentType==ZmMimeTable.TEXT_CAL){
this._validAttachments.push(t[e])
}}}
return this._validAttachments.length>0?this._validAttachments:null
}
return null
};
ZmCalItem.prototype.removeAttachment=function(e){
if(this._validAttachments&&this._validAttachments.length>0){
for(var t=0;
t<this._validAttachments.length;
t++){
if(this._validAttachments[t].part==e){
this._validAttachments.splice(t,1);
break
}}}};
ZmCalItem.prototype.getShortStartHour=function(){
var e=AjxDateFormat.getTimeInstance(AjxDateFormat.SHORT);
return e.format(this.startDate)
};
ZmCalItem.prototype.getUniqueStartDate=function(){
if(this._uniqueStartDate==null&&this.uniqStartTime){
this._uniqueStartDate=new Date(this.uniqStartTime)
}
return this._uniqueStartDate
};
ZmCalItem.prototype.getUniqueEndDate=function(){
if(this._uniqueEndDate==null&&this.uniqStartTime){
this._uniqueEndDate=new Date(this.uniqStartTime+this.getDuration())
}
return this._uniqueEndDate
};
ZmCalItem.prototype.getDetails=function(i,d,r,n,c,o){
var h=i||this.viewMode;
var a=h==ZmCalItem.MODE_EDIT_SERIES;
var e=(a&&this.message&&!this.message.seriesMode);
if(this.message==null||e){
var t=a?(this.seriesInvId||this.invId||this.id):this.invId;
this.message=new ZmMailMsg(t);
if(this._orig){
this._orig.message=this.message
}
var m=new AjxCallback(this,this._handleResponseGetDetails,[h,this.message,d]);
var u=(!n)?(new AjxCallback(this,this._handleErrorGetDetails,[h,d,r])):r;
var l=appCtxt.isOffline&&this.getFolder().getAccount();
var s={
callback:m,errorCallback:u,noBusyOverlay:c,ridZ:(a?null:this.ridZ),batchCmd:o,accountName:(l&&l.name)};
this.message.load(s)
}else{
this.setFromMessage(this.message,h);
if(d){
d.run()
}}};
ZmCalItem.prototype.convertToLocalTimezone=function(){
var n=this.getTimezone();
var t=AjxTimezone.getServerId(AjxTimezone.DEFAULT);
var o=this.startDate;
var e=this.endDate;
if(n!=t){
var i=AjxTimezone.getOffset(AjxTimezone.DEFAULT,o);
var a=AjxTimezone.getOffset(AjxTimezone.getClientId(n),o);
o.setTime(o.getTime()+(i-a)*60*1000);
e.setTime(e.getTime()+(i-a)*60*1000);
this.setTimezone(t);
this.setEndTimezone(t)
}};
ZmCalItem.prototype._handleResponseGetDetails=function(o,i,r,e){
this.setFromMessage(i,o);
i.seriesMode=(o==ZmCalItem.MODE_EDIT_SERIES);
if(this._orig&&this._orig.proposedInvite){
var a=this._orig.proposedInvite;
var s=a.getServerStartTime();
var t=a.getServerEndTime();
if(s){
this.setStartDate(AjxDateUtil.parseServerDateTime(s,true))
}
if(t){
this.setEndDate(AjxDateUtil.parseServerDateTime(t,true))
}
var n=a.getServerStartTimeTz();
this.setTimezone(n||AjxTimezone.getServerId(AjxTimezone.DEFAULT));
this.startsInUTC=s?s.charAt(s.length-1)=="Z":null;
this.endsInUTC=t&&s?t.charAt(s.length-1)=="Z":null;
this.status=a.components[0].status;
this.convertToLocalTimezone();
this.isAcceptingProposal=true
}
if(r){
r.run(e)
}};
ZmCalItem.prototype._handleErrorGetDetails=function(s,h,n,r){
if(r.code=="mail.INVITE_OUT_OF_DATE"){
var l={}
,c=this._getRequestNameForMode(ZmCalItem.MODE_GET),o=l[c]={
_jsns:"urn:zimbraMail"}
,d=new AjxCallback(this,this._handleErrorGetDetails2,[s,h,n]),i;
o.id=this.id;
i={
jsonObj:l,asyncMode:true,callback:d,errorCallback:n};
appCtxt.getAppController().sendRequest(i);
return true
}
if(r.code=="account.ACCOUNT_INACTIVE"){
var t=r.msg?r.msg.split(":"):null,e=t?t[1]:"",a=appCtxt.getMsgDialog();
a.setMessage(AjxMessageFormat.format(ZmMsg.accountInactiveError,e),DwtMessageDialog.CRITICAL_STYLE);
a.popup();
return true
}
if(n){
return n.run(r)
}
return false
};
ZmCalItem.prototype._handleErrorGetDetails2=function(o,n,a,e){
var t=this._getInviteFromError(e);
this.invId=[this.id,t.id].join("-");
this.message=null;
var i=true;
this.getDetails(o,n,a,i)
};
ZmCalItem.prototype.setFromMessage=function(t,e){
if(t==this._currentlyLoaded){
return
}
if(t.invite){
this.isOrg=t.invite.isOrganizer();
this.organizer=t.invite.getOrganizerEmail();
this.organizerName=t.invite.getOrganizerName();
this.sentBy=t.invite.getSentBy();
this.name=t.invite.getName()||t.subject;
this.isException=t.invite.isException();
this.recurring=t.invite.isRecurring();
this.location=t.invite.getLocation();
this.seq=t.invite.getSequenceNo();
this.allDayEvent=t.invite.isAllDayEvent();
if(t.invite.id){
this.invId=this.id+"-"+t.invite.id
}
this._setTimeFromMessage(t,e);
this._setExtrasFromMessage(t);
this._setRecurrence(t)
}
this._setNotes(t);
this.getAttachments();
this._currentlyLoaded=t
};
ZmCalItem.prototype.setFromSavedResponse=function(e){
this.invId=e.invId;
if(this.message){
this.message.rev=e.rev;
this.message.ms=e.ms
}
if(this.viewMode==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE&&!this.isException){
this.isException=true
}};
ZmCalItem.prototype.setFromMailMessage=function(t,e){
this.name=e;
this._setNotes(t);
this.message=t;
this.invId=t.id
};
ZmCalItem.prototype.setTextNotes=function(e){
this.notesTopPart=new ZmMimePart();
this.notesTopPart.setContentType(ZmMimeTable.TEXT_PLAIN);
this.notesTopPart.setContent(e)
};
ZmCalItem.prototype._setTimeFromMessage=function(l,i){
var t=l.invite.getServerStartTime();
var o=l.invite.getServerEndTime();
if(i===ZmCalItem.MODE_EDIT_SINGLE_INSTANCE||i===ZmCalItem.MODE_FORWARD_SINGLE_INSTANCE||i===ZmCalItem.MODE_COPY_SINGLE_INSTANCE){
var e=this.getUniqueStartDate();
if(e){
this.setStartDate(e)
}
var h=this.getUniqueEndDate();
if(h){
if(this.isAllDayEvent()&&i===ZmCalItem.MODE_COPY_SINGLE_INSTANCE){
h.setDate(h.getDate()-1)
}
this.setEndDate(h)
}
if(i===ZmCalItem.MODE_COPY_SINGLE_INSTANCE){
i=ZmCalItem.MODE_EDIT_SINGLE_INSTANCE
}}else{
if(t){
this.setStartDate(AjxDateUtil.parseServerDateTime(t))
}
if(o){
this.setEndDate(AjxDateUtil.parseServerDateTime(o))
}}
this.startsInUTC=t?t.charAt(t.length-1)=="Z":null;
this.endsInUTC=o&&t?o.charAt(t.length-1)=="Z":null;
var s;
if(i==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE||i==ZmCalItem.MODE_DELETE_INSTANCE||i==ZmCalItem.MODE_FORWARD_SINGLE_INSTANCE){
s=AjxTimezone.getServerId(AjxTimezone.DEFAULT);
this.setTimezone(s);
this.setEndTimezone(s)
}else{
var n=!this.startsInUTC&&l.invite.getServerStartTimeTz();
s=n||AjxTimezone.getServerId(AjxTimezone.DEFAULT);
this.setTimezone(s);
var a=!this.endsInUTC&&l.invite.getServerEndTimeTz();
this.setEndTimezone(a||AjxTimezone.getServerId(AjxTimezone.DEFAULT));
if(!this.startsInUTC&&l.invite.getServerEndTimeTz()){
this.setEndTimezone(l.invite.getServerEndTimeTz())
}}
var r=AjxTimezone.getRule(AjxTimezone.getClientId(this.getTimezone()));
if(r){
if(r.aliasId){
r=AjxTimezone.getRule(r.aliasId)||r
}
this.setTimezone(r.serverId)
}
r=AjxTimezone.getRule(AjxTimezone.getClientId(this.endTimezone));
if(r){
if(r.aliasId){
r=AjxTimezone.getRule(r.aliasId)||r
}
this.setEndTimezone(r.serverId)
}};
ZmCalItem.prototype._setExtrasFromMessage=function(e){
this._setAlarmFromMessage(e)
};
ZmCalItem.prototype._setAlarmFromMessage=function(o){
this._reminderMinutes=0;
var h=o.invite.getAlarm();
if(h){
for(var a=0;
a<h.length;
a++){
var s=h[a];
if(!s){
continue
}
var n=s.action;
if(n==ZmCalItem.ALARM_DISPLAY){
this.parseAlarm(s);
continue
}
if(n==ZmCalItem.ALARM_EMAIL){
var r=s.at;
if(!r){
continue
}
for(var t=0;
t<r.length;
t++){
var e=r[t].a;
if(e==appCtxt.get(ZmSetting.CAL_DEVICE_EMAIL_REMINDERS_ADDRESS)){
n=ZmCalItem.ALARM_DEVICE_EMAIL
}
this.addReminderAction(n)
}}}}};
ZmCalItem.prototype._setRecurrence=function(t){
var e=t.invite.getRecurrenceRules();
if(e){
this._recurrence.parse(e)
}
if(this._recurrence.repeatWeeklyDays==null){
this.resetRepeatWeeklyDays()
}
if(this._recurrence.repeatMonthlyDayList==null){
this.resetRepeatMonthlyDayList()
}};
ZmCalItem.prototype._getCleanHtml2Text=function(s){
var i;
var t=s?s.getDocument():null;
var e=t?t.body:null;
if(e){
var a=e.innerHTML.replace(/\n/ig,"");
e.innerHTML=a.replace(/<!--.*-->/ig,"");
var n=e.firstChild;
var o=(n&&n.tagName&&n.tagName.toLocaleLowerCase()=="p");
i=AjxStringUtil.convertHtml2Text(e);
if(o){
i=i.replace(/\n\n/i,"")
}}
return i
};
ZmCalItem.prototype._setNotes=function(o){
if(!(o instanceof ZmMailMsg)){
return
}
this.notesTopPart=new ZmMimePart();
var r=o.getBodyContent(ZmMimeTable.TEXT_HTML);
if(r){
r=r.replace(/<title\s*>.*\/title>/ig,"");
if(!this._includeEditReply){
r=this._trimNotesSummary(r,true)
}}
if(r){
var s={
parent:appCtxt.getShell(),hidden:true,html:r};
var i=o.getInviteDescriptionContentValue(ZmMimeTable.TEXT_PLAIN);
if(!i){
var n=new DwtIframe(s);
i=this._getCleanHtml2Text(n);
var t=n.getIframe();
if(t&&t.parentNode){
t.parentNode.removeChild(t)
}
delete n
}
var a=new ZmMimePart();
a.setContentType(ZmMimeTable.TEXT_PLAIN);
a.setContent(i);
var e=new ZmMimePart();
e.setContentType(ZmMimeTable.TEXT_HTML);
e.setContent(r);
this.notesTopPart.setContentType(ZmMimeTable.MULTI_ALT);
this.notesTopPart.children.add(a);
this.notesTopPart.children.add(e)
}else{
var i=o.getBodyContent(ZmMimeTable.TEXT_PLAIN);
if(!this._includeEditReply){
i=this._trimNotesSummary(i)
}
this.notesTopPart.setContentType(ZmMimeTable.TEXT_PLAIN);
this.notesTopPart.setContent(i)
}};
ZmCalItem.prototype.getMailNotificationOption=function(){
return this._sendNotificationMail
};
ZmCalItem.prototype.setMailNotificationOption=function(e){
this._sendNotificationMail=e
};
ZmCalItem.prototype.addExceptionDetails=function(e){
var o=e.exceptId={}
,a=this._orig?this._orig.allDayEvent:this.allDayEvent,t,i;
if(a!="1"){
i=AjxDateUtil.getServerDateTime(this.getOrigStartDate(),this.startsInUTC);
t=this.getOrigTimezone();
if(!this.startsInUTC&&t){
o.tz=t
}
o.d=i
}else{
i=AjxDateUtil.getServerDate(this.getOrigStartDate());
o.d=i
}};
ZmCalItem.prototype.save=function(a,r,o,e){
var c=false,h={}
,l=this._getRequestNameForMode(this.viewMode,this.isException),i=h[l]={
_jsns:"urn:zimbraMail"}
,s,t,n;
if(this.viewMode==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE&&!this.isException){
this._addInviteAndCompNum(i);
c=true
}else{
if(this.viewMode==ZmCalItem.MODE_EDIT||this.viewMode==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE||this.viewMode==ZmCalItem.MODE_EDIT_SERIES){
this._addInviteAndCompNum(i);
c=this.isException
}}
s=this.getRemoteFolderOwner();
t=this._setRequestAttributes(i,a,e,s);
n=t.inv.comp[0];
if(c){
this.addExceptionDetails(n)
}else{
this._recurrence.setJson(n)
}
this._setAlarmData(n);
this._sendRequest(null,s,r,o,h,l)
};
ZmCalItem.prototype._setAlarmData=function(s){
var r=this._useAbsoluteReminder,a=r?this._reminderAbs:this._reminderMinutes;
if(!a){
return
}
for(var n=0,h=this.alarmActions.size();
n<h;
n++){
var l=null;
var o=this.alarmActions.get(n);
if(o==ZmCalItem.ALARM_EMAIL){
l=appCtxt.get(ZmSetting.CAL_EMAIL_REMINDERS_ADDRESS);
if(!l){
continue
}}
if(o==ZmCalItem.ALARM_DEVICE_EMAIL){
l=appCtxt.get(ZmSetting.CAL_DEVICE_EMAIL_REMINDERS_ADDRESS);
if(!l){
continue
}
o=ZmCalItem.ALARM_EMAIL
}
var c=s.alarm=s.alarm||[];
var e={
action:o};
c.push(e);
var t=e.trigger={};
this._setReminderUnits(t,a);
this._addXPropsToAlarm(e);
if(l){
e.at={
a:l}
}}};
ZmCalItem.prototype._setReminderUnits=function(t,i){
i=i||0;
var a=this._useAbsoluteReminder,e=t[a?"abs":"rel"]={};
if(a){
e.d=i
}else{
e.m=i;
e.related="START";
e.neg="1"
}};
ZmCalItem.prototype._addXPropsToAlarm=function(e){
if(!this.alarmData){
return
}
var a=(this.alarmData&&this.alarmData.length>0)?this.alarmData[0]:null,i=a?a.alarm:null,t=(i&&i.length>0)?i[0]:null;
this._setAlarmXProps(t,e)
};
ZmCalItem.prototype._setAlarmXProps=function(s,n){
var o=(s&&s.xprop)?s.xprop:null,a,e,t;
if(!o){
return
}
o=(o instanceof Array)?o:[o];
for(a=0;
a<o.length;
a++){
t=o[a];
if(t&&t.name){
e=n.xprop={};
e.name=t.name;
if(t.value!=null){
e.value=t.value
}
this._addXParamToRequest(e,t.xparam)
}}};
ZmCalItem.prototype.setReminderMinutes=function(e){
this._reminderMinutes=e
};
ZmCalItem.prototype.setReminderUnits=function(e,t,a){
if(!e){
this._reminderMinutes=0;
return
}
e=parseInt(e+"");
this._reminderMinutes=ZmCalendarApp.convertReminderUnits(e,t);
this._reminderSendEmail=a
};
ZmCalItem.prototype.addReminderAction=function(e){
this.alarmActions.add(e,null,true)
};
ZmCalItem.prototype.removeReminderAction=function(e){
this.alarmActions.remove(e)
};
ZmCalItem.prototype.cancel=function(s,e,r,n,a){
this.setViewMode(s);
if(e){
var c=[];
var t=(e._topPart.contentType==ZmMimeTable.MULTI_ALT)?e._topPart.children.getArray():[e._topPart];
for(var o=0;
o<t.length;
o++){
c.push(t[o])
}
e.setBodyParts(c);
this._setNotes(e);
this._doCancel(s,r,e,a)
}else{
var h=new AjxCallback(this,this._doCancel,[s,r,null,a]);
var l=new AjxCallback(this,this._handleCancelError,[s,r,n]);
if(this._blobInfoMissing&&s!=ZmCalItem.MODE_DELETE_SERIES){
this.showBlobMissingDlg()
}else{
this.getDetails(null,h,l)
}}};
ZmCalItem.prototype.showBlobMissingDlg=function(){
var e=appCtxt.getMsgDialog();
e.setMessage(ZmMsg.apptBlobMissing,DwtMessageDialog.INFO_STYLE);
e.popup()
};
ZmCalItem.prototype._handleCancelError=function(a,i,e,t){
if(t.code=="mail.NO_SUCH_BLOB"){
if(this.isRecurring()&&a!=ZmCalItem.MODE_DELETE_SERIES){
this._blobInfoMissing=true;
this.showBlobMissingDlg();
return true
}else{
this._doCancel(a,i,this.message)
}
return true
}
if(e){
return e.run(t)
}
return false
};
ZmCalItem.prototype.setCancelFutureInstances=function(e){
this._cancelFutureInstances=e
};
ZmCalItem.prototype._sendCancelMsg=function(e){
this.save(null,e)
};
ZmCalItem.prototype._doCancel=function(w,l,c,v,b){
var a=this.getFolder().nId,C={}
,W,r,q,t=this.getRemoteFolderOwner(),y,p,n,k,O,B,x,A,T,z,s,o,f,g,d,h,u;
if(a==ZmOrganizer.ID_TRASH){
w=ZmCalItem.MODE_PURGE;
W=this._getRequestNameForMode(w);
r=C[W]={
_jsns:"urn:zimbraMail"};
q=r.action={};
q.op="delete";
q.id=this.id;
if(v){
v.addRequestParams(C,l)
}else{
this._sendRequest(null,t,l,null,C,W)
}}else{
if(w==ZmCalItem.MODE_DELETE_SERIES&&this._cancelFutureInstances&&this.getOrigStartDate().getTime()!=this.getStartTime()){
y=this._recurrence;
p=new Date(this.getOrigStartDate().getTime());
p.setTime(p.getTime()-AjxDateUtil.MSEC_PER_DAY);
y.repeatEndDate=p;
y.repeatEndType="D";
this.viewMode=ZmCalItem.MODE_EDIT_SERIES;
this._sendCancelMsg(l);
return
}
if(w==ZmCalItem.MODE_DELETE||w==ZmCalItem.MODE_DELETE_SERIES||w==ZmCalItem.MODE_DELETE_INSTANCE){
W=this._getRequestNameForMode(w);
r=C[W]={
_jsns:"urn:zimbraMail"};
this._addInviteAndCompNum(r);
if(w==ZmCalItem.MODE_DELETE_INSTANCE||this.isException){
r.s=this.getOrigStartTime();
n=r.inst={};
k=this.isAllDayEvent();
O=k?AjxDateUtil.getServerDate:AjxDateUtil.getServerDateTime;
n.d=O(this.getOrigStartDate());
if(!k&&this.timezone){
n.tz=this.timezone;
B=AjxTimezone.getClientId(this.timezone);
ZmTimezone.set(r,B,null,true)
}}
x=r.m={};
A=x.e=[];
u=this.isOrganizer();
if(u){
if(!this.inviteNeverSent){
if(c){
for(T=0;
T<ZmMailMsg.ADDRS.length;
T++){
s=ZmMailMsg.ADDRS[T];
if((t&&s==AjxEmailAddress.FROM)||(s==AjxEmailAddress.RESENT_FROM)){
continue
}
o=c.getAddresses(s);
f=o.size();
for(z=0;
z<f;
z++){
g=o.get(z);
A.push({
a:g.getAddress(),t:AjxEmailAddress.toSoapType[s]}
)
}}
if(t){
A.push({
a:t,t:AjxEmailAddress.toSoapType[AjxEmailAddress.FROM]}
)
}}else{
this._addAttendeesToRequest(null,x,null,t)
}}
h=this.getMailFromAddress();
if(h){
A.push({
a:h,t:AjxEmailAddress.toSoapType[AjxEmailAddress.FROM]}
)
}}
d=(c&&c.subject)?c.subject:([ZmMsg.cancelled,": ",this.name].join(""));
x.su=d;
this._addNotesToRequest(x,true);
if(v){
v.addRequestParams(C,l)
}else{
this._sendRequest(null,t,l,null,C,W)
}}else{
if(l){
l.run()
}}}};
ZmCalItem.prototype.getMailFromAddress=function(){
var e=appCtxt.get(ZmSetting.MAIL_FROM_ADDRESS);
if(e){
return(e instanceof Array)?e[0]:e
}};
ZmCalItem.prototype.getTextSummary=function(){
return this.getSummary(false)
};
ZmCalItem.prototype.getHtmlSummary=function(){
return this.getSummary(true)
};
ZmCalItem.prototype._getTextSummaryTime=function(n,h,t,e,o,l){
var c=appCtxt.get(ZmSetting.CAL_SHOW_TIMEZONE);
var a=[];
var s=0;
if(t){
a[s++]=AjxDateUtil.longComputeDateStr(t);
a[s++]=", "
}
if(this.isAllDayEvent()){
a[s++]=ZmMsg.allDay
}else{
var r=AjxDateFormat.getTimeInstance();
if(e){
a[s++]=r.format(e)
}
if(e&&o){
a[s++]=" - "
}
if(o){
a[s++]=r.format(o)
}
if(c){
a[s++]=" ";
a[s++]=AjxTimezone.getLongName(AjxTimezone.getClientId(this.timezone))
}}
if(n&&((this._orig&&this._orig.isAllDayEvent()!=this.isAllDayEvent())||l)){
a[s++]=" ";
a[s++]=ZmMsg.apptModifiedStamp
}
a[s++]="\n";
return a.join("")
};
ZmCalItem.prototype._trimNotesSummary=function(t,a){
if(t){
var e=t.indexOf(ZmItem.NOTES_SEPARATOR);
if(e!=-1){
t=t.substr(e+ZmItem.NOTES_SEPARATOR.length);
if(a){
t=t.replace(/^<br><br>/i,"");
t=t.replace(/^<\/div><br>/i,"")
}else{
t=t.replace(/^\n\n/i,"")
}}}
return AjxStringUtil.trim(t)
};
ZmCalItem.prototype._resetCached=function(){
delete this._startTimeUniqId;
this._startTimeUniqId=null;
delete this._validAttachments;
this._validAttachments=null;
delete this.tooltip;
this.tooltip=null
};
ZmCalItem.prototype._getTTDay=function(e){
return DwtCalendar.getDayFormatter().format(e)
};
ZmCalItem.prototype._addInviteAndCompNum=function(e){
var t;
if(this.message&&!this.isVersionIgnored()){
e.ms=this.message.ms;
e.rev=this.message.rev
}
if(this.viewMode==ZmCalItem.MODE_EDIT_SERIES||this.viewMode==ZmCalItem.MODE_DELETE_SERIES){
if(this.recurring&&this.seriesInvId!=null){
e.id=this.seriesInvId;
e.comp=this.getCompNum()
}}else{
if(this.invId!=null&&this.invId!=-1){
t=this.invId;
if(appCtxt.multiAccounts&&this._orig&&this._orig.getFolder().getAccount()!=this.getFolder().getAccount()){
t=ZmOrganizer.getSystemId(this.invId,this._orig.getFolder().getAccount(),true)
}
e.id=t;
e.comp=this.getCompNum()
}}};
ZmCalItem.prototype._getDefaultBlurb=function(n,o){
var e=[];
var t=0;
var a=this.viewMode==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE||this.viewMode==ZmCalItem.MODE_DELETE_INSTANCE;
if(o){
e[t++]="<h3>"
}
if(this.isProposeTimeMode){
e[t++]=ZmMsg.subjectNewTime
}else{
if(n){
e[t++]=a?ZmMsg.apptInstanceCanceled:ZmMsg.apptCanceled
}else{
if(!this.isForwardMode||this.isOrganizer()){
if(!this.inviteNeverSent&&(this.viewMode==ZmCalItem.MODE_EDIT||this.viewMode==ZmCalItem.MODE_EDIT_SINGLE_INSTANCE||this.viewMode==ZmCalItem.MODE_EDIT_SERIES)){
e[t++]=a?ZmMsg.apptInstanceModified:ZmMsg.apptModified
}else{
e[t++]=ZmMsg.apptNew
}}else{
e[t++]=ZmMsg.apptForwarded
}}}
if(o){
e[t++]="</h3>"
}
e[t++]="\n\n";
e[t++]=this.getSummary(o);
return e.join("")
};
ZmCalItem.prototype._getRequestNameForMode=function(t,e){};
ZmCalItem.prototype._getInviteFromError=function(e){};
ZmCalItem.prototype._setRequestAttributes=function(n,s,l,o){
var x=n.m={}
,b=this.getFolder(),p=b.getAccount(),g=o&&p&&p.name!=o,r,d,h,A,c,W,k,y,D,j,f,v,w,T,C,u,a,t,O,B,z,q;
x.l=(g?this.getFolder().rid:this.folderId);
a=x.inv={};
z=x.e=[];
if(this.uid!=null&&this.uid!=-1&&!this.isSharedCopy){
a.uid=this.uid
}
w=a.comp=[];
T=w[0]={};
T.at=[];
this._addAttendeesToRequest(T,x,l,o);
D=this.identity;
k=D==null||D.isDefault;
j=b.isRemote();
r=this.getMailFromAddress();
if(this.isOrganizer()&&!o&&(r||j||!k)){
if(r){
u=r
}else{
if(j){
u=this.organizer
}else{
if(D){
u=D.sendFromAddress;
h=D.sendFromDisplay
}}}
f={
a:u,t:AjxEmailAddress.toSoapType[AjxEmailAddress.FROM]};
if(!h&&u==appCtxt.get(ZmSetting.USERNAME)){
h=appCtxt.get(ZmSetting.DISPLAY_NAME)
}
if(h){
f.p=h
}
z.push(f);
if(D&&D.isFromDataSource&&!j){
this._addIdentityFrom(D,z,x)
}}
if(j){
if(!D){
y=appCtxt.getIdentityCollection();
D=y&&y.defaultIdentity
}
if(D){
u=D.sendFromAddress;
h=D.sendFromDisplay
}else{
u=appCtxt.get(ZmSetting.USERNAME);
h=appCtxt.get(ZmSetting.DISPLAY_NAME)
}
f={
a:u,t:AjxEmailAddress.toSoapType[AjxEmailAddress.SENDER]};
if(h){
f.p=h
}
z.push(f)
}
this._addExtrasToRequest(n,T);
this._addDateTimeToRequest(n,T);
this._addXPropsToRequest(T);
x.su=this.name;
T.name=this.name;
this._addLocationToRequest(T);
this._addNotesToRequest(x);
if(!(appCtxt.isOffline&&p.isMain)){
B=(appCtxt.multiAccounts)?p.getEmail():appCtxt.get(ZmSetting.USERNAME);
if(!D){
y=appCtxt.getIdentityCollection(p);
D=y&&y.defaultIdentity
}
if(D){
d=D.sendFromAddress;
h=D.sendFromDisplay
}
C=r||d||B;
W=this.organizer||C;
t=T.or={};
t.a=W;
if(j){
t.sentBy=C
}
v=(W==d)?h:(ZmApptViewHelper.getAddressEmail(W)).getName();
if(v){
t.d=v
}}
this.flagLocal(ZmItem.FLAG_ATTACH,false);
this.getAttachments();
if(s!=null||(this._validAttachments!=null&&this._validAttachments.length)){
c=n.m.attach={};
if(s){
c.aid=s;
this.flagLocal(ZmItem.FLAG_ATTACH,true)
}
if(this._validAttachments){
A=this._validAttachments.length;
c.mp=[];
for(q=0;
q<A;
q++){
O=(this.invId||this.message.id);
if((O.indexOf(":")<0)&&b.isRemote()){
O=(appCtxt.getActiveAccount().id+":"+O)
}
c.mp.push({
mid:O,part:this._validAttachments[q].part}
)
}
if(A>0){
this.flagLocal(ZmItem.FLAG_ATTACH,true)
}}}
return{
inv:a,m:x}
};
ZmCalItem.prototype._addIdentityFrom=function(i,n,t){
var h=appCtxt.getDataSourceCollection().getById(i.id),r,o,s,a;
if(h){
r=ZmDataSource.getProviderForAccount(h);
o=r&&r._nosender;
if(!o){
n.push({
t:AjxEmailAddress.toSoapType[AjxEmailAddress.SENDER],p:appCtxt.get(ZmSetting.DISPLAY_NAME)||""}
)
}
s={
t:AjxEmailAddress.toSoapType[AjxEmailAddress.SENDER],a:h.getEmail()};
if(appCtxt.get(ZmSetting.DEFAULT_DISPLAY_NAME)){
a=h.identity&&h.identity.sendFromDisplay;
a=a||h.userName||h.getName();
if(a){
s.p=a
}}
n.push(s)
}};
ZmCalItem.prototype._addExtrasToRequest=function(t,e){
if(this.priority){
e.priority=this.priority
}
e.status=this.status
};
ZmCalItem.prototype._addXPropsToRequest=function(a){
var s=this.message?this.message:null,t=(s&&s.invite)?s.invite:null,r=t?t.getXProp():null,n,e,o;
if(!r){
return
}
a.xprop=[];
r=(r instanceof Array)?r:[r];
for(o=0;
o<r.length;
o++){
n=r[o],e={};
if(n&&n.name){
e.name=n.name;
if(n.value!=null){
e.value=n.value
}
this._addXParamToRequest(e,n.xparam);
a.xprop.push(e)
}}};
ZmCalItem.prototype._addXParamToRequest=function(i,n){
if(!n){
return
}
n=(n instanceof Array)?n:[n];
var t=i.xparam=[],o={}
,a,e;
for(a=0;
a<n.length;
a++){
e=n[a];
o={};
if(e&&e.name){
o.name=e.name;
if(e.value!=null){
o.value=e.value
}
t.push(o)
}}};
ZmCalItem.prototype._addDateTimeToRequest=function(n,i){
i.allDay=this.allDayEvent+"";
var l,t,o,h,r,a;
if(this.timezone){
t=AjxTimezone.getClientId(this.timezone);
ZmTimezone.set(n,t,null,true);
l=this.timezone
}
if(this.startDate){
o=i.s={};
if(!this.isAllDayEvent()){
h=AjxDateUtil.getServerDateTime(this.startDate,this.startsInUTC);
if(!this.startsInUTC&&l&&l.length){
o.tz=l
}
o.d=h
}else{
o.d=AjxDateUtil.getServerDate(this.startDate)
}}
if(this.endTimezone){
l=this.endTimezone
}
if(this.endDate){
r=i.e={};
if(!this.isAllDayEvent()){
a=AjxDateUtil.getServerDateTime(this.endDate,this.endsInUTC);
if(!this.endsInUTC&&l&&l.length){
r.tz=l
}
r.d=a
}else{
r.d=AjxDateUtil.getServerDate(this.endDate)
}}};
ZmCalItem.prototype._addAttendeesToRequest=function(t,e,i,a){
if(this.isOrganizer()&&a){
e.e.push({
a:a,t:AjxEmailAddress.toSoapType[AjxEmailAddress.FROM]}
)
}};
ZmCalItem.prototype._addNotesToRequest=function(o,g){
var n=this.hasAttendees(),l=n?this._getDefaultBlurb(g):"",y=n?this._getDefaultBlurb(g,true):"",a=o.mp={
mp:[]}
,t,e,p,c,d,u,f,h,r;
a.ct=ZmMimeTable.MULTI_ALT;
t=this.notesTopPart?this.notesTopPart.children.size():0;
if(t>0){
for(r=0;
r<t;
r++){
e=this.notesTopPart.children.get(r);
p=e.getContentType();
if(p==ZmMimeTable.TEXT_HTML){
var s=e.getContent();
s=AjxStringUtil.defangHtmlContent(s);
c="<html><body id='htmlmode'>"+(this._includeEditReply?s:AjxBuffer.concat(y,s))+"</body></html>"
}else{
c=this._includeEditReply?e.getContent():AjxBuffer.concat(l,e.getContent())
}
a.mp.push({
ct:p,content:c}
)
}}else{
d=this.notesTopPart;
u=d?d.getContent():"";
p=d?d.getContentType():ZmMimeTable.TEXT_PLAIN;
a.mp.push({
ct:p}
);
if(p==ZmMimeTable.TEXT_HTML){
f=AjxStringUtil.nl2br(AjxStringUtil.htmlEncode(u));
h="<html><body>"+(this._includeEditReply?f:AjxBuffer.concat(y,f))+"</body></html>";
a.mp[0].content=h
}else{
a.mp[0].content=(this._includeEditReply?u:AjxBuffer.concat(l,u))
}}};
ZmCalItem.prototype.getInviteDescription=function(o){
var i=this.hasAttendees();
var a=i?this.getSummary(false):"";
var t=i?this.getSummary(true):"";
var e=this.getNotesPart(o?ZmMimeTable.TEXT_HTML:ZmMimeTable.TEXT_PLAIN);
return AjxBuffer.concat(o?t:a,e)
};
ZmCalItem.prototype.setIncludeEditReply=function(e){
this._includeEditReply=e
};
ZmCalItem.prototype._sendRequest=function(i,a,r,t,s,n){
var e=i?i.getMethod().nodeName.replace("Request","Response"):n.replace("Request","Response");
var o=new AjxCallback(this,this._handleResponseSend,[e,r]);
if(!s){
appCtxt.getAppController().sendRequest({
soapDoc:i,asyncMode:true,accountName:a,callback:o,errorCallback:t}
)
}else{
appCtxt.getAppController().sendRequest({
jsonObj:s,asyncMode:true,accountName:a,callback:o,errorCallback:t}
)
}};
ZmCalItem.prototype._loadFromDom=function(t,e){
ZmCalBaseItem.prototype._loadFromDom.call(this,t,e);
this.isOrg=this._getAttr(t,e,"isOrg");
var a=t.or;
this.organizer=a&&a.a;
this.sentBy=a&&a.sentBy;
this.invId=this._getAttr(t,e,"invId");
this.compNum=this._getAttr(t,e,"compNum")||"0";
this.parseAlarmData(this.alarmData);
this.seriesInvId=this.recurring?t.invId:null;
this.ridZ=e&&e.ridZ;
if(t.tn){
this._parseTagNames(t.tn)
}
if(t.f){
this._parseFlags(t.f)
}};
ZmCalItem.prototype._handleResponseSend=function(n,s,e){
var o=e.getResponse();
var i=o[n];
if(i.uid!=null){
this.uid=i.uid
}
var a;
if(i.echo){
a=i.echo;
if(a.length>0){
a=a[0]
}}
a=a?a.m:i.m;
if(a!=null){
if(a.length>0){
a=a[0]
}
var t=this.invId;
this.invId=a.id;
if(AjxUtil.isSpecified(t)&&t!=this.invId){
this.message=null
}else{
if(a){
this.message=new ZmMailMsg(a.id);
this.message._loadFromDom(a);
delete this._validAttachments;
this._validAttachments=null;
this.getAttachments()
}}}
this._messageNode=null;
if(s){
s.run(i)
}};
ZmCalItem.prototype.processErrorSave=function(t){
var e={
continueSave:false,errorMessage:""};
if(t.code==ZmCsfeException.MAIL_SEND_ABORTED_ADDRESS_FAILURE){
var a=t.getData(ZmCsfeException.MAIL_SEND_ADDRESS_FAILURE_INVALID);
var i=(a&&a.length)?AjxMessageFormat.format(ZmMsg.apptSendErrorInvalidAddresses,AjxStringUtil.htmlEncode(a.join(", "))):null;
e.errorMessage=ZmMsg.apptSendErrorAbort+"<br/>"+i
}else{
if(t.code==ZmCsfeException.MAIL_SEND_PARTIAL_ADDRESS_FAILURE){
var a=t.getData(ZmCsfeException.MAIL_SEND_ADDRESS_FAILURE_INVALID);
e.errorMessage=(a&&a.length)?AjxMessageFormat.format(ZmMsg.apptSendErrorPartial,AjxStringUtil.htmlEncode(a.join(", "))):ZmMsg.apptSendErrorAbort
}else{
if(t.code==ZmCsfeException.MAIL_MESSAGE_TOO_BIG){
e.errorMessage=(this.type==ZmItem.TASK)?ZmMsg.taskSaveErrorToobig:ZmMsg.apptSaveErrorToobig
}else{
if(t.code==ZmCsfeException.MAIL_INVITE_OUT_OF_DATE){
if(!this.isVersionIgnored()){
this.setIgnoreVersion(true);
e.continueSave=true
}else{
e.errorMessage=ZmMsg.inviteOutOfDate;
this.setIgnoreVersion(false)
}}else{
if(t.code==ZmCsfeException.MAIL_NO_SUCH_CALITEM){
e.errorMessage=t.getErrorMsg([t.getData("itemId")])
}else{
if(t.code==ZmCsfeException.MAIL_QUOTA_EXCEEDED){
if(this.type==ZmItem.APPT){
e.errorMessage=ZmMsg.errorQuotaExceededAppt
}else{
if(this.type==ZmItem.TASK){
e.errorMessage=ZmMsg.errorQuotaExceededTask
}}}else{
if(t.code===ZmCsfeException.MUST_BE_ORGANIZER){
e.errorMessage=ZmMsg.mustBeOrganizer
}}}}}}}
return e
};
ZmCalItem.prototype.setProposedTimeCallback=function(e){
this._proposedTimeCallback=e
};
ZmCalItem.prototype.handlePostSaveCallbacks=function(){
if(this._proposedTimeCallback){
this._proposedTimeCallback.run(this)
}
this.setIgnoreVersion(false)
};
ZmCalItem.isPriorityHigh=function(e){
return AjxUtil.arrayContains(ZmCalItem.PRIORITY_HIGH_RANGE,e)
};
ZmCalItem.isPriorityLow=function(e){
return AjxUtil.arrayContains(ZmCalItem.PRIORITY_LOW_RANGE,e)
};
ZmCalItem.isPriorityNormal=function(e){
return AjxUtil.arrayContains(ZmCalItem.PRIORITY_NORMAL_RANGE,e)
};
ZmCalItem.getLabelForPriority=function(e){
if(ZmCalItem.isPriorityLow(e)){
return ZmMsg.low
}
if(ZmCalItem.isPriorityNormal(e)){
return ZmMsg.normal
}
if(ZmCalItem.isPriorityHigh(e)){
return ZmMsg.high
}
return""
};
ZmCalItem.getImageForPriority=function(e,t){
if(ZmCalItem.isPriorityLow(e.priority)){
return t?AjxImg.getImageHtml("PriorityLow_list",null,["id='",t,"'"].join("")):AjxImg.getImageHtml("PriorityLow_list")
}else{
if(ZmCalItem.isPriorityHigh(e.priority)){
return t?AjxImg.getImageHtml("PriorityHigh_list",null,["id='",t,"'"].join("")):AjxImg.getImageHtml("PriorityHigh_list")
}}
return""
};
ZmCalItem.getLabelForStatus=function(e){
switch(e){
case ZmCalendarApp.STATUS_CANC:return ZmMsg.cancelled;
case ZmCalendarApp.STATUS_COMP:return ZmMsg.completed;
case ZmCalendarApp.STATUS_DEFR:return ZmMsg.deferred;
case ZmCalendarApp.STATUS_INPR:return ZmMsg.inProgress;
case ZmCalendarApp.STATUS_NEED:return ZmMsg.notStarted;
case ZmCalendarApp.STATUS_WAIT:return ZmMsg.waitingOn
}
return""
};
ZmCalItem.getLabelForParticipationStatus=function(e){
switch(e){
case ZmCalBaseItem.PSTATUS_ACCEPT:return ZmMsg.ptstAccept;
case ZmCalBaseItem.PSTATUS_DECLINED:return ZmMsg.ptstDeclined;
case ZmCalBaseItem.PSTATUS_DEFERRED:return ZmMsg.ptstDeferred;
case ZmCalBaseItem.PSTATUS_DELEGATED:return ZmMsg.ptstDelegated;
case ZmCalBaseItem.PSTATUS_NEEDS_ACTION:return ZmMsg.ptstNeedsAction;
case ZmCalBaseItem.PSTATUS_COMPLETED:return ZmMsg.completed;
case ZmCalBaseItem.PSTATUS_TENTATIVE:return ZmMsg.ptstTentative;
case ZmCalBaseItem.PSTATUS_WAITING:return ZmMsg.ptstWaiting
}
return""
};
ZmCalItem.getParticipationStatusIcon=function(e){
switch(e){
case ZmCalBaseItem.PSTATUS_ACCEPT:return"Check";
case ZmCalBaseItem.PSTATUS_DECLINED:return"Cancel";
case ZmCalBaseItem.PSTATUS_DEFERRED:return"QuestionMark";
case ZmCalBaseItem.PSTATUS_DELEGATED:return"Plus";
case ZmCalBaseItem.PSTATUS_NEEDS_ACTION:return"NeedsAction";
case ZmCalBaseItem.PSTATUS_COMPLETED:return"Completed";
case ZmCalBaseItem.PSTATUS_TENTATIVE:return"QuestionMark";
case ZmCalBaseItem.PSTATUS_WAITING:return"Minus"
}
return""
};
ZmCalItem._getTTDay=function(a,t){
t=t||AjxDateFormat.SHORT;
var e=AjxDateFormat.getDateInstance();
return e.format(a)
}
}
if(AjxPackage.define("zimbraMail.tasks.model.ZmTask")){
ZmTask=function(t,a,e){
ZmCalItem.call(this,ZmItem.TASK,t,a,e);
this.priority=ZmCalItem.PRIORITY_NORMAL;
this.pComplete=0;
this.status=ZmCalendarApp.STATUS_NEED;
this.startDate=null;
this.endDate=null;
this.remindDate=new Date();
this.alarm=false;
this._useAbsoluteReminder=true
};
ZmTask.prototype=new ZmCalItem;
ZmTask.prototype.constructor=ZmTask;
ZmTask.PCOMPLETE_INT=10;
ZmTaskClone=function(){};
ZmTask.quickClone=function(t){
ZmTaskClone.prototype=t;
var e=new ZmTaskClone();
e.startDate=t.startDate?(new Date(t.startDate.getTime())):null;
e.endDate=t.endDate?(new Date(t.endDate.getTime())):null;
e._uniqId=Dwt.getNextId();
e._validAttachments=AjxUtil.createProxy(t._validAttachments);
if(!e._orig){
e._orig=t
}
e.type=ZmItem.TASK;
return e
};
ZmTask.createFromDom=function(i,a,e){
var t=new ZmTask(a.list,i.id);
t._loadFromDom(i,e);
return t
};
ZmTask.prototype.toString=function(){
return"ZmTask"
};
ZmTask.prototype.getIcon=function(){
return"Task"
};
ZmTask.prototype.getFolder=function(){
return appCtxt.getById(this.folderId)
};
ZmTask.prototype.getId=function(){
return this.id
};
ZmTask.prototype.getSummary=function(e){};
ZmTask.prototype.getToolTip=function(e){};
ZmTask.prototype.notifyModify=function(e){
ZmItem.prototype.notifyModify.call(this,e);
this.uid=e.uid;
if(e.l){
this.folderId=e.l
}
this._loadFromDom(e);
this._notify(ZmEvent.E_MODIFY,e)
};
ZmTask.prototype.isPastDue=function(){
return(this.endDate&&((new Date()).getTime()>this.endDate.getTime()))
};
ZmTask.prototype.getEndTime=function(){
return this.endDate?this.endDate.getTime():null
};
ZmTask.prototype.getStartTime=function(){
return this.startDate?this.startDate.getTime():null
};
ZmTask.prototype.isComplete=function(){
return(this.pComplete==100)||(this.status==ZmCalendarApp.STATUS_COMP)
};
ZmTask.prototype.getPercentComplete=function(){
return this.pComplete
};
ZmTask.prototype.getStatus=function(){
return this.status
};
ZmTask.prototype.getPriority=function(){
return this.priority
};
ZmTask.prototype.cancel=function(a,e){
this.setViewMode(a);
var o={}
,i=this._getRequestNameForMode(a),t=o[i]={
_jsns:"urn:zimbraMail"};
this._addInviteAndCompNum(t);
e.addRequestParams(o)
};
ZmTask.prototype.getRemoteFolderOwner=function(){
var e=AjxDispatcher.run("GetTaskController");
if(e.isMovingBetwAccounts(this,this.folderId)){
return null
}
var t=this.getFolder();
return(t&&t.link)?t.owner:null
};
ZmTask.prototype._getDefaultFolderId=function(){
return ZmOrganizer.ID_TASKS
};
ZmTask.prototype._loadFromDom=function(i,u){
var r=i.inv?i.inv[0]:null;
var l=r?r.comp[0]:null;
if(!i.id){
this.id=i.id
}
if(i.invId){
this.invId=i.invId
}else{
if(r){
var o=r.id;
o=o.toString().indexOf(":");
if(o!=-1){
this.invId=this.id+"-"+r.id.substring(o+1)
}else{
this.invId=[i.id,r.id].join("-")
}}}
this.uid=i.uid;
if(i.l){
this.folderId=i.l
}
if(i.s){
this.size=i.s
}
if(i.sf){
this.sf=i.sf
}
this.allDayEvent=(u?u.allDay:null||i.allDay)?"1":"0";
var a=i.inst&&i.inst.length>0?i.inst[0]:null;
var p=this.tzo=a&&a.tzo!=null?parseInt(a.tzo):0;
var d=this.tzoDue=a&&a.tzoDue!=null?parseInt(a.tzoDue):0;
if(a&&a.s){
var c=this.isAllDayEvent()?(p+new Date(parseInt(a.s,10)).getTimezoneOffset()*60*1000):0;
var t=parseInt(a.s,10)+c;
this.startDate=new Date(t);
this.uniqStartTime=this.startDate.getTime()
}else{
if(l){
this.startDate=null;
if(l.s&&l.s[0].d){
var e=l.s[0].d;
var s=parseInt(e.substr(0,4),10);
var f=parseInt(e.substr(4,2),10);
var m=parseInt(e.substr(6,2),10);
this.startDate=new Date(s,f-1,m)
}}}
if(a&&a.dueDate){
var c=this.isAllDayEvent()?(d+new Date(parseInt(a.dueDate,10)).getTimezoneOffset()*60*1000):0;
var h=parseInt(a.dueDate,10)+c;
this.endDate=new Date(h)
}else{
if(l){
this.endDate=null;
if(l.e&&l.e[0].d){
var n=l.e[0].d;
var s=parseInt(n.substr(0,4),10);
var f=parseInt(n.substr(4,2),10);
var m=parseInt(n.substr(6,2),10);
this.endDate=new Date(s,f-1,m)
}}}
if(i.alarm){
if(i.alarm){
this.alarm=i.alarm
}
if(i.alarmData){
this.alarmData=this._getAttr(i,l,"alarmData")
}}else{
if(l&&l.alarm&&(l.alarm.length>0)){
this.alarm=i.alarm=true;
this.alarmData=i.alarmData=l.alarm
}}
if(i.name||l){
this.name=this._getAttr(i,l,"name")
}
if(i.loc||l){
this.location=this._getAttr(i,l,"loc")
}
if(i.allDay||l){
this.setAllDayEvent(this._getAttr(i,l,"allDay"))
}
if(i.priority||l){
this.priority=parseInt(this._getAttr(i,l,"priority"))
}
if(i.percentComplete||l){
this.pComplete=parseInt(this._getAttr(i,l,"percentComplete"))
}
if(i.status||l){
this.status=this._getAttr(i,l,"status")
}
if(i.isOrg||l){
this.isOrg=new Boolean(this._getAttr(i,l,"isOrg"))
}
if(i.or||l){
this.organizer=i.or?i.or.a:(l.or?l.or.a:null)
}
if(i.ptst||l){
this.ptst=this._getAttr(i,l,"ptst")
}
if(i.compNum!=null){
this.compNum=(this._getAttr(i,l,"compNum")||"0")
}
if(i.f){
this._parseFlags(i.f)
}
if(i.tn){
this._parseTagNames(i.tn)
}
this.type=ZmItem.TASK
};
ZmTask.prototype.isAlarmInRange=function(){
if(!this.alarmData){
return false
}
var t=this.alarmData[0];
if(!t){
return false
}
this._nextAlarmTime=new Date(t.nextAlarm);
this._alarmInstStart=this.adjustMS(t.alarmInstStart,this.tzo);
var e=(new Date()).getTime();
return this._nextAlarmTime<=e
};
ZmTask.prototype._getAttr=function(a,e,t){
if(a[t]!=null){
return a[t]
}
if(e){
return e[t]
}
return null
};
ZmTask.prototype.isAlarmModified=function(){
if(this._orig.alarm==true&&this.alarm==false){
return true
}
return false
};
ZmTask.prototype.isMultiDay=function(){
var t=this.startDate;
var e=this.endDate;
if(!t&&!e){
return false
}
if(!t){
return false
}
return(t.getDate()!=e.getDate())||(t.getMonth()!=e.getMonth())||(t.getFullYear()!=e.getFullYear())
};
ZmTask.prototype._setExtrasFromMessage=function(e){
ZmCalItem.prototype._setExtrasFromMessage.apply(this,arguments);
this.location=e.invite.getLocation()
};
ZmTask.prototype._setTimeFromMessage=function(t,e){
ZmCalItem.prototype._setTimeFromMessage.apply(this,arguments);
if(t.invite.components[0].s==null){
this.startDate=null
}};
ZmTask.prototype.parseAlarm=function(a){
if(!a){
return
}
var i;
var t=(a)?a.trigger:null;
var e=(t&&(t.length>0))?t[0].abs:null;
i=(e&&(e.length>0))?e[0].d:null;
this._reminderMinutes=0;
if(a&&(a.action=="DISPLAY")){
if(i!=null){
this._reminderAbs=i;
this.remindDate=i?AjxDateUtil.parseServerDateTime(i):null
}}};
ZmTask.prototype._getRequestNameForMode=function(t,e){
switch(t){
case ZmCalItem.MODE_NEW:return"CreateTaskRequest";
case ZmCalItem.MODE_EDIT_SINGLE_INSTANCE:return !e?"CreateTaskExceptionRequest":"ModifyTaskRequest";
case ZmCalItem.MODE_EDIT:case ZmCalItem.MODE_EDIT_SERIES:return"ModifyTaskRequest";
case ZmCalItem.MODE_DELETE:case ZmCalItem.MODE_DELETE_SERIES:case ZmCalItem.MODE_DELETE_INSTANCE:return"CancelTaskRequest";
case ZmCalItem.MODE_GET:return"GetTaskRequest"
}
return null
};
ZmTask.prototype._addExtrasToRequest=function(t,e){
ZmCalItem.prototype._addExtrasToRequest.call(this,t,e);
e.percentComplete=this.pComplete
};
ZmTask.prototype._getInviteFromError=function(e){
return(e._data.GetTaskResponse.task[0].inv[0])
};
ZmTask.prototype.setTaskReminder=function(e){
this._reminderAbs=e
};
ZmTask.isInTrash=function(t){
var e=(t instanceof ZmTask)?t.folderId:t.l;
var a=appCtxt.getById(e);
return(a&&a.isInTrash())
}
}
if(AjxPackage.define("zimbraMail.prefs.ZmPreferencesApp")){
ZmPreferencesApp=function(t,e){
ZmApp.call(this,ZmApp.PREFERENCES,t,e);
this._filterRules={};
this._outgoingFilterRules={}
};
ZmPreferencesApp.prototype=new ZmApp;
ZmPreferencesApp.prototype.constructor=ZmPreferencesApp;
ZmPreferencesApp.prototype.isZmPreferencesApp=true;
ZmPreferencesApp.prototype.toString=function(){
return"ZmPreferencesApp"
};
ZmEvent.S_FILTER="FILTER";
ZmEvent.S_PREF_ZIMLET="PREF_ZIMLET";
ZmEvent.S_PREF_ACCOUNT="PREF_ACCOUNT";
ZmEvent.S_PREF_BACKUP="PREF_BACKUP";
ZmApp.PREFERENCES=ZmId.APP_PREFERENCES;
ZmApp.CLASS[ZmApp.PREFERENCES]="ZmPreferencesApp";
ZmApp.SETTING[ZmApp.PREFERENCES]=ZmSetting.OPTIONS_ENABLED;
ZmApp.LOAD_SORT[ZmApp.PREFERENCES]=10;
ZmApp.QS_ARG[ZmApp.PREFERENCES]="options";
ZmOrganizer.PREF_PAGE="PREF_PAGE";
ZmPreferencesApp.QS_ARG_SECTION="section";
ZmPreferencesApp._registerAllPrefs=function(){
AjxDispatcher.require("PreferencesCore");
appCtxt.getAppController().runAppFunction("_registerPrefs")
};
ZmZimbraMail.addAppListener(ZmApp.PREFERENCES,ZmAppEvent.PRE_LAUNCH,new AjxListener(ZmPreferencesApp._registerAllPrefs));
ZmPreferencesApp.prototype.launch=function(t,i){
if(appCtxt.multiAccounts){
appCtxt.accountList.setActiveAccount(appCtxt.accountList.mainAccount)
}
var a=(t.qsParams&&t.qsParams[ZmPreferencesApp.QS_ARG_SECTION])||"GENERAL";
i=new AjxCallback(this,this.gotoSection,[a,i]);
var e=new AjxCallback(this,this._handleLoadLaunch,[i]);
AjxDispatcher.require(["PreferencesCore","Preferences"],true,e,null,true)
};
ZmPreferencesApp.prototype.getPrefController=function(){
if(!this._prefController){
AjxDispatcher.require(["PreferencesCore","Preferences"]);
this._prefController=new ZmPrefController(this._container,this)
}
return this._prefController
};
ZmPreferencesApp.prototype.getFilterController=function(){
if(!this._filterController){
this._filterController=this.getPrefController().getFilterController()
}
return this._filterController
};
ZmPreferencesApp.prototype.getFilterRules=function(e){
var t=window.parentAppCtxt||window.appCtxt;
var a=e||t.getActiveAccount().name;
if(!this._filterRules[a]){
this._filterRules[a]=new ZmFilterRules(a)
}
return this._filterRules[a]
};
ZmPreferencesApp.prototype.getOutgoingFilterRules=function(e){
var t=window.parentAppCtxt||window.appCtxt;
var a=e||t.getActiveAccount().name;
if(!this._outgoingFilterRules[a]){
this._outgoingFilterRules[a]=new ZmFilterRules(a,true)
}
return this._outgoingFilterRules[a]
};
ZmPreferencesApp.prototype.modifyNotify=function(a,e){
var t=this._getSharingView();
if(t){
t.notifyModify(a)
}};
ZmPreferencesApp.prototype.refresh=function(t,i){
var e=this.getPreferencesPage("TRUSTED_ADDR");
if(e&&i){
e.addItem(i)
}
if(!appCtxt.inStartup){
var a=this._getSharingView();
if(a){
a.refresh(t)
}}};
ZmPreferencesApp.prototype.gotoSection=function(t,o){
if(t){
var i=this.getPrefController();
var e=i&&i.getPrefsView();
if(e){
t=t.toUpperCase();
var a=this.getOverview();
if(a){
a.setSelected([ZmOrganizer.PREF_PAGE,t].join("_"))
}
e.selectSection(t)
}}
if(o&&o.run){
o.run()
}};
ZmPreferencesApp.prototype._defineAPI=function(){
AjxDispatcher.registerMethod("GetFilterRules",["PreferencesCore","Preferences"],new AjxCallback(this,this.getFilterRules));
AjxDispatcher.registerMethod("GetOutgoingFilterRules",["PreferencesCore","Preferences"],new AjxCallback(this,this.getOutgoingFilterRules));
AjxDispatcher.registerMethod("GetPrefController",["PreferencesCore","Preferences"],new AjxCallback(this,this.getPrefController));
AjxDispatcher.registerMethod("GetFilterController",["PreferencesCore","Preferences"],new AjxCallback(this,this.getFilterController))
};
ZmPreferencesApp.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.PREF_PAGE,{
app:ZmApp.PREFERENCES,orgClass:"ZmPrefPage",orgPackage:"PreferencesCore",treeController:"ZmPrefPageTreeController",labelKey:"preferences",treeType:ZmOrganizer.PREF_PAGE,displayOrder:100}
)
};
ZmPreferencesApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_MOBILE_REMOVE,{
textKey:"mobileRemoveFromList",image:"Delete"}
);
ZmOperation.registerOp(ZmId.OP_MOBILE_RESUME_SYNC,{
textKey:"mobileResumeSync",image:"ImAvailable"}
);
ZmOperation.registerOp(ZmId.OP_MOBILE_SUSPEND_SYNC,{
textKey:"mobileSuspendSync",image:"Offline"}
);
ZmOperation.registerOp(ZmId.OP_MOBILE_WIPE,{
textKey:"mobileWipe",image:"MobileWipe"}
,ZmSetting.MOBILE_POLICY_ENABLED);
ZmOperation.registerOp(ZmId.OP_MOBILE_CANCEL_WIPE,{
textKey:"mobileWipeCancel",image:"MobileWipeCancel"}
,ZmSetting.MOBILE_POLICY_ENABLED);
ZmOperation.registerOp(ZmId.OP_REVERT_PAGE,{
textKey:"restorePage"}
)
};
ZmPreferencesApp.prototype._registerSettings=function(e){
e=e||appCtxt.getSettings();
e.registerSetting("IMPORT_FOLDER",{
type:ZmSetting.T_PSEUDO,dataType:ZmSetting.D_NONE}
);
e.registerSetting("IMPORT_BUTTON",{
type:ZmSetting.T_PSEUDO,dataType:ZmSetting.D_NONE}
);
e.registerSetting("EXPORT_FOLDER",{
type:ZmSetting.T_PSEUDO,dataType:ZmSetting.D_NONE}
);
e.registerSetting("EXPORT_BUTTON",{
type:ZmSetting.T_PSEUDO,dataType:ZmSetting.D_NONE}
);
e.registerSetting("PREF_SECTIONS",{
type:ZmSetting.T_PSEUDO,dataType:ZmSetting.D_HASH,isGlobal:true}
);
e.registerSetting("SIGNATURE_MAX_LENGTH",{
name:"zimbraMailSignatureMaxLength",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:1024}
);
e.registerSetting("DISCARD_IN_FILTER_ENABLED",{
name:"zimbraFeatureDiscardInFiltersEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("FROM_DISPLAY_ENABLED",{
name:"zimbraFeatureFromDisplayEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
)
};
ZmPreferencesApp.prototype._registerApp=function(){
ZmApp.registerApp(ZmApp.PREFERENCES,{
mainPkg:"Preferences",nameKey:"preferences",icon:"Preferences",textPrecedence:50,chooserTooltipKey:"goToOptions",button:appCtxt.isChildWindow?null:ZmAppChooser.B_OPTIONS,overviewTrees:[ZmOrganizer.PREF_PAGE],hideZimlets:true,gotoActionCode:ZmKeyMap.GOTO_OPTIONS,chooserSort:180}
)
};
ZmPreferencesApp.prototype._registerPrefs=function(){
var g={
GENERAL:{
title:ZmMsg.general,templateId:"prefs.Pages#General",priority:0,prefs:[ZmSetting.LOCALE_NAME,ZmSetting.COMPOSE_INIT_DIRECTION,ZmSetting.SHOW_COMPOSE_DIRECTION_BUTTONS,ZmSetting.FONT_NAME,ZmSetting.FONT_SIZE,ZmSetting.PASSWORD,ZmSetting.SEARCH_INCLUDES_SHARED,ZmSetting.SEARCH_INCLUDES_SPAM,ZmSetting.SEARCH_INCLUDES_TRASH,ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES,ZmSetting.SHOW_SEARCH_STRING,ZmSetting.PAGE_SIZE,ZmSetting.SHOW_SELECTION_CHECKBOX,ZmSetting.SKIN_NAME,ZmSetting.CLIENT_TYPE,ZmSetting.DEFAULT_TIMEZONE,ZmSetting.DEFAULT_PRINTFONTSIZE,ZmSetting.OFFLINE_IS_MAILTO_HANDLER,ZmSetting.SHORT_ADDRESS,ZmSetting.OFFLINE_UPDATE_NOTIFY]}
,ACCOUNTS:{
icon:"Accounts",title:(appCtxt.isOffline?ZmMsg.personas:ZmMsg.accounts),templateId:"prefs.Pages#Accounts",priority:10,precondition:appCtxt.get(ZmSetting.MAIL_ENABLED),prefs:[ZmSetting.ACCOUNTS,ZmSetting.SAVE_TO_SENT_DELEGATED_TARGET],manageDirty:true,createView:function(k,x,p){
return new ZmAccountsPage(k,x,p)
}}
,FILTERS:{
icon:"MailRule",title:ZmMsg.filterRules,templateId:"prefs.Pages#MailFilters",priority:50,precondition:(appCtxt.get(ZmSetting.MAIL_ENABLED)&&appCtxt.get(ZmSetting.FILTERS_ENABLED)),prefs:[ZmSetting.FILTERS],manageChanges:true,createView:function(k,x,p){
return p.getFilterController(x).getFilterView()
}}
,SIGNATURES:{
icon:"AddSignature",title:ZmMsg.signatures,templateId:"prefs.Pages#Signatures",priority:51,precondition:(appCtxt.get(ZmSetting.MAIL_ENABLED)&&appCtxt.get(ZmSetting.SIGNATURES_ENABLED)),prefs:[ZmSetting.SIGNATURES,ZmSetting.SIGNATURE_STYLE,ZmSetting.SIGNATURE_ENABLED],manageDirty:true,createView:function(k,x,p){
return new ZmSignaturesPage(k,x,p)
}}
,OUTOFOFFICE:{
icon:"OutOfOffice",title:ZmMsg.outOfOffice,priority:55,templateId:"prefs.Pages#OutOfOffice",precondition:appCtxt.get(ZmSetting.VACATION_MSG_FEATURE_ENABLED),prefs:[ZmSetting.START_DATE_ENABLED,ZmSetting.END_DATE_ENABLED,ZmSetting.VACATION_DURATION_ENABLED,ZmSetting.VACATION_DURATION_ALL_DAY,ZmSetting.VACATION_CALENDAR_ENABLED,ZmSetting.VACATION_FROM,ZmSetting.VACATION_FROM_TIME,ZmSetting.VACATION_MSG_ENABLED,ZmSetting.VACATION_MSG,ZmSetting.VACATION_EXTERNAL_MSG_ENABLED,ZmSetting.VACATION_EXTERNAL_MSG,ZmSetting.VACATION_EXTERNAL_TYPE,ZmSetting.VACATION_CALENDAR_TYPE,ZmSetting.VACATION_UNTIL,ZmSetting.VACATION_UNTIL_TIME],manageDirty:true,createView:function(k,x,p){
AjxDispatcher.require("Alert");
return new ZmMailPrefsPage(k,x,p)
}}
,TRUSTED_ADDR:{
title:ZmMsg.trustedAddrs,icon:"TrustedAddresses",templateId:"prefs.Pages#Trusted",priority:60,precondition:appCtxt.get(ZmSetting.MAIL_ENABLED),createView:function(k,x,p){
return new ZmTrustedPage(k,x,p,"Prefs_Pages_TrustedAddresses")
}
,manageDirty:true,prefs:[ZmSetting.TRUSTED_ADDR_LIST]}
,SHARING:{
title:ZmMsg.sharing,icon:"SharedContact",templateId:"prefs.Pages#SharingPrefPage",priority:85,precondition:ZmSetting.SHARING_ENABLED,manageChanges:true,createView:function(k,x,p){
AjxDispatcher.require("Share");
return new ZmSharingPage(k,x,p,"Prefs_Pages_Sharing")
}}
,NOTIFICATIONS:{
title:ZmMsg.notifications,icon:"ApptReminder",templateId:"prefs.Pages#Notifications",priority:88,precondition:[ZmSetting.CALENDAR_ENABLED,ZmSetting.TASKS_ENABLED],prefs:[ZmSetting.CAL_EMAIL_REMINDERS_ADDRESS,ZmSetting.CAL_DEVICE_EMAIL_REMINDERS_ADDRESS],createView:function(k,x,p){
return new ZmNotificationsPage(k,x,p)
}}
,MOBILE:{
title:ZmMsg.mobileDevices,icon:"Mobile",templateId:"prefs.Pages#MobileDevices",priority:90,precondition:ZmSetting.MOBILE_SYNC_ENABLED,manageChanges:true,createView:function(k,x,p){
return new ZmMobileDevicesPage(k,x,p)
}}
,IMPORT_EXPORT:{
title:ZmMsg.importExport,icon:"SendReceive",templateId:"data.ImportExport#ImportExportPrefPage",priority:100,precondition:[ZmSetting.IMPORT_ENABLED,ZmSetting.EXPORT_ENABLED],prefs:[ZmSetting.IMPORT_FOLDER,ZmSetting.IMPORT_BUTTON,ZmSetting.EXPORT_FOLDER,ZmSetting.EXPORT_BUTTON],manageChanges:true,createView:function(k,x,p){
AjxDispatcher.require("ImportExport");
return new ZmImportExportPage(k,x,p)
}}
,SHORTCUTS:{
title:ZmMsg.shortcuts,icon:"Shortcut",templateId:"prefs.Pages#Shortcuts",priority:120,precondition:ZmSetting.USE_KEYBOARD_SHORTCUTS,createView:function(k,x,p){
return new ZmShortcutsPage(k,x,p)
}}
,PREF_ZIMLETS:{
title:ZmMsg.zimlets,icon:"Zimlet",templateId:"prefs.Pages#Zimlets",manageDirty:true,priority:140,precondition:ZmSetting.CHECKED_ZIMLETS_ENABLED,prefs:[ZmSetting.CHECKED_ZIMLETS,ZmSetting.OFFLINE_ZIMLET_SYNC_ACCOUNT_ID],createView:function(k,x,p){
return new ZmZimletsPage(k,x,p)
}}};
if(appCtxt.isOffline){
g.BACKUP={
title:ZmMsg.offlineBackups,icon:"backup",manageDirty:true,templateId:"prefs.Pages#BackUp",priority:130,prefs:[ZmSetting.OFFLINE_BACKUP_NOW_BUTTON,ZmSetting.OFFLINE_BACKUP_INTERVAL,ZmSetting.OFFLINE_BACKUP_PATH,ZmSetting.OFFLINE_BACKUP_KEEP,ZmSetting.OFFLINE_BACKUP_ACCOUNT_ID,ZmSetting.OFFLINE_BACKUP_RESTORE],createView:function(k,x,p){
return new ZmBackupPage(k,x,p)
}}
}
for(var y in g){
ZmPref.registerPrefSection(y,g[y])
}
ZmPref.registerPref("CLIENT_TYPE",{
displayName:ZmMsg.clientType,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_VERTICAL,displayOptions:[ZmMsg.clientAdvanced,ZmMsg.clientStandard],options:[ZmSetting.CLIENT_ADVANCED,ZmSetting.CLIENT_STANDARD]}
);
ZmPref.registerPref("COMPOSE_AS_FORMAT",{
displayName:ZmMsg.composeUsing,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_VERTICAL,displayOptions:[ZmMsg.composeAsHTML,ZmMsg.composeAsText],options:[ZmSetting.COMPOSE_HTML,ZmSetting.COMPOSE_TEXT],precondition:ZmSetting.HTML_COMPOSE_ENABLED,inputId:["COMPOSE_AS_HTML","COMPOSE_AS_TEXT"]}
);
ZmPref.registerPref("COMPOSE_INIT_FONT_COLOR",{
displayOptions:["rgb(0, 0, 0)"],displayContainer:ZmPref.TYPE_COLOR,precondition:[ZmSetting.HTML_COMPOSE_ENABLED]}
);
var s=[],u=[];
for(var v in ZmPref.FONT_FAMILY){
var c=ZmPref.FONT_FAMILY[v];
s.push(c.value);
u.push(c.name)
}
ZmPref.registerPref("COMPOSE_INIT_FONT_FAMILY",{
displayName:ZmMsg.defaultFontSettings,displayContainer:ZmPref.TYPE_SELECT,displayOptions:u,options:s,precondition:[ZmSetting.HTML_COMPOSE_ENABLED,ZmSetting.NOTEBOOK_ENABLED],approximateFunction:function(p){
if(AjxUtil.indexOf(s,p)!=-1){
return p
}
return ZmPref._normalizeFontId(p)
}}
);
var a=[AjxMessageFormat.format(ZmMsg.pt,"8"),AjxMessageFormat.format(ZmMsg.pt,"10"),AjxMessageFormat.format(ZmMsg.pt,"12"),AjxMessageFormat.format(ZmMsg.pt,"14"),AjxMessageFormat.format(ZmMsg.pt,"18"),AjxMessageFormat.format(ZmMsg.pt,"24"),AjxMessageFormat.format(ZmMsg.pt,"36")];
var o=["8pt","10pt","12pt","14pt","18pt","24pt","36pt"];
var b=function(){
var q=appCtxt.accountList.visibleAccounts;
var x=[];
x.push(ZmMsg.zimletPrefDontSync);
for(var p=0;
p<q.length;
p++){
if(q[p].isZimbraAccount&&!q[p].isMain){
x.push([ZmMsg.zimletPrefSyncWith," ",q[p].name].join(""))
}}
return x
};
var r=function(){
var q=appCtxt.accountList.visibleAccounts;
var x=[];
x.push("");
for(var p=0;
p<q.length;
p++){
if(q[p].isZimbraAccount&&!q[p].isMain){
x.push(q[p].id)
}}
return x
};
ZmPref.registerPref("COMPOSE_INIT_FONT_SIZE",{
displayName:null,displayContainer:ZmPref.TYPE_SELECT,displayOptions:a,options:o,precondition:[ZmSetting.HTML_COMPOSE_ENABLED]}
);
ZmPref.registerPref("COMPOSE_SAME_FORMAT",{
displayName:ZmMsg.replyForwardInSameFormat,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CHECKED_ZIMLETS",{
displayName:ZmMsg.zimlets,displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("OFFLINE_ZIMLET_SYNC_ACCOUNT_ID",{
displayName:ZmMsg.zimletSyncPref,displayContainer:ZmPref.TYPE_SELECT,displayOptions:b(),options:r()}
);
ZmPref.registerPref("DEFAULT_TIMEZONE",{
displayName:ZmMsg.selectTimezone,displayContainer:ZmPref.TYPE_SELECT,displayParams:{
layout:DwtMenu.LAYOUT_SCROLL,maxRows:ZmPref.MAX_ROWS}
,displayOptions:AjxTimezone.getZonePreferences(),options:AjxTimezone.getZonePreferencesOptions()}
);
ZmPref.registerPref("DEFAULT_PRINTFONTSIZE",{
displayName:ZmMsg.printFontSizePref,displayContainer:ZmPref.TYPE_SELECT,displayOptions:a,options:o}
);
ZmPref.registerPref("EXPORT_FOLDER",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("EXPORT_BUTTON",{
displayName:ZmMsg._export,displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("FORWARD_INCLUDE_WHAT",{
displayName:ZmMsg.forwardInclude,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.includeInBody,ZmMsg.includeOriginalAsAttach],options:[ZmSetting.INC_BODY,ZmSetting.INC_ATTACH],setFunction:ZmPref.setIncludeOrig,initFunction:ZmPref.initIncludeWhat,changeFunction:ZmPref.onChangeIncludeWhat}
);
ZmPref.registerPref("FORWARD_USE_PREFIX",{
displayName:ZmMsg.usePrefix,displayContainer:ZmPref.TYPE_CHECKBOX,setFunction:ZmPref.setIncludeOrig}
);
ZmPref.registerPref("FORWARD_INCLUDE_HEADERS",{
displayName:ZmMsg.includeHeaders,displayContainer:ZmPref.TYPE_CHECKBOX,setFunction:ZmPref.setIncludeOrig}
);
ZmPref.registerPref("IMPORT_FOLDER",{
loadFunction:ZmPref.loadCsvFormats,displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("IMPORT_BUTTON",{
displayName:ZmMsg._import,displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("LOCALE_NAME",{
displayName:ZmMsg.selectLanguage,displayContainer:ZmPref.TYPE_LOCALES,precondition:ZmSetting.LOCALE_CHANGE_ENABLED}
);
ZmPref.registerPref("COMPOSE_INIT_DIRECTION",{
displayName:ZmMsg.composeDirectionLabel,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.directionLTR,ZmMsg.directionRTL],options:[ZmSetting.LTR,ZmSetting.RTL]}
);
ZmPref.registerPref("SHOW_COMPOSE_DIRECTION_BUTTONS",{
displayName:ZmMsg.showDirectionButtons,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("FONT_NAME",{
displayName:ZmMsg.selectFong,displayContainer:ZmPref.TYPE_FONT}
);
ZmPref.registerPref("FONT_SIZE",{
displayName:ZmMsg.selectFontSize,displayContainer:ZmPref.TYPE_FONT_SIZE}
);
var t=AjxMessageFormat.format(ZmMsg.messageReadTime,DwtId.makeId(ZmId.WIDGET_INPUT,ZmId.OP_MARK_READ));
ZmPref.registerPref("MARK_MSG_READ",{
displayName:ZmMsg.messageReadLabel,displayContainer:ZmPref.TYPE_RADIO_GROUP,displayFunction:ZmPref.markMsgReadDisplay,orientation:ZmPref.ORIENT_VERTICAL,displayOptions:[ZmMsg.messageReadNow,t,ZmMsg.messageReadNone],options:[ZmSetting.MARK_READ_NOW,ZmSetting.MARK_READ_TIME,ZmSetting.MARK_READ_NONE],valueFunction:ZmPref.markMsgReadValue}
);
ZmPref.registerPref("NEW_WINDOW_COMPOSE",{
displayName:ZmMsg.composeInNewWin,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:AjxCallback.simpleClosure(ZmPref.requireAllPreConditions,null,ZmSetting.MAIL_ENABLED,ZmSetting.DETACH_COMPOSE_ENABLED)}
);
ZmPref.registerPref("MAIL_MANDATORY_SPELLCHECK",{
displayName:ZmMsg.mandatorySpellcheck,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("PAGE_SIZE",{
displayContainer:ZmPref.TYPE_SELECT,displayOptions:["25","50","100","200"]}
);
ZmPref.registerPref("PASSWORD",{
displayName:ZmMsg.changePassword,displayContainer:ZmPref.TYPE_PASSWORD,precondition:ZmSetting.CHANGE_PASSWORD_ENABLED}
);
ZmPref.registerPref("SHARING",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("SHORT_ADDRESS",{
displayName:ZmMsg.shortAddress,displayContainer:ZmPref.TYPE_CHECKBOX}
);
if(appCtxt.isOffline){
ZmPref.registerPref("OFFLINE_IS_MAILTO_HANDLER",{
displayName:ZmMsg.offlineAllowMailTo,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("OFFLINE_BACKUP_ACCOUNT_ID",{
displayName:ZmMsg.offlineBackUpAccounts,displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("OFFLINE_BACKUP_RESTORE",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("OFFLINE_BACKUP_NOW_BUTTON",{
displayName:ZmMsg.offlineBackUpButton,displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("OFFLINE_BACKUP_INTERVAL",{
displayName:ZmMsg.offlineBackUpInterval,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.pollNever,ZmMsg.everyDay,ZmMsg.everyWeek,ZmMsg.everyMonth],options:[0,86400000,604800000,2628000000]}
);
ZmPref.registerPref("OFFLINE_BACKUP_PATH",{
displayName:ZmMsg.offlineBackUpPath,displayContainer:ZmPref.TYPE_INPUT}
);
ZmPref.registerPref("OFFLINE_BACKUP_KEEP",{
displayName:ZmMsg.offlineBackUpKeep,displayContainer:ZmPref.TYPE_SELECT,displayOptions:["1","2","3","4","5"]}
);
ZmPref.registerPref("OFFLINE_UPDATE_NOTIFY",{
displayName:ZmMsg.offlineUpdateNotify,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.offlineUpdateRelease,ZmMsg.offlineUpdateBeta],options:["release","beta"]}
)
}
var h=525600;
var l=10;
var i=[h];
var d=[ZmMsg.pollManually];
var w=appCtxt.get(ZmSetting.INSTANT_NOTIFY)?true:false;
if(w){
i.push(appCtxt.get(ZmSetting.INSTANT_NOTIFY_INTERVAL));
d.push(ZmMsg.pollInstant)
}
var m=ZmPref.pollingIntervalDisplay(appCtxt.get(ZmSetting.MIN_POLLING_INTERVAL));
m=(m<1)?1:Math.round(m);
var e=ZmPref.pollingIntervalDisplay(appCtxt.get(ZmSetting.POLLING_INTERVAL));
e=Math.round(e);
while(m<=l){
i.push(m);
m++
}
m=m-1;
var n=i.length;
while(n<l){
m=m+5;
i.push(m);
n++
}
if(e>m&&e!=h&&(w&&e!=appCtxt.get(ZmSetting.INSTANT_NOTIFY_INTERVAL))){
var f=e%5;
f=(f==0)?e:((e/5+1)*5);
i.push(f)
}else{
m=m+5;
i.push(m)
}
while(d.length<=n){
d.push(ZmMsg.pollEveryNMinutes)
}
ZmPref.registerPref("POLLING_INTERVAL",{
displayName:ZmMsg.pollingInterval,displayContainer:ZmPref.TYPE_SELECT,displayOptions:d,options:i,approximateFunction:ZmPref.approximateInterval,displayFunction:ZmPref.pollingIntervalDisplay,valueFunction:ZmPref.pollingIntervalValue,validationFunction:ZmPref.validatePollingInterval}
);
ZmPref.registerPref("REPLY_INCLUDE_WHAT",{
displayName:ZmMsg.replyInclude,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.dontInclude,ZmMsg.includeInBody,ZmMsg.smartInclude,ZmMsg.includeOriginalAsAttach],options:[ZmSetting.INC_NONE,ZmSetting.INC_BODY,ZmSetting.INC_SMART,ZmSetting.INC_ATTACH],setFunction:ZmPref.setIncludeOrig,initFunction:ZmPref.initIncludeWhat,changeFunction:ZmPref.onChangeIncludeWhat}
);
ZmPref.registerPref("REPLY_USE_PREFIX",{
displayName:ZmMsg.usePrefix,displayContainer:ZmPref.TYPE_CHECKBOX,setFunction:ZmPref.setIncludeOrig}
);
ZmPref.registerPref("REPLY_INCLUDE_HEADERS",{
displayName:ZmMsg.includeHeaders,displayContainer:ZmPref.TYPE_CHECKBOX,setFunction:ZmPref.setIncludeOrig}
);
ZmPref.registerPref("REPLY_PREFIX",{
displayName:ZmMsg.prefix,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:[">","|"]}
);
ZmPref.registerPref("SAVE_TO_SENT",{
displayName:ZmMsg.saveToSent,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.MAIL_ENABLED,changeFunction:AjxCallback.simpleClosure(ZmPref.onChangeConfirm,null,ZmMsg.saveToSentWarning,ZmPref.getSendToFiltersActive,true,new AjxCallback(null,ZmPref.setFormValue,["SAVE_TO_SENT",true]))}
);
ZmPref.registerPref("SAVE_TO_SENT_DELEGATED_TARGET",{
displayName:ZmMsg.saveToSentDelegatedTarget,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_VERTICAL,displayOptions:[ZmMsg.saveToSentDelegatedOwner,ZmMsg.saveToSentDelegatedSender,ZmMsg.saveToSentDelegatedBoth,ZmMsg.saveToSentDelegatedNone],options:["owner","sender","both","none"],precondition:ZmSetting.MAIL_ENABLED}
);
ZmPref.registerPref("SEARCH_INCLUDES_SHARED",{
displayName:ZmMsg.includeSharedItems,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.SHARING_ENABLED}
);
ZmPref.registerPref("SEARCH_INCLUDES_SPAM",{
displayName:ZmMsg.includeJunkFolder,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:AjxCallback.simpleClosure(ZmPref.requireAllPreConditions,null,ZmSetting.MAIL_ENABLED,ZmSetting.SPAM_ENABLED)}
);
ZmPref.registerPref("SEARCH_INCLUDES_TRASH",{
displayName:ZmMsg.includeTrashFolder,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:[ZmSetting.MAIL_ENABLED,ZmSetting.CONTACTS_ENABLED]}
);
ZmPref.registerPref("SHOW_FRAGMENTS",{
displayName:ZmMsg.showFragments,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("COLOR_MESSAGES",{
displayName:ZmMsg.colorMessages,displayContainer:ZmPref.TYPE_CHECKBOX}
);
if(appCtxt.isOffline){
ZmPref.registerPref("OFFLINE_SHOW_ALL_MAILBOXES",{
displayName:ZmMsg.showAllMailboxes,displayContainer:ZmPref.TYPE_CHECKBOX}
)
}
ZmPref.registerPref("SHOW_SEARCH_STRING",{
displayName:ZmMsg.showSearchString,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("SHOW_SELECTION_CHECKBOX",{
displayName:ZmMsg.showSelectionString,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("SKIN_NAME",{
displayName:ZmMsg.selectSkin,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[],options:[],loadFunction:ZmPref.loadSkins,precondition:ZmSetting.SKIN_CHANGE_ENABLED}
);
ZmPref.registerPref("VIEW_AS_HTML",{
displayName:ZmMsg.displayMail,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_VERTICAL,displayOptions:[ZmMsg.displayAsHTML,ZmMsg.displayAsText],options:[true,false]}
)
};
ZmPreferencesApp.prototype._handleLoadLaunch=function(t){
var e=new AjxCallback(this,this._handleResponseLaunch,[t]);
appCtxt.getSettings().loadPreferenceData(e)
};
ZmPreferencesApp.prototype._handleResponseLaunch=function(e){
AjxDispatcher.run("GetPrefController").show();
if(e){
e.run()
}};
ZmPreferencesApp.prototype._getSharingView=function(){
var e=this.getPreferencesPage("SHARING");
return(e&&e.view)
};
ZmPreferencesApp.prototype.getPreferencesPage=function(a){
if(!this._prefController){
return null
}
var t=this.getPrefController();
var e=t&&t.getPrefsView();
return e&&e.getView(a)
};
ZmPreferencesApp.prototype._getOverviewParams=function(){
var e=ZmApp.prototype._getOverviewParams.call(this);
e.omit={};
e.omit[ZmOrganizer.ID_ZIMLET]=true;
e.actionSupported=false;
return e
};
ZmPreferencesApp.getFilterRulesController=function(e){
var a=AjxDispatcher.run("GetPrefController");
if(a&&a.getPrefsView()){
var t=a.getFilterController();
return e?t.getOutgoingFilterRulesController():t.getIncomingFilterRulesController()
}
return null
};
ZmPreferencesApp.prototype.getNewButtonProps=function(){
return{
hidden:true}
}
}
if(AjxPackage.define("zimbraMail.portal.ZmPortalApp")){
ZmPortalApp=function(t,e){
ZmApp.call(this,ZmApp.PORTAL,t,e)
};
ZmPortalApp.prototype=new ZmApp;
ZmPortalApp.prototype.constructor=ZmPortalApp;
ZmPortalApp.prototype.toString=function(){
return"ZmPortalApp"
};
ZmPortalApp.prototype._registerApp=function(){
ZmApp.registerApp(ZmApp.PORTAL,{
nameKey:"portal",icon:"Globe",chooserTooltipKey:"goToPortal",button:ZmAppChooser.B_PORTAL,chooserSort:1,defaultSort:1}
)
};
ZmApp.PORTAL=ZmId.APP_PORTAL;
ZmApp.CLASS[ZmApp.PORTAL]="ZmPortalApp";
ZmApp.SETTING[ZmApp.PORTAL]=ZmSetting.PORTAL_ENABLED;
ZmApp.LOAD_SORT[ZmApp.PORTAL]=1;
ZmApp.QS_ARG[ZmApp.PORTAL]="home";
ZmEvent.S_PORTLET="PORTLET";
ZmItem.PORTLET=ZmEvent.S_PORTLET;
ZmPortalApp.__PORTLET_ID=0;
ZmPortalApp.prototype.refreshPortlets=function(){
var t=this.getPortletMgr();
var e=t.getPortlets();
for(var a in e){
e[a].refresh()
}};
ZmPortalApp.prototype.launch=function(t,a){
var e=new AjxCallback(this,this._handleLoadLaunch,[t,a]);
AjxDispatcher.require("Portal",true,e,null,true)
};
ZmPortalApp.prototype._handleLoadLaunch=function(t,a){
var e=this.getPortalController();
e.show();
ZmApp.prototype.launch.call(this,t,a)
};
ZmPortalApp.prototype.activate=function(t){
var e=this.getPortalController();
e.setPaused(!t);
ZmApp.prototype.activate.call(this,t)
};
ZmPortalApp.prototype.getManifest=function(o){
if(!this._manifest){
var a=appCtxt.get(ZmSetting.PORTAL_NAME);
if(a){
var t=new Date().getTime();
var i={
url:[window.appContextPath,"/portals/",a,"/manifest.xml?v=",t].join(""),callback:o?new AjxCallback(this,this._handleLoadManifest,[o]):null};
var e=AjxLoader.load(i);
if(!o){
this._handleLoadManifest(o,e)
}}}else{
if(o){
o.run(this._manifest)
}}
return this._manifest
};
ZmPortalApp.prototype._handleLoadManifest=function(l,r){
var n;
if(r.status==200&&r.responseXML){
try{
var c=new AjxJsonSerializer(true).serialize(r.responseXML);
this._manifest=JSON.parse(c);
var o=this._manifest.portal;
var a=o&&o.portlets;
if(a&&!(a.portlet instanceof Array)){
a.portlet=[a.portlet]
}
o.portlets=a.portlet;
if(o.portlets){
for(var t=0;
t<o.portlets.length;
t++){
var h=o.portlets[t];
var s=h.property;
if(s&&!(s instanceof Array)){
s=[s]
}
h.properties=s;
delete h.property
}}}
catch(n){}}else{
n=""
}
if(!this._manifest){
this._manifest={
error:n}
}
if(l){
l.run(this._manifest)
}};
ZmPortalApp.prototype.getPortalController=function(){
AjxDispatcher.require("Portal");
if(!this._portalController){
this._portalController=new ZmPortalController(this._container,this)
}
return this._portalController
};
ZmPortalApp.prototype.getPortletMgr=function(){
AjxDispatcher.require("Portal");
if(!this._portletMgr){
this._portletMgr=new ZmPortletMgr()
}
return this._portletMgr
};
ZmPortalApp.prototype._getOverviewTrees=function(){
return this._getOverviewApp()._getOverviewTrees()
};
ZmPortalApp.prototype._getOverviewApp=function(){
if(!this._overviewApp){
var o=[];
for(var t in ZmApp.CHOOSER_SORT){
o.push({
name:t,sort:ZmApp.CHOOSER_SORT[t]}
)
}
o.sort(ZmPortalApp.__BY_SORT);
var e=null;
for(var a=0;
a<o.length;
a++){
var n=o[a];
if(n.name==this._name){
continue
}
if(appCtxt.getApp(n.name).isIframe){
continue
}
e=n.name;
break
}
this._overviewApp=appCtxt.getApp(e)
}
return this._overviewApp
};
ZmPortalApp.__BY_SORT=function(t,e){
return t.sort-e.sort
}
}
if(AjxPackage.define("zimbraMail.mail.ZmMailApp")){
ZmMailApp=function(t,e){
ZmApp.call(this,ZmApp.MAIL,t,e);
this._dataSourceCollection={};
this._identityCollection={};
this._signatureCollection={};
this.numEntries=0;
this.globalMailCount=0;
this._throttleStats=[];
this._addSettingsChangeListeners();
AjxCore.addOnloadListener(this._checkVacationReplyEnabled.bind(this))
};
ZmMailApp.prototype=new ZmApp;
ZmMailApp.prototype.constructor=ZmMailApp;
ZmMailApp.prototype.isZmMailApp=true;
ZmMailApp.prototype.toString=function(){
return"ZmMailApp"
};
ZmEvent.S_CONV=ZmId.ITEM_CONV;
ZmEvent.S_MSG=ZmId.ITEM_MSG;
ZmEvent.S_ATT=ZmId.ITEM_ATT;
ZmEvent.S_FOLDER=ZmId.ORG_FOLDER;
ZmEvent.S_DATA_SOURCE=ZmId.ITEM_DATA_SOURCE;
ZmEvent.S_IDENTITY="IDENTITY";
ZmEvent.S_SIGNATURE="SIGNATURE";
ZmItem.CONV=ZmEvent.S_CONV;
ZmItem.MSG=ZmEvent.S_MSG;
ZmItem.ATT=ZmEvent.S_ATT;
ZmItem.DATA_SOURCE=ZmEvent.S_DATA_SOURCE;
ZmOrganizer.FOLDER=ZmEvent.S_FOLDER;
ZmApp.MAIL=ZmId.APP_MAIL;
ZmApp.CLASS[ZmApp.MAIL]="ZmMailApp";
ZmApp.SETTING[ZmApp.MAIL]=ZmSetting.MAIL_ENABLED;
ZmApp.UPSELL_SETTING[ZmApp.MAIL]=ZmSetting.MAIL_UPSELL_ENABLED;
ZmApp.LOAD_SORT[ZmApp.MAIL]=20;
ZmApp.QS_ARG[ZmApp.MAIL]="mail";
ZmMailApp.DEFAULT_AUTO_SAVE_DRAFT_INTERVAL=15;
ZmMailApp.AUTO_SAVE_IDLE_TIME=3;
ZmMailApp.DEFAULT_MAX_MESSAGE_SIZE=250000;
ZmMailApp.POP_DOWNLOAD_SINCE_ALL=0;
ZmMailApp.POP_DOWNLOAD_SINCE_NO_CHANGE=1;
ZmMailApp.POP_DOWNLOAD_SINCE_FROM_NOW=2;
ZmMailApp.POP_DELETE_OPTION_KEEP="keep";
ZmMailApp.POP_DELETE_OPTION_READ="read";
ZmMailApp.POP_DELETE_OPTION_TRASH="trash";
ZmMailApp.POP_DELETE_OPTION_HARD_DELETE="delete";
ZmMailApp.SEND_RECEIPT_NEVER="never";
ZmMailApp.SEND_RECEIPT_ALWAYS="always";
ZmMailApp.SEND_RECEIPT_PROMPT="prompt";
ZmMailApp.INC_MAP={};
ZmMailApp.INC_MAP[ZmSetting.INC_NONE]=[ZmSetting.INC_NONE,false,false];
ZmMailApp.INC_MAP[ZmSetting.INC_ATTACH]=[ZmSetting.INC_ATTACH,false,false];
ZmMailApp.INC_MAP[ZmSetting.INC_BODY]=[ZmSetting.INC_BODY,false,true];
ZmMailApp.INC_MAP[ZmSetting.INC_BODY_ONLY]=[ZmSetting.INC_BODY,false,false];
ZmMailApp.INC_MAP[ZmSetting.INC_BODY_PRE]=[ZmSetting.INC_BODY,true,false];
ZmMailApp.INC_MAP[ZmSetting.INC_BODY_HDR]=[ZmSetting.INC_BODY,false,true];
ZmMailApp.INC_MAP[ZmSetting.INC_BODY_PRE_HDR]=[ZmSetting.INC_BODY,true,true];
ZmMailApp.INC_MAP[ZmSetting.INC_SMART]=[ZmSetting.INC_SMART,false,false];
ZmMailApp.INC_MAP[ZmSetting.INC_SMART_PRE]=[ZmSetting.INC_SMART,true,false];
ZmMailApp.INC_MAP[ZmSetting.INC_SMART_HDR]=[ZmSetting.INC_SMART,false,true];
ZmMailApp.INC_MAP[ZmSetting.INC_SMART_PRE_HDR]=[ZmSetting.INC_SMART,true,true];
ZmMailApp.INC_MAP_REV={};
AjxUtil.foreach(ZmMailApp.INC_MAP,function(e,a){
var t=(a==ZmSetting.INC_NONE||a==ZmSetting.INC_ATTACH)?e[0]:e.join("|");
ZmMailApp.INC_MAP_REV[t]=a
}
);
ZmMailApp._setGroupByMaps=function(){
ZmMailApp.GROUP_MAIL_BY_ITEM={};
ZmMailApp.GROUP_MAIL_BY_ITEM[ZmSetting.GROUP_BY_CONV]=ZmItem.CONV;
ZmMailApp.GROUP_MAIL_BY_ITEM[ZmSetting.GROUP_BY_MESSAGE]=ZmItem.MSG
};
ZmMailApp.prototype._defineAPI=function(){
AjxDispatcher.setPackageLoadFunction("MailCore",new AjxCallback(this,this._postLoadCore));
AjxDispatcher.setPackageLoadFunction("Mail",new AjxCallback(this,this._postLoad,ZmOrganizer.FOLDER));
AjxDispatcher.registerMethod("Compose",["MailCore","Mail"],new AjxCallback(this,this.compose));
AjxDispatcher.registerMethod("GetComposeController",["MailCore","Mail"],new AjxCallback(this,this.getComposeController));
AjxDispatcher.registerMethod("GetConvController",["MailCore","Mail"],new AjxCallback(this,this.getConvController));
AjxDispatcher.registerMethod("GetConvListController",["MailCore","Mail"],new AjxCallback(this,this.getConvListController));
AjxDispatcher.registerMethod("GetMsgController",["MailCore","Mail"],new AjxCallback(this,this.getMsgController));
AjxDispatcher.registerMethod("GetTradController",["MailCore","Mail"],new AjxCallback(this,this.getTradController));
AjxDispatcher.registerMethod("GetMailListController","MailCore",new AjxCallback(this,this.getMailListController));
AjxDispatcher.registerMethod("GetIdentityCollection","MailCore",new AjxCallback(this,this.getIdentityCollection));
AjxDispatcher.registerMethod("GetSignatureCollection","MailCore",new AjxCallback(this,this.getSignatureCollection));
AjxDispatcher.registerMethod("GetDataSourceCollection","MailCore",new AjxCallback(this,this.getDataSourceCollection));
AjxDispatcher.registerMethod("GetMailConfirmController",["MailCore","Mail"],new AjxCallback(this,this.getConfirmController))
};
ZmMailApp.prototype._registerSettings=function(e){
var e=e||appCtxt.getSettings();
e.registerSetting("ALLOW_ANY_FROM_ADDRESS",{
name:"zimbraAllowAnyFromAddress",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("AUTO_SAVE_DRAFT_INTERVAL",{
name:"zimbraPrefAutoSaveDraftInterval",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LDAP_TIME,defaultValue:ZmMailApp.DEFAULT_AUTO_SAVE_DRAFT_INTERVAL,isGlobal:true}
);
e.registerSetting("COLOR_MESSAGES",{
name:"zimbraPrefColorMessagesEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("COMPOSE_SAME_FORMAT",{
name:"zimbraPrefForwardReplyInOriginalFormat",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CONVERSATIONS_ENABLED",{
name:"zimbraFeatureConversationsEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("CONVERSATION_ORDER",{
name:"zimbraPrefConversationOrder",type:ZmSetting.T_PREF,defaultValue:ZmSearch.DATE_DESC,isImplicit:true}
);
e.registerSetting("CONVERSATION_PAGE_SIZE",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:250,isGlobal:true}
);
e.registerSetting("CONV_SHOW_CALENDAR",{
name:"zimbraPrefConvShowCalendar",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isImplicit:true}
);
e.registerSetting("DEDUPE_MSG_TO_SELF",{
name:"zimbraPrefDedupeMessagesSentToSelf",type:ZmSetting.T_PREF,defaultValue:ZmSetting.DEDUPE_NONE}
);
e.registerSetting("DEDUPE_MSG_ENABLED",{
name:"zimbraPrefMessageIdDedupingEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("DEFAULT_DISPLAY_NAME",{
type:ZmSetting.T_PSEUDO,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("DETACH_COMPOSE_ENABLED",{
name:"zimbraFeatureComposeInNewWindowEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("DETACH_MAILVIEW_ENABLED",{
name:"zimbraFeatureOpenMailInNewWindowEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("DISPLAY_EXTERNAL_IMAGES",{
name:"zimbraPrefDisplayExternalImages",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("END_DATE_ENABLED",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("FILTERS_ENABLED",{
name:"zimbraFeatureFiltersEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("FILTERS_MAIL_FORWARDING_ENABLED",{
name:"zimbraFeatureMailForwardingInFiltersEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("FORWARD_INCLUDE_HEADERS",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("FORWARD_INCLUDE_ORIG",{
name:"zimbraPrefForwardIncludeOriginalText",type:ZmSetting.T_PREF,defaultValue:ZmSetting.INC_BODY,isGlobal:true}
);
e.registerSetting("FORWARD_INCLUDE_WHAT",{
type:ZmSetting.T_PREF,defaultValue:ZmSetting.INC_BODY,isGlobal:true}
);
e.registerSetting("FORWARD_MENU_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("FORWARD_USE_PREFIX",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("GROUP_MAIL_BY",{
name:"zimbraPrefGroupMailBy",type:ZmSetting.T_PREF,defaultValue:ZmSetting.GROUP_BY_MESSAGE,isImplicit:true,isGlobal:true}
);
e.registerSetting("HIGHLIGHT_OBJECTS",{
name:"zimbraMailHighlightObjectsMaxSize",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:70}
);
e.registerSetting("HTML_SIGNATURE_ENABLED",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IDENTITIES_ENABLED",{
name:"zimbraFeatureIdentitiesEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("INITIAL_SEARCH",{
name:"zimbraPrefMailInitialSearch",type:ZmSetting.T_PREF,defaultValue:"in:inbox"}
);
e.registerSetting("INITIAL_SEARCH_ENABLED",{
name:"zimbraFeatureInitialSearchPreferenceEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("MAIL_ATTACH_VIEW_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("MAIL_BLACKLIST",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST}
);
e.registerSetting("TRUSTED_ADDR_LIST",{
name:"zimbraPrefMailTrustedSenderList",type:ZmSetting.T_COS,dataType:ZmSetting.D_LIST}
);
e.registerSetting("TRUSTED_ADDR_LIST_MAX_NUM_ENTRIES",{
name:"zimbraMailTrustedSenderListMaxNumEntries",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:100}
);
e.registerSetting("MAIL_ACTIVITYSTREAM_FOLDER",{
name:"zimbraMailActivityStreamFolder",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_INT,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
e.registerSetting("MAIL_BLACKLIST_MAX_NUM_ENTRIES",{
name:"zimbraMailBlacklistMaxNumEntries",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:100}
);
e.registerSetting("MAIL_FOLDER_COLORS_ENABLED",{
name:"zimbraPrefFolderColorEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("MAIL_FORWARDING_ADDRESS",{
name:"zimbraPrefMailForwardingAddress",type:ZmSetting.T_PREF}
);
e.registerSetting("MAIL_FORWARDING_ENABLED",{
name:"zimbraFeatureMailForwardingEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("MAIL_MANDATORY_SPELLCHECK",{
name:"zimbraPrefMandatorySpellCheckEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("MAIL_FROM_ADDRESS",{
name:"zimbraPrefFromAddress",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST}
);
e.registerSetting("MAIL_FROM_ADDRESS_TYPE",{
name:"zimbraPrefFromAddressType",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:"sendAs"}
);
e.registerSetting("MAIL_LIFETIME_GLOBAL",{
name:"zimbraMailMessageLifetime",type:ZmSetting.T_COS,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_INBOX_READ",{
name:"zimbraPrefInboxReadLifetime",type:ZmSetting.T_PREF,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_INBOX_UNREAD",{
name:"zimbraPrefInboxUnreadLifetime",type:ZmSetting.T_PREF,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_JUNK",{
name:"zimbraPrefJunkLifetime",type:ZmSetting.T_PREF,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_JUNK_GLOBAL",{
name:"zimbraMailSpamLifetime",type:ZmSetting.T_COS,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_SENT",{
name:"zimbraPrefSentLifetime",type:ZmSetting.T_PREF,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_TRASH",{
name:"zimbraPrefTrashLifetime",type:ZmSetting.T_PREF,defaultValue:"0"}
);
e.registerSetting("MAIL_LIFETIME_TRASH_GLOBAL",{
name:"zimbraMailTrashLifetime",type:ZmSetting.T_COS,defaultValue:"0"}
);
e.registerSetting("MAIL_LOCAL_DELIVERY_DISABLED",{
name:"zimbraPrefMailLocalDeliveryDisabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("MAIL_NOTIFY_SOUNDS",{
name:"zimbraPrefMailSoundsEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("MAIL_NOTIFY_APP",{
name:"zimbraPrefMailFlashIcon",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("MAIL_NOTIFY_BROWSER",{
name:"zimbraPrefMailFlashTitle",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("MAIL_NOTIFY_TOASTER",{
name:"zimbraPrefMailToasterEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("MAIL_PRIORITY_ENABLED",{
name:"zimbraFeatureMailPriorityEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("MAIL_READ_RECEIPT_ENABLED",{
name:"zimbraFeatureReadReceiptsEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("MAIL_SEND_LATER_ENABLED",{
name:"zimbraFeatureMailSendLaterEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("MAIL_SEND_READ_RECEIPTS",{
name:"zimbraPrefMailSendReadReceipts",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:"never"}
);
e.registerSetting("MAIL_WHITELIST",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST}
);
e.registerSetting("MAIL_WHITELIST_MAX_NUM_ENTRIES",{
name:"zimbraMailWhitelistMaxNumEntries",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:100}
);
e.registerSetting("MARK_MSG_READ",{
name:"zimbraPrefMarkMsgRead",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:0,isGlobal:true}
);
e.registerSetting("MAX_MESSAGE_SIZE",{
type:ZmSetting.T_PREF,defaultValue:ZmMailApp.DEFAULT_MAX_MESSAGE_SIZE}
);
e.registerSetting("NEW_WINDOW_COMPOSE",{
name:"zimbraPrefComposeInNewWindow",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("NOTIF_ADDRESS",{
name:"zimbraPrefNewMailNotificationAddress",type:ZmSetting.T_PREF}
);
e.registerSetting("NOTIF_ENABLED",{
name:"zimbraPrefNewMailNotificationEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("NOTIF_FEATURE_ENABLED",{
name:"zimbraFeatureNewMailNotificationEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("OPEN_MAIL_IN_NEW_WIN",{
name:"zimbraPrefOpenMailInNewWindow",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("POP_ENABLED",{
name:"zimbraPop3Enabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:!appCtxt.isOffline}
);
e.registerSetting("POP_DOWNLOAD_SINCE_VALUE",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:""}
);
e.registerSetting("POP_DOWNLOAD_SINCE",{
name:"zimbraPrefPop3DownloadSince",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:""}
);
e.registerSetting("POP_DELETE_OPTION",{
name:"zimbraPrefPop3DeleteOption",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmMailApp.POP_DELETE_OPTION_HARD_DELETE}
);
e.registerSetting("POP_INCLUDE_SPAM",{
name:"zimbraPrefPop3IncludeSpam",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("READING_PANE_LOCATION",{
name:"zimbraPrefReadingPaneLocation",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmSetting.RP_BOTTOM,isImplicit:true,isGlobal:true}
);
e.registerSetting("READING_PANE_LOCATION_CV",{
name:"zimbraPrefConvReadingPaneLocation",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmSetting.RP_BOTTOM,isImplicit:true}
);
e.registerSetting("READING_PANE_SASH_HORIZONTAL",{
name:"zimbraPrefReadingPaneSashHorizontal",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_INT,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
e.registerSetting("READING_PANE_SASH_VERTICAL",{
name:"zimbraPrefReadingPaneSashVertical",type:ZmSetting.T_METADATA,dataType:ZmSetting.D_INT,isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
e.registerSetting("REPLY_INCLUDE_HEADERS",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("REPLY_INCLUDE_ORIG",{
name:"zimbraPrefReplyIncludeOriginalText",type:ZmSetting.T_PREF,defaultValue:ZmSetting.INC_BODY,isGlobal:true}
);
e.registerSetting("REPLY_INCLUDE_WHAT",{
type:ZmSetting.T_PREF,defaultValue:ZmSetting.INC_BODY,isGlobal:true}
);
e.registerSetting("REPLY_MENU_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("REPLY_PREFIX",{
name:"zimbraPrefForwardReplyPrefixChar",type:ZmSetting.T_PREF,defaultValue:">",isGlobal:true}
);
e.registerSetting("REPLY_TO_ADDRESS",{
name:"zimbraPrefReplyToAddress",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST}
);
e.registerSetting("REPLY_TO_ENABLED",{
name:"zimbraPrefReplyToEnabled",type:ZmSetting.T_PREF}
);
e.registerSetting("REPLY_USE_PREFIX",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("SAVE_DRAFT_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("SAVE_TO_SENT",{
name:"zimbraPrefSaveToSent",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("USE_SEND_MSG_SHORTCUT",{
name:"zimbraPrefUseSendMsgShortcut",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("SAVE_TO_SENT_DELEGATED_TARGET",{
name:"zimbraPrefDelegatedSendSaveTarget",type:ZmSetting.T_PREF,defaultValue:"owner",isGlobal:true}
);
e.registerSetting("SELECT_AFTER_DELETE",{
name:"zimbraPrefMailSelectAfterDelete",type:ZmSetting.T_PREF,defaultValue:ZmSetting.DELETE_SELECT_NEXT,isGlobal:true}
);
e.registerSetting("SENT_FOLDER_NAME",{
name:"zimbraPrefSentMailFolder",type:ZmSetting.T_PREF,defaultValue:"sent"}
);
e.registerSetting("SHOW_BCC",{
type:ZmSetting.T_PREF,defaultValue:false}
);
e.registerSetting("SHOW_FRAGMENTS",{
name:"zimbraPrefShowFragments",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("SHOW_MAIL_CONFIRM",{
name:"zimbraFeatureConfirmationPageEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("SIGNATURE",{
name:"zimbraPrefMailSignature",type:ZmSetting.T_PREF}
);
e.registerSetting("SIGNATURE_ENABLED",{
name:"zimbraPrefMailSignatureEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("SIGNATURE_STYLE",{
name:"zimbraPrefMailSignatureStyle",type:ZmSetting.T_PREF,defaultValue:ZmSetting.SIG_OUTLOOK}
);
e.registerSetting("START_DATE_ENABLED",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("VACATION_DURATION_ENABLED",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("VACATION_DURATION_ALL_DAY",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("USER_FOLDERS_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("VACATION_FROM",{
name:"zimbraPrefOutOfOfficeFromDate",type:ZmSetting.T_PREF,defaultValue:""}
);
e.registerSetting("VACATION_FROM_TIME",{
type:ZmSetting.T_PREF,defaultValue:""}
);
e.registerSetting("VACATION_MSG",{
name:"zimbraPrefOutOfOfficeReply",type:ZmSetting.T_PREF,defaultValue:""}
);
e.registerSetting("VACATION_EXTERNAL_TYPE",{
name:"zimbraPrefExternalSendersType",type:ZmSetting.T_PREF,defaultValue:"ALL"}
);
e.registerSetting("VACATION_CALENDAR_TYPE",{
name:"zimbraPrefOutOfOfficeFreeBusyStatus",type:ZmSetting.T_PREF,defaultValue:"OUTOFOFFICE"}
);
e.registerSetting("VACATION_CALENDAR_APPT_ID",{
name:"zimbraPrefOutOfOfficeCalApptID",type:ZmSetting.T_METADATA,defaultValue:"-1",isImplicit:true,section:ZmSetting.M_IMPLICIT}
);
e.registerSetting("VACATION_CALENDAR_ENABLED",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("VACATION_EXTERNAL_MSG",{
name:"zimbraPrefOutOfOfficeExternalReply",type:ZmSetting.T_PREF,defaultValue:""}
);
e.registerSetting("VACATION_MSG_ENABLED",{
name:"zimbraPrefOutOfOfficeReplyEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("VACATION_EXTERNAL_MSG_ENABLED",{
name:"zimbraPrefOutOfOfficeExternalReplyEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("VACATION_MSG_REMIND_ON_LOGIN",{
name:"zimbraPrefOutOfOfficeStatusAlertOnLogin",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("VACATION_MSG_FEATURE_ENABLED",{
name:"zimbraFeatureOutOfOfficeReplyEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("VACATION_UNTIL",{
name:"zimbraPrefOutOfOfficeUntilDate",type:ZmSetting.T_PREF,defaultValue:""}
);
e.registerSetting("VACATION_UNTIL_TIME",{
type:ZmSetting.T_PREF,defaultValue:""}
);
e.registerSetting("COLLAPSE_IMAP_TREES",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("SAVE_TO_IMAP_SENT",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("AUTO_READ_RECEIPT_ENABLED",{
name:"zimbraPrefMailRequestReadReceipts",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
ZmMailApp._setGroupByMaps()
};
ZmMailApp.prototype._registerPrefs=function(){
var a={
MAIL:{
title:ZmMsg.mail,icon:"MailApp",templateId:"prefs.Pages#Mail",priority:10,precondition:appCtxt.get(ZmSetting.MAIL_ENABLED)||appCtxt.get(ZmSetting.ADMIN_DELEGATED),prefs:[ZmSetting.AUTO_READ_RECEIPT_ENABLED,ZmSetting.DEDUPE_MSG_TO_SELF,ZmSetting.DEDUPE_MSG_ENABLED,ZmSetting.DISPLAY_EXTERNAL_IMAGES,ZmSetting.GET_MAIL_ACTION,ZmSetting.INITIAL_SEARCH,ZmSetting.MAIL_BLACKLIST,ZmSetting.MAIL_FORWARDING_ADDRESS,ZmSetting.MAIL_LIFETIME_INBOX_READ,ZmSetting.MAIL_LIFETIME_INBOX_UNREAD,ZmSetting.MAIL_LIFETIME_JUNK,ZmSetting.MAIL_LIFETIME_SENT,ZmSetting.MAIL_LIFETIME_TRASH,ZmSetting.MAIL_LOCAL_DELIVERY_DISABLED,ZmSetting.MAIL_NOTIFY_SOUNDS,ZmSetting.MAIL_NOTIFY_APP,ZmSetting.MAIL_NOTIFY_BROWSER,ZmSetting.MAIL_NOTIFY_TOASTER,ZmSetting.MAIL_WHITELIST,ZmSetting.MAIL_SEND_READ_RECEIPTS,ZmSetting.MARK_MSG_READ,ZmSetting.NOTIF_ADDRESS,ZmSetting.NOTIF_ENABLED,ZmSetting.OFFLINE_NOTIFY_NEWMAIL_ON_INBOX,ZmSetting.OPEN_MAIL_IN_NEW_WIN,ZmSetting.PAGE_SIZE,ZmSetting.POP_DOWNLOAD_SINCE_VALUE,ZmSetting.POP_DOWNLOAD_SINCE,ZmSetting.POP_DELETE_OPTION,ZmSetting.POP_INCLUDE_SPAM,ZmSetting.POLLING_INTERVAL,ZmSetting.SELECT_AFTER_DELETE,ZmSetting.SHOW_FRAGMENTS,ZmSetting.COLOR_MESSAGES,ZmSetting.START_DATE_ENABLED,ZmSetting.VACATION_DURATION_ENABLED,ZmSetting.VACATION_DURATION_ALL_DAY,ZmSetting.VACATION_FROM,ZmSetting.VACATION_FROM_TIME,ZmSetting.VACATION_CALENDAR_ENABLED,ZmSetting.VACATION_MSG_ENABLED,ZmSetting.VACATION_MSG,ZmSetting.VACATION_EXTERNAL_MSG_ENABLED,ZmSetting.VACATION_EXTERNAL_MSG,ZmSetting.VACATION_EXTERNAL_TYPE,ZmSetting.VACATION_CALENDAR_TYPE,ZmSetting.VACATION_UNTIL,ZmSetting.VACATION_UNTIL_TIME,ZmSetting.VIEW_AS_HTML,ZmSetting.COMPOSE_AS_FORMAT,ZmSetting.COMPOSE_INIT_FONT_COLOR,ZmSetting.COMPOSE_INIT_FONT_FAMILY,ZmSetting.COMPOSE_INIT_FONT_SIZE,ZmSetting.FORWARD_INCLUDE_WHAT,ZmSetting.FORWARD_USE_PREFIX,ZmSetting.FORWARD_INCLUDE_HEADERS,ZmSetting.NEW_WINDOW_COMPOSE,ZmSetting.AUTO_SAVE_DRAFT_INTERVAL,ZmSetting.REPLY_INCLUDE_WHAT,ZmSetting.REPLY_USE_PREFIX,ZmSetting.REPLY_INCLUDE_HEADERS,ZmSetting.REPLY_PREFIX,ZmSetting.SAVE_TO_SENT,ZmSetting.USE_SEND_MSG_SHORTCUT,ZmSetting.COMPOSE_SAME_FORMAT,ZmSetting.MAIL_MANDATORY_SPELLCHECK],manageDirty:true,createView:function(o,n,i){
AjxDispatcher.require("Alert");
return new ZmMailPrefsPage(o,n,i)
}}};
for(var t in a){
ZmPref.registerPrefSection(t,a[t])
}
ZmPref.registerPref("ACCOUNTS",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("AUTO_SAVE_DRAFT_INTERVAL",{
displayName:ZmMsg.autoSaveDrafts,displayContainer:ZmPref.TYPE_CHECKBOX,options:[0,ZmMailApp.DEFAULT_AUTO_SAVE_DRAFT_INTERVAL]}
);
ZmPref.registerPref("AUTO_READ_RECEIPT_ENABLED",{
displayName:ZmMsg.autoReadReceiptRequest,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("USE_SEND_MSG_SHORTCUT",{
displayName:AjxMessageFormat.format(ZmMsg.useSendMsgShortcut,[ZmKeys["compose.Send.display"]]),displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("DEDUPE_MSG_TO_SELF",{
displayName:ZmMsg.removeDupesToSelf,displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.dedupeNone,ZmMsg.dedupeSecondCopy,ZmMsg.dedupeAll],options:[ZmSetting.DEDUPE_NONE,ZmSetting.DEDUPE_SECOND,ZmSetting.DEDUPE_ALL]}
);
ZmPref.registerPref("DEDUPE_MSG_ENABLED",{
displayName:ZmMsg.autoDeleteDedupeMsg,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("DISPLAY_EXTERNAL_IMAGES",{
displayName:ZmMsg.showExternalImages,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("END_DATE_ENABLED",{
displayName:ZmMsg.endOn,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED}
);
ZmPref.registerPref("INITIAL_SEARCH",{
displayName:ZmMsg.initialMailSearch,displayContainer:ZmPref.TYPE_INPUT,maxLength:ZmPref.MAX_LENGTH[ZmSetting.INITIAL_SEARCH],errorMessage:AjxMessageFormat.format(ZmMsg.invalidInitialSearch,ZmPref.MAX_LENGTH[ZmSetting.INITIAL_SEARCH]),precondition:ZmSetting.INITIAL_SEARCH_ENABLED}
);
ZmPref.registerPref("MAIL_BLACKLIST",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("TRUSTED_ADDR_LIST",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("MAIL_FORWARDING_ADDRESS",{
displayName:ZmMsg.mailForwardingAddress,displayContainer:ZmPref.TYPE_INPUT,validationFunction:ZmMailApp.validateForwardEmail,errorMessage:ZmMsg.invalidEmail,precondition:ZmSetting.MAIL_FORWARDING_ENABLED,hint:ZmMsg.enterEmailAddress}
);
ZmPref.registerPref("MAIL_LIFETIME_INBOX_READ",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:[ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationNever],options:[30,45,60,90,120,0],approximateFunction:ZmPref.approximateLifetimeInboxRead,displayFunction:ZmPref.durationDay2Int,valueFunction:ZmPref.int2DurationDay,validationFunction:ZmPref.validateLifetime}
);
ZmPref.registerPref("MAIL_LIFETIME_INBOX_UNREAD",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:[ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationNever],options:[30,45,60,90,120,0],approximateFunction:ZmPref.approximateLifetimeInboxUnread,displayFunction:ZmPref.durationDay2Int,valueFunction:ZmPref.int2DurationDay,validationFunction:ZmPref.validateLifetime}
);
ZmPref.registerPref("MAIL_LIFETIME_JUNK",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:ZmMsg.lifetimeDurationDays,options:[1,3,7,30],approximateFunction:ZmPref.approximateLifetimeJunk,displayFunction:ZmPref.durationDay2Int,valueFunction:ZmPref.int2DurationDay,validationFunction:ZmPref.validateLifetimeJunk}
);
ZmPref.registerPref("MAIL_LIFETIME_SENT",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:[ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationDays,ZmMsg.lifetimeDurationNever],options:[30,45,60,90,120,0],approximateFunction:ZmPref.approximateLifetimeSent,displayFunction:ZmPref.durationDay2Int,valueFunction:ZmPref.int2DurationDay,validationFunction:ZmPref.validateLifetime}
);
ZmPref.registerPref("MAIL_LIFETIME_TRASH",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:ZmMsg.lifetimeDurationDays,options:[1,3,7,30],approximateFunction:ZmPref.approximateLifetimeTrash,displayFunction:ZmPref.durationDay2Int,valueFunction:ZmPref.int2DurationDay,validationFunction:ZmPref.validateLifetimeTrash}
);
ZmPref.registerPref("MAIL_LOCAL_DELIVERY_DISABLED",{
displayName:ZmMsg.mailDeliveryDisabled,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.MAIL_FORWARDING_ENABLED,validationFunction:ZmMailApp.validateMailLocalDeliveryDisabled,errorMessage:ZmMsg.errorMissingFwdAddr}
);
ZmPref.registerPref("MAIL_NOTIFY_SOUNDS",{
displayName:ZmMsg.playSound,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("MAIL_NOTIFY_APP",{
displayName:ZmMsg.flashMailAppTab,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("MAIL_NOTIFY_BROWSER",{
displayName:ZmMsg.flashBrowser,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("MAIL_SEND_READ_RECEIPTS",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.readReceiptNever,ZmMsg.readReceiptAlways,ZmMsg.readReceiptAsk],options:[ZmMailApp.SEND_RECEIPT_NEVER,ZmMailApp.SEND_RECEIPT_ALWAYS,ZmMailApp.SEND_RECEIPT_PROMPT],precondition:ZmSetting.MAIL_READ_RECEIPT_ENABLED}
);
ZmPref.registerPref("MAIL_WHITELIST",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("NOTIF_ADDRESS",{
displayName:ZmMsg.mailNotifAddress,displayContainer:ZmPref.TYPE_INPUT,validationFunction:ZmPref.validateEmail,errorMessage:ZmMsg.invalidEmail,precondition:ZmSetting.NOTIF_FEATURE_ENABLED,hint:ZmMsg.enterEmailAddress}
);
ZmPref.registerPref("NOTIF_ENABLED",{
displayName:ZmMsg.mailNotifEnabled,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.NOTIF_FEATURE_ENABLED,validationFunction:ZmMailApp.validateSendNotification,errorMessage:ZmMsg.errorMissingNotifyAddr}
);
ZmPref.registerPref("OPEN_MAIL_IN_NEW_WIN",{
displayName:ZmMsg.openMailNewWin,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.DETACH_MAILVIEW_ENABLED}
);
ZmPref.registerPref("POP_DOWNLOAD_SINCE_VALUE",{
displayContainer:ZmPref.TYPE_STATIC,precondition:ZmSetting.POP_ENABLED}
);
ZmPref.registerPref("POP_DOWNLOAD_SINCE",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.externalAccessPopDownloadAll,"*** NOT SHOWN ***",ZmMsg.externalAccessPopDownloadFromNow],options:[ZmMailApp.POP_DOWNLOAD_SINCE_ALL,ZmMailApp.POP_DOWNLOAD_SINCE_NO_CHANGE,ZmMailApp.POP_DOWNLOAD_SINCE_FROM_NOW],displayFunction:ZmPref.downloadSinceDisplay,valueFunction:ZmPref.downloadSinceValue,precondition:ZmSetting.POP_ENABLED}
);
ZmPref.registerPref("POP_DELETE_OPTION",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.popDeleteHardDelete,ZmMsg.popDeleteTrash,ZmMsg.popDeleteRead,ZmMsg.popDeleteKeep],options:[ZmMailApp.POP_DELETE_OPTION_HARD_DELETE,ZmMailApp.POP_DELETE_OPTION_TRASH,ZmMailApp.POP_DELETE_OPTION_READ,ZmMailApp.POP_DELETE_OPTION_KEEP],precondition:ZmSetting.POP_ENABLED}
);
ZmPref.registerPref("POP_INCLUDE_SPAM",{
displayName:ZmMsg.popIncludeSpam,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("REPLY_TO_ADDRESS",{
displayName:ZmMsg.replyToAddress,displayContainer:ZmPref.TYPE_INPUT,validationFunction:ZmPref.validateEmail,errorMessage:ZmMsg.invalidEmail}
);
ZmPref.registerPref("SELECT_AFTER_DELETE",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_VERTICAL,displayOptions:[ZmMsg.selectNext,ZmMsg.selectPrevious,ZmMsg.selectAdapt],options:[ZmSetting.DELETE_SELECT_NEXT,ZmSetting.DELETE_SELECT_PREV,ZmSetting.DELETE_SELECT_ADAPT]}
);
ZmPref.registerPref("SIGNATURE",{
displayName:ZmMsg.signature,displayContainer:ZmPref.TYPE_TEXTAREA,maxLength:ZmPref.MAX_LENGTH[ZmSetting.SIGNATURE],errorMessage:AjxMessageFormat.format(ZmMsg.invalidSignature,ZmPref.MAX_LENGTH[ZmSetting.SIGNATURE])}
);
ZmPref.registerPref("SIGNATURE_ENABLED",{
displayName:ZmMsg.signatureEnabled,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("SIGNATURE_STYLE",{
displayName:ZmMsg.signatureStyle,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_HORIZONTAL,displayOptions:[ZmMsg.aboveQuotedText,ZmMsg.atBottomOfMessage],options:[ZmSetting.SIG_OUTLOOK,ZmSetting.SIG_INTERNET]}
);
ZmPref.registerPref("SIGNATURES",{
displayContainer:ZmPref.TYPE_CUSTOM,initFunction:ZmPref.regenerateSignatureEditor}
);
ZmPref.registerPref("START_DATE_ENABLED",{
displayContainer:ZmPref.TYPE_CHECKBOX,displayName:ZmMsg.startOn,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED}
);
ZmPref.registerPref("VACATION_DURATION_ENABLED",{
displayContainer:ZmPref.TYPE_CHECKBOX,displayName:ZmMsg.oooDurationLabel,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED}
);
ZmPref.registerPref("VACATION_DURATION_ALL_DAY",{
displayContainer:ZmPref.TYPE_CHECKBOX,displayName:ZmMsg.oooAllDayDurationLabel,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED}
);
ZmPref.registerPref("VACATION_CALENDAR_ENABLED",{
displayContainer:ZmPref.TYPE_CHECKBOX,displayName:ZmMsg.vacationCalLabel,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED}
);
ZmPref.registerPref("VACATION_FROM",{
displayName:ZmMsg.startDate,displayContainer:ZmPref.TYPE_INPUT,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED,displayFunction:AjxDateUtil.dateGMT2Local,valueFunction:AjxDateUtil.dateLocal2GMT}
);
ZmPref.registerPref("VACATION_UNTIL",{
displayName:ZmMsg.endDate,displayContainer:ZmPref.TYPE_INPUT,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED,displayFunction:AjxDateUtil.dateGMT2Local,valueFunction:AjxDateUtil.dateLocal2GMT}
);
ZmPref.registerPref("VACATION_MSG",{
displayName:ZmMsg.awayMessage,displayContainer:ZmPref.TYPE_TEXTAREA,maxLength:ZmPref.MAX_LENGTH[ZmSetting.AWAY_MESSAGE],errorMessage:AjxMessageFormat.format(ZmMsg.invalidAwayMessage,ZmPref.MAX_LENGTH[ZmSetting.AWAY_MESSAGE]),precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED,validationFunction:ZmMailApp.validateVacationMsg}
);
ZmPref.registerPref("VACATION_MSG_ENABLED",{
displayName:ZmMsg.outOfOffice,displayContainer:ZmPref.TYPE_RADIO_GROUP,orientation:ZmPref.ORIENT_VERTICAL,errorMessage:ZmMsg.missingAwayMessage,displayOptions:[ZmMsg.noAutoReplyMessage,ZmMsg.autoReplyMessage],options:[false,true],inputId:["VACATION_MSG_DISABLED","VACATION_MSG_ENABLED"]}
);
ZmPref.registerPref("VACATION_EXTERNAL_TYPE",{
displayName:ZmMsg.vacationExternalType,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.vacationExteralAll,ZmMsg.vacationExternalAllExceptAB],options:["ALL","ALLNOTINAB"]}
);
ZmPref.registerPref("VACATION_CALENDAR_TYPE",{
displayName:ZmMsg.vacationExternalType,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.outOfOffice,ZmMsg.busy],options:["OUTOFOFFICE","BUSY"]}
);
ZmPref.registerPref("VACATION_EXTERNAL_MSG",{
displayName:ZmMsg.externalAwayMessage,displayContainer:ZmPref.TYPE_TEXTAREA,maxLength:ZmPref.MAX_LENGTH[ZmSetting.AWAY_MESSAGE],errorMessage:AjxMessageFormat.format(ZmMsg.invalidAwayMessage,ZmPref.MAX_LENGTH[ZmSetting.AWAY_MESSAGE]),precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED,validationFunction:ZmMailApp.validateExternalVacationMsg}
);
ZmPref.registerPref("VACATION_EXTERNAL_MSG_ENABLED",{
displayName:ZmMsg.externalAwayMessageEnabled,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:ZmSetting.VACATION_MSG_FEATURE_ENABLED,validationFunction:ZmMailApp.validateExternalVacationMsgEnabled,errorMessage:ZmMsg.missingAwayMessage}
);
AjxDispatcher.require("Alert");
var e=ZmDesktopAlert.getInstance().getDisplayText();
ZmPref.registerPref("MAIL_NOTIFY_TOASTER",{
displayFunc:function(){
return e
}
,precondition:function(){
return !!e
}
,displayContainer:ZmPref.TYPE_CHECKBOX}
);
if(appCtxt.isOffline){
ZmPref.registerPref("OFFLINE_NOTIFY_NEWMAIL_ON_INBOX",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.notifyNewMailOnInbox,ZmMsg.notifyNewMailOnAny],options:[true,false]}
)
}};
ZmMailApp.validateForwardEmail=function(t){
if(!t||t==""){
var i=ZmPref.getPrefSectionWithPref(ZmSetting.MAIL_FORWARDING_ADDRESS);
if(!i){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var a=e.getView(i.id).getFormObject(ZmSetting.MAIL_LOCAL_DELIVERY_DISABLED);
if(a&&a.isSelected()){
a.setSelected(false)
}}
return ZmPref.validateEmail(t)
};
ZmMailApp.validateMailLocalDeliveryDisabled=function(a){
if(!a){
return true
}
var i=ZmPref.getPrefSectionWithPref(ZmSetting.MAIL_FORWARDING_ADDRESS);
if(!i){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var t=e.getView(i.id).getFormObject(ZmSetting.MAIL_FORWARDING_ADDRESS);
return(t!=null&&t.isValid())
};
ZmMailApp.validateSendNotification=function(a){
if(!a){
return true
}
var i=ZmPref.getPrefSectionWithPref(ZmSetting.NOTIF_ADDRESS);
if(!i){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var t=e.getView(i.id).getFormObject(ZmSetting.NOTIF_ADDRESS);
return(t!=null&&t.isValid())
};
ZmMailApp.validateVacationMsg=function(a){
if(a&&(a.length>0)){
return true
}
var o=ZmPref.getPrefSectionWithPref(ZmSetting.VACATION_MSG_ENABLED);
if(!o){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var t=e.getView(o.id).getFormObject(ZmSetting.VACATION_MSG_ENABLED);
var i=(t&&!(t.getSelectedValue()=="true"));
if(!i){
ZmPref.SETUP.VACATION_MSG.errorMessage=ZmMsg.missingAwayMessage
}
return i
};
ZmMailApp.validateVacationMsgEnabled=function(a){
if(!a){
return true
}
var o=ZmPref.getPrefSectionWithPref(ZmSetting.VACATION_MSG);
if(!o){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var t=e.getView(o.id).getFormObject(ZmSetting.VACATION_MSG);
if(!t){
return false
}
var i=t.getValue();
return(i&&(i.length>0))
};
ZmMailApp.validateExternalVacationMsg=function(a){
if(a&&(a.length>0)){
return true
}
var i=ZmPref.getPrefSectionWithPref(ZmSetting.VACATION_EXTERNAL_MSG_ENABLED);
if(!i){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var t=e.getView(i.id).getFormObject(ZmSetting.VACATION_EXTERNAL_MSG_ENABLED);
return(t&&!t.isSelected())
};
ZmMailApp.validateExternalVacationMsgEnabled=function(a){
if(!a){
return true
}
var o=ZmPref.getPrefSectionWithPref(ZmSetting.VACATION_EXTERNAL_MSG);
if(!o){
return false
}
var e=appCtxt.getApp(ZmApp.PREFERENCES).getPrefController().getPrefsView();
var t=e.getView(o.id).getFormObject(ZmSetting.VACATION_EXTERNAL_MSG);
if(!t){
return false
}
var i=t.getValue();
return(i&&(i.length>0))
};
ZmMailApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_ADD_FILTER_RULE,{
textKey:"createFilter",image:"Plus"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_ADD_FILTER_RULE_ADDRESS,{
textKey:"createFilter",image:"Plus"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_ADD_SIGNATURE,{
textKey:"signature",image:"AddSignature",tooltipKey:"chooseSignature"}
,ZmSetting.SIGNATURES_ENABLED);
ZmOperation.registerOp(ZmId.OP_CHECK_MAIL,{
textKey:"checkMail",tooltipKey:"checkMailPrefDefault",image:"Refresh",textPrecedence:90,showImageInToolbar:true}
);
ZmOperation.registerOp(ZmId.OP_COMPOSE_OPTIONS,{
textKey:"options",image:"Preferences"}
);
ZmOperation.registerOp(ZmId.OP_CREATE_APPT,{
textKey:"createAppt",image:"NewAppointment"}
,ZmSetting.CALENDAR_ENABLED);
ZmOperation.registerOp(ZmId.OP_CREATE_TASK,{
textKey:"createTask",image:"NewTask"}
,ZmSetting.TASKS_ENABLED);
ZmOperation.registerOp(ZmId.OP_DELETE_CONV,{
textKey:"delConv",image:"DeleteConversation"}
,ZmSetting.CONVERSATIONS_ENABLED);
ZmOperation.registerOp(ZmId.OP_DELETE_MSG,{
textKey:"delMsg",image:"DeleteMessage"}
);
ZmOperation.registerOp(ZmId.OP_DELETE_MENU,{
textKey:"del",image:"Delete",tooltipKey:"deleteTooltip"}
);
ZmOperation.registerOp(ZmId.OP_DETACH_COMPOSE,{
tooltipKey:"detachTooltip",image:"OpenInNewWindow"}
);
ZmOperation.registerOp(ZmId.OP_DRAFT,null,ZmSetting.SAVE_DRAFT_ENABLED);
ZmOperation.registerOp(ZmId.OP_EDIT_FILTER_RULE,{
textKey:"filterEdit",image:"Edit"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_FORWARD,{
textKey:"forward",tooltipKey:"forwardTooltip",image:"Forward",shortcut:ZmKeyMap.FORWARD,textPrecedence:46}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_ATT,{
textKey:"forwardAtt",tooltipKey:"forwardAtt",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_CONV,{
textKey:"forwardConv",tooltipKey:"forwardConv",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_INLINE,{
textKey:"forwardInline",tooltipKey:"forwardTooltip",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_IM,{
textKey:"newIM",image:"ImStartChat",tooltipKey:"imNewChat"}
,ZmSetting.IM_ENABLED);
ZmOperation.registerOp(ZmId.OP_INC_ATTACHMENT,{
textKey:"includeMenuAttachment"}
);
ZmOperation.registerOp(ZmId.OP_INC_BODY,{
textKey:"includeMenuBody"}
);
ZmOperation.registerOp(ZmId.OP_INC_NONE,{
textKey:"includeMenuNone"}
);
ZmOperation.registerOp(ZmId.OP_INC_SMART,{
textKey:"includeMenuSmart"}
);
ZmOperation.registerOp(ZmId.OP_INCLUDE_HEADERS,{
textKey:"includeHeaders"}
);
ZmOperation.registerOp(ZmId.OP_KEEP_READING,{
textKey:"keepReading",tooltipKey:"keepReadingTooltip",shortcut:ZmKeyMap.KEEP_READING}
);
ZmOperation.registerOp(ZmId.OP_MARK_READ,{
textKey:"markAsRead",image:"ReadMessage",shortcut:ZmKeyMap.MARK_READ}
);
ZmOperation.registerOp(ZmId.OP_MARK_UNREAD,{
textKey:"markAsUnread",image:"UnreadMessage",shortcut:ZmKeyMap.MARK_UNREAD}
);
ZmOperation.registerOp(ZmId.OP_FLAG,{
textKey:"flag",image:"FlagRed",shortcut:ZmKeyMap.FLAG}
,ZmSetting.FLAGGING_ENABLED);
ZmOperation.registerOp(ZmId.OP_UNFLAG,{
textKey:"unflag",image:"FlagDis",shortcut:ZmKeyMap.FLAG}
,ZmSetting.FLAGGING_ENABLED);
ZmOperation.registerOp(ZmId.OP_MOVE_DOWN_FILTER_RULE,{
textKey:"filterMoveDown",image:"DownArrow"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_MOVE_TO_BCC,{
textKey:"moveToBcc"}
);
ZmOperation.registerOp(ZmId.OP_MOVE_TO_CC,{
textKey:"moveToCc"}
);
ZmOperation.registerOp(ZmId.OP_MOVE_TO_TO,{
textKey:"moveToTo"}
);
ZmOperation.registerOp(ZmId.OP_MOVE_UP_FILTER_RULE,{
textKey:"filterMoveUp",image:"UpArrow"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_NEW_MESSAGE,{
textKey:"newEmail",tooltipKey:"newMessageTooltip",image:"NewMessage",shortcut:ZmKeyMap.NEW_MESSAGE}
);
ZmOperation.registerOp(ZmId.OP_NEW_MESSAGE_WIN,{
textKey:"newEmail",tooltipKey:"newMessageTooltip",image:"NewMessage",shortcut:ZmKeyMap.NEW_MESSAGE_WIN}
);
ZmOperation.registerOp(ZmId.OP_PRIORITY_HIGH,{
textKey:"priorityHigh",image:"PriorityHigh_list"}
);
ZmOperation.registerOp(ZmId.OP_PRIORITY_LOW,{
textKey:"priorityLow",image:"PriorityLow_list"}
);
ZmOperation.registerOp(ZmId.OP_PRIORITY_NORMAL,{
textKey:"priorityNormal",image:"PriorityNormal_list"}
);
ZmOperation.registerOp(ZmId.OP_REMOVE_FILTER_RULE,{
textKey:"filterRemove",image:"Delete"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_REDIRECT,{
textKey:"mailRedirect",tooltipKey:"mailRedirectTooltip",image:"Redirect"}
);
ZmOperation.registerOp(ZmId.OP_REPLY,{
textKey:"reply",tooltipKey:"replyTooltip",image:"Reply",shortcut:ZmKeyMap.REPLY,textPrecedence:50}
);
ZmOperation.registerOp(ZmId.OP_REPLY_ALL,{
textKey:"replyAll",tooltipKey:"replyAllTooltip",image:"ReplyAll",shortcut:ZmKeyMap.REPLY_ALL,textPrecedence:48}
);
ZmOperation.registerOp(ZmId.OP_REQUEST_READ_RECEIPT,{
textKey:"requestReadReceipt",image:"ReadMessage"}
);
ZmOperation.registerOp(ZmId.OP_RESET,{
textKey:"reset",image:"Refresh",tooltipKey:"refreshFilters"}
);
ZmOperation.registerOp(ZmId.OP_RUN_FILTER_RULE,{
textKey:"filterRun",image:"SwitchFormat"}
,ZmSetting.FILTERS_ENABLED);
ZmOperation.registerOp(ZmId.OP_SAVE_DRAFT,{
textKey:"saveDraft",tooltipKey:"saveDraftTooltip",image:"DraftFolder",shortcut:ZmKeyMap.SAVE}
,ZmSetting.SAVE_DRAFT_ENABLED);
ZmOperation.registerOp(ZmId.OP_SEND_MENU,{
textKey:"send",tooltipKey:"sendTooltip",image:"Send"}
,ZmSetting.SAVE_DRAFT_ENABLED);
ZmOperation.registerOp(ZmId.OP_SEND_LATER,{
textKey:"sendLater",tooltipKey:"sendLaterTooltip",image:"SendLater"}
,ZmSetting.SAVE_DRAFT_ENABLED);
ZmOperation.registerOp(ZmId.OP_SHOW_BCC,{
textKey:"showBcc"}
);
ZmOperation.registerOp(ZmId.OP_SHOW_CONV,{
textKey:"showConv",image:"Conversation"}
);
ZmOperation.registerOp(ZmId.OP_SHOW_ORIG,{
textKey:"showOrig",image:"Message"}
);
ZmOperation.registerOp(ZmId.OP_SPAM,{
textKey:"junkLabel",tooltipKey:"junkTooltip",image:"JunkMail",shortcut:ZmKeyMap.SPAM,textPrecedence:70}
,ZmSetting.SPAM_ENABLED);
ZmOperation.registerOp(ZmId.OP_USE_PREFIX,{
textKey:"usePrefix"}
)
};
ZmMailApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.CONV,{
app:ZmApp.MAIL,nameKey:"conversation",icon:"Conversation",soapCmd:"ConvAction",itemClass:"ZmConv",node:"c",organizer:ZmOrganizer.FOLDER,dropTargets:[ZmOrganizer.FOLDER,ZmOrganizer.TAG,ZmOrganizer.ZIMLET],searchType:"conversation",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("MailCore");
return new ZmMailList(ZmItem.CONV,e)
}
,this)}
);
ZmItem.registerItem(ZmItem.MSG,{
app:ZmApp.MAIL,nameKey:"message",icon:"Message",soapCmd:"MsgAction",itemClass:"ZmMailMsg",node:"m",organizer:ZmOrganizer.FOLDER,dropTargets:[ZmOrganizer.FOLDER,ZmOrganizer.TAG,ZmOrganizer.ZIMLET],searchType:"message",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("MailCore");
return new ZmMailList(ZmItem.MSG,e)
}
,this)}
);
ZmItem.registerItem(ZmItem.ATT,{
app:ZmApp.MAIL,nameKey:"attachment",icon:"Attachment",itemClass:"ZmMimePart",node:"mp",resultsList:AjxCallback.simpleClosure(function(e){
return new ZmMailList(ZmItem.ATT,e)
}
,this)}
)
};
ZmMailApp.prototype._setupSearchToolbar=function(){
if(appCtxt.get(ZmSetting.MAIL_ENABLED)){
ZmSearchToolBar.addMenuItem(ZmId.SEARCH_MAIL,{
msgKey:"searchMail",tooltipKey:"searchMail",icon:"Message",shareIcon:"SharedMailFolder",id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.SEARCH_MAIL)}
)
}};
ZmMailApp.prototype._registerApp=function(){
var t={};
t[ZmOperation.NEW_MESSAGE]="message";
var e={};
e[ZmKeyMap.NEW_MESSAGE]=ZmOperation.NEW_MESSAGE;
e[ZmKeyMap.NEW_MESSAGE_WIN]=ZmOperation.NEW_MESSAGE_WIN;
ZmApp.registerApp(ZmApp.MAIL,{
mainPkg:"MailCore",nameKey:"mail",icon:"MailApp",textPrecedence:70,chooserTooltipKey:"goToMail",viewTooltipKey:"displayMailToolTip",defaultSearch:appCtxt.isChildWindow?null:ZmId.SEARCH_MAIL,organizer:ZmOrganizer.FOLDER,overviewTrees:[ZmOrganizer.FOLDER,ZmOrganizer.SEARCH,ZmOrganizer.TAG],searchTypes:[ZmItem.MSG,ZmItem.CONV],newItemOps:t,actionCodes:e,gotoActionCode:ZmKeyMap.GOTO_MAIL,newActionCode:ZmKeyMap.NEW_MESSAGE,qsViews:["compose","msg"],chooserSort:10,defaultSort:10,upsellUrl:ZmSetting.MAIL_UPSELL_URL,searchResultsTab:true}
)
};
ZmMailApp.prototype.startup=function(e){};
ZmMailApp.prototype.preNotify=function(f){
if(!(f.deleted&&f.created&&f.modified)){
return f
}
var s=false;
var r=f.deleted.id&&f.deleted.id.split(",");
var y={};
var l=[];
if(r&&r.length){
for(var T=0;
T<r.length;
T++){
var k=r[T];
var b=ZmOrganizer.normalizeId(k);
if(b<0){
y[b]=true;
s=true
}else{
l.push(k)
}}}
if(!s){
return f
}
var p=false;
var g={};
var d={};
for(var C in f.created){
var O=f.created[C];
if(O&&O.length){
for(var T=0;
T<O.length;
T++){
var u=O[T];
var k=u.id;
var a=(C=="m")?"|cid="+u.cid+"|l="+u.l:"|n="+u.n;
AjxDebug.println(AjxDebug.NOTIFY,C+": id="+k+"|su='"+u.su+"'|f="+u.f+"|d="+u.d+a);
if(C=="m"){
g[k]=u
}else{
if(C=="c"&&(u.n>1)){
d[k]=u;
p=true
}}}}}
if(!p){
return f
}
var j=false;
var z={};
var m={};
var O=f.modified.m;
if(O&&O.length){
for(var T=0;
T<O.length;
T++){
var B=O[T];
var k=B.id;
var b=ZmOrganizer.normalizeId(k);
var t=b*-1;
if(y[t]&&d[B.cid]){
j=true;
m[k]=B;
z[B.cid]=appCtxt.multiAccounts?ZmOrganizer.getSystemId(t):t;
d[B.cid]._wasVirtConv=true;
var n=appCtxt.getById(k),e;
if(n){
n.cid=B.cid;
e=n.folderId
}
d[B.cid].m=[{
id:k,l:e}
]
}}}
if(!j){
return f
}
if(l.length){
f.deleted.id=l.join(",")
}else{
delete f.deleted
}
var W=[];
var O=f.created.c;
if(O&&O.length){
for(var T=0;
T<O.length;
T++){
var u=O[T];
var A=d[u.id];
if(!(A&&A._wasVirtConv)){
W.push(u)
}}}
if(W&&W.length){
f.created.c=W
}else{
delete f.created.c
}
for(var k in g){
var w=g[k];
var v=d[w.cid];
if(v&&v._wasVirtConv){
w._convCreateNode=v
}}
var x=[];
for(var h in z){
var q=d[h];
q.id=z[h];
q._newId=h;
x.push(q)
}
if(x.length){
var o={};
o.c=x;
appCtxt.getRequestMgr()._handleModifies(o)
}};
ZmMailApp.prototype.createNotify=function(n,r){
if(!n.m&&!n.c&&!n.link){
return
}
if(!r&&!this._noDefer&&this._deferNotifications("create",n)){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: skipping/deferring notifications");
return
}
if(n.link){
var s=n.link;
for(var o=0;
o<s.length;
o++){
var a=s[o];
if(appCtxt.cacheGet(a.id)){
continue
}
this._handleCreateLink(a,ZmOrganizer.FOLDER)
}}
var h=this.getAllControllers();
var t=this._getCurrentViewController();
if(t&&h[h.length-1]!==t){
AjxUtil.arrayRemove(h,t);
h.push(t)
}
for(var o=0;
o<h.length;
o++){
var e=h[o];
if(e&&e.isZmDoublePaneController){
this._checkList(n,e.getList(),e,o==h.length-1)
}}
this._handleAlerts(n)
};
ZmMailApp.prototype._handleAlerts=function(p){
var e=p.m||[];
if(e.length==0){
return
}
AjxDispatcher.require("Alert");
var g=appCtxt.getActiveAccount();
var t,f,r=false;
var l=0;
for(var m=0;
m<e.length;
m++){
var b=e[m];
var n=(b&&b.f&&(b.f.indexOf(ZmItem.FLAG_UNREAD)!=-1))?ZmOrganizer.parseId(b.l):null;
var o=n&&n.account;
if(!o||(o&&o.isOfflineInitialSync())){
continue
}
if(appCtxt.isOffline&&n&&!o.isMain){
var c=(appCtxt.get(ZmSetting.OFFLINE_NOTIFY_NEWMAIL_ON_INBOX))?(n.id==ZmOrganizer.ID_INBOX):(n.id!=ZmOrganizer.ID_SPAM&&n.id!=ZmOrganizer.ID_TRASH);
if(c){
this.globalMailCount++;
o.inNewMailMode=true;
var w=appCtxt.getOverviewController()._overviewContainer;
for(var u in w){
w[u].updateAccountInfo(o,true,true)
}}}
if(n&&n.id==ZmOrganizer.ID_INBOX){
if(appCtxt.accountList.size()>1){
ZmAccountAlert.get(o).start(this)
}
if(!t&&o==g&&appCtxt.get(ZmSetting.MAIL_NOTIFY_APP,null,o)){
this.startAlert();
t=true
}
if(!f&&appCtxt.get(ZmSetting.MAIL_NOTIFY_SOUNDS,null,o)){
ZmSoundAlert.getInstance().start();
f=true
}
if(!r&&appCtxt.get(ZmSetting.MAIL_NOTIFY_BROWSER,null,o)){
ZmBrowserAlert.getInstance().start(ZmMsg.newMessage);
r=true
}
if(appCtxt.get(ZmSetting.MAIL_NOTIFY_TOASTER,null,o)&&l<5){
var a=appCtxt.getById(b.id)||ZmMailMsg.createFromDom(b,{}
);
var s=(a.subject)?([a.subject," - ",(a.fragment||"")].join("")):(a.fragment||"");
var d=a.getAddress(AjxEmailAddress.FROM);
var h=(d&&d instanceof AjxEmailAddress)?d.getName()||d.getAddress():(d&&typeof d=="string")?d:ZmMsg.unknown;
var y=(appCtxt.accountList.size()>1)?AjxMessageFormat.format(ZmMsg.newMailWithAccount,[h,o.getDisplayName()]):AjxMessageFormat.format(ZmMsg.newMail,h);
ZmDesktopAlert.getInstance().start(y,s);
l++
}}}};
ZmMailApp.prototype._checkList=function(n,o,i,h){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: handling mail creates for view "+i.getCurrentViewId());
if(!(o&&o instanceof ZmMailList)){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: list is not a ZmMailList: "+o);
return
}
var a={};
var s={};
var r=o.search.sortBy;
var e=this._checkType(n,ZmItem.CONV,a,o,r,null,h);
var t=this._checkType(n,ZmItem.MSG,s,o,r,a,h);
if(e.gotMail||t.gotMail){
o.notifyCreate(a,s)
}
if(e.hasMore||t.hasMore){
var i=this._getCurrentViewController();
if(i){
i.setHasMore(true)
}}};
ZmMailApp.prototype._getCurrentViewController=function(){
var t;
var e=appCtxt.getCurrentViewType();
if(e==ZmId.VIEW_CONVLIST){
t=this.getConvListController()
}else{
if(e==ZmId.VIEW_TRAD){
t=this.getTradController()
}}
return t
};
ZmMailApp.prototype._checkType=function(creates,type,items,currList,sortBy,convs,last){
var result={
gotMail:false,hasMore:false};
var nodeName=ZmList.NODE[type];
var list=creates[nodeName];
if(!(list&&list.length)){
return result
}
var throttle;
if(appCtxt.isOffline){
throttle=(appCtxt.get(ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES))?appCtxt.accountList.isInitialSyncing():appCtxt.getActiveAccount().isOfflineInitialSync()
}
if(throttle){
if(!this._maxEntries){
var mlv=this.getMailListController().getCurrentView().getMailListView();
this._maxEntries=mlv&&mlv.calculateMaxEntries()
}
if(this.numEntries>this._maxEntries){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: too many creates: num="+this.numEntries+", max="+this._maxEntries);
return result
}}
var INTERVAL_LENGTH=10*1000;
var INTERVAL_THRESHOLD=20;
for(var i=0;
i<list.length;
i++){
var create=list[i];
var folder=create.l||"conv";
var now=new Date();
var data=this._throttleStats[folder];
if(!data||now.getTime()-data.intervalStart.getTime()>INTERVAL_LENGTH){
data=this._throttleStats[folder]={
intervalStart:now,count:0}
}
data.count++;
if(data.count>INTERVAL_THRESHOLD){
if(data.count==INTERVAL_THRESHOLD+1){}
result.hasMore=true;
continue
}
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: process create notification:");
var extra=(type==ZmItem.MSG)?"|cid="+create.cid+"|l="+create.l:"|n="+create.n;
AjxDebug.println(AjxDebug.NOTIFY,type+": id="+create.id+"|su='"+create.su+"'|f="+create.f+"|d="+create.d+extra);
if(create._handled){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: create already handled "+create.id);
continue
}
if(last){
create._handled=true
}
if(currList.type==ZmItem.MSG&&type==ZmItem.CONV){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: msg list ignoring conv create");
continue
}
if(appCtxt.isOffline){
if((ZmList.ITEM_TYPE[nodeName]!=currList.type)&&(currList.type!=ZmItem.CONV)){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: type mismatch: "+ZmList.ITEM_TYPE[nodeName]+" / "+currList.type);
continue
}}
if(throttle&&this.numEntries>this._maxEntries){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: throttling");
result.hasMore=true;
break
}
var item=appCtxt.getById(create.id);
if(!item){
AjxDebug.println(AjxDebug.NOTIFY,"ZmMailApp: create "+type+" object "+create.id);
var itemClass=eval(ZmList.ITEM_CLASS[type]);
item=itemClass.createFromDom(create,{}
)
}else{
if(item.type==ZmItem.MSG){
var conv=appCtxt.getById(item.cid);
if(conv){
conv.folders[item.folderId]=true
}}}
items[item.id]=item;
result.gotMail=true
}
return result
};
ZmMailApp.prototype.modifyNotify=function(t,e){
if(!t.m&&!t.c){
return
}
if(!e&&!this._noDefer&&this._deferNotifications("modify",t)){
return
}
this._batchNotify(t.m);
this._batchNotify(t.c)
};
ZmMailApp.prototype.postNotify=function(e){
var t=this._checkReplenishListView;
if(t&&!t._isPageless){
t._checkReplenish();
this._checkReplenishListView=null
}};
ZmMailApp.prototype.refresh=function(r){
var s=appCtxt.getById(ZmFolder.ID_INBOX);
if(s){
this.setNewMailNotice(s)
}
if(!appCtxt.inStartup){
this.resetOverview(this.getOverviewId());
var n=[ZmId.VIEW_TRAD,ZmId.VIEW_CONVLIST,ZmId.VIEW_CONV];
var e=appCtxt.getAppViewMgr();
for(var a=0;
a<n.length;
a++){
var l=e.getViewsByType(n[a]);
for(var t=0;
t<l.length;
t++){
var h=e.getViewComponent(ZmAppViewMgr.C_APP_CONTENT,l[t].id);
if(h&&h.isZmDoublePaneView){
h.isStale=true
}}}
var o=appCtxt.getCurrentViewId();
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._checkRefresh,[o]),1000)
}};
ZmMailApp.prototype._checkRefresh=function(t){
if(appCtxt.getCurrentViewId()==t){
var e=appCtxt.getCurrentView();
if(e&&e.isStale&&e._staleHandler){
e._staleHandler()
}}};
ZmMailApp.prototype.handleOp=function(o,i){
var t=false;
var a=true;
if((o==ZmOperation.NEW_MESSAGE_WIN)||(o==ZmOperation.NEW_MESSAGE)){
if(!appCtxt.isWebClientOffline()){
t=(o==ZmOperation.NEW_MESSAGE_WIN)?true:this._inNewWindow(i&&i.ev);
a=false
}
var e=new AjxCallback(this,this.compose,{
action:ZmOperation.NEW_MESSAGE,inNewWindow:t}
);
AjxDispatcher.require(["ContactsCore","Contacts"],false,e,null,a)
}};
ZmMailApp.prototype.getOverviewPanelContent=function(){
var t=!this._overviewPanelContent;
var e=ZmApp.prototype.getOverviewPanelContent.apply(this,arguments);
if(t){
appCtxt.getSearchController().updateOverview()
}
return e
};
ZmMailApp.prototype.getOverviewContainer=function(){
var t=!this._overviewContainer;
var e=ZmApp.prototype.getOverviewContainer.apply(this,arguments);
if(t&&!appCtxt.get(ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES)){
appCtxt.getSearchController().updateOverview()
}
return e
};
ZmMailApp.prototype.getNewButtonProps=function(){
return{
text:ZmMsg.newMessage,tooltip:ZmMsg.compose,icon:"NewMessage",iconDis:"NewMessageDis",defaultId:ZmOperation.NEW_MESSAGE,disabled:!this.containsWritableFolder()}
};
ZmMailApp.prototype.launch=function(t,a){
this._setLaunchTime(this.toString(),new Date());
if(appCtxt.isExternalAccount()){
var e=this._handleLoadLaunch.bind(this,t,a);
AjxDispatcher.require(["MailCore","Mail","Startup2"],true,e,null,true)
}else{
this._handleLoadLaunch(t,a)
}};
ZmMailApp.prototype._handleLoadLaunch=function(n,r){
this._groupBy=appCtxt.get(ZmSetting.GROUP_MAIL_BY);
var i;
n=n||{};
if(n.qsParams){
var e=n.qsParams.view,s=n.qsParams.id;
if(e=="compose"){
this._showComposeView(r);
return
}else{
if(s){
e=e||"msg";
if(e=="list"){
i=["item:",s].join("");
n.searchResponse=null;
this._forceMsgView=true
}else{
if(e=="msg"){
var a=new ZmMailList(ZmItem.MSG);
var o=new ZmMailMsg(s,a,true);
a.add(o);
var t={
getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML),markRead:(appCtxt.get(ZmSetting.MARK_MSG_READ)==ZmSetting.MARK_READ_NOW),callback:new AjxCallback(this,this._handleResponseMsgLoad,[o,r]),errorCallback:new AjxCallback(this,this._handleErrorMsgLoad,r)};
o.load(t);
return
}}}}}
this.mailSearch(i,r,n.searchResponse)
};
ZmMailApp.prototype._handleErrorLaunch=function(t,e){
if(e.code==ZmCsfeException.MAIL_NO_SUCH_FOLDER||e.code==ZmCsfeException.MAIL_NO_SUCH_TAG||e.code==ZmCsfeException.MAIL_QUERY_PARSE_ERROR){
var a={
query:"in:inbox",callback:t.callback,errorCallback:null,types:t.types};
appCtxt.getSearchController().search(a)
}};
ZmMailApp.prototype._handleErrorMsgLoad=function(t,e){
this.mailSearch();
if(t){
t.run()
}
this._notifyRendered();
return false
};
ZmMailApp.prototype._handleResponseMsgLoad=function(t,a){
AjxDispatcher.require("Startup2");
var e=AjxDispatcher.run("GetMsgController");
if(e){
e.show(t,null,null,null,true);
if(a){
a.run()
}
this._notifyRendered();
appCtxt.notifyZimlets("onMsgView",[t,null,appCtxt.getCurrentView()],{
waitUntilLoaded:true}
)
}};
ZmMailApp.prototype.mailSearch=function(s,l,a,r){
var o=appCtxt.isOffline&&appCtxt.inStartup&&appCtxt.accountList.defaultAccount;
if(o){
appCtxt.accountList.setActiveAccount(o)
}
var n=appCtxt.getSearchController();
var c,e;
if(appCtxt.get(ZmSetting.OFFLINE_SHOW_ALL_MAILBOXES)&&appCtxt.accountList.size()>2){
s=null;
c=appCtxt.accountList.generateQuery(ZmOrganizer.ID_INBOX);
e=true;
n.searchAllAccounts=true
}else{
if(appCtxt.isExternalAccount()){
s="inid:"+this.getDefaultFolderId()
}else{
if(appCtxt.isWebClientOffline()){
s=s||"in:inbox"
}else{
s=s||appCtxt.get(ZmSetting.INITIAL_SEARCH,null,o)
}}}
var i=new AjxVector();
i.add(r||this.getGroupMailBy());
var h=AjxUtil.get(a,"Body","SearchResponse","sortBy")||ZmSearch.DATE_DESC;
var t={
searchFor:ZmId.SEARCH_MAIL,query:s,queryHint:c,types:i,limit:this.getLimit(),getHtml:appCtxt.get(ZmSetting.VIEW_AS_HTML,null,o),noUpdateOverview:e,offlineCache:true,accountName:(o&&o.name),callback:l,response:a,sortBy:h};
t.errorCallback=new AjxCallback(this,this._handleErrorLaunch,t);
n.search(t)
};
ZmMailApp.prototype.showSearchResults=function(t,i,a){
var e=this._handleLoadShowSearchResults.bind(this,t,i,a);
AjxDispatcher.require("MailCore",false,e,null,true)
};
ZmMailApp.prototype._handleLoadShowSearchResults=function(t,o,a){
var i=a?a.getCurrentViewId():ZmApp.MAIN_SESSION;
var e=((t.type==ZmItem.MSG)||!appCtxt.get(ZmSetting.CONVERSATIONS_ENABLED))?this.getTradController(i,a):this.getConvListController(i,a);
e.show(t);
this._setLoadedTime(this.toString(),new Date());
if(this._forceMsgView){
e.selectFirstItem();
this._forceMsgView=false
}
if(o){
o.run(e)
}
this._notifyRendered();
appCtxt.getAppViewMgr().updateTitle()
};
ZmMailApp.prototype._parseComposeUrl=function(t){
t=t||"";
t.replace(/^mailto:/i,"");
var i=t.match(/\bto=([^&]+)/i);
var s=i?AjxStringUtil.urlComponentDecode(i[1].replace(/\+/g," ")):null;
s=s&&AjxEmailAddress.isValid(s)?AjxStringUtil.urlComponentDecode(s):AjxStringUtil.htmlEncode(s);
i=t.match(/\bsubject=([^&]+)/i);
var o=i?(AjxStringUtil.urlComponentDecode(i[1]).replace(/\+/g," ")):null;
i=t.match(/\bcc=([^&]+)/i);
var n=i?AjxStringUtil.urlComponentDecode(i[1].replace(/\+/g," ")):null;
n=n&&AjxEmailAddress.isValid(n)?n:AjxStringUtil.htmlEncode(n);
i=t.match(/\bbcc=([^&]+)/i);
var a=i?AjxStringUtil.urlComponentDecode(i[1].replace(/\+/g," ")):null;
a=a&&AjxEmailAddress.isValid(a)?a:AjxStringUtil.htmlEncode(a);
i=t.match(/\bbody=([^&]+)/i);
var e=i?(AjxStringUtil.urlComponentDecode(i[1]).replace(/\+/g," ")):null;
return{
to:s,subject:AjxStringUtil.htmlEncode(o),cc:n,bcc:a,body:AjxStringUtil.htmlEncode(e)}
};
ZmMailApp.prototype._showComposeView=function(s,a){
var i=a||location.search;
AjxDispatcher.require("Startup2");
var h=AjxDispatcher.run("GetComposeController");
var e=this._parseComposeUrl(i);
var n=e.to;
if(n&&n.indexOf("mailto")==0){
n=n.replace(/mailto:/,"");
var o=n.split("?");
e.to=o[0];
if(o.length>1){
o=o[1];
var r=this._parseComposeUrl(o);
e.to=e.to?(r.to?[e.to,","+r.to].join(""):e.to):r.to;
e.subject=r.subject||e.subject;
e.cc=r.cc||e.cc;
e.bcc=r.bcc||e.bcc;
e.body=r.body||e.body
}}
var t={
action:ZmOperation.NEW_MESSAGE,toOverride:e.to,ccOverride:e.cc,bccOverride:e.bcc,subjOverride:e.subject,extraBodyText:e.body,extraBodyTextIsExternal:Boolean(e.body),callback:s};
if(appCtxt.isOffline&&appCtxt.get(ZmSetting.OFFLINE_SUPPORTS_MAILTO)&&appCtxt.getCurrentViewId()==ZmId.VIEW_COMPOSE){
h.resetComposeForMailto(t)
}else{
h.doAction(t)
}
this._notifyRendered();
return h
};
ZmMailApp.prototype.getConvListController=function(t,e){
return this.getSessionController({
controllerClass:"ZmConvListController",sessionId:t||ZmApp.MAIN_SESSION,searchResultsController:e}
)
};
ZmMailApp.prototype.getConvController=function(e){
return this.getSessionController({
controllerClass:"ZmConvController",sessionId:e}
)
};
ZmMailApp.prototype.getTradController=function(t,e){
return this.getSessionController({
controllerClass:"ZmTradController",sessionId:t||ZmApp.MAIN_SESSION,searchResultsController:e}
)
};
ZmMailApp.prototype.getMsgController=function(a){
var t=this._sessionController[ZmId.VIEW_MSG];
var e;
for(var i in t){
if(!t[i].isHidden&&t[i].getMsg()&&t[i].getMsg().nId==a){
e=t[i];
break
}}
if(e){
a=e.getSessionId();
this._curSessionId[ZmId.VIEW_MSG]=a;
e.inactive=false;
return e
}
return this.getSessionController({
controllerClass:"ZmMsgController",sessionId:a}
)
};
ZmMailApp.prototype.getComposeController=function(e){
return this.getSessionController({
controllerClass:"ZmComposeController",sessionId:e}
)
};
ZmMailApp.prototype.getConfirmController=function(e){
return this.getSessionController({
controllerClass:"ZmMailConfirmController",sessionId:e}
)
};
ZmMailApp.prototype.getMailListController=function(){
var e=appCtxt.get(ZmSetting.GROUP_MAIL_BY);
return(e==ZmSetting.GROUP_BY_CONV)?AjxDispatcher.run("GetConvListController"):AjxDispatcher.run("GetTradController")
};
ZmMailApp.prototype.runRefresh=function(){
this.getMailListController().runRefresh()
};
ZmMailApp.prototype.compose=function(i){
Dwt.setLoadingTime("ZmMailApp-compose");
i=i||{};
if(!i.sessionId){
var a=this._sessionController[ZmId.VIEW_COMPOSE];
var e;
var t=i.msg&&i.msg.nId;
for(var o in a){
if(a[o].getMsg()&&a[o].getMsg().nId==t){
e=a[o];
break
}}}
if(!e){
e=AjxDispatcher.run("GetComposeController",i.sessionId)
}
appCtxt.composeCtlrSessionId=e.getSessionId();
e.doAction(i);
Dwt.setLoadedTime("ZmMailApp-compose")
};
ZmMailApp.prototype.setNewMailNotice=function(e){
var a=appCtxt.getAppChooser();
if(a){
var i=a.getButton(ZmApp.MAIL);
var t=(e.numUnread>0)?"EnvelopeOpen":"MailApp";
i.setImage(t)
}
if(e.id==ZmOrganizer.ID_INBOX){
this._setFavIcon(e.numUnread)
}
this._setNewMailBadge()
};
ZmMailApp.prototype._setNewMailBadge=function(){
if(appCtxt.isOffline&&appCtxt.get(ZmSetting.OFFLINE_SUPPORTS_DOCK_UPDATE)){
if(AjxEnv.isMac&&window.platform){
window.platform.icon().badgeText=(this.globalMailCount>0)?this.globalMailCount:null
}else{
if(AjxEnv.isWindows){
window.platform.icon().imageSpec=(this.globalMailCount>0)?"resource://webapp/icons/default/newmail.png":"resource://webapp/icons/default/launcher.ico";
window.platform.icon().title=(this.globalMailCount>0)?AjxMessageFormat.format(ZmMsg.unreadCount,this.globalMailCount):null
}}}};
ZmMailApp.prototype.clearNewMailBadge=function(){
this.globalMailCount=0;
this._setNewMailBadge()
};
ZmMailApp.prototype._setFavIcon=function(e){
var t;
if(e==0){
t=[appContextPath,"/img/logo/favicon.ico"].join("")
}else{
if(e>9){
t=[appContextPath,"/img/logo/favicon_plus.ico"].join("")
}else{
t=[appContextPath,"/img/logo/favicon_",e,".ico"].join("")
}}
Dwt.setFavIcon(t)
};
ZmMailApp.prototype.getGroupMailBy=function(){
var e=this._groupBy||appCtxt.get(ZmSetting.GROUP_MAIL_BY);
return e?ZmMailApp.GROUP_MAIL_BY_ITEM[e]:ZmItem.MSG
};
ZmMailApp.prototype.setGroupMailBy=function(e,t){
this._groupBy=e;
appCtxt.set(ZmSetting.GROUP_MAIL_BY,e,null,false,t)
};
ZmMailApp.prototype.getLimit=function(t){
var e=appCtxt.get(ZmSetting.PAGE_SIZE);
return t?e:2*e
};
ZmMailApp.addReplyMenu=function(e){
var t=[ZmOperation.REPLY,ZmOperation.REPLY_ALL];
var a=new ZmActionMenu({
parent:e,menuItems:t}
);
e.setMenu(a);
return a
};
ZmMailApp.addForwardMenu=function(e){
var t=[ZmOperation.FORWARD_INLINE,ZmOperation.FORWARD_ATT];
var a=new ZmActionMenu({
parent:e,menuItems:t}
);
e.setMenu(a);
return a
};
ZmMailApp.prototype.getDataSourceCollection=function(t){
var a=window.parentAppCtxt||window.appCtxt;
var e=t?t.name:a.getActiveAccount().name;
if(!this._dataSourceCollection[e]){
this._dataSourceCollection[e]=new ZmDataSourceCollection();
if(a.getActiveAccount().isMain){
this._dataSourceCollection[e].initialize(a.getSettings().getInfoResponse.dataSources)
}}
return this._dataSourceCollection[e]
};
ZmMailApp.prototype.getIdentityCollection=function(i){
if(appCtxt.isChildWindow){
if(!this._identityCollection){
this._identityCollection=new ZmIdentityCollection()
}
return this._identityCollection
}
var t=i?i.name:appCtxt.getActiveAccount().name;
if(!this._identityCollection[t]){
var e=this._identityCollection[t]=new ZmIdentityCollection();
var a=appCtxt.getSettings(i);
if(a){
e.initialize(a.getInfoResponse.identities)
}}
return this._identityCollection[t]
};
ZmMailApp.prototype.getSignatureCollection=function(a){
var i=window.parentAppCtxt||window.appCtxt;
a=a||i.getActiveAccount();
var e=a.name;
var t=i.getSettings(a);
if(!this._signatureCollection[e]&&t){
var o=this._signatureCollection[e]=new ZmSignatureCollection();
o.initialize(t.getInfoResponse.signatures)
}
return this._signatureCollection[e]
};
ZmMailApp.prototype._addSettingsChangeListeners=function(){
ZmApp.prototype._addSettingsChangeListeners.call(this);
if(!this._settingsListener){
this._settingsListener=new AjxListener(this,this._settingsChangeListener)
}
var e=appCtxt.getSettings();
e.getSetting(ZmSetting.VIEW_AS_HTML).addChangeListener(this._settingListener);
e.getSetting(ZmSetting.TRUSTED_ADDR_LIST).addChangeListener(this._settingListener);
e.addChangeListener(this._settingsListener)
};
ZmMailApp.prototype._settingChangeListener=function(a){
ZmApp.prototype._settingChangeListener.call(this,a);
if(a.type!=ZmEvent.S_SETTING){
return
}
var t=a.source;
var o=this.getMailListController();
if(o&&(t.id==ZmSetting.VIEW_AS_HTML||t.id==ZmSetting.TRUSTED_ADDR_LIST)){
this.resetTrustedSendersList();
var e=o._doublePaneView;
var i=e?e.getMsg():null;
if(i){
e.reset();
e.setItem(i)
}}};
ZmMailApp.prototype._settingsChangeListener=function(n){
if(n.type!=ZmEvent.S_SETTINGS){
return
}
var s=n.getDetail("settings");
if(!(s&&s.length)){
return
}
var h=this.getMailListController();
if(!h){
return
}
var e=h.getCurrentViewType();
var r,o;
for(var t=0;
t<s.length;
t++){
var a=s[t];
if(a.id==ZmSetting.SHOW_FRAGMENTS){
if(e!=ZmId.VIEW_MSG){
r=o||e
}}}
r=o||r;
if(r){
h.switchView(r,true)
}};
ZmMailApp.prototype.getTrustedSendersList=function(){
if(!this._trustedList){
var e=appCtxt.get(ZmSetting.TRUSTED_ADDR_LIST);
if(e){
this._trustedList=AjxVector.fromArray(e)
}else{
this._trustedList=new AjxVector()
}}
return this._trustedList
};
ZmMailApp.prototype.resetTrustedSendersList=function(){
this._trustedList=null
};
ZmMailApp._handleOOORemindResponse=function(a,t){
ZmMailApp._hideOOORemindDialog(a);
var e=document.getElementById(a._htmlElId+"_dontRemind");
if(t||e.checked){
ZmMailApp._saveRemindStatus(t,e.checked)
}};
ZmMailApp._hideOOORemindDialog=function(e){
if(e){
e.popdown()
}};
ZmMailApp._saveRemindStatus=function(e,t){
var a=AjxSoapDoc.create("ModifyPrefsRequest","urn:zimbraAccount");
if(e){
var i=a.set("pref","FALSE");
i.setAttribute("name","zimbraPrefOutOfOfficeReplyEnabled")
}else{
if(t){
var i=a.set("pref","FALSE");
i.setAttribute("name","zimbraPrefOutOfOfficeStatusAlertOnLogin")
}}
var o={
soapDoc:a,asyncMode:true};
if(e){
o.callback=ZmMailApp._oooReplyCallback
}
appCtxt.getAppController().sendRequest(o)
};
ZmMailApp._oooReplyCallback=function(){
appCtxt.set(ZmSetting.VACATION_MSG_ENABLED,false)
};
ZmMailApp.prototype._isOnVacation=function(){
if(!appCtxt.get(ZmSetting.VACATION_MSG_ENABLED)){
return false
}
var n=appCtxt.get(ZmSetting.VACATION_FROM);
var o=appCtxt.get(ZmSetting.VACATION_UNTIL);
if(!n){
return true
}
var t=new Date();
var i=new AjxDateFormat("yyyyMMddHHmmss'Z'");
var a=i.parse(AjxDateUtil.dateGMT2Local(n));
var e=i.parse(AjxDateUtil.dateGMT2Local(o));
return a<t&&t<e
};
ZmMailApp.prototype._checkVacationReplyEnabled=function(){
if(!appCtxt.get(ZmSetting.VACATION_MSG_REMIND_ON_LOGIN)){
return
}
if(!this._isOnVacation()){
return
}
var t=new DwtMessageDialog({
parent:appCtxt.getShell(),buttons:[DwtDialog.YES_BUTTON,DwtDialog.NO_BUTTON],id:"VacationDialog"}
);
var a=AjxTemplate.expand("mail.Message#VacationRemindDialog",{
id:t._htmlElId}
);
t.setTitle(ZmMsg.OOORemindDialogTitle);
t.setContent(a);
var e=document.getElementById(t._htmlElId+"_dontRemind");
e.checked=false;
t.registerCallback(DwtDialog.YES_BUTTON,ZmMailApp._handleOOORemindResponse,null,[t,true]);
t.registerCallback(DwtDialog.NO_BUTTON,ZmMailApp._handleOOORemindResponse,null,[t,false]);
t.popup()
};
ZmMailApp.prototype._createVirtualFolders=function(){
ZmOffline.addOutboxFolder()
};
ZmMailApp.prototype.resetWebClientOfflineOperations=function(){
ZmApp.prototype.resetWebClientOfflineOperations.apply(this);
var o=!appCtxt.isWebClientOffline();
this.refresh();
var t=appCtxt.getFolderTree().getByType(ZmOrganizer.FOLDER);
var s=this.getOverview();
if(t&&s){
for(var e=0;
e<t.length;
e++){
var a=t[e];
var n=a&&s.getTreeItemById(a.id);
if(!n){
continue
}
if(o){
n.setVisible(true)
}else{
if(a.id!=ZmFolder.ID_ROOT&&a.rid!=ZmFolder.ID_ROOT&&a.id!=ZmFolder.ID_OUTBOX&&a.webOfflineSyncDays===0){
n.setVisible(false)
}}}}};
ZmMailApp.prototype.enableMailPrefs=function(){
AjxDispatcher.require("PreferencesCore");
this._registerSettings();
this._registerOperations();
this._registerPrefs()
};
ZmMailApp.FOLDERS_TO_OMIT=[ZmFolder.ID_TRASH,ZmFolder.ID_SPAM];
ZmMailApp.getFoldersToOmit=function(a){
var t=ZmMailApp.FOLDERS_TO_OMIT,o=[],a=a||appCtxt.getCurrentSearch(),n=a&&a.folderId;
var s=a&&a.userInitiated;
for(var e=0;
e<t.length;
e++){
if(!s&&t[e]!=n){
o.push(t[e])
}}
return AjxUtil.arrayAsHash(o)
}
}
if(AjxPackage.define("zimbraMail.calendar.ZmCalendarApp")){
ZmCalendarApp=function(t,e){
ZmApp.call(this,ZmApp.CALENDAR,t,e);
this._addSettingsChangeListeners();
this._resByName={};
this._resByEmail={}
};
ZmCalendarApp.prototype=new ZmApp;
ZmCalendarApp.prototype.constructor=ZmCalendarApp;
ZmCalendarApp.prototype.isZmCalendarApp=true;
ZmCalendarApp.prototype.toString=function(){
return"ZmCalendarApp"
};
ZmEvent.S_APPT=ZmId.ITEM_APPOINTMENT;
ZmEvent.S_RESOURCE=ZmId.ITEM_RESOURCE;
ZmItem.APPT=ZmEvent.S_APPT;
ZmItem.RESOURCE=ZmEvent.S_RESOURCE;
ZmOrganizer.CALENDAR=ZmId.ORG_CALENDAR;
ZmApp.CALENDAR=ZmId.APP_CALENDAR;
ZmApp.CLASS[ZmApp.CALENDAR]="ZmCalendarApp";
ZmApp.SETTING[ZmApp.CALENDAR]=ZmSetting.CALENDAR_ENABLED;
ZmApp.UPSELL_SETTING[ZmApp.CALENDAR]=ZmSetting.CALENDAR_UPSELL_ENABLED;
ZmApp.LOAD_SORT[ZmApp.CALENDAR]=40;
ZmApp.QS_ARG[ZmApp.CALENDAR]="calendar";
ZmCalendarApp.REMINDER_START_DELAY=10000;
ZmCalendarApp.MINICAL_DELAY=5000;
ZmCalendarApp.VIEW_FOR_SETTING={};
ZmCalendarApp.VIEW_FOR_SETTING[ZmSetting.CAL_DAY]=ZmId.VIEW_CAL_DAY;
ZmCalendarApp.VIEW_FOR_SETTING[ZmSetting.CAL_WEEK]=ZmId.VIEW_CAL_WEEK;
ZmCalendarApp.VIEW_FOR_SETTING[ZmSetting.CAL_WORK_WEEK]=ZmId.VIEW_CAL_WORK_WEEK;
ZmCalendarApp.VIEW_FOR_SETTING[ZmSetting.CAL_MONTH]=ZmId.VIEW_CAL_MONTH;
ZmCalendarApp.VIEW_FOR_SETTING[ZmSetting.CAL_LIST]=ZmId.VIEW_CAL_LIST;
ZmCalendarApp.COLORS=[];
ZmCalendarApp.COLORS[ZmOrganizer.C_ORANGE]="Orange";
ZmCalendarApp.COLORS[ZmOrganizer.C_BLUE]="Blue";
ZmCalendarApp.COLORS[ZmOrganizer.C_CYAN]="Cyan";
ZmCalendarApp.COLORS[ZmOrganizer.C_GREEN]="Green";
ZmCalendarApp.COLORS[ZmOrganizer.C_PURPLE]="Purple";
ZmCalendarApp.COLORS[ZmOrganizer.C_RED]="Red";
ZmCalendarApp.COLORS[ZmOrganizer.C_YELLOW]="Yellow";
ZmCalendarApp.COLORS[ZmOrganizer.C_PINK]="Pink";
ZmCalendarApp.COLORS[ZmOrganizer.C_GRAY]="Gray";
ZmCalendarApp.CUTYPE_INDIVIDUAL="IND";
ZmCalendarApp.CUTYPE_GROUP="GRO";
ZmCalendarApp.CUTYPE_RESOURCE="RES";
ZmCalendarApp.CUTYPE_ROOM="ROO";
ZmCalendarApp.CUTYPE_UNKNOWN="UNK";
ZmCalendarApp.STATUS_CANC="CANC";
ZmCalendarApp.STATUS_COMP="COMP";
ZmCalendarApp.STATUS_CONF="CONF";
ZmCalendarApp.STATUS_DEFR="DEFERRED";
ZmCalendarApp.STATUS_INPR="INPR";
ZmCalendarApp.STATUS_NEED="NEED";
ZmCalendarApp.STATUS_TENT="TENT";
ZmCalendarApp.STATUS_WAIT="WAITING";
ZmCalendarApp.METHOD_CANCEL="CANCEL";
ZmCalendarApp.METHOD_PUBLISH="PUBLISH";
ZmCalendarApp.METHOD_REPLY="REPLY";
ZmCalendarApp.METHOD_REQUEST="REQUEST";
ZmCalendarApp.METHOD_COUNTER="COUNTER";
ZmCalendarApp.DEFAULT_WORKING_HOURS="1:N:0800:1700,2:Y:0800:1700,3:Y:0800:1700,4:Y:0800:1700,5:Y:0800:1700,6:Y:0800:1700,7:N:0800:1700";
ZmCalendarApp.DEFAULT_APPT_DURATION="60";
ZmCalendarApp.reminderTimeWarningDisplayMsgs=[ZmMsg.apptRemindNever,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNMinutesBefore,ZmMsg.apptRemindNHoursBefore,ZmMsg.apptRemindNHoursBefore,ZmMsg.apptRemindNHoursBefore,ZmMsg.apptRemindNHoursBefore,ZmMsg.apptRemindNHoursBefore,ZmMsg.apptRemindNDaysBefore,ZmMsg.apptRemindNDaysBefore,ZmMsg.apptRemindNDaysBefore,ZmMsg.apptRemindNDaysBefore,ZmMsg.apptRemindNWeeksBefore,ZmMsg.apptRemindNWeeksBefore];
ZmCalendarApp.reminderTimeWarningValues=[0,1,5,10,15,30,45,60,120,180,240,300,1080,1440,2880,4320,5760,10080,20160];
ZmCalendarApp.reminderTimeWarningLabels=[0,1,5,10,15,30,45,60,2,3,4,5,18,1,2,3,4,1,2];
ZmCalendarApp.prototype._defineAPI=function(){
AjxDispatcher.setPackageLoadFunction("CalendarCore",new AjxCallback(this,this._postLoadCore));
AjxDispatcher.setPackageLoadFunction("Calendar",new AjxCallback(this,this._postLoad,ZmOrganizer.CALENDAR));
AjxDispatcher.registerMethod("GetCalController",["MailCore","CalendarCore"],new AjxCallback(this,this.getCalController));
AjxDispatcher.registerMethod("GetReminderController",["MailCore","CalendarCore"],new AjxCallback(this,this.getReminderController));
AjxDispatcher.registerMethod("ShowMiniCalendar",["MailCore","CalendarCore"],new AjxCallback(this,this.showMiniCalendar));
AjxDispatcher.registerMethod("GetApptComposeController",["MailCore","CalendarCore","Calendar","CalendarAppt"],new AjxCallback(this,this.getApptComposeController))
};
ZmCalendarApp.prototype._registerSettings=function(e){
var e=e||appCtxt.getSettings();
e.registerSetting("CAL_ALWAYS_SHOW_MINI_CAL",{
name:"zimbraPrefCalendarAlwaysShowMiniCal",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CAL_APPT_VISIBILITY",{
name:"zimbraPrefCalendarApptVisibility",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:"public",isGlobal:true}
);
e.registerSetting("CAL_EMAIL_REMINDERS_ADDRESS",{
name:"zimbraPrefCalendarReminderEmail",type:ZmSetting.T_PREF}
);
e.registerSetting("CAL_DEVICE_EMAIL_REMINDERS_ADDRESS",{
name:"zimbraCalendarReminderDeviceEmail",type:ZmSetting.T_PREF}
);
e.registerSetting("CAL_DEVICE_EMAIL_REMINDERS_ENABLED",{
name:"zimbraFeatureCalendarReminderDeviceEmailEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("CAL_EXPORT",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_NONE}
);
e.registerSetting("CAL_FIRST_DAY_OF_WEEK",{
name:"zimbraPrefCalendarFirstDayOfWeek",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:0,isGlobal:true}
);
e.registerSetting("CAL_FREE_BUSY_ACL",{
type:ZmSetting.T_PREF,defaultValue:ZmSetting.ACL_ALL}
);
e.registerSetting("CAL_FREE_BUSY_ACL_USERS",{
type:ZmSetting.T_PREF}
);
e.registerSetting("CAL_IMPORT",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_NONE}
);
e.registerSetting("CAL_INVITE_ACL",{
type:ZmSetting.T_PREF,defaultValue:ZmSetting.ACL_ALL}
);
e.registerSetting("CAL_INVITE_ACL_USERS",{
type:ZmSetting.T_PREF}
);
e.registerSetting("CAL_REMINDER_NOTIFY_SOUNDS",{
name:"zimbraPrefCalendarReminderSoundsEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CAL_REMINDER_NOTIFY_BROWSER",{
name:"zimbraPrefCalendarReminderFlashTitle",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CAL_REMINDER_NOTIFY_TOASTER",{
name:"zimbraPrefCalendarToasterEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CAL_REMINDER_WARNING_TIME",{
name:"zimbraPrefCalendarApptReminderWarningTime",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:0,isGlobal:true}
);
e.registerSetting("CAL_SHOW_DECLINED_MEETINGS",{
name:"zimbraPrefCalendarShowDeclinedMeetings",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("CAL_SHOW_TIMEZONE",{
name:"zimbraPrefUseTimeZoneListInCalendar",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CAL_USE_QUICK_ADD",{
name:"zimbraPrefCalendarUseQuickAdd",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CALENDAR_INITIAL_VIEW",{
name:"zimbraPrefCalendarInitialView",type:ZmSetting.T_PREF,defaultValue:ZmSetting.CAL_DAY,isGlobal:true}
);
e.registerSetting("CAL_WORKING_HOURS",{
name:"zimbraPrefCalendarWorkingHours",type:ZmSetting.T_PREF,defaultValue:ZmCalendarApp.DEFAULT_WORKING_HOURS,isGlobal:true}
);
e.registerSetting("FREE_BUSY_VIEW_ENABLED",{
name:"zimbraFeatureFreeBusyViewEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("DELETE_INVITE_ON_REPLY",{
name:"zimbraPrefDeleteInviteOnReply",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("ENABLE_APPL_ICAL_DELEGATION",{
name:"zimbraPrefAppleIcalDelegationEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CAL_AUTO_ADD_INVITES",{
name:"zimbraPrefCalendarAutoAddInvites",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("CAL_SEND_INV_DENIED_REPLY",{
name:"zimbraPrefCalendarSendInviteDeniedAutoReply",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("CAL_INV_FORWARDING_ADDRESS",{
name:"zimbraPrefCalendarForwardInvitesTo",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST,isGlobal:true}
);
e.registerSetting("CAL_SHOW_PAST_DUE_REMINDERS",{
name:"zimbraPrefCalendarShowPastDueReminders",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CAL_SHOW_CALENDAR_WEEK",{
name:"zimbraPrefShowCalendarWeek",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CAL_APPT_ALLOW_ATTENDEE_EDIT",{
name:"zimbraPrefCalendarApptAllowAtendeeEdit",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CAL_RESOURCE_DBL_BOOKING_ALLOWED",{
name:"zimbraCalendarResourceDoubleBookingAllowed",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CAL_SHOW_RESOURCE_TABS",{
name:"zimbraCalendarShowResourceTabs",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true,isGlobal:true}
);
e.registerSetting("CAL_DEFAULT_APPT_DURATION",{
name:"zimbraPrefCalendarDefaultApptDuration",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LDAP_TIME,defaultValue:ZmCalendarApp.DEFAULT_APPT_DURATION,isGlobal:true}
);
e.registerSetting("CAL_EXCEPTION_ON_SERIES_TIME_CHANGE",{
name:"zimbraCalendarKeepExceptionsOnSeriesTimeChange",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("CAL_LOCATION_FIELDS_DISABLED",{
name:"zimbraCalendarLocationDisabledFields",type:ZmSetting.T_COS,dataType:ZmSetting.D_STRING,defaultValue:false,isGlobal:true}
)
};
ZmCalendarApp.prototype._registerPrefs=function(){
var a={
CALENDAR:{
title:ZmMsg.calendar,icon:"CalendarApp",templateId:"prefs.Pages#Calendar",priority:80,precondition:ZmSetting.CALENDAR_ENABLED,prefs:[ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL,ZmSetting.CAL_AUTO_ADD_INVITES,ZmSetting.CAL_SEND_INV_DENIED_REPLY,ZmSetting.CAL_APPT_VISIBILITY,ZmSetting.CAL_EXPORT,ZmSetting.CAL_FIRST_DAY_OF_WEEK,ZmSetting.CAL_IMPORT,ZmSetting.CAL_REMINDER_WARNING_TIME,ZmSetting.CAL_REMINDER_NOTIFY_SOUNDS,ZmSetting.CAL_REMINDER_NOTIFY_BROWSER,ZmSetting.CAL_SHOW_DECLINED_MEETINGS,ZmSetting.CAL_SHOW_TIMEZONE,ZmSetting.CAL_USE_QUICK_ADD,ZmSetting.CALENDAR_INITIAL_VIEW,ZmSetting.CAL_WORKING_HOURS,ZmSetting.DELETE_INVITE_ON_REPLY,ZmSetting.ENABLE_APPL_ICAL_DELEGATION,ZmSetting.CAL_FREE_BUSY_ACL,ZmSetting.CAL_FREE_BUSY_ACL_USERS,ZmSetting.CAL_INVITE_ACL,ZmSetting.CAL_INVITE_ACL_USERS,ZmSetting.CAL_REMINDER_NOTIFY_TOASTER,ZmSetting.CAL_INV_FORWARDING_ADDRESS,ZmSetting.CAL_SHOW_PAST_DUE_REMINDERS,ZmSetting.CAL_SHOW_CALENDAR_WEEK,ZmSetting.CAL_DEFAULT_APPT_DURATION,ZmSetting.CAL_LOCATION_FIELDS_DISABLED],manageDirty:true,createView:function(o,n,i){
AjxDispatcher.require("Alert");
return new ZmCalendarPrefsPage(o,n,i)
}}};
for(var t in a){
ZmPref.registerPrefSection(t,a[t])
}
ZmPref.registerPref("CAL_ALWAYS_SHOW_MINI_CAL",{
displayName:ZmMsg.alwaysShowMiniCal,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_WORKING_HOURS",{
displayContainer:ZmPref.TYPE_CUSTOM}
);
ZmPref.registerPref("CAL_AUTO_ADD_INVITES",{
displayName:ZmMsg.autoAddInvites,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_SEND_INV_DENIED_REPLY",{
displayName:ZmMsg.sendInvDeniedAutoReply,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_EMAIL_REMINDERS_ADDRESS",{
displayName:ZmMsg.emailNotificationsDescription,displayContainer:ZmPref.TYPE_INPUT,errorMessage:ZmMsg.invalidEmail,hint:ZmMsg.enterEmailAddress}
);
ZmPref.registerPref("CAL_DEVICE_EMAIL_REMINDERS_ADDRESS",{
displayName:ZmMsg.deviceEmailNotificationsDescription,displayContainer:ZmPref.TYPE_INPUT,errorMessage:ZmMsg.invalidEmail,hint:ZmMsg.enterEmailAddress}
);
ZmPref.registerPref("CAL_EXPORT",{
displayName:ZmMsg.exportToICS,displayContainer:ZmPref.TYPE_EXPORT}
);
ZmPref.registerPref("CAL_FIRST_DAY_OF_WEEK",{
displayName:ZmMsg.calendarFirstDayOfWeek,displayContainer:ZmPref.TYPE_SELECT,displayOptions:AjxDateUtil.WEEKDAY_LONG,options:[0,1,2,3,4,5,6]}
);
ZmPref.registerPref("CAL_FREE_BUSY_ACL",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.freeBusyAllowAll,ZmMsg.freeBusyAllowLocal,ZmMsg.freeBusyAllowDomain,ZmMsg.freeBusyAllowNone,ZmMsg.freeBusyAllowSome],options:[ZmSetting.ACL_PUBLIC,ZmSetting.ACL_AUTH,ZmSetting.ACL_DOMAIN,ZmSetting.ACL_NONE,ZmSetting.ACL_USER]}
);
ZmPref.registerPref("CAL_FREE_BUSY_ACL_USERS",{
displayContainer:ZmPref.TYPE_TEXTAREA}
);
ZmPref.registerPref("CAL_IMPORT",{
displayName:ZmMsg.importFromICS,displayContainer:ZmPref.TYPE_IMPORT}
);
ZmPref.registerPref("CAL_INVITE_ACL",{
displayContainer:ZmPref.TYPE_RADIO_GROUP,displayOptions:[ZmMsg.invitesAllowAll,ZmMsg.invitesAllowLocal,ZmMsg.invitesAllowNone,ZmMsg.invitesAllowSome],options:[ZmSetting.ACL_PUBLIC,ZmSetting.ACL_AUTH,ZmSetting.ACL_NONE,ZmSetting.ACL_USER]}
);
ZmPref.registerPref("CAL_INVITE_ACL_USERS",{
displayContainer:ZmPref.TYPE_TEXTAREA}
);
ZmPref.registerPref("CAL_REMINDER_WARNING_TIME",{
displayName:ZmMsg.numberOfMinutes,displayContainer:ZmPref.TYPE_SELECT,displayOptions:ZmCalendarApp.getReminderTimeWarningDisplayOptions(),options:ZmCalendarApp.reminderTimeWarningValues}
);
ZmPref.registerPref("CAL_SHOW_DECLINED_MEETINGS",{
displayName:ZmMsg.showDeclinedMeetings,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_SHOW_TIMEZONE",{
displayName:ZmMsg.shouldShowTimezone,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_USE_QUICK_ADD",{
displayName:ZmMsg.useQuickAdd,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CALENDAR_INITIAL_VIEW",{
displayName:ZmMsg.calendarInitialView,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.calViewDay,ZmMsg.calViewWorkWeek,ZmMsg.calViewWeek,ZmMsg.calViewMonth,ZmMsg.calViewList],options:[ZmSetting.CAL_DAY,ZmSetting.CAL_WORK_WEEK,ZmSetting.CAL_WEEK,ZmSetting.CAL_MONTH,ZmSetting.CAL_LIST]}
);
ZmPref.registerPref("CAL_REMINDER_NOTIFY_SOUNDS",{
displayName:ZmMsg.playSound,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_REMINDER_NOTIFY_BROWSER",{
displayName:ZmMsg.flashBrowser,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("DELETE_INVITE_ON_REPLY",{
displayName:ZmMsg.deleteInviteOnReply,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("ENABLE_APPL_ICAL_DELEGATION",{
displayName:ZmMsg.enableAppleICalDelegation,displayContainer:ZmPref.TYPE_CHECKBOX}
);
AjxDispatcher.require("Alert");
var e=ZmDesktopAlert.getInstance().getDisplayText();
ZmPref.registerPref("CAL_REMINDER_NOTIFY_TOASTER",{
displayFunc:function(){
return e
}
,precondition:function(){
return !!e
}
,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_APPT_VISIBILITY",{
displayName:ZmMsg.calendarInitialApptVisibility,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg._public,ZmMsg._private],options:[ZmSetting.CAL_VISIBILITY_PUB,ZmSetting.CAL_VISIBILITY_PRIV]}
);
ZmPref.registerPref("CAL_INV_FORWARDING_ADDRESS",{
displayName:ZmMsg.inviteForwardingAddress,displayContainer:ZmPref.TYPE_INPUT,validationFunction:ZmPref.validateEmailList,valueFunction:ZmPref.string2EmailList,errorMessage:ZmMsg.invalidEmail,hint:ZmMsg.enterEmailAddress}
);
ZmPref.registerPref("CAL_SHOW_PAST_DUE_REMINDERS",{
displayName:ZmMsg.apptPastDueReminderLabel,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_SHOW_CALENDAR_WEEK",{
displayName:ZmMsg.showWeekNumber,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("CAL_DEFAULT_APPT_DURATION",{
displayName:ZmMsg.defaultApptDuration,displayContainer:ZmPref.TYPE_SELECT,displayOptions:["30","60","90","120"],options:["1800","3600","5400","7200"]}
)
};
ZmCalendarApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_CAL_LIST_VIEW,{
textKey:"list",tooltipKey:"viewCalListTooltip",image:"CalListView",shortcut:ZmKeyMap.CAL_LIST_VIEW}
);
ZmOperation.registerOp(ZmId.OP_CAL_REFRESH,{
textKey:"refresh",tooltipKey:"calRefreshTooltip",image:"Refresh",shortcut:ZmKeyMap.REFRESH,showImageInToolbar:true}
);
ZmOperation.registerOp(ZmId.OP_CAL_VIEW_MENU,{
textKey:"view",image:"Appointment"}
,null,AjxCallback.simpleClosure(function(e){
ZmOperation.addDeferredMenu(ZmCalendarApp.addCalViewMenu,e)
}
));
ZmOperation.registerOp(ZmId.OP_DAY_VIEW,{
textKey:"viewDay",tooltipKey:"viewDayTooltip",image:"DayView",shortcut:ZmKeyMap.CAL_DAY_VIEW}
);
ZmOperation.registerOp(ZmId.OP_EDIT_REPLY_ACCEPT,{
textKey:"replyAccept",image:"Check"}
);
ZmOperation.registerOp(ZmId.OP_EDIT_REPLY_CANCEL);
ZmOperation.registerOp(ZmId.OP_EDIT_REPLY_TENTATIVE,{
textKey:"replyTentative",image:"QuestionMark"}
);
ZmOperation.registerOp(ZmId.OP_EDIT_REPLY_DECLINE,{
textKey:"replyDecline",image:"Cancel"}
);
ZmOperation.registerOp(ZmId.OP_INVITE_REPLY_ACCEPT,{
textKey:"editReply",image:"Check"}
);
ZmOperation.registerOp(ZmId.OP_INVITE_REPLY_DECLINE,{
textKey:"editReply",image:"Cancel"}
);
ZmOperation.registerOp(ZmId.OP_INVITE_REPLY_MENU,{
textKey:"editReply",image:"Reply"}
,ZmSetting.MAIL_ENABLED,AjxCallback.simpleClosure(function(e){
ZmOperation.addDeferredMenu(ZmCalendarApp.addInviteReplyMenu,e)
}
));
ZmOperation.registerOp(ZmId.OP_INVITE_REPLY_TENTATIVE,{
textKey:"editReply",image:"QuestionMark"}
);
ZmOperation.registerOp(ZmId.OP_MONTH_VIEW,{
textKey:"viewMonth",tooltipKey:"viewMonthTooltip",image:"MonthView",shortcut:ZmKeyMap.CAL_MONTH_VIEW}
);
ZmOperation.registerOp(ZmId.OP_MOUNT_CALENDAR,{
textKey:"mountCalendar",image:"GroupSchedule"}
);
ZmOperation.registerOp(ZmId.OP_NEW_ALLDAY_APPT,{
textKey:"newAllDayAppt",tooltipKey:"newAllDayApptTooltip",image:"NewAppointment"}
);
ZmOperation.registerOp(ZmId.OP_NEW_APPT,{
textKey:"newAppt",tooltipKey:"newApptTooltip",image:"NewAppointment",shortcut:ZmKeyMap.NEW_APPT}
);
ZmOperation.registerOp(ZmId.OP_NEW_CALENDAR,{
textKey:"newCalendar",image:"NewAppointment",tooltipKey:"newCalendarTooltip",shortcut:ZmKeyMap.NEW_CALENDAR}
);
ZmOperation.registerOp(ZmId.OP_ADD_EXTERNAL_CALENDAR,{
textKey:"addExternalCalendar",image:"NewAppointment",tooltipKey:"addExternalCalendarTooltip",shortcut:ZmKeyMap.ADD_EXTERNAL_CALENDAR}
);
ZmOperation.registerOp(ZmId.OP_PRINT_CALENDAR,{
textKey:"print",tooltipKey:"printTooltip",image:"Print",shortcut:ZmKeyMap.PRINT,textPrecedence:30,showImageInToolbar:true}
,ZmSetting.PRINT_ENABLED);
ZmOperation.registerOp(ZmId.OP_PROPOSE_NEW_TIME,{
textKey:"proposeNewTime",image:"ProposeTime",showTextInToolbar:true,showImageInToolbar:true}
);
ZmOperation.registerOp(ZmId.OP_REINVITE_ATTENDEES,{
textKey:"reinviteAttendees",image:"MeetingRequest"}
);
ZmOperation.registerOp(ZmId.OP_FB_VIEW,{
textKey:"viewFB",tooltipKey:"viewFBTooltip",image:"GroupSchedule",shortcut:ZmKeyMap.CAL_FB_VIEW}
);
ZmOperation.registerOp(ZmId.OP_SEARCH_MAIL,{
textKey:"searchMail",image:"SearchMail"}
,ZmSetting.MAIL_ENABLED);
ZmOperation.registerOp(ZmId.OP_SHARE_CALENDAR,{
textKey:"shareCalendar",image:"CalendarFolder"}
);
ZmOperation.registerOp(ZmId.OP_TODAY,{
textKey:"today",tooltipKey:"todayTooltip",image:"Date",shortcut:ZmKeyMap.TODAY}
);
ZmOperation.registerOp(ZmId.OP_VIEW_APPOINTMENT,{
textKey:"viewAppointment",image:"Appointment"}
);
ZmOperation.registerOp(ZmId.OP_OPEN_APPT_INSTANCE,{
textKey:"openApptInstance",image:"Appointment"}
);
ZmOperation.registerOp(ZmId.OP_OPEN_APPT_SERIES,{
textKey:"openApptSeries",image:"Appointment"}
);
ZmOperation.registerOp(ZmId.OP_DELETE_APPT_INSTANCE,{
textKey:"deleteApptInstance",image:"Delete"}
);
ZmOperation.registerOp(ZmId.OP_DELETE_APPT_SERIES,{
textKey:"deleteApptSeries",image:"Delete"}
);
ZmOperation.registerOp(ZmId.OP_VIEW_APPT_INSTANCE,{
textKey:"apptInstance",image:"Appointment"}
);
ZmOperation.registerOp(ZmId.OP_VIEW_APPT_SERIES,{
textKey:"apptSeries",image:"Appointment"}
);
ZmOperation.registerOp(ZmId.OP_WEEK_VIEW,{
textKey:"viewWeek",tooltipKey:"viewWeekTooltip",image:"WeekView",shortcut:ZmKeyMap.CAL_WEEK_VIEW}
);
ZmOperation.registerOp(ZmId.OP_WORK_WEEK_VIEW,{
textKey:"viewWorkWeek",tooltipKey:"viewWorkWeekTooltip",image:"WorkWeekView",shortcut:ZmKeyMap.CAL_WORK_WEEK_VIEW}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_APPT,{
textKey:"forward",tooltipKey:"forward",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_APPT_INSTANCE,{
textKey:"forwardInstance",tooltipKey:"forwardInstance",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_APPT_SERIES,{
textKey:"forwardSeries",tooltipKey:"forwardSeries",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_DUPLICATE_APPT,{
textKey:"createCopy",tooltipKey:"createCopy",image:"Copy"}
);
ZmOperation.registerOp(ZmId.OP_INVITE_ATTENDEES,{
textKey:"inviteAttendees",tooltipKey:"inviteAttendees",image:"Group"}
);
ZmOperation.registerOp(ZmId.OP_SEND_INVITE,{
textKey:"send",tooltipKey:"sendInvites",image:"MeetingRequest"}
)
};
ZmCalendarApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.APPT,{
app:ZmApp.CALENDAR,nameKey:"appointment",icon:"Appointment",soapCmd:"ItemAction",itemClass:"ZmAppt",node:"appt",organizer:ZmOrganizer.CALENDAR,dropTargets:[ZmOrganizer.TAG,ZmOrganizer.CALENDAR],searchType:"appointment",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require(["MailCore","CalendarCore"]);
return new ZmApptList(ZmItem.APPT,e)
}
,this)}
);
ZmItem.registerItem(ZmItem.RESOURCE,{
app:ZmApp.CALENDAR,itemClass:"ZmResource",node:"calResource",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require(["MailCore","CalendarCore"]);
return new ZmResourceList(null,e)
}
,this)}
)
};
ZmCalendarApp.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.CALENDAR,{
app:ZmApp.CALENDAR,nameKey:"calendar",defaultFolder:ZmOrganizer.ID_CALENDAR,soapCmd:"FolderAction",firstUserId:256,orgClass:"ZmCalendar",orgPackage:"CalendarCore",treeController:"ZmCalendarTreeController",labelKey:"calendars",itemsKey:"appointments",hasColor:true,defaultColor:ZmOrganizer.C_BLUE,treeType:ZmOrganizer.FOLDER,views:["appointment"],folderKey:"calendar",mountKey:"mountCalendar",createFunc:"ZmCalendar.create",compareFunc:"ZmFolder.sortCompareNonMail",newOp:ZmOperation.NEW_CALENDAR,displayOrder:100,deferrable:true,childWindow:true}
)
};
ZmCalendarApp.prototype._setupSearchToolbar=function(){
var e={
msgKey:"appointments",tooltipKey:"searchAppts",icon:"Appointment",shareIcon:"SharedCalendarFolder",id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.ITEM_APPOINTMENT)};
if(!appCtxt.isOffline){
e.setting=ZmSetting.CALENDAR_ENABLED
}
ZmSearchToolBar.addMenuItem(ZmItem.APPT,e)
};
ZmCalendarApp.prototype._registerApp=function(){
var a={};
a[ZmOperation.NEW_APPT]="appointment";
var t={};
t[ZmOperation.NEW_CALENDAR]="calendar";
var e={};
e[ZmKeyMap.NEW_APPT]=ZmOperation.NEW_APPT;
e[ZmKeyMap.NEW_CALENDAR]=ZmOperation.NEW_CALENDAR;
e[ZmKeyMap.ADD_EXTERNAL_CALENDAR]=ZmOperation.ADD_EXTERNAL_CALENDAR;
ZmApp.registerApp(ZmApp.CALENDAR,{
mainPkg:"Calendar",nameKey:"calendar",icon:"CalendarApp",textPrecedence:60,chooserTooltipKey:"goToCalendar",viewTooltipKey:"displayCalendar",defaultSearch:ZmItem.APPT,organizer:ZmOrganizer.CALENDAR,overviewTrees:[ZmOrganizer.CALENDAR,ZmOrganizer.SEARCH,ZmOrganizer.TAG],newItemOps:a,newOrgOps:t,actionCodes:e,searchTypes:[ZmItem.APPT],gotoActionCode:ZmKeyMap.GOTO_CALENDAR,newActionCode:ZmKeyMap.NEW_APPT,chooserSort:30,defaultSort:20,upsellUrl:ZmSetting.CALENDAR_UPSELL_URL,searchResultsTab:true}
)
};
ZmCalendarApp.prototype._getRefreshButtonTooltip=function(){
return ZmMsg.showAllEventsFromSelectedCalendars
};
ZmCalendarApp.prototype.startup=function(e){};
ZmCalendarApp.prototype.refresh=function(e){
if(!appCtxt.inStartup){
this.resetOverview(this.getOverviewId());
AjxDispatcher.run("GetCalController").refreshHandler(e)
}};
ZmCalendarApp.prototype.runRefresh=function(){
appCtxt.getCalManager().getCalViewController().runRefresh()
};
ZmCalendarApp.prototype.deleteNotify=function(e,t){
if(!t&&this._deferNotifications("delete",e)){
return
}
AjxDispatcher.run("GetCalController").notifyDelete(e)
};
ZmCalendarApp.prototype.createNotify=function(n,r){
if(!n.folder&&!n.appt&&!n.link){
return
}
if(!r&&!this._noDefer&&this._deferNotifications("create",n)){
return
}
var e=AjxDispatcher.run("GetCalController");
for(var t in n){
var s=n[t];
for(var o=0;
o<s.length;
o++){
var a=s[o];
if(appCtxt.cacheGet(a.id)){
continue
}
if(t=="folder"){
this._handleCreateFolder(a,ZmOrganizer.CALENDAR)
}else{
if(t=="link"){
this._handleCreateLink(a,ZmOrganizer.CALENDAR)
}else{
if(t=="appt"){
e.notifyCreate(a)
}}}
if((t=="folder"||t=="link")&&e){
e._updateCheckedCalendars()
}}}};
ZmCalendarApp.prototype.modifyNotify=function(t,e){
if(!e&&!this._noDefer&&this._deferNotifications("modify",t)){
return
}
AjxDispatcher.run("GetCalController").notifyModify(t)
};
ZmCalendarApp.prototype.preNotify=function(t){
var e=AjxDispatcher.run("GetCalController");
if(e){
e.preNotify(t)
}};
ZmCalendarApp.prototype.postNotify=function(t){
var e=AjxDispatcher.run("GetCalController");
if(e){
e.postNotify(t)
}};
ZmCalendarApp.prototype.handleOp=function(t){
if(!appCtxt.isWebClientOffline()){
switch(t){
case ZmOperation.NEW_APPT:var e=new AjxCallback(this,this._handleLoadNewAppt);
AjxDispatcher.require(["MailCore","CalendarCore","Calendar"],false,e,null,true);
break;
case ZmOperation.NEW_CALENDAR:var e=new AjxCallback(this,this._handleLoadNewCalendar);
AjxDispatcher.require(["MailCore","CalendarCore","Calendar"],false,e,null,true);
break;
case ZmOperation.ADD_EXTERNAL_CALENDAR:var e=new AjxCallback(this,this._handleLoadExternalCalendar);
AjxDispatcher.require(["MailCore","CalendarCore","Calendar"],false,e,null,true);
break
}}};
ZmCalendarApp.prototype._handleLoadNewAppt=function(){
Dwt.setLoadingTime("ZmCalendarApp-newAppt");
AjxDispatcher.run("GetCalController").newAppointment(null,null,null,null);
Dwt.setLoadedTime("ZmCalendarApp-newAppt")
};
ZmCalendarApp.prototype._handleLoadNewCalendar=function(){
appCtxt.getAppViewMgr().popView(true,ZmId.VIEW_LOADING);
var e=appCtxt.getNewCalendarDialog();
if(!this._newCalendarCb){
this._newCalendarCb=new AjxCallback(this,this._newCalendarCallback)
}
ZmController.showDialog(e,this._newCalendarCb)
};
ZmCalendarApp.prototype._handleLoadExternalCalendar=function(){
appCtxt.getAppViewMgr().popView(true,ZmId.VIEW_LOADING);
var t=appCtxt.getOverviewController();
var e=t.getTreeController(ZmOrganizer.CALENDAR);
if(e){
e._addExternalCalendarListener()
}};
ZmCalendarApp.prototype.launch=function(t,a){
this._setLaunchTime(this.toString(),new Date());
var e=new AjxCallback(this,this._handleLoadLaunch,[t,a]);
AjxDispatcher.require(["MailCore","ContactsCore","CalendarCore","Calendar"],true,e,null,true)
};
ZmCalendarApp.prototype._handleLoadLaunch=function(n,r){
var s=AjxDispatcher.run("GetCalController");
var t=s.getDefaultViewType();
var o=null;
n=n||{};
if(n.qsParams){
var i=n.qsParams.view;
if(i){
var e=ZmCalendarApp.VIEW_FOR_SETTING[i];
if(e){
t=e;
var a=n.qsParams.date;
if(a){
a=AjxDateUtil.parseServerDateTime(a);
if(a&&!isNaN(a)){
o=new Date((a).setHours(0,0,0,0))
}}}}}
if(appCtxt.get(ZmSetting.CONTACTS_ENABLED)){
this.initResources()
}
s.show(t,o);
this._setLoadedTime(this.toString(),new Date());
if(r){
r.run()
}
this._setRefreshButtonTooltip()
};
ZmCalendarApp.prototype.getNewButtonProps=function(){
return{
text:ZmMsg.newAppt,tooltip:ZmMsg.createNewAppt,icon:"NewAppointment",iconDis:"NewAppointmentDis",defaultId:ZmOperation.NEW_APPT,disabled:!this.containsWritableFolder()}
};
ZmCalendarApp.prototype.showSearchResults=function(e,t){
if(t){
t.run(AjxDispatcher.run("GetCalController"))
}};
ZmCalendarApp.prototype.activate=function(i,e){
this._createDeferredFolders(ZmApp.CALENDAR);
ZmApp.prototype.activate.apply(this,arguments);
if(appCtxt.get(ZmSetting.CALENDAR_ENABLED)){
var a=appCtxt.getAppViewMgr();
var t=(i||appCtxt.get(ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL))&&!a.isHidden(ZmAppViewMgr.C_TREE_FOOTER,e);
AjxDispatcher.run("ShowMiniCalendar",t)
}};
ZmCalendarApp.prototype.resetWebClientOfflineOperations=function(){
ZmApp.prototype.resetWebClientOfflineOperations.apply(this);
var e=this.getCalController();
if(e){
e._resetToolbarOperations();
e._clearViewActionMenu()
}};
ZmCalendarApp.prototype.showMiniCalendar=function(e,t){
var a=AjxDispatcher.run("GetCalController").getMiniCalendar(t);
a.setSkipNotifyOnPage(e&&!this._active);
if(!this._active){
a.setSelectionMode(DwtCalendar.DAY)
}
appCtxt.getAppViewMgr().displayComponent(ZmAppViewMgr.C_TREE_FOOTER,e)
};
ZmCalendarApp.prototype.getListController=function(){
return AjxDispatcher.run("GetCalController")
};
ZmCalendarApp.prototype.getCalController=function(t,e){
AjxDispatcher.require(["Startup2","MailCore","CalendarCore"]);
return this.getSessionController({
controllerClass:"ZmCalViewController",sessionId:t||ZmApp.MAIN_SESSION,searchResultsController:e}
)
};
ZmCalendarApp.prototype.getFreeBusyCache=function(){
if(!this._freeBusyCache){
AjxDispatcher.require(["MailCore","CalendarCore"]);
this._freeBusyCache=new ZmFreeBusyCache(this)
}
return this._freeBusyCache
};
ZmCalendarApp.prototype.getReminderController=function(){
if(!this._reminderController){
AjxDispatcher.require(["MailCore","CalendarCore"]);
var e=appCtxt.getCalManager();
this._reminderController=e.getReminderController();
this._reminderController._calController=AjxDispatcher.run("GetCalController")
}
return this._reminderController
};
ZmCalendarApp.prototype.getApptComposeController=function(e){
AjxDispatcher.require(["MailCore","CalendarCore","Calendar","CalendarAppt"]);
return this.getSessionController({
controllerClass:"ZmApptComposeController",sessionId:e}
)
};
ZmCalendarApp.prototype.getSimpleApptComposeController=function(){
AjxDispatcher.require(["MailCore","CalendarCore","Calendar","CalendarAppt"]);
return this.getSessionController({
controllerClass:"ZmSimpleApptComposeController"}
)
};
ZmCalendarApp.prototype.getApptViewController=function(e){
AjxDispatcher.require(["MailCore","CalendarCore","Calendar","CalendarAppt"]);
return this.getSessionController({
controllerClass:"ZmApptController",sessionId:e}
)
};
ZmCalendarApp.prototype.initResources=function(){
if(!this._locations){
this._locations=new ZmResourceList(ZmCalBaseItem.LOCATION);
this._locations.isCanonical=true
}
if(!this._equipment){
this._equipment=new ZmResourceList(ZmCalBaseItem.EQUIPMENT);
this._equipment.isCanonical=true
}};
ZmCalendarApp.prototype.loadResources=function(){
this.initResources();
if(appCtxt.get(ZmSetting.GAL_ENABLED)){
var e=new ZmBatchCommand();
if(!this._locations.isLoaded){
e.add(new AjxCallback(this._locations,this._locations.load))
}
if(!this._equipment.isLoaded){
e.add(new AjxCallback(this._equipment,this._equipment.load))
}
if(e._cmds.length){
e.run()
}}};
ZmCalendarApp.prototype.getLocations=function(){
this.initResources();
return this._locations
};
ZmCalendarApp.prototype.getEquipment=function(){
this.initResources();
return this._equipment
};
ZmCalendarApp.prototype.getReminderCalendarFolderIds=function(){
var a=[];
if(AjxDispatcher.loaded("CalendarCore")){
a=AjxDispatcher.run("GetCalController").getReminderCalendarFolderIds()
}else{
this._folderNames={};
for(var e=0;
e<this._deferredFolders.length;
e++){
var t=this._deferredFolders[e];
a.push(t.obj.id);
this._folderNames[t.obj.id]=t.obj.name
}}
return a
};
ZmCalendarApp.prototype.getCheckedCalendarFolderIds=function(e,a){
var s=[];
if(AjxDispatcher.loaded("CalendarCore")){
s=AjxDispatcher.run("GetCalController").getCheckedCalendarFolderIds(e,a)
}else{
this._folderNames={};
for(var t=0;
t<this._deferredFolders.length;
t++){
var n=this._deferredFolders[t];
var o=(n&&n.obj&&n.obj.f)?n.obj.f:"";
if(o&&(o.indexOf(ZmOrganizer.FLAG_CHECKED)!=-1)){
if(e&&n.obj.zid!=null){
continue
}
if(n.obj.id==ZmOrganizer.ID_TRASH&&!a){
continue
}
s.push(n.obj.id);
this._folderNames[n.obj.id]=n.obj.name
}}}
return s
};
ZmCalendarApp.prototype.getCalendarName=function(e){
return appCtxt.getById(e)?appCtxt.getById(e).name:this._folderNames[e]
};
ZmCalendarApp.createMiniCalButton=function(l,n,o,t){
var r=new DwtButton({
parent:l}
);
r.addDropDownSelectionListener(o);
r.addSelectionListener(o);
r.setDropDownHovImage(null);
r.setData(Dwt.KEY_ID,n);
if(AjxEnv.isIE){
r.setSize("20")
}
var s=new DwtMenu({
parent:r,style:DwtMenu.CALENDAR_PICKER_STYLE}
);
s.setSize("150");
s._table.width="100%";
r.setMenu(s,true);
var e=new DwtCalendar({
parent:s}
);
e.setData(Dwt.KEY_ID,n);
e.setSkipNotifyOnPage(true);
var i=appCtxt.get(ZmSetting.CAL_FIRST_DAY_OF_WEEK)||0;
e.setFirstDayOfWeek(i);
e.addSelectionListener(t);
var h=appCtxt.getSettings().getSetting(ZmSetting.CAL_FIRST_DAY_OF_WEEK);
if(h){
var a=new AjxListener(null,ZmCalendarApp._settingChangeListener,e);
h.addChangeListener(a)
}
r.reparentHtmlElement(n);
delete n;
return r
};
ZmCalendarApp.createReminderButton=function(h,o,c,a){
var n=new DwtButton({
parent:h}
);
n.addDropDownSelectionListener(c);
n.setData(Dwt.KEY_ID,o);
if(AjxEnv.isIE){
n.setSize("20")
}
var r=new DwtMenu({
parent:n,style:DwtMenu.DROPDOWN_STYLE}
);
r.setSize("150");
n.setMenu(r,true);
var s=appCtxt.get(ZmSetting.CAL_REMINDER_WARNING_TIME);
for(var e=0;
e<ZmCalendarApp.reminderTimeWarningDisplayMsgs.length;
e++){
var l=ZmCalendarApp.__formatLabel(ZmCalendarApp.reminderTimeWarningDisplayMsgs[e],ZmCalendarApp.reminderTimeWarningLabels[e]);
var t=new DwtMenuItem({
parent:r,style:DwtMenuItem.NO_STYLE}
);
t.setText(l);
t.setData("value",ZmCalendarApp.reminderTimeWarningValues[e]);
if(a){
t.addSelectionListener(a)
}}
n.reparentHtmlElement(o);
delete o;
return n
};
ZmCalendarApp.getReminderSummary=function(e){
var i=((e%60)==0);
var a=((e%(60*24))==0);
var t=((e%(60*24*7))==0);
if(e==0){
return ZmMsg.apptRemindNever
}
if(t){
return ZmCalendarApp.__formatLabel(ZmMsg.apptRemindNWeeksBefore,e/(60*24*7))
}
if(a){
return ZmCalendarApp.__formatLabel(ZmMsg.apptRemindNDaysBefore,e/(60*24))
}
if(i){
return ZmCalendarApp.__formatLabel(ZmMsg.apptRemindNHoursBefore,e/60)
}
return ZmCalendarApp.__formatLabel(ZmMsg.apptRemindNMinutesBefore,e)
};
ZmCalendarApp._settingChangeListener=function(a,t){
if(t.type!=ZmEvent.S_SETTING){
return
}
var e=t.source;
if(e.id==ZmSetting.CAL_FIRST_DAY_OF_WEEK){
a.setFirstDayOfWeek(e.getValue())
}};
ZmCalendarApp.prototype._newCalendarCallback=function(n,i,t,a,s){
var o=appCtxt.getNewCalendarDialog();
o.popdown();
var e=appCtxt.getOverviewController();
e.getTreeController(ZmOrganizer.CALENDAR)._doCreate(n,i,t,a,s)
};
ZmCalendarApp.addInviteReplyMenu=function(e){
var t=[ZmOperation.EDIT_REPLY_ACCEPT,ZmOperation.EDIT_REPLY_TENTATIVE,ZmOperation.EDIT_REPLY_DECLINE];
var a=new ZmActionMenu({
parent:e,menuItems:t}
);
e.setMenu(a);
return a
};
ZmCalendarApp.addCalViewMenu=function(e){
var t=[ZmOperation.DAY_VIEW,ZmOperation.WORK_WEEK_VIEW,ZmOperation.WEEK_VIEW,ZmOperation.MONTH_VIEW,ZmOperation.CAL_LIST_VIEW];
if(appCtxt.get(ZmSetting.FREE_BUSY_VIEW_ENABLED)){
t.push(ZmOperation.FB_VIEW)
}
var a=new ZmActionMenu({
parent:e,menuItems:t}
);
e.setMenu(a);
return a
};
ZmCalendarApp.__formatLabel=function(t,e){
t=t||"";
return t.match(/\{/)?AjxMessageFormat.format(t,e):t
};
ZmCalendarApp.parseReminderString=function(d){
var l={};
l[ZmMsg.apptRemindNDaysBefore]=ZmCalItem.REMINDER_UNIT_DAYS;
l[ZmMsg.apptRemindNMinutesBefore]=ZmCalItem.REMINDER_UNIT_MINUTES;
l[ZmMsg.apptRemindNHoursBefore]=ZmCalItem.REMINDER_UNIT_HOURS;
l[ZmMsg.apptRemindNWeeksBefore]=ZmCalItem.REMINDER_UNIT_WEEKS;
d=AjxStringUtil.trim(d);
var c=d;
var r=c.replace(/\D/g,"");
r=AjxStringUtil.trim(r);
if(r==""){
return{
reminderValue:"",reminderUnits:ZmCalItem.REMINDER_NONE}
}
if(r.indexOf(" ")>=0){
r=r.split(" ")[0]
}
for(var h in l){
var t=ZmCalendarApp.__formatLabel(h,r);
if(t!=""&&t.toLowerCase()==d.toLowerCase()){
return{
reminderValue:r,reminderUnits:l[h],before:true}
}}
var s=parseInt(r);
var o={};
o[ZmCalItem.REMINDER_UNIT_MINUTES]=AjxMsg.minute;
o[ZmCalItem.REMINDER_UNIT_HOURS]=AjxMsg.hour;
o[ZmCalItem.REMINDER_UNIT_DAYS]=AjxMsg.day;
o[ZmCalItem.REMINDER_UNIT_WEEKS]=AjxMsg.week;
var a=ZmCalItem.REMINDER_UNIT_HOURS;
for(var n in o){
if(c.indexOf(o[n])>=0){
a=n;
return{
reminderValue:s?s:0,reminderUnits:a}
}}
var e={};
e[ZmCalItem.REMINDER_UNIT_MINUTES]=AjxMsg.minutes;
e[ZmCalItem.REMINDER_UNIT_HOURS]=AjxMsg.hours;
e[ZmCalItem.REMINDER_UNIT_DAYS]=AjxMsg.days;
e[ZmCalItem.REMINDER_UNIT_WEEKS]=AjxMsg.weeks;
for(var n in e){
if(c.indexOf(e[n])>=0){
a=n;
return{
reminderValue:s?s:0,reminderUnits:a}
}}
return{
reminderValue:s?s:0,reminderUnits:a}
};
ZmCalendarApp.convertReminderUnits=function(e,t){
switch(t){
case ZmCalItem.REMINDER_UNIT_MINUTES:return e;
case ZmCalItem.REMINDER_UNIT_HOURS:return e*60;
case ZmCalItem.REMINDER_UNIT_DAYS:return e*60*24;
case ZmCalItem.REMINDER_UNIT_WEEKS:return e*60*24*7;
default:return 0
}};
ZmCalendarApp.prototype.updateResourceCache=function(a){
var t=a.getFullName();
if(t){
this._resByName[t.toLowerCase()]=a
}
var e=a.getEmail();
if(e){
this._resByEmail[e.toLowerCase()]=a
}};
ZmCalendarApp.prototype._addSettingsChangeListeners=function(){
ZmApp.prototype._addSettingsChangeListeners.call(this);
if(!this._settingsListener){
this._settingsListener=new AjxListener(this,this._settingsChangeListener)
}
var t=appCtxt.getSettings();
var e=t.getSetting(ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL);
if(e){
e.addChangeListener(this._settingListener)
}
e=t.getSetting(ZmSetting.CAL_FIRST_DAY_OF_WEEK);
if(e){
e.addChangeListener(this._settingListener)
}
e=t.getSetting(ZmSetting.CAL_WORKING_HOURS);
if(e){
e.addChangeListener(this._settingListener)
}
e=t.getSetting(ZmSetting.CAL_SHOW_DECLINED_MEETINGS);
if(e){
e.addChangeListener(this._settingListener)
}
var t=appCtxt.getSettings();
t.getSetting(ZmSetting.CAL_SHOW_CALENDAR_WEEK).addChangeListener(this._settingListener);
t.addChangeListener(this._settingsListener)
};
ZmCalendarApp.prototype._settingChangeListener=function(s){
if(s.type!=ZmEvent.S_SETTING){
return
}
var h=s.source;
if(h.id==ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL){
if(h.getValue()){
var a=appCtxt.getAppViewMgr();
var r=!a.isHidden(ZmAppViewMgr.C_TREE_FOOTER,a.getCurrentViewId());
AjxDispatcher.run("ShowMiniCalendar",r)
}else{
if(!this._active){
AjxDispatcher.run("ShowMiniCalendar",false)
}}}else{
if(h.id==ZmSetting.CAL_FIRST_DAY_OF_WEEK){
var n=AjxDispatcher.run("GetCalController");
var o=n.getMiniCalendar();
var e=h.getValue();
o.setFirstDayOfWeek(e);
var t=o.getDate();
n.setDate(t,0,true)
}else{
if(h.id==ZmSetting.CAL_WORKING_HOURS){
var n=AjxDispatcher.run("GetCalController");
var i=n.getViewMgr();
if(i){
i.layoutWorkingHours()
}}else{
if(h.id==ZmSetting.CAL_SHOW_DECLINED_MEETINGS){
var n=AjxDispatcher.run("GetCalController");
n.refreshCurrentView()
}}}}};
ZmCalendarApp.prototype._settingsChangeListener=function(o){
if(o.type!=ZmEvent.S_SETTINGS){
return
}
var n=o.getDetail("settings");
if(!(n&&n.length)){
return
}
for(var t=0;
t<n.length;
t++){
var a=n[t];
if(a.id==ZmSetting.CAL_SHOW_CALENDAR_WEEK){
var e=AjxDispatcher.run("GetCalController").recreateMiniCalendar();
var s=appCtxt.getCalManager();
s.highlightMiniCal()
}}};
ZmCalendarApp.prototype.showDayView=function(a){
var t=AjxDispatcher.run("GetCalController");
var e=t.getMiniCalendar();
t.setDate(a,0,e.getForceRollOver());
if(!t._viewVisible){
t.show(ZmId.VIEW_CAL_DAY)
}};
ZmCalendarApp.prototype.getDateToolTip=function(e){
var t=AjxDispatcher.run("GetCalController");
return t.getDayToolTipText(e,null,null,true)
};
ZmCalendarApp.prototype.importAppointment=function(i,a,t){
var e=new AjxCallback(this,this._handleImportAppointment,[i,a,t]);
AjxDispatcher.require(["MailCore","CalendarCore","Calendar"],false,e)
};
ZmCalendarApp.prototype._handleImportAppointment=function(i,a,t){
if(this._deferredFolders.length!=0){
this._createDeferredFolders(ZmApp.CALENDAR)
}
var o=this._copyToDialog=appCtxt.getChooseFolderDialog();
var e=new AjxCallback(this,this._chooserCallback,[i,a,t]);
ZmController.showDialog(o,e,this._getCopyParams(o,i,a))
};
ZmCalendarApp.prototype._getCopyParams=function(a,t,e){
return{
data:{
msgId:t,partId:e}
,treeIds:[ZmOrganizer.CALENDAR],overviewId:a.getOverviewId(this._name),title:ZmMsg.addToCalendar,description:ZmMsg.targetFolder,appName:ZmApp.CALENDAR}
};
ZmCalendarApp.prototype._chooserCallback=function(n,o,t,i){
var r={
ImportAppointmentsRequest:{
_jsns:"urn:zimbraMail"}};
var a=r.ImportAppointmentsRequest;
a.l=i.id;
a.ct="text/calendar";
var e=a.content={};
e.mid=n;
e.part=o;
var s={
jsonObj:r,asyncMode:true,callback:(new AjxCallback(this,this._handleImportApptResponse,[i.id])),errorCallback:(new AjxCallback(this,this._handleImportApptError))};
appCtxt.getAppController().sendRequest(s)
};
ZmCalendarApp.prototype._handleImportApptResponse=function(e,t){
appCtxt.getAppController().setStatusMsg(ZmMsg.addedToCalendar);
appCtxt.getChooseFolderDialog().popdown();
var a=window.parentAppCtxt||window.appCtxt;
if(a.get(ZmSetting.CAL_ALWAYS_SHOW_MINI_CAL)){
var i=a.getCalManager();
i.getMiniCalCache().clearCache();
i.highlightMiniCal()
}};
ZmCalendarApp.prototype._handleImportApptError=function(e){
appCtxt.getAppController().setStatusMsg(ZmMsg.errorImportAppt,ZmStatusView.LEVEL_CRITICAL)
};
ZmCalendarApp.getReminderTimeWarningDisplayOptions=function(){
var t=[];
for(var e=0;
e<ZmCalendarApp.reminderTimeWarningDisplayMsgs.length;
e++){
t.push(ZmCalendarApp.__formatLabel(ZmCalendarApp.reminderTimeWarningDisplayMsgs[e],ZmCalendarApp.reminderTimeWarningLabels[e]))
}
return t
}
}
if(AjxPackage.define("zimbraMail.tasks.ZmTasksApp")){
ZmTasksApp=function(e){
ZmApp.call(this,ZmApp.TASKS,e)
};
ZmTasksApp.prototype=new ZmApp;
ZmTasksApp.prototype.constructor=ZmTasksApp;
ZmTasksApp.prototype.isZmTasksApp=true;
ZmTasksApp.prototype.toString=function(){
return"ZmTasksApp"
};
ZmEvent.S_TASK=ZmId.ITEM_TASK;
ZmItem.TASK=ZmEvent.S_TASK;
ZmOrganizer.TASKS=ZmEvent.S_TASK;
ZmApp.TASKS=ZmId.APP_TASKS;
ZmApp.CLASS[ZmApp.TASKS]="ZmTasksApp";
ZmApp.SETTING[ZmApp.TASKS]=ZmSetting.TASKS_ENABLED;
ZmApp.LOAD_SORT[ZmApp.TASKS]=45;
ZmApp.QS_ARG[ZmApp.TASKS]="tasks";
ZmTasksApp.REMINDER_START_DELAY=10000;
ZmTasksApp.prototype._defineAPI=function(){
AjxDispatcher.setPackageLoadFunction("TasksCore",new AjxCallback(this,this._postLoadCore));
AjxDispatcher.setPackageLoadFunction("Tasks",new AjxCallback(this,this._postLoad,ZmOrganizer.TASKS));
AjxDispatcher.registerMethod("GetTaskListController",["TasksCore","Tasks"],new AjxCallback(this,this.getTaskListController));
AjxDispatcher.registerMethod("GetTaskController",["TasksCore","Tasks"],new AjxCallback(this,this.getTaskController))
};
ZmTasksApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_NEW_TASK,{
textKey:"newTask",tooltipKey:"newTaskTooltip",image:"NewTask",shortcut:ZmKeyMap.NEW_TASK}
);
ZmOperation.registerOp(ZmId.OP_NEW_TASK_FOLDER,{
textKey:"newTaskFolder",tooltipKey:"newTaskFolderTooltip",image:"NewTaskList"}
);
ZmOperation.registerOp(ZmId.OP_SHARE_TASKFOLDER,{
textKey:"shareTaskFolder",image:"TaskList"}
);
ZmOperation.registerOp(ZmId.OP_PRINT_TASK,{
textKey:"printTask",image:"Print",shortcut:ZmKeyMap.PRINT}
,ZmSetting.PRINT_ENABLED);
ZmOperation.registerOp(ZmId.OP_PRINT_TASKFOLDER,{
textKey:"printTaskFolder",image:"Print"}
,ZmSetting.PRINT_ENABLED);
ZmOperation.registerOp(ZmId.OP_SORTBY_MENU,{
tooltipKey:"viewTooltip",textKey:"taskFilterBy",image:"SplitPane",textPrecedence:80}
);
ZmOperation.registerOp(ZmId.OP_MARK_AS_COMPLETED,{
tooltipKey:"markAsCompleted",textKey:"markAsCompleted",image:"CheckboxChecked",textPrecedence:80}
)
};
ZmTasksApp.prototype._registerSettings=function(e){
e=e||appCtxt.getSettings();
e.registerSetting("READING_PANE_LOCATION_TASKS",{
name:"zimbraPrefTasksReadingPaneLocation",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmSetting.RP_BOTTOM,isImplicit:true}
);
e.registerSetting("TASKS_FILTERBY",{
name:"zimbraPrefTasksFilterBy",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmSetting.TASK_FILTER_ALL,isImplicit:true}
);
if(!appCtxt.get(ZmSetting.HIGHLIGHT_OBJECTS)){
e.registerSetting("HIGHLIGHT_OBJECTS",{
name:"zimbraMailHighlightObjectsMaxSize",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:70}
)
}};
ZmTasksApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.TASK,{
app:ZmApp.TASKS,nameKey:"task",icon:"TasksApp",soapCmd:"ItemAction",itemClass:"ZmTask",node:"task",organizer:ZmOrganizer.TASKS,dropTargets:[ZmOrganizer.TAG,ZmOrganizer.TASKS],searchType:"task",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("TasksCore");
return new ZmList(ZmItem.TASK,e)
}
,this)}
)
};
ZmTasksApp.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.TASKS,{
app:ZmApp.TASKS,nameKey:"tasksFolder",defaultFolder:ZmFolder.ID_TASKS,soapCmd:"FolderAction",firstUserId:256,orgClass:"ZmTaskFolder",orgPackage:"TasksCore",treeController:"ZmTaskTreeController",labelKey:"taskLists",itemsKey:"tasks",folderKey:"tasksFolder",hasColor:true,defaultColor:ZmOrganizer.C_NONE,treeType:ZmOrganizer.FOLDER,views:["task"],createFunc:"ZmOrganizer.create",compareFunc:"ZmFolder.sortCompareNonMail",deferrable:true,newOp:ZmOperation.NEW_TASK_FOLDER,displayOrder:100}
)
};
ZmTasksApp.prototype._setupSearchToolbar=function(){
ZmSearchToolBar.addMenuItem(ZmItem.TASK,{
msgKey:"tasks",tooltipKey:"searchTasks",icon:"TasksApp",shareIcon:"SharedTaskList",setting:ZmSetting.TASKS_ENABLED,id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.ITEM_TASK),disableOffline:true}
)
};
ZmTasksApp.prototype._registerApp=function(){
var a={};
a[ZmOperation.NEW_TASK]="task";
var t={};
t[ZmOperation.NEW_TASK_FOLDER]="tasksFolder";
var e={};
e[ZmKeyMap.NEW_TASK]=ZmOperation.NEW_TASK;
ZmApp.registerApp(ZmApp.TASKS,{
mainPkg:"Tasks",nameKey:"tasks",icon:"TasksApp",textPrecedence:20,chooserTooltipKey:"goToTasks",defaultSearch:ZmItem.TASK,organizer:ZmOrganizer.TASKS,overviewTrees:[ZmOrganizer.TASKS,ZmOrganizer.SEARCH,ZmOrganizer.TAG],newItemOps:a,newOrgOps:t,actionCodes:e,searchTypes:[ZmItem.TASK],gotoActionCode:ZmKeyMap.GOTO_TASKS,newActionCode:ZmKeyMap.NEW_TASK,chooserSort:35,defaultSort:25,searchResultsTab:true}
)
};
ZmTasksApp.prototype.postNotify=function(e){
if(this._checkReplenishListView){
var a=e.modified&&e.modified.task;
var t;
if(a){
t=a[0].items[0]
}
this._checkReplenishListView._checkReplenish(t,true);
this._checkReplenishListView=null
}};
ZmTasksApp.prototype.handleOp=function(a,t){
switch(a){
case ZmOperation.NEW_TASK:t=t||{};
var e=new AjxCallback(this,this._handleLoadNewTask,[t]);
AjxDispatcher.require(["TasksCore","Tasks"],false,e,null,true);
break;
case ZmOperation.NEW_TASK_FOLDER:var e=new AjxCallback(this,this._handleLoadNewTaskFolder);
AjxDispatcher.require(["TasksCore","Tasks"],false,e,null,true);
break
}};
ZmTasksApp.prototype._handleLoadNewTask=function(e){
e.folderId=e.folderId||this.getTaskListController()._folderId;
AjxDispatcher.run("GetTaskController").show((new ZmTask(null,null,e&&e.folderId)))
};
ZmTasksApp.prototype._handleLoadNewTaskFolder=function(){
appCtxt.getAppViewMgr().popView(true,ZmId.VIEW_LOADING);
var e=appCtxt.getNewTaskFolderDialog();
if(!this._newTaskFolderCb){
this._newTaskFolderCb=new AjxCallback(this,this._newTaskFolderCallback)
}
ZmController.showDialog(e,this._newTaskFolderCb)
};
ZmTasksApp.prototype.createNotify=function(l,t){
if(!l.folder&&!l.task&&!l.link){
return
}
if(!t&&this._deferNotifications("create",l)){
return
}
for(var e in l){
var r=l[e];
if(!r){
continue
}
for(var o=0;
o<r.length;
o++){
var n=r[o];
if(appCtxt.cacheGet(n.id)){
continue
}
if(e=="folder"){
this._handleCreateFolder(n,ZmOrganizer.TASKS)
}else{
if(e=="link"){
this._handleCreateLink(n,ZmOrganizer.TASKS)
}else{
if(e=="task"){
var h=AjxDispatcher.run("GetTaskListController").getList();
if(h&&!AjxUtil.isEmpty(n.inv)&&!AjxUtil.isEmpty(n.inv[0].comp)){
var a=h.controller.getAllowableTaskStatus();
var s=n.inv[0].comp[0].status;
if(!a||a.indexOf(s)!==-1){
h.notifyCreate(n)
}}}}}}}};
ZmTasksApp.prototype.launch=function(t,a){
this._setLaunchTime(this.toString(),new Date());
var e=new AjxCallback(this,this._handleLoadLaunch,a);
AjxDispatcher.require(["TasksCore","Tasks"],true,e,null,true)
};
ZmTasksApp.prototype._handleLoadLaunch=function(t){
var e=this._getExternalAccount();
this.search(null,null,null,null,(e&&e.name));
if(t){
t.run()
}};
ZmTasksApp.prototype.getNewButtonProps=function(){
return{
text:ZmMsg.newTask,tooltip:ZmMsg.createNewTask,icon:"NewTask",iconDis:"NewTaskDis",defaultId:ZmOperation.NEW_TASK,disabled:!this.containsWritableFolder()}
};
ZmTasksApp.prototype.showSearchResults=function(t,i,a){
var e=this._handleLoadShowSearchResults.bind(this,t,i,a);
AjxDispatcher.require("Tasks",false,e,null,true)
};
ZmTasksApp.prototype._handleLoadShowSearchResults=function(a,n,i){
var t=a&&a.search&&a.search.isSimple()&&a.search.folderId;
var o=i?i.getCurrentViewId():ZmApp.MAIN_SESSION;
var e=AjxDispatcher.run("GetTaskListController",o,i);
e.show(a,t);
this._setLoadedTime(this.toString(),new Date());
if(n){
n.run(e)
}};
ZmTasksApp.prototype.runRefresh=function(){
if(window.ZmTaskListController===undefined){
return
}
AjxDispatcher.run("GetTaskListController").runRefresh()
};
ZmTasksApp.prototype.getListController=function(){
return AjxDispatcher.run("GetTaskListController")
};
ZmTasksApp.prototype.getTaskListController=function(t,e){
return this.getSessionController({
controllerClass:"ZmTaskListController",sessionId:t||ZmApp.MAIN_SESSION,searchResultsController:e}
)
};
ZmTasksApp.prototype.getTaskController=function(e){
return this.getSessionController({
controllerClass:"ZmTaskController",sessionId:e}
)
};
ZmTasksApp.prototype.newTaskFromMailItem=function(a,e){
var t=a.subject||"";
if(a instanceof ZmConv){
a=a.getFirstHotMsg()
}
a.load({
getHtml:false,callback:new AjxCallback(this,this._msgLoadedCallback,[a,e,t])}
)
};
ZmTasksApp.prototype._msgLoadedCallback=function(o,e,i){
var a=new ZmTask();
a.setEndDate(AjxDateUtil.roundTimeMins(e,30));
a.setFromMailMessage(o,i);
this.getTaskController().show(a,ZmCalItem.MODE_NEW,true)
};
ZmTasksApp.prototype.search=function(a,e,o,r,t){
var i=a?a.createQuery():"";
i=i||(appCtxt.isExternalAccount()?"inid:"+this.getDefaultFolderId():"in:tasks");
var s={
query:i,types:[ZmItem.TASK],limit:this.getLimit(),searchFor:ZmItem.TASK,callback:r,accountName:(t||(a&&a.getAccount().name))};
var n=appCtxt.getSearchController();
n.searchAllAccounts=false;
n.search(s)
};
ZmTasksApp.prototype._newTaskFolderCallback=function(o,a,t){
var i=appCtxt.getNewTaskFolderDialog();
i.popdown();
var e=appCtxt.getOverviewController();
e.getTreeController(ZmOrganizer.TASKS)._doCreate(o,a,t)
};
ZmTasksApp.prototype.getTaskFolderIds=function(e){
var o=[];
if(AjxDispatcher.loaded("TasksCore")){
o=AjxDispatcher.run("GetTaskListController").getTaskFolderIds(e)
}else{
this._folderNames={};
for(var t=0;
t<this._deferredFolders.length;
t++){
var a=this._deferredFolders[t];
if(e&&a.obj.zid!=null){
continue
}
o.push(a.obj.id);
this._folderNames[a.obj.id]=a.obj.name
}}
return o
};
ZmTasksApp.prototype.getTaskFolderName=function(e){
return appCtxt.getById(e)?appCtxt.getById(e).name:this._folderNames[e]
};
ZmTasksApp.prototype.getReminderController=function(){
if(!this._reminderController){
AjxDispatcher.require("TasksCore");
var e=appCtxt.getTaskManager();
this._reminderController=e.getReminderController();
this._reminderController._calController=e;
this._reminderController.refresh()
}
return this._reminderController
};
ZmTasksApp.createpCompleteButton=function(r,n,l,o){
var e=new DwtButton({
parent:r}
);
e.addDropDownSelectionListener(l);
e.setData(Dwt.KEY_ID,n);
e.setSize("25");
var s=new DwtMenu({
parent:e,style:DwtMenu.DROPDOWN_STYLE}
);
s.setSize("100");
e.setMenu(s,true);
var h=new AjxMessageFormat(AjxMsg.percentageString);
for(var t=0;
t<=100;
t+=ZmTask.PCOMPLETE_INT){
var a=new DwtMenuItem({
parent:s,style:DwtMenuItem.NO_STYLE}
);
a.setText((h.format(t)));
a.setData("value",t);
if(o){
a.addSelectionListener(o)
}}
e.reparentHtmlElement(n);
delete n;
return e
}
}
if(AjxPackage.define("zimbraMail.abook.ZmContactsApp")){
ZmContactsApp=function(t,e){
ZmApp.call(this,ZmApp.CONTACTS,t,e);
this.contactsLoaded={};
this._contactList={};
this._initialized=false;
this._byEmail={};
this._byIM={};
this._byPhone={};
this._dlCache={}
};
ZmContactsApp.prototype=new ZmApp;
ZmContactsApp.prototype.constructor=ZmContactsApp;
ZmContactsApp.prototype.isZmContactsApp=true;
ZmContactsApp.prototype.toString=function(){
return"ZmContactsApp"
};
ZmEvent.S_CONTACT=ZmId.ITEM_CONTACT;
ZmEvent.S_GROUP=ZmId.ITEM_GROUP;
ZmItem.CONTACT=ZmEvent.S_CONTACT;
ZmItem.GROUP=ZmEvent.S_GROUP;
ZmItem.GAL=ZmId.ITEM_GAL_CONTACT;
ZmOrganizer.ADDRBOOK=ZmId.ORG_ADDRBOOK;
ZmApp.CONTACTS=ZmId.APP_CONTACTS;
ZmApp.CLASS[ZmApp.CONTACTS]="ZmContactsApp";
ZmApp.SETTING[ZmApp.CONTACTS]=ZmSetting.CONTACTS_ENABLED;
ZmApp.UPSELL_SETTING[ZmApp.CONTACTS]=ZmSetting.CONTACTS_UPSELL_ENABLED;
ZmApp.LOAD_SORT[ZmApp.CONTACTS]=30;
ZmApp.QS_ARG[ZmApp.CONTACTS]="contacts";
ZmContactsApp.SEARCHFOR_CONTACTS=1;
ZmContactsApp.SEARCHFOR_GAL=2;
ZmContactsApp.SEARCHFOR_PAS=3;
ZmContactsApp.SEARCHFOR_FOLDERS=4;
ZmContactsApp.SEARCHFOR_MAX=50;
ZmContactsApp.prototype._defineAPI=function(){
AjxDispatcher.setPackageLoadFunction("ContactsCore",new AjxCallback(this,this._postLoadCore));
AjxDispatcher.setPackageLoadFunction("Contacts",new AjxCallback(this,this._postLoad,ZmOrganizer.ADDRBOOK));
AjxDispatcher.registerMethod("GetContacts","ContactsCore",new AjxCallback(this,this.getContactList));
AjxDispatcher.registerMethod("GetContactsForAllAccounts","ContactsCore",new AjxCallback(this,this.getContactListForAllAccounts));
AjxDispatcher.registerMethod("GetContactListController",["ContactsCore","Contacts"],new AjxCallback(this,this.getContactListController));
AjxDispatcher.registerMethod("GetContactController",["ContactsCore","Contacts"],new AjxCallback(this,this.getContactController))
};
ZmContactsApp.prototype._registerSettings=function(e){
var e=e||appCtxt.getSettings();
e.registerSetting("AUTO_ADD_ADDRESS",{
name:"zimbraPrefAutoAddAddressEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isGlobal:true}
);
e.registerSetting("AUTOCOMPLETE_LIMIT",{
name:"zimbraContactAutoCompleteMaxResults",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:20}
);
e.registerSetting("AUTOCOMPLETE_ON_COMMA",{
name:"zimbraPrefAutoCompleteQuickCompletionOnComma",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("AUTOCOMPLETE_SHARE",{
name:"zimbraPrefShareContactsInAutoComplete",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("AUTOCOMPLETE_SHARED_ADDR_BOOKS",{
name:"zimbraPrefSharedAddrBookAutoCompleteEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("EXPORT",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_NONE}
);
e.registerSetting("GAL_AUTOCOMPLETE",{
name:"zimbraPrefGalAutoCompleteEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("IMPORT",{
type:ZmSetting.T_PREF,dataType:ZmSetting.D_NONE}
);
e.registerSetting("MAX_CONTACTS",{
name:"zimbraContactMaxNumEntries",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:0}
);
e.registerSetting("NEW_ADDR_BOOK_ENABLED",{
name:"zimbraFeatureNewAddrBookEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("PHONETIC_CONTACT_FIELDS",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:/^ja/.test(AjxEnv.DEFAULT_LOCALE)}
);
e.registerSetting("DETAILED_CONTACT_SEARCH_ENABLED",{
name:"zimbraFeatureContactsDetailedSearchEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
)
};
ZmContactsApp.prototype._registerPrefs=function(){
var t={
CONTACTS:{
title:ZmMsg.addressBook,icon:"ContactsApp",templateId:"prefs.Pages#Contacts",priority:70,precondition:ZmSetting.CONTACTS_ENABLED,prefs:[ZmSetting.AUTO_ADD_ADDRESS,ZmSetting.AUTOCOMPLETE_ON_COMMA,ZmSetting.AUTOCOMPLETE_SHARE,ZmSetting.AUTOCOMPLETE_SHARED_ADDR_BOOKS,ZmSetting.EXPORT,ZmSetting.GAL_AUTOCOMPLETE,ZmSetting.INITIALLY_SEARCH_GAL,ZmSetting.IMPORT]}};
for(var e in t){
ZmPref.registerPrefSection(e,t[e])
}
ZmPref.registerPref("AUTO_ADD_ADDRESS",{
displayName:ZmMsg.autoAddContacts,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("AUTOCOMPLETE_ON_COMMA",{
displayName:ZmMsg.autocompleteOnComma,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("AUTOCOMPLETE_SHARE",{
displayName:ZmMsg.autocompleteShare,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("AUTOCOMPLETE_SHARED_ADDR_BOOKS",{
displayName:ZmMsg.autocompleteSharedAddrBooks,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("EXPORT",{
loadFunction:ZmPref.loadCsvFormats,displayContainer:ZmPref.TYPE_EXPORT}
);
ZmPref.registerPref("GAL_AUTOCOMPLETE",{
displayName:ZmMsg.galAutocomplete,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:function(){
return appCtxt.get(ZmSetting.GAL_AUTOCOMPLETE_ENABLED)&&appCtxt.get(ZmSetting.GAL_ENABLED)
}}
);
ZmPref.registerPref("IMPORT",{
displayName:ZmMsg.importFromCSV,displayContainer:ZmPref.TYPE_IMPORT}
);
ZmPref.registerPref("INITIALLY_SEARCH_GAL",{
displayName:ZmMsg.initiallySearchGal,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:function(){
return appCtxt.get(ZmSetting.GAL_ENABLED)&&appCtxt.getActiveAccount().isZimbraAccount
}}
)
};
ZmContactsApp.prototype._createVirtualFolders=function(){
if(!window.ZmContactList||!window.ZmAddrBook){
return
}
ZmContactList.addDlFolder()
};
ZmContactsApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_CONTACT);
ZmOperation.registerOp(ZmId.OP_EDIT_CONTACT,{
textKey:"AB_EDIT_CONTACT",image:"Edit",shortcut:ZmKeyMap.EDIT}
);
ZmOperation.registerOp(ZmId.OP_NEW_ADDRBOOK,{
textKey:"newAddrBook",tooltipKey:"newAddrBookTooltip",image:"NewContactsFolder"}
,ZmSetting.NEW_ADDR_BOOK_ENABLED);
ZmOperation.registerOp(ZmId.OP_NEW_CONTACT,{
textKey:"newContact",tooltipKey:"newContactTooltip",image:"NewContact",shortcut:ZmKeyMap.NEW_CONTACT}
,ZmSetting.CONTACTS_ENABLED);
ZmOperation.registerOp(ZmId.OP_NEW_GROUP,{
textKey:"newGroup",tooltipKey:"newGroupTooltip",image:"NewGroup"}
,ZmSetting.CONTACTS_ENABLED);
ZmOperation.registerOp(ZmId.OP_NEW_DISTRIBUTION_LIST,{
textKey:"newDistList",tooltipKey:"newDistListTooltip",image:"NewGroup"}
,ZmSetting.CONTACTS_ENABLED);
ZmOperation.registerOp(ZmId.OP_PRINT_CONTACT,{
textKey:"printContact",image:"Print",shortcut:ZmKeyMap.PRINT}
,ZmSetting.PRINT_ENABLED);
ZmOperation.registerOp(ZmId.OP_PRINT_ADDRBOOK,{
textKey:"printAddrBook",image:"Print"}
,ZmSetting.PRINT_ENABLED);
ZmOperation.registerOp(ZmId.OP_SHARE_ADDRBOOK,{
textKey:"shareAddrBook",image:"SharedContactsFolder"}
)
};
ZmContactsApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.CONTACT,{
app:ZmApp.CONTACTS,nameKey:"contact",icon:"Contact",soapCmd:"ContactAction",itemClass:"ZmContact",node:"cn",organizer:ZmOrganizer.ADDRBOOK,dropTargets:[ZmOrganizer.TAG,ZmOrganizer.ZIMLET,ZmOrganizer.ADDRBOOK],searchType:"contact",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("ContactsCore");
return new ZmContactList(e,e?e.isGalSearch||e.isGalAutocompleteSearch:null)
}
,this)}
);
ZmItem.registerItem(ZmItem.GROUP,{
nameKey:"group",icon:"Group",soapCmd:"ContactAction"}
);
ZmItem.registerItem(ZmItem.GAL,{
app:ZmApp.CONTACTS}
)
};
ZmContactsApp.prototype._registerOrganizers=function(){
var e={};
ZmOrganizer.registerOrg(ZmOrganizer.ADDRBOOK,{
app:ZmApp.CONTACTS,nameKey:"addressBook",defaultFolder:ZmOrganizer.ID_ADDRBOOK,soapCmd:"FolderAction",firstUserId:256,orgClass:"ZmAddrBook",orgPackage:"ContactsCore",treeController:"ZmAddrBookTreeController",labelKey:"contactLists",itemsKey:"contacts",hasColor:true,defaultColor:ZmOrganizer.C_NONE,orgColor:e,treeType:ZmOrganizer.FOLDER,dropTargets:[ZmOrganizer.ADDRBOOK],views:["contact"],folderKey:"contactsFolder",mountKey:"mountAddrBook",createFunc:"ZmOrganizer.create",compareFunc:"ZmFolder.sortCompareNonMail",displayOrder:100,newOp:ZmOperation.NEW_ADDRBOOK,deferrable:true}
)
};
ZmContactsApp.prototype._setupSearchToolbar=function(){
ZmSearchToolBar.addMenuItem(ZmItem.CONTACT,{
msgKey:"searchContacts",tooltipKey:"searchPersonalContacts",icon:"Contact",shareIcon:"SharedContactsFolder",id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.ITEM_CONTACT)}
);
ZmSearchToolBar.addMenuItem(ZmId.SEARCH_GAL,{
msgKey:"searchGALContacts",tooltipKey:"searchGALContacts",icon:"GAL",setting:ZmSetting.GAL_ENABLED,id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.SEARCH_GAL),disableOffline:true}
)
};
ZmContactsApp.prototype._registerApp=function(){
var a={};
a[ZmOperation.NEW_CONTACT]="contact";
a[ZmOperation.NEW_GROUP]="group";
if(appCtxt.createDistListAllowed){
a[ZmOperation.NEW_DISTRIBUTION_LIST]="distributionList"
}
var t={};
t[ZmOperation.NEW_ADDRBOOK]="contactsFolder";
var e={};
e[ZmKeyMap.NEW_CONTACT]=ZmOperation.NEW_CONTACT;
ZmApp.registerApp(ZmApp.CONTACTS,{
mainPkg:"Contacts",nameKey:"addressBook",icon:"ContactsApp",textPrecedence:40,chooserTooltipKey:"goToContacts",viewTooltipKey:"displayContacts",defaultSearch:ZmItem.CONTACT,organizer:ZmOrganizer.ADDRBOOK,overviewTrees:[ZmOrganizer.ADDRBOOK,ZmOrganizer.SEARCH,ZmOrganizer.TAG],searchTypes:[ZmItem.CONTACT],newItemOps:a,newOrgOps:t,actionCodes:e,gotoActionCode:ZmKeyMap.GOTO_CONTACTS,newActionCode:ZmKeyMap.NEW_CONTACT,trashViewOp:ZmOperation.SHOW_ONLY_CONTACTS,chooserSort:20,defaultSort:40,upsellUrl:ZmSetting.CONTACTS_UPSELL_URL,searchResultsTab:true}
)
};
ZmContactsApp.prototype.createNotify=function(l,a){
if(!l.folder&&!l.cn&&!l.link){
return
}
if(!a&&!this._noDefer&&this._deferNotifications("create",l)){
return
}
for(var e in l){
var r=l[e];
if(r&&r.length){
for(var n=0;
n<r.length;
n++){
var s=r[n];
if(appCtxt.cacheGet(s.id)){
continue
}
if(e=="folder"){
this._handleCreateFolder(s,ZmOrganizer.ADDRBOOK)
}else{
if(e=="link"){
this._handleCreateLink(s,ZmOrganizer.ADDRBOOK)
}else{
if(e=="cn"){
var h=AjxDispatcher.run("GetContactListController");
if(h._folderId==ZmFolder.ID_DLS){
continue
}
var o=(h&&h.getFolderId())?h.getList():new ZmContactList(null);
if(appCtxt.multiAccounts&&o.search&&o.search.folderId!=s.l){
continue
}
o.notifyCreate(s);
var t=window.parentAppCtxt||window.appCtxt;
t.clearAutocompleteCache(ZmAutocomplete.AC_TYPE_CONTACT);
s._handled=true
}}}}}}};
ZmContactsApp.prototype.modifyNotify=function(t,e){
if(!t.cn){
return
}
if(!e&&!this._noDefer&&this._deferNotifications("modify",t)){
return
}
this._batchNotify(t.cn)
};
ZmContactsApp.prototype.postNotify=function(e){
if(this._checkReplenishListView){
this._checkReplenishListView._checkReplenish();
this._checkReplenishListView=null
}};
ZmContactsApp.prototype.handleOp=function(a){
if(!appCtxt.isWebClientOffline()){
switch(a){
case ZmOperation.NEW_CONTACT:case ZmOperation.NEW_DISTRIBUTION_LIST:case ZmOperation.NEW_GROUP:var t=(a==ZmOperation.NEW_CONTACT)?null:ZmItem.GROUP;
var e=new AjxCallback(this,this._handleLoadNewItem,[t,a==ZmOperation.NEW_DISTRIBUTION_LIST]);
AjxDispatcher.require(["ContactsCore","Contacts"],false,e,null,true);
break;
case ZmOperation.NEW_ADDRBOOK:var e=new AjxCallback(this,this._handleLoadNewAddrBook);
AjxDispatcher.require(["ContactsCore","Contacts"],false,e,null,true);
break
}}};
ZmContactsApp.prototype._handleLoadNewItem=function(a,t){
var e=new ZmContact(null,null,a,t);
AjxDispatcher.run("GetContactController").show(e)
};
ZmContactsApp.prototype._handleLoadNewAddrBook=function(){
appCtxt.getAppViewMgr().popView(true,ZmId.VIEW_LOADING);
var e=appCtxt.getNewAddrBookDialog();
if(!this._newAddrBookCb){
this._newAddrBookCb=new AjxCallback(this,this._newAddrBookCallback)
}
ZmController.showDialog(e,this._newAddrBookCb)
};
ZmContactsApp.prototype.activate=function(e){
ZmApp.prototype.activate.apply(this,arguments)
};
ZmContactsApp.prototype.getNewButtonProps=function(){
return{
text:ZmMsg.newContact,tooltip:ZmMsg.createNewContact,icon:"NewContact",iconDis:"NewContactDis",defaultId:ZmOperation.NEW_CONTACT,disabled:!this.containsWritableFolder()}
};
ZmContactsApp.prototype.launch=function(t,a){
this._setLaunchTime(this.toString(),new Date());
var e=new AjxCallback(this,this._handleLoadLaunch,a);
AjxDispatcher.require(["ContactsCore","Contacts"],true,e,null,true)
};
ZmContactsApp.prototype._handleLoadLaunch=function(t){
var e="in:contacts";
if(appCtxt.isExternalAccount()){
e="inid:"+this.getDefaultFolderId()
}
this._contactsSearch(e,t)
};
ZmContactsApp.prototype._contactsSearch=function(e,i){
var a={
searchFor:ZmId.ITEM_CONTACT,query:e,limit:this.getLimit(),types:[ZmId.ITEM_CONTACT],callback:i};
var t=appCtxt.getSearchController();
t.searchAllAccounts=false;
t.search(a)
};
ZmContactsApp.prototype.getLimit=function(t){
var e=appCtxt.get(ZmSetting.PAGE_SIZE);
return t?e:2*e
};
ZmContactsApp.prototype.getInitialSearchType=function(){
var e=appCtxt.getCurrentList();
return(e&&(e instanceof ZmContactList)&&e.isGal)?ZmId.SEARCH_GAL:null
};
ZmContactsApp.prototype.showSearchResults=function(t,i,a){
var e=this._handleLoadShowSearchResults.bind(this,t,i,a);
AjxDispatcher.require("Contacts",false,e,null,true)
};
ZmContactsApp.prototype._handleLoadShowSearchResults=function(o,r,n){
var i=o&&o.search;
var t=i&&i.isSimple()&&i.folderId;
var a=i&&(i.contactSource==ZmId.SEARCH_GAL);
var s=n?n.getCurrentViewId():ZmApp.MAIN_SESSION;
var e=AjxDispatcher.run("GetContactListController",s,n);
e.show(o,a,t);
this._setLoadedTime(this.toString(),new Date());
if(r){
r.run(e)
}};
ZmContactsApp.prototype.runRefresh=function(){
var e=AjxDispatcher.run("GetContactListController");
e.runRefresh()
};
ZmContactsApp.prototype.setActive=function(t){
if(t){
var e=AjxDispatcher.run("GetContactListController");
e.show()
}};
ZmContactsApp.prototype.isContactListLoaded=function(e){
var t=(e||appCtxt.getActiveAccount().id);
return(this._contactList[t]&&this._contactList[t].isLoaded)
};
ZmContactsApp.prototype.getContactByEmail=function(s,r){
if(!s){
return null
}
var n=s.toLowerCase();
var o=this._byEmail[n];
if(!o&&this._notFound(n)){
this._removeAddrFromLookupGroup(n);
if(r){
r.run(null)
}
return null
}
if(o){
this._removeAddrFromLookupGroup(n);
o=this._realizeContact(o);
o._lookupEmail=s;
if(r){
r.run(o)
}
return o
}
if(r){
var l=null,a=false,e=[];
if(this._addrLookupHash&&this._addrLookupHash[n]){
if(this._addrLookupList){
for(var t=0;
t<this._addrLookupList.length;
t++){
e.push(this._addrLookupList[t])
}
l=this._getSearchForAddresses(this._addrLookupList);
a=true;
this._addrLookupList=null
}
this._addrLookupHash[n].push(r)
}else{
l=this._getSearchForAddresses([s])
}
if(l){
var h=new AjxCallback(this,this._handleResponseSearch,[a?e:n,a,r]);
l.execute({
callback:h,noBusyOverlay:true}
)
}}};
ZmContactsApp.prototype._handleResponseSearch=function(c,n,u,m){
var e=m.getResponse();
var s=e&&e.getResults(ZmItem.CONTACT);
if(n){
var l=s.getArray();
for(var o=0;
o<l.length;
o++){
this._updateLookupCache(l[o])
}
for(var o=0;
o<c.length;
o++){
var d=c[o];
if(!this._byEmail[d]){
this._updateLookupCache(null,d)
}
var h=this._addrLookupHash[d];
if(h&&h.length){
for(var t=0;
t<h.length;
t++){
h[t].run(this._byEmail[d])
}}
this._removeAddrFromLookupGroup(d)
}}else{
var r=s?s.get(0):null;
this._updateLookupCache(r,c);
this._byEmail[c]=r;
u.run(r)
}};
ZmContactsApp.prototype.getContactsByEmails=function(t,h){
var l=[],e=null,s=null;
for(var a=0,n=t.length;
a<n;
a++){
var r=t[a];
var o=this.getContactByEmail(r.getAddress());
if(o||o===null){
l.push({
address:r,contact:o}
)
}else{
e=e||[];
s=s||[];
e.push(r);
s.push(r.getAddress())
}}
if(!h){
return l
}
if(!e){
h.run(l);
return l
}
var d=this._getSearchForAddresses(s);
var c=new AjxCallback(this,this._handleResponseSearchByEmails,[e,l,h]);
d.execute({
callback:c}
)
};
ZmContactsApp.prototype._handleResponseSearchByEmails=function(e,u,d,m){
var t=m.getResponse();
var h=t&&t.getResults(ZmItem.CONTACT);
if(!h){
d.run(u)
}
for(var s=0,n=h.size();
s<n;
s++){
var o=h.get(s);
for(var a=1;
true;
a++){
var l=ZmContact.getAttributeName(ZmContact.F_email,a);
var r=o.getAttr(l);
if(!r){
break
}
this._byEmail[r]=o
}}
for(var a=0,n=e.length;
a<n;
a++){
var c=e[a];
var o=this.getContactByEmail(c.getAddress());
u.push({
address:c,contact:o}
)
}
d.run(u)
};
ZmContactsApp.prototype._getSearchForAddresses=function(a){
var e;
if(a.length==1){
e=["to:",a[0]," not #type:group"]
}else{
e=["("];
for(var t=0,o=a.length;
t<o;
t++){
if(t>0){
e.push(" OR ")
}
e.push("to:");
e.push(a[t])
}
e.push(") not #type:group")
}
var n={
query:e.join(""),limit:a.length*2,types:AjxVector.fromArray([ZmItem.CONTACT])};
return new ZmSearch(n)
};
ZmContactsApp.prototype._notFound=function(e){
return(e===null||Boolean(this._contactList[appCtxt.getActiveAccount().id]))
};
ZmContactsApp.prototype.setAddrLookupGroup=function(t){
this._addrLookupList=[];
this._addrLookupHash={};
if(t&&t.length){
for(var e=0;
e<t.length;
e++){
if(t[e]){
var a=t[e].address||t[e];
a=(a&&AjxUtil.isString(a))?a.toLowerCase():null;
if(a&&!this._addrLookupHash[a]){
this._addrLookupList.push(a);
this._addrLookupHash[a]=[]
}}}}};
ZmContactsApp.prototype._removeAddrFromLookupGroup=function(e){
if(!(this._addrLookupList&&this._addrLookupList.length)){
return
}
AjxUtil.arrayRemove(this._addrLookupList,e);
delete this._addrLookupHash[e]
};
ZmContactsApp.prototype._updateLookupCache=function(t,n){
if(n){
this._byEmail[n]=t
}
if(t){
for(var o=1;
true;
o++){
var a=ZmContact.getAttributeName(ZmContact.F_email,o);
var e=t.getAttr(a);
if(!e){
break
}
this._byEmail[e.toLowerCase()]=t
}}};
ZmContactsApp.prototype.getContactByIMAddress=function(t){
if(!t){
return null
}
var e=this._byIM[t.toLowerCase()];
return this._realizeContact(e)
};
ZmContactsApp.prototype.getContactByPhone=function(e){
if(!e){
return null
}
var a=e.replace(/[^\d]/g,"");
var t=this._phoneToContact[a];
if(t){
t.contact=this._realizeContact(t.contact)
}
return t
};
ZmContactsApp.prototype._realizeContact=function(e){
var a=appCtxt.getActiveAccount().id;
var t=this._contactList[a];
return t?t._realizeContact(e):e
};
ZmContactsApp.prototype.updateCache=function(e,t){
this._updateHash(e,t,ZmContact.EMAIL_FIELDS,this._byEmail);
if(appCtxt.get(ZmSetting.VOICE_ENABLED)){
this._updateHash(e,t,ZmContact.PHONE_FIELDS,this._byPhone,true,true)
}
if(appCtxt.get(ZmSetting.IM_ENABLED)){
this._updateHash(e,t,ZmContact.IM_FIELDS,this._byIM)
}};
ZmContactsApp.prototype._updateHash=function(h,a,s,n,t,e){
for(var r=0;
r<s.length;
r++){
var d=s[r];
for(var o=1;
true;
o++){
var c=ZmContact.getAttributeName(d,o);
var l=ZmContact.getAttr(h,c);
if(!l){
break
}
l=e?l.replace(/[^\d]/g,""):l.toLowerCase();
if(a){
n[l]=t?{
contact:h,field:c}
:h
}else{
delete n[l]
}}}};
ZmContactsApp.prototype.getContactListForAllAccounts=function(){
var e=[];
var a=appCtxt.accountList.visibleAccounts;
for(var t=0;
t<a.length;
t++){
if(appCtxt.get(ZmSetting.CONTACTS_ENABLED,null,a[t])){
e.push(a[t])
}}
if(e.length>0){
this._loadContactsForAccount(e)
}};
ZmContactsApp.prototype._loadContactsForAccount=function(e){
var a=e.shift();
if(a){
var t=new AjxCallback(this,this._loadContactsForAccount,[e]);
this.getContactList(t,null,a)
}};
ZmContactsApp.prototype.getContactList=function(s,e,o){
var a=(o&&o.id)||appCtxt.getActiveAccount().id;
if(!this._contactList[a]){
try{
if(this._parentController){
this._contactList[a]=this._parentController.getApp(ZmApp.CONTACTS).getContactList()
}else{
this._contactList[a]=new ZmContactList(null);
var n=new AjxCallback(this,this._handleResponseGetContactList,[s]);
var t=(o&&o.getEmail());
this._contactList[a].load(n,e,t)
}
return this._contactList[a]
}
catch(i){
this._contactList[a]=null;
throw i
}}else{
if(s&&s.isAjxCallback){
s.run(this._contactList[a])
}
return this._contactList[a]
}};
ZmContactsApp.prototype._handleResponseGetContactList=function(t){
var e=appCtxt.getActiveAccount().id;
this.contactsLoaded[e]=true;
if(t){
t.run(this._contactList[e])
}};
ZmContactsApp.prototype.getGalContactList=function(){
if(!this._galContactList){
try{
this._galContactList=new ZmContactList(null,true);
this._galContactList.load()
}
catch(e){
this._galContactList=null;
throw e
}}
return this._galContactList
};
ZmContactsApp.prototype.createFromVCard=function(a,t){
var e=new ZmContact(null);
e.createFromVCard(a,t)
};
ZmContactsApp.prototype.getContactListController=function(t,e){
return this.getSessionController({
controllerClass:"ZmContactListController",sessionId:t||ZmApp.MAIN_SESSION,searchResultsController:e}
)
};
ZmContactsApp.prototype.getContactController=function(e){
return this.getSessionController({
controllerClass:"ZmContactController",sessionId:e}
)
};
ZmContactsApp.prototype._newAddrBookCallback=function(o,a,t){
var i=appCtxt.getNewAddrBookDialog();
i.popdown();
var e=appCtxt.getOverviewController();
e.getTreeController(ZmOrganizer.ADDRBOOK)._doCreate(o,a,t)
};
ZmContactsApp.prototype.getDL=function(e){
return this._dlCache[e]
};
ZmContactsApp.prototype.cacheDL=function(t,e){
this._dlCache[t]=e
};
ZmContactsApp.prototype.updateIdHash=function(e,t){
var i=e.id;
var a=this.getContactList().getIdHash();
if(!t){
a[i]=e
}else{
delete a[i]
}};
ZmContactsApp.prototype.resetWebClientOfflineOperations=function(){
ZmApp.prototype.resetWebClientOfflineOperations.apply(this);
var t=this.getContactListController();
var a=t&&t.getCurrentToolbar();
if(t&&a){
t._resetOperations(a)
}
var i=this.getOverview();
var e=i&&i.getTreeItemById(ZmFolder.ID_DLS);
if(e){
e.setVisible(!appCtxt.isWebClientOffline())
}}
}
if(AjxPackage.define("zimbraMail.im.ZmImApp")){
ZmImApp=function(e){
ZmApp.call(this,ZmApp.IM,e);
delete ZmFolder.HIDE_ID[ZmOrganizer.ID_CHATS];
this._active=false;
ZmImApp.INSTANCE=this;
this._roster=new ZmRoster(this)
};
ZmEvent.S_CHAT=ZmId.ITEM_CHAT;
ZmEvent.S_ROSTER="ROSTER";
ZmEvent.S_ROSTER_ITEM=ZmId.ITEM_ROSTER;
ZmEvent.S_ROSTER_TREE_ITEM=ZmId.ORG_ROSTER_TREE_ITEM;
ZmEvent.S_ROSTER_TREE_GROUP=ZmId.ORG_ROSTER_TREE_GROUP;
ZmItem.CHAT=ZmEvent.S_CHAT;
ZmItem.ROSTER_ITEM=ZmEvent.S_ROSTER_ITEM;
ZmOrganizer.ROSTER_TREE_ITEM=ZmEvent.S_ROSTER_TREE_ITEM;
ZmOrganizer.ROSTER_TREE_GROUP=ZmEvent.S_ROSTER_TREE_GROUP;
ZmOrganizer.CONFERENCE_ITEM="CONFERENCE_ITEM";
ZmItem.F_PRESENCE="PRESENCE";
ZmItem.F_PRESENCE_CELL="PRESENCE_cell";
ZmApp.IM=ZmId.APP_IM;
ZmApp.CLASS[ZmApp.IM]="ZmImApp";
ZmApp.SETTING[ZmApp.IM]=ZmSetting.IM_ENABLED;
ZmApp.LOAD_SORT[ZmApp.IM]=47;
ZmApp.QS_ARG[ZmApp.IM]="chat";
ZmImApp.BUDDY_SORT_PRESENCE="presence";
ZmImApp.BUDDY_SORT_NAME="name";
ZmImApp.prototype=new ZmApp;
ZmImApp.prototype.constructor=ZmImApp;
ZmImApp.loggedIn=function(){
return ZmImApp.INSTANCE&&ZmImApp.INSTANCE._serviceController&&ZmImApp.INSTANCE._serviceController.service.isLoggedIn()&&(appCtxt.get(ZmSetting.IM_PREF_AUTO_LOGIN)||ZmImApp.INSTANCE._roster)
};
ZmImApp.prototype.toString=function(){
return"ZmImApp"
};
ZmImApp.prototype._defineAPI=function(){
AjxDispatcher.registerMethod("GetRoster","IMCore",new AjxCallback(this,this.getRoster))
};
ZmImApp.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.CONFERENCE_ITEM,{
app:ZmApp.IM,nameKey:"imConference",defaultFolder:ZmOrganizer.ID_INBOX,orgPackage:"IM",treeController:"ZmConferenceTreeController",labelKey:"imConferences",itemsKey:"messages",hasColor:false,treeType:ZmOrganizer.CONFERENCE_ITEM,compareFunc:"ZmConferenceService.sortCompare",displayOrder:900}
)
};
ZmImApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_IM_NEW_CHAT,{
textKey:"imNewChat",image:"ImFree2Chat",shortcut:ZmKeyMap.NEW_CHAT}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_AWAY,{
textKey:"imStatusAway",image:"ImAway"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_CHAT,{
textKey:"imStatusChat",image:"ImFree2Chat"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_DND,{
textKey:"imStatusDND",image:"ImDnd"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_INVISIBLE,{
textKey:"imStatusInvisible",image:"ImInvisible"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_MENU,{
textKey:"imPresence"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_OFFLINE,{
textKey:"imStatusOffline",image:"Offline"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_ONLINE,{
textKey:"imStatusOnline",image:"ImAvailable"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_XA,{
textKey:"imStatusExtAway",image:"ImExtendedAway"}
);
ZmOperation.registerOp(ZmId.OP_IM_LOGOUT_YAHOO,{
textKey:"imLogoutYahoo",image:"Logoff"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_CUSTOM_MRU,{
image:"ImAvailable"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_MENU,{
image:"ImAvailable"}
);
ZmOperation.registerOp(ZmId.OP_NEW_ROSTER_GROUP,{
textKey:"imNewGroup",image:"ImGroup"}
);
ZmOperation.registerOp(ZmId.OP_NEW_ROSTER_ITEM,{
textKey:"newRosterItem",image:"AddBuddy",tooltipKey:"imNewBuddyTooltip"}
);
ZmOperation.registerOp(ZmId.OP_IM_CREATE_CONTACT,{
textKey:"addToNewContact",image:"NewContact"}
);
ZmOperation.registerOp(ZmId.OP_IM_ADD_TO_CONTACT,{
textKey:"addToExistingContact",image:"Edit"}
);
ZmOperation.registerOp(ZmId.OP_IM_EDIT_CONTACT,{
textKey:"editContact",image:"Edit"}
);
ZmOperation.registerOp(ZmId.OP_IM_TOGGLE_OFFLINE,{
textKey:"imToggleOffline"}
);
ZmOperation.registerOp(ZmId.OP_IM_TOGGLE_BLOCKED,{
textKey:"imToggleBlocked"}
);
ZmOperation.registerOp(ZmId.OP_IM_SORT_BY_PRESENCE,{
textKey:"imSortListByPresence"}
);
ZmOperation.registerOp(ZmId.OP_IM_SORT_BY_NAME,{
textKey:"imSortListByName"}
);
ZmOperation.registerOp(ZmId.OP_IM_PRESENCE_CUSTOM_MSG,{
textKey:"imCustomStatusMsg",image:"ImAvailable"}
);
ZmOperation.registerOp(ZmId.OP_IM_BLOCK_BUDDY,{
textKey:"imBlock",image:"BlockUser"}
);
ZmOperation.registerOp(ZmId.OP_IM_UNBLOCK_BUDDY,{
textKey:"imUnblock",image:"AllowUser"}
);
ZmOperation.registerOp(ZmId.OP_IM_HTML,{
image:"TextFormat",tooltipKey:"changeEditorMode"}
);
ZmOperation.registerOp(ZmId.OP_IM_DELETE_GROUP,{
image:"Delete",textKey:"del"}
);
ZmOperation.registerOp(ZmId.OP_IM_CLOSE_ALL_CHATS,{
textKey:"imCloseAllChats"}
);
ZmOperation.registerOp(ZmId.OP_IM_CLOSE_OTHER_CHATS,{
textKey:"imCloseOtherChats"}
);
ZmOperation.registerOp(ZmId.OP_IM_CLOSE_CHAT,{
textKey:"imCloseChat"}
);
ZmOperation.registerOp(ZmId.OP_IM_BUDDY_ARCHIVE,{
textKey:"imBuddyArchive",image:"ChatFolder"}
);
ZmOperation.registerOp(ZmId.OP_IM_BUDDY_LIST,{
textKey:"buddyList",image:"ImGroup"}
);
ZmOperation.registerOp(ZmId.OP_IM_INVITE,{
textKey:"imInvitation",image:"AllowUser"}
)
};
ZmImApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.CHAT,{
app:ZmApp.IM,nameKey:"chat",icon:"ImStartChat",soapCmd:"ItemAction",itemClass:"ZmChat",node:"chat",organizer:ZmOrganizer.ROSTER,searchType:"chat"}
)
};
ZmImApp.prototype._registerApp=function(){
var t={};
t[ZmOperation.IM_NEW_CHAT]="chat";
var e={};
e[ZmKeyMap.NEW_CHAT]=ZmOperation.IM_NEW_CHAT;
e[ZmKeyMap.NEW_ROSTER_ITEM]=ZmOperation.NEW_ROSTER_ITEM;
e[ZmKeyMap.PRESENCE_MENU]=ZmOperation.IM_PRESENCE_MENU;
ZmApp.registerApp(ZmApp.IM,{
mainPkg:"IM",defaultSort:50,newItemOps:t,actionCodes:e}
)
};
ZmImApp.prototype._registerSettings=function(e){
e=e||appCtxt.getSettings();
e.registerSetting("IM_PREF_NOTIFY_SOUNDS",{
name:"zimbraPrefIMSoundsEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_FLASH_BROWSER",{
name:"zimbraPrefIMFlashTitle",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_DESKTOP_ALERT",{
name:"zimbraPrefIMToasterEnabled",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_INSTANT_NOTIFY",{
name:"zimbraPrefIMInstantNotify",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_AUTO_LOGIN",{
name:"zimbraPrefIMAutoLogin",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("IM_PREF_NOTIFY_PRESENCE",{
name:"zimbraPrefIMNotifyPresence",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_NOTIFY_STATUS",{
name:"zimbraPrefIMNotifyStatus",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_LOGCHATS_ENABLED",{
name:"zimbraPrefIMLogChats",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_REPORT_IDLE",{
name:"zimbraPrefIMReportIdle",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("IM_PREF_IDLE_TIMEOUT",{
name:"zimbraPrefIMIdleTimeout",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:10}
);
e.registerSetting("IM_PREF_IDLE_STATUS",{
name:"zimbraPrefIMIdleStatus",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:"xa"}
);
e.registerSetting("IM_CUSTOM_STATUS_MRU",{
name:"zimbraPrefIMCustomStatusMessage",type:ZmSetting.T_PREF,dataType:ZmSetting.D_LIST}
);
e.registerSetting("IM_PREF_BUDDY_SORT",{
name:"zimbraPrefIMBuddyListSort",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmImApp.BUDDY_SORT_NAME,isImplicit:true}
);
e.registerSetting("IM_PREF_HIDE_OFFLINE",{
name:"zimbraPrefIMHideOfflineBuddies",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isImplicit:true}
);
e.registerSetting("IM_PREF_HIDE_BLOCKED",{
name:"zimbraPrefIMHideBlockedBuddies",type:ZmSetting.T_PREF,dataType:ZmSetting.D_BOOLEAN,defaultValue:false,isImplicit:true}
);
e.registerSetting("IM_YAHOO_ID",{
name:"zimbraPrefIMYahooId",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:""}
);
var t=new AjxListener(this,this._onSettingChange);
e.getSetting(ZmSetting.IM_PREF_INSTANT_NOTIFY).addChangeListener(t);
e.getSetting(ZmSetting.IM_PREF_REPORT_IDLE).addChangeListener(t);
e.getSetting(ZmSetting.IM_PREF_IDLE_TIMEOUT).addChangeListener(t)
};
ZmImApp.prototype._registerPrefs=function(){
var t={
IM:{
title:ZmMsg.im,icon:"ImStartChat",templateId:"prefs.Pages#IM",priority:90,precondition:ZmSetting.IM_ENABLED,prefs:[ZmSetting.IM_PREF_INSTANT_NOTIFY,ZmSetting.IM_PREF_AUTO_LOGIN,ZmSetting.IM_PREF_FLASH_BROWSER,ZmSetting.IM_PREF_DESKTOP_ALERT,ZmSetting.IM_PREF_NOTIFY_PRESENCE,ZmSetting.IM_PREF_NOTIFY_STATUS,ZmSetting.IM_PREF_LOGCHATS_ENABLED,ZmSetting.IM_PREF_REPORT_IDLE,ZmSetting.IM_PREF_IDLE_TIMEOUT,ZmSetting.IM_PREF_IDLE_STATUS,ZmSetting.IM_PREF_NOTIFY_SOUNDS]}};
for(var e in t){
ZmPref.registerPrefSection(e,t[e])
}
ZmPref.registerPref("IM_PREF_NOTIFY_SOUNDS",{
displayName:ZmMsg.playSound,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_INSTANT_NOTIFY",{
displayName:ZmMsg.imPrefInstantNotify,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:function(){
return appCtxt.get(ZmSetting.INSTANT_NOTIFY)&&ZmImApp.INSTANCE.getServiceController().capabilities[ZmImServiceController.INSTANT_NOTIFY]
}}
);
ZmPref.registerPref("IM_PREF_AUTO_LOGIN",{
displayName:ZmMsg.imPrefAutoLogin,displayContainer:ZmPref.TYPE_CHECKBOX,precondition:function(){
return ZmImApp.INSTANCE.getServiceController().capabilities[ZmImServiceController.AUTO_LOGIN_PREF]
}}
);
ZmPref.registerPref("IM_PREF_FLASH_BROWSER",{
displayName:ZmMsg.flashBrowser,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_DESKTOP_ALERT",{
displayName:ZmMsg.showPopup,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_NOTIFY_PRESENCE",{
displayName:ZmMsg.imPrefNotifyPresence,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_NOTIFY_STATUS",{
displayName:ZmMsg.imPrefNotifyStatus,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_LOGCHATS_ENABLED",{
displayName:ZmMsg.imPrefLogChats,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_REPORT_IDLE",{
displayName:ZmMsg.imPrefReportIdle,displayContainer:ZmPref.TYPE_CHECKBOX}
);
ZmPref.registerPref("IM_PREF_IDLE_TIMEOUT",{
displayName:ZmMsg.imPrefIdleTimeout,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.imPrefIdleTimeoutMinutes,ZmMsg.imPrefIdleTimeoutMinutes,ZmMsg.imPrefIdleTimeoutMinutes,ZmMsg.imPrefIdleTimeoutMinutes,ZmMsg.imPrefIdleTimeoutMinutes,ZmMsg.imPrefIdleTimeoutMinutes],options:[1,5,10,20,30,60],precondition:ZmSetting.IM_PREF_REPORT_IDLE}
);
ZmPref.registerPref("IM_PREF_IDLE_STATUS",{
displayName:ZmMsg.imPrefIdleStatus,displayContainer:ZmPref.TYPE_SELECT,displayOptions:[ZmMsg.imStatusAway,ZmMsg.imStatusExtAway,ZmMsg.imStatusOffline],options:["away","xa","offline"],precondition:ZmSetting.IM_PREF_REPORT_IDLE}
)
};
ZmImApp.prototype._onSettingChange=function(e){
if(e.type!=ZmEvent.S_SETTING){
return
}
var a=e.source.id;
var t=appCtxt.get(a);
if(a==ZmSetting.IM_PREF_INSTANT_NOTIFY&&appCtxt.get(ZmSetting.INSTANT_NOTIFY)){
appCtxt.getAppController().setInstantNotify(t)
}else{
if(this._roster&&a==ZmSetting.IM_PREF_REPORT_IDLE){
if(!t){
this._roster._idleTimer.kill()
}else{
this._roster._idleTimer.resurrect(appCtxt.get(ZmSetting.IM_PREF_IDLE_TIMEOUT))
}}else{
if(this._roster&&a==ZmSetting.IM_PREF_IDLE_TIMEOUT){
this._roster._idleTimer.timeout=parseInt(t)*60*1000
}}}};
ZmImApp.prototype.refresh=function(){
delete this._lastSeq;
if(this._serviceController&&this._serviceController.service.isLoggedIn()){
this._roster.refresh()
}};
ZmImApp.prototype.handleOp=function(e){
switch(e){
case ZmOperation.IM_NEW_CHAT:this.prepareVisuals();
this.getImController()._imNewChatListener();
break;
case ZmOperation.NEW_ROSTER_ITEM:this.prepareVisuals();
this.getImController()._newRosterItemListener();
break;
case ZmOperation.IM_PRESENCE_MENU:if(this._presenceButton){
this._presenceButton.popup()
}
break
}};
ZmImApp.prototype.postNotify=function(e){
if(e.im){
if(!this._lastSeq||(e.seq>this._lastSeq)){
this._lastSeq=e.seq;
AjxDispatcher.run("GetRoster").pushNotification(e.im)
}}};
ZmImApp.prototype.addComponents=function(e){
this._taskbarController=new ZmTaskbarController(e)
};
ZmImApp.prototype.startup=function(){
if(appCtxt.get(ZmSetting.IM_PREF_AUTO_LOGIN)){
AjxTimedAction.scheduleAction(new AjxTimedAction(this,this._autoLogin),1000)
}};
ZmImApp.prototype.login=function(e){
this.getServiceController().login(e)
};
ZmImApp.prototype._autoLogin=function(){
var e=new AjxCallback(this,this._postLoadAutoLogin);
AjxDispatcher.require(["IMCore"],true,e)
};
ZmImApp.prototype._postLoadAutoLogin=function(){
this.login({
auto:true}
)
};
ZmImApp.prototype.getImController=function(){
if(!this._imController){
AjxDispatcher.require(["IMCore","IM"]);
this._imController=new ZmImController()
}
return this._imController
};
ZmImApp.prototype.isActive=function(){
return this._active
};
ZmImApp.prototype.getRoster=function(){
return this._roster
};
ZmImApp.prototype.hasRoster=function(){
return !!this._roster
};
ZmImApp.prototype.getServiceController=function(){
if(!window.ZmImServiceController||!this._serviceController){
AjxDispatcher.require(["IMCore"]);
var e=this.getRoster();
this._serviceController=new ZmZimbraImServiceController(e)
}
return this._serviceController
};
ZmImApp.prototype.getService=function(){
return this.getServiceController().service
};
ZmImApp.prototype.getAutoCompleteGroups=function(){
return new ZmRosterTreeGroups(this.getRoster())
};
ZmImApp.prototype.prepareVisuals=function(){
AjxDispatcher.require(["IMCore","IM"])
};
ZmImApp._NEW_IM="NEW_IM";
ZmImApp._NEW_BUDDY_FROM_IM_ADDRESS="NEW_BUDDY_FROM_IM_ADDRESS";
ZmImApp._NEW_BUDDY="NEW_BUDDY";
ZmImApp.updateImMenuItemByContact=function(n,e,t){
var o=ZmImApp._updateImMenuItemByLogin(n);
if(o){
return
}
var i=e.getBuddy();
if(i){
ZmImApp._updateImMenuItemByBuddy(n,i);
return
}
var s=e.getIMAddress();
if(s){
n.setText(ZmImApp._getNewBuddyText(e.getFullName()));
n.setImage("NewContact");
n._imData={
op:ZmImApp._NEW_BUDDY_FROM_IM_ADDRESS,contact:e,imAddress:s};
return
}
var a=t&&t.getName()?t.getName():e.getFullName();
n.setText(ZmImApp._getNewBuddyText(a));
n.setImage("NewContact");
n._imData={
op:ZmImApp._NEW_BUDDY,address:t,name:a}
};
ZmImApp.updateImMenuItemByAddress=function(o,e,a,r){
var i=ZmImApp._updateImMenuItemByLogin(o);
if(i){
if(r){
r.run()
}
return
}
var t=AjxDispatcher.run("GetRoster").getRosterItem(e.getAddress());
if(t){
ZmImApp._updateImMenuItemByBuddy(o,t);
if(r){
r.run()
}
return
}
var s=appCtxt.getApp(ZmApp.CONTACTS);
if(s){
if(r){
var n=new AjxCallback(null,ZmImApp.handleResponseGetContact,[o,e,a,r]);
s.getContactByEmail(e.getAddress(),n)
}
return true
}else{
ZmImApp.handleResponseGetContact(o,e,a)
}};
ZmImApp.handleResponseGetContact=function(i,t,a,o,e){
if(e){
ZmImApp.updateImMenuItemByContact(i,e,t)
}else{
if(a){
i.setText(ZmImApp._getNewBuddyText(t.getName()||t.getAddress()));
i.setImage("NewContact");
i._imData={
op:ZmImApp._NEW_BUDDY,address:t,name:t.getName()}
}}
if(o){
o.run()
}};
ZmImApp.getImMenuItemListener=function(){
ZmImApp._imMenuItemListenerObj=ZmImApp._imMenuItemListenerObj||new AjxListener(null,ZmImApp._imMenuItemListener);
return ZmImApp._imMenuItemListenerObj
};
ZmImApp._updateImMenuItemByBuddy=function(t,e){
ZmImApp._newChatFormat=ZmImApp._newChatFormat||new AjxMessageFormat(ZmMsg.imNewChatName);
t.setText(ZmImApp._newChatFormat.format(e.getDisplayName()));
t.setImage(e.getPresence().getIcon());
t._imData={
op:ZmImApp._NEW_IM,buddy:e}
};
ZmImApp._updateImMenuItemByLogin=function(e){
if(!ZmImApp.loggedIn()){
e.setText(ZmMsg.newIM);
e.setImage("ImStartChat");
e.setEnabled(false);
e._imData=null;
return true
}
e.setEnabled(true);
return false
};
ZmImApp._getNewBuddyText=function(e){
ZmImApp._newBuddyFormat=ZmImApp._newBuddyFormat||new AjxMessageFormat(ZmMsg.imNewBuddy);
return ZmImApp._newBuddyFormat.format(e)
};
ZmImApp._imMenuItemListener=function(t){
ZmImApp.INSTANCE.prepareVisuals();
var e=t.dwtObj._imData;
if(e){
switch(e.op){
case ZmImApp._NEW_IM:ZmTaskbarController.INSTANCE.chatWithRosterItem(e.buddy);
break;
case ZmImApp._NEW_BUDDY_FROM_IM_ADDRESS:var i=ZmImAddress.parse(e.imAddress);
var a=i?{
address:i.screenName,name:e.contact.getFullName(),service:i.service}
:{};
ZmImApp.INSTANCE.getImController()._newRosterItemListener(a);
break;
case ZmImApp._NEW_BUDDY:a={
address:e.address?e.address.getAddress():null,name:e.name};
ZmImApp.INSTANCE.getImController()._newRosterItemListener(a);
break
}}}
}
if(AjxPackage.define("zimbraMail.briefcase.ZmBriefcaseApp")){
ZmBriefcaseApp=function(t,e){
ZmApp.call(this,ZmApp.BRIEFCASE,t,e)
};
ZmBriefcaseApp.prototype=new ZmApp;
ZmBriefcaseApp.prototype.constructor=ZmBriefcaseApp;
ZmBriefcaseApp.prototype.isZmBriefcaseApp=true;
ZmBriefcaseApp.prototype.toString=function(){
return"ZmBriefcaseApp"
};
ZmEvent.S_BRIEFCASE_ITEM=ZmId.ITEM_BRIEFCASE;
ZmItem.BRIEFCASE_ITEM=ZmEvent.S_BRIEFCASE_ITEM;
ZmItem.BRIEFCASE=ZmItem.BRIEFCASE_ITEM;
ZmEvent.S_BRIEFCASE_REVISION_ITEM=ZmId.ITEM_BRIEFCASE_REV;
ZmItem.BRIEFCASE_REVISION_ITEM=ZmEvent.S_BRIEFCASE_REVISION_ITEM;
ZmItem.BRIEFCASE_REVISION=ZmItem.BRIEFCASE_REVISION_ITEM;
ZmOrganizer.BRIEFCASE=ZmId.ORG_BRIEFCASE;
ZmApp.BRIEFCASE=ZmId.APP_BRIEFCASE;
ZmApp.CLASS[ZmApp.BRIEFCASE]="ZmBriefcaseApp";
ZmApp.SETTING[ZmApp.BRIEFCASE]=ZmSetting.BRIEFCASE_ENABLED;
ZmApp.LOAD_SORT[ZmApp.BRIEFCASE]=65;
ZmApp.QS_ARG[ZmApp.BRIEFCASE]="briefcase";
ZmApp.BUTTON_ID[ZmApp.BRIEFCASE]=ZmId.BRIEFCASE_APP;
ZmBriefcaseApp.prototype._defineAPI=function(){
AjxDispatcher.setPackageLoadFunction("BriefcaseCore",new AjxCallback(this,this._postLoadCore));
AjxDispatcher.setPackageLoadFunction("Briefcase",new AjxCallback(this,this._postLoad,ZmOrganizer.BRIEFCASE));
AjxDispatcher.registerMethod("GetBriefcaseController",["BriefcaseCore","Briefcase"],new AjxCallback(this,this.getBriefcaseController))
};
ZmBriefcaseApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_NEW_BRIEFCASE,{
textKey:"newBriefcase",image:"NewFolder",tooltipKey:"newBriefcaseTooltip",shortcut:ZmKeyMap.NEW_BRIEFCASE}
);
ZmOperation.registerOp(ZmId.OP_NEW_FILE,{
textKey:"uploadNewFile",tooltipKey:"uploadNewFile",textPrecedence:70,showImageInToolbar:true,showTextInToolbar:true}
);
ZmOperation.registerOp(ZmId.OP_NEW_DOC,{
textKey:"newDocument",tooltipKey:"newDocument",image:"NewDoc",shortcut:ZmKeyMap.NEW_DOC,textPrecedence:12}
);
ZmOperation.registerOp(ZmId.OP_SHARE_BRIEFCASE,{
textKey:"shareFolder",image:"SharedMailFolder"}
,ZmSetting.SHARING_ENABLED);
ZmOperation.registerOp(ZmId.OP_OPEN_FILE,{
textKey:"openFile",tooltipKey:"openFileTooltip",image:"NewDoc"}
);
ZmOperation.registerOp(ZmId.OP_SAVE_FILE,{
textKey:"saveFile",tooltipKey:"saveFileTooltip",image:"DownArrow"}
);
ZmOperation.registerOp(ZmId.OP_NEW_BRIEFCASE_WIN,{
textKey:"detachTT",tooltipKey:"detach",image:"OpenInNewWindow"}
);
ZmOperation.registerOp(ZmId.OP_VIEW_FILE_AS_HTML,{
textKey:"viewFileAsHtml",tooltipKey:"viewAsHtml",image:"HtmlDoc"}
);
ZmOperation.registerOp(ZmId.OP_SEND_FILE,{
textKey:"sendLink",tooltipKey:"sendLink",image:"Send"}
);
ZmOperation.registerOp(ZmId.OP_SEND_FILE_AS_ATT,{
textKey:"sendAsAttachment",tooltipKey:"sendAsAttachment",image:"Attachment"}
);
ZmOperation.registerOp(ZmId.OP_SEND_FILE_MENU,{
textKey:"send",image:"Send",textPrecedence:75}
);
ZmOperation.registerOp(ZmId.OP_EDIT_FILE,{
textKey:"edit",image:"Edit"}
);
ZmOperation.registerOp(ZmId.OP_RENAME_FILE,{
textKey:"rename",image:"FileRename"}
);
ZmOperation.registerOp(ZmId.OP_CHECKIN,{
textKey:"checkInFile",image:"Checkin"}
);
ZmOperation.registerOp(ZmId.OP_CHECKOUT,{
textKey:"checkOutFile",image:"Checkout"}
);
ZmOperation.registerOp(ZmId.OP_DISCARD_CHECKOUT,{
textKey:"checkOutFileDiscard",image:"DiscardCheckout"}
);
ZmOperation.registerOp(ZmId.OP_VERSION_HISTORY,{
textKey:"versionHistory",image:"VersionHistory"}
);
ZmOperation.registerOp(ZmId.OP_RESTORE_VERSION,{
textKey:"restoreCurrentVersion",image:"RestoreVersion"}
);
ZmOperation.registerOp(ZmId.OP_DELETE_VERSION,{
textKey:"deleteVersion",image:"Delete"}
)
};
ZmBriefcaseApp.prototype._registerSettings=function(e){
e=e||appCtxt.getSettings();
e.registerSetting("DOCS_ENABLED",{
name:"zimbraFeatureBriefcaseDocsEnabled",type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:true}
);
e.registerSetting("PREVIEW_ENABLED",{
type:ZmSetting.T_COS,dataType:ZmSetting.D_BOOLEAN,defaultValue:false}
);
e.registerSetting("READING_PANE_LOCATION_BRIEFCASE",{
name:"zimbraPrefBriefcaseReadingPaneLocation",type:ZmSetting.T_PREF,dataType:ZmSetting.D_STRING,defaultValue:ZmSetting.RP_BOTTOM,isImplicit:true}
)
};
ZmBriefcaseApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.BRIEFCASE_ITEM,{
app:ZmApp.BRIEFCASE,nameKey:"file",icon:"GenericDoc",soapCmd:"ItemAction",itemClass:"ZmBriefcaseItem",node:"doc",organizer:ZmOrganizer.BRIEFCASE,dropTargets:[ZmOrganizer.TAG,ZmOrganizer.BRIEFCASE],searchType:"document",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("BriefcaseCore");
return new ZmList(ZmItem.BRIEFCASE_ITEM,e)
}
,this)}
)
};
ZmBriefcaseApp.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.BRIEFCASE,{
app:ZmApp.BRIEFCASE,nameKey:"folder",defaultFolder:ZmOrganizer.ID_BRIEFCASE,soapCmd:"FolderAction",firstUserId:256,orgClass:"ZmBriefcase",orgPackage:"BriefcaseCore",treeController:"ZmBriefcaseTreeController",labelKey:"briefcaseFolders",itemsKey:"files",treeType:ZmOrganizer.FOLDER,views:["document"],folderKey:"briefcase",mountKey:"mountFolder",createFunc:"ZmOrganizer.create",compareFunc:"ZmFolder.sortCompareNonMail",deferrable:true,newOp:ZmOperation.NEW_BRIEFCASE,displayOrder:100,hasColor:true,defaultColor:ZmOrganizer.C_NONE,childWindow:true}
)
};
ZmBriefcaseApp.prototype._setupSearchToolbar=function(){
ZmSearchToolBar.addMenuItem(ZmItem.BRIEFCASE_ITEM,{
msgKey:"searchBriefcase",tooltipKey:"searchForFiles",icon:"Doc",shareIcon:null,setting:ZmSetting.BRIEFCASE_ENABLED,id:ZmId.getMenuItemId(ZmId.SEARCH,ZmId.ITEM_BRIEFCASE),disableOffline:true}
)
};
ZmBriefcaseApp.prototype._registerApp=function(){
var a={};
a[ZmOperation.NEW_DOC]="document";
var t={};
t[ZmOperation.NEW_BRIEFCASE]="briefcase";
var e={};
e[ZmKeyMap.NEW_FILE]=ZmOperation.NEW_FILE;
e[ZmKeyMap.NEW_BRIEFCASE]=ZmOperation.NEW_BRIEFCASE;
e[ZmKeyMap.NEW_DOC]=ZmOperation.NEW_DOC;
ZmApp.registerApp(ZmApp.BRIEFCASE,{
mainPkg:"Briefcase",nameKey:"briefcase",icon:"Briefcase",textPrecedence:30,chooserTooltipKey:"gotoBriefcase",defaultSearch:ZmItem.BRIEFCASE_ITEM,organizer:ZmOrganizer.BRIEFCASE,overviewTrees:[ZmOrganizer.BRIEFCASE,ZmOrganizer.TAG],searchTypes:[ZmItem.BRIEFCASE_ITEM],newItemOps:a,newOrgOps:t,actionCodes:e,gotoActionCode:ZmKeyMap.GOTO_BRIEFCASE,newActionCode:ZmKeyMap.NEW_DOC,chooserSort:70,defaultSort:60,searchResultsTab:true}
)
};
ZmBriefcaseApp.prototype.createNotify=function(o,s){
if(!o.folder&&!o.doc&&!o.link){
return
}
if(!s&&!this._noDefer&&this._deferNotifications("create",o)){
return
}
for(var e in o){
var n=o[e];
for(var a=0;
(n!=null)&&a<n.length;
a++){
var t=n[a];
if(appCtxt.cacheGet(t.id)){
continue
}
if(e=="folder"){
this._handleCreateFolder(t,ZmOrganizer.BRIEFCASE)
}else{
if(e=="link"){
this._handleCreateLink(t,ZmOrganizer.BRIEFCASE)
}else{
if(e=="doc"){
var r=AjxDispatcher.run("GetBriefcaseController");
r.handleCreateNotify(t)
}}}}}};
ZmBriefcaseApp.prototype.modifyNotify=function(a,e){
if(!a.doc){
return
}
var t=AjxDispatcher.run("GetBriefcaseController");
t.handleModifyNotify(a)
};
ZmBriefcaseApp.prototype.handleOp=function(a){
switch(a){
case ZmOperation.NEW_FILE:var e=new AjxCallback(this,this._handleNewItem);
AjxDispatcher.require(["BriefcaseCore","Briefcase"],false,e,null,true);
break;
case ZmOperation.NEW_BRIEFCASE:var e=new AjxCallback(this,this._handleLoadNewBriefcase);
AjxDispatcher.require(["BriefcaseCore","Briefcase"],false,e,null,true);
break;
case ZmOperation.NEW_DOC:var t=new AjxCallback(this,this.newDoc,[ZmMimeTable.APP_ZIMBRA_DOC]);
AjxDispatcher.require(["BriefcaseCore","Briefcase"],true,t,null);
break
}};
ZmBriefcaseApp.prototype.newDoc=function(h,e,s){
var t=appCtxt.getOverviewController();
var i=t.getTreeController(ZmOrganizer.BRIEFCASE);
var a=ZmOrganizer.ID_BRIEFCASE;
if(i){
var o=i.getTreeView(this.getOverviewId());
var r=o?o.getSelected():null;
a=r?r.id:ZmOrganizer.ID_BRIEFCASE
}
if(AjxDispatcher.run("GetBriefcaseController").chkFolderPermission(a)){
if(h==ZmMimeTable.APP_ZIMBRA_DOC){
var n=appCtxt.getNewWindow(false,null,null,s);
n.command="documentEdit";
n.params={
name:e,folderId:a}
}}};
ZmBriefcaseApp.getDocWindowFeatures=function(){
return["width=",(screen.width||640),",","height=",(screen.height||480),",","scrollbars=yes,","resizable=yes"].join("")
};
ZmBriefcaseApp.prototype._handleNewItem=function(){
appCtxt.getAppViewMgr().popView(true,ZmId.VIEW_LOADING);
AjxDispatcher.run("GetBriefcaseController").__popupUploadDialog(ZmMsg.uploadFileToBriefcase)
};
ZmBriefcaseApp.prototype._handleLoadNewBriefcase=function(){
appCtxt.getAppViewMgr().popView(true,ZmId.VIEW_LOADING);
if(!this._newBriefcaseCb){
this._newBriefcaseCb=this._newBriefcaseCallback.bind(this)
}
ZmController.showDialog(appCtxt.getNewBriefcaseDialog(),this._newBriefcaseCb)
};
ZmBriefcaseApp.prototype.launch=function(a,i){
this._setLaunchTime(this.toString(),new Date());
var e=this._handleLoadLaunch.bind(this,i);
AjxDispatcher.require(["BriefcaseCore","Briefcase"],true,e,null,true);
if(appCtxt.isExternalAccount()){
var t=appCtxt.getAppController().getNewButton();
t.removePullDownMenuOptions()
}};
ZmBriefcaseApp.prototype._handleLoadLaunch=function(e){
this.search();
if(e){
e.run()
}};
ZmBriefcaseApp.prototype.getNewButtonProps=function(){
return{
text:ZmMsg.newDocument,tooltip:ZmMsg.newDocument,icon:"NewDoc",iconDis:"NewDocDis",defaultId:ZmOperation.NEW_DOC,disabled:!this.containsWritableFolder()}
};
ZmBriefcaseApp.prototype.search=function(o){
o=o||{};
var e=o.folderId||(appCtxt.isExternalAccount()?this.getDefaultFolderId():ZmOrganizer.ID_BRIEFCASE);
var t=appCtxt.getById(e);
var i={
query:o.query||t.createQuery(),types:[ZmItem.BRIEFCASE_ITEM],limit:this.getLimit(),searchFor:ZmId.ITEM_BRIEFCASE,callback:o.callback,accountName:o.accountName,noRender:o.noRender};
var a=appCtxt.getSearchController();
a.searchAllAccounts=false;
a.search(i)
};
ZmBriefcaseApp.prototype.showSearchResults=function(t,i,a){
var e=this._handleLoadShowSearchResults.bind(this,t,i,a);
AjxDispatcher.require(["BriefcaseCore","Briefcase"],false,e,null,true)
};
ZmBriefcaseApp.prototype._handleLoadShowSearchResults=function(t,o,a){
var i=a?a.getCurrentViewId():ZmApp.MAIN_SESSION;
var e=AjxDispatcher.run("GetBriefcaseController",i,a);
e.show(t);
this._setLoadedTime(this.toString(),new Date());
if(o){
o.run(e)
}};
ZmBriefcaseApp.prototype.setActive=function(e){};
ZmBriefcaseApp.prototype.getLimit=function(t){
var e=appCtxt.get(ZmSetting.PAGE_SIZE);
return t?e:2*e
};
ZmBriefcaseApp.prototype._newBriefcaseCallback=function(i,a,t){
appCtxt.getNewBriefcaseDialog().popdown();
var e=appCtxt.getOverviewController();
e.getTreeController(ZmOrganizer.BRIEFCASE)._doCreate(i,a,t)
};
ZmBriefcaseApp.prototype.getBriefcaseController=function(t,e){
return this.getSessionController({
controllerClass:"ZmBriefcaseController",sessionId:t||ZmApp.MAIN_SESSION,searchResultsController:e}
)
};
ZmBriefcaseApp.prototype.createFromAttachment=function(i,a,t){
var e=new AjxCallback(this,this._handleCreateFromAttachment,[i,a,t]);
AjxDispatcher.require(["BriefcaseCore","Briefcase"],false,e)
};
ZmBriefcaseApp.prototype._handleCreateFromAttachment=function(a,t,e){
if(this._deferredFolders.length!=0){
this._createDeferredFolders(ZmApp.BRIEFCASE)
}
AjxDispatcher.run("GetBriefcaseController").createFromAttachment(a,t,e)
};
ZmBriefcaseApp.prototype._createDeferredFolders=function(e){
AjxPackage.require("BriefcaseCore");
ZmApp.prototype._createDeferredFolders.call(this,e)
};
ZmBriefcaseApp.prototype.initExternalDndUpload=function(n,m,u,c,e){
var v="";
if(!AjxEnv.supportsHTML5File){
if(c){
c.run()
}
return
}
if(!n){
n=m.files
}
var d=0;
if(n){
var w;
var g=[];
var h={};
var r=ZmAppCtxt.handleWindowOpener();
var o=r.get(ZmSetting.DOCUMENT_SIZE_LIMIT);
var a=AjxDispatcher.run("GetBriefcaseController");
if(!e){
if(a){
e=a.getFolderId()
}
if(!e||e==ZmOrganizer.ID_TRASH){
e=ZmOrganizer.ID_BRIEFCASE
}}
if(this.chkFolderPermission(e)){
var b=appCtxt.getById(e);
var s=appCtxt.getZmUploadManager();
var h=[];
for(var f=0;
f<n.length;
f++){
var l=s.getErrors(n[f],o);
if(l){
h.push(l)
}}
if(h.length>0){
var t=s.createUploadErrorMsg(h,o,"<br>");
var p=appCtxt.getMsgDialog();
p.setMessage(t,DwtMessageDialog.WARNING_STYLE);
p.popup()
}else{
var y={
attachment:false,uploadFolder:b,files:n,notes:"",allResponses:null,start:0,curView:null,preAllCallback:null,initOneUploadCallback:null,progressCallback:null,errorCallback:null,completeOneCallback:null,completeAllCallback:this.uploadSaveDocs.bind(this),completeDocSaveCallback:this._finishUpload.bind(this,null)};
s.upload(y)
}}}};
ZmBriefcaseApp.prototype.chkFolderPermission=function(e){
var a=appCtxt.getById(e);
if(a.isRemote()&&a.isReadOnly()){
var t=appCtxt.getMsgDialog();
t.setMessage(ZmMsg.errorPermissionCreate,DwtMessageDialog.WARNING_STYLE);
t.popup();
return false
}
return true
};
ZmBriefcaseApp.prototype.uploadSaveDocs=function(c,n,s,l){
if(s!=AjxPost.SC_OK){
var d=appCtxt.getAppController().createErrorMessage(ZmItem.BRIEFCASE,s);
this._popupErrorDialog(d,n.errorCallback)
}else{
var h;
if(c){
h=[];
var e=n.files;
if(c.length===e.length){
for(var r=0;
r<e.length;
r++){
var a=e[r];
var o=c[r];
var t=(o&&o.aid);
h.push({
name:a.name,fullname:a.name,notes:n.notes,version:a.version,id:a.id,guid:t,preventDuplicate:a.preventDuplicate}
)
}
n.docFiles=h
}}else{
h=n.docFiles;
if(l){
l=l.split(",");
for(var r=0;
r<h.length;
r++){
h[r].guid=l[r]
}}}
if(n.uploadFolder){
this._uploadSaveDocs2(n)
}else{
this._completeUpload(n)
}}};
ZmBriefcaseApp.prototype._popupErrorDialog=function(a,e){
if(e){
e.run()
}
var t=appCtxt.getMsgDialog();
t.setMessage(a,DwtMessageDialog.CRITICAL_STYLE);
t.popup()
};
ZmBriefcaseApp.prototype._uploadSaveDocs2=function(o){
var n=[];
var h=false;
var r=o.docFiles;
for(var s=0;
s<r.length;
s++){
var a=r[s];
if(a.done){
continue
}
h=true;
var e={
_jsns:"urn:zimbraMail",requestId:s,doc:{}};
var l=e.doc;
if(a.id){
l.id=a.id;
l.ver=a.version
}else{
l.l=o.uploadFolder.id
}
if(a.notes){
l.desc=a.notes
}
l.upload={
id:a.guid};
n.push(e)
}
if(h){
var u={
BatchRequest:{
_jsns:"urn:zimbra",onerror:"continue",SaveDocumentRequest:((n.length==1)?n[0]:n)}};
var d=this._uploadSaveDocsResponse.bind(this,o);
var t={
jsonObj:u,asyncMode:true,callback:d};
var c=appCtxt.getAppController();
c.sendRequest(t)
}else{
this._completeUpload(o)
}};
ZmBriefcaseApp.prototype._uploadSaveDocsResponse=function(T,t){
var f=t&&t._data&&t._data.BatchResponse;
var j=T.docFiles;
if(f&&f.SaveDocumentResponse){
for(var k=0;
k<f.SaveDocumentResponse.length;
k++){
var e=f.SaveDocumentResponse[k];
j[e.requestId].done=true;
j[e.requestId].name=e.doc[0].name;
j[e.requestId].id=e.doc[0].id;
j[e.requestId].ver=e.doc[0].ver;
j[e.requestId].version=e.doc[0].ver
}}
var u=false;
var r=false;
var n=false;
var c=false;
var a=0;
var d=[];
if(f&&f.Fault){
var l=[];
var n=false,o="Unknown",q="Unknown";
for(var k=0;
k<f.Fault.length;
k++){
var h=f.Fault[k];
var w=h.Detail.Error;
a=w.Code;
var g=w.a;
c=(a==ZmCsfeException.LOCKED);
var z=j[h.requestId];
if((a==ZmCsfeException.MAIL_ALREADY_EXISTS)&&z.preventDuplicate){
r=true
}else{
if(a==ZmCsfeException.MAIL_ALREADY_EXISTS||a==ZmCsfeException.MODIFY_CONFLICT){
for(var m in g){
var y=g[m];
switch(y.n){
case"itemId":z.id=y._content;
break;
case"id":z.id=y._content;
break;
case"ver":z.version=y._content;
break;
case"name":z.name=y._content;
break
}}
z.version=z.version||1;
d.push(z)
}else{
if(a==ZmCsfeException.MAIL_QUOTA_EXCEEDED){
u=true
}else{
if(a===ZmCsfeException.UPLOAD_REJECTED){
n=true;
for(var m in g){
var y=g[m];
switch(y.n){
case"reason":q=y._content;
break;
case"name":o=y._content;
break
}}}}
l[h.requestId]=h
}}}}
if(T.preResolveConflictCallback){
T.preResolveConflictCallback.run()
}
if(u){
this._popupErrorDialog(ZmMsg.errorQuotaExceeded,T.errorCallback);
return
}else{
if(r){
this._popupErrorDialog(AjxMessageFormat.format(ZmMsg.itemWithFileNameExits,z.name),T.errorCallback);
return
}else{
if(c){
this._popupErrorDialog(ZmMsg.errorItemLocked,T.errorCallback);
return
}else{
if(n){
var s=AjxMessageFormat.format(ZmMsg.uploadRejectedError,[o,q]);
this._popupErrorDialog(s,T.errorCallback);
return
}else{
if(a==ZmCsfeException.SVC_PERM_DENIED){
this._popupErrorDialog(ZmMsg.errorPermissionDenied,T.errorCallback);
return
}}}}}
var v=d.length;
var b=T.conflictAction||ZmBriefcaseApp.ACTION_KEEP_MINE;
if(v>0&&b==ZmBriefcaseApp.ACTION_ASK){
var x=appCtxt.getUploadConflictDialog();
x.popup(T.uploadFolder,d,this._uploadSaveDocs2.bind(this,T))
}else{
if(v>0&&b==ZmBriefcaseApp.ACTION_KEEP_MINE){
if(T.conflictAction){
this._shieldSaveDocs(T)
}else{
this._uploadSaveDocs2(T)
}}else{
this._completeUpload(T)
}}};
ZmBriefcaseApp.prototype._shieldSaveDocs=function(t){
var e=appCtxt.getYesNoMsgDialog();
e.reset();
e.setButtonListener(DwtDialog.YES_BUTTON,new AjxListener(this,this._shieldSaveDocsYesCallback,[e,t]));
e.setMessage(ZmMsg.uploadConflictShield,DwtMessageDialog.WARNING_STYLE,ZmMsg.uploadConflict);
e.popup()
};
ZmBriefcaseApp.prototype._shieldSaveDocsYesCallback=function(t,e){
this._uploadSaveDocs2(e);
t.popdown()
};
ZmBriefcaseApp.prototype._completeUpload=function(e){
if(e.completeDocSaveCallback){
e.completeDocSaveCallback.run(e.docFiles,e.uploadFolder)
}};
ZmBriefcaseApp.prototype._finishUpload=function(e,o,s){
var n=[];
for(var a in o){
var t=o[a].name;
n.push(t)
}
this._handlePostUpload(s,n,o);
if(e){
e(o)
}};
ZmBriefcaseApp.prototype._handlePostUpload=function(a,t,e){
var i=ZmMsg.successfullyUploaded;
if(e.length>1){
i=AjxMessageFormat.format(ZmMsg.successfullyUploadedFiles,e.length)
}
appCtxt.setStatusMsg(i,ZmStatusView.LEVEL_INFO);
var o=AjxDispatcher.run("GetBriefcaseController");
o.resetSelection()
};
ZmBriefcaseApp.ACTION_KEEP_MINE="mine";
ZmBriefcaseApp.ACTION_KEEP_THEIRS="theirs";
ZmBriefcaseApp.ACTION_ASK="ask"
}
if(AjxPackage.define("zimbraMail.voicemail.ZmVoiceApp")){
ZmVoiceApp=function(t,e){
this.phones=[];
this._nameToPhone={};
this.accordionItem=null;
this.soapInfo={
method:"SearchVoiceRequest",namespace:"urn:zimbraVoice",response:"SearchVoiceResponse",additional:null};
this._storeprincipal=null;
ZmApp.call(this,ZmApp.VOICE,t,e)
};
ZmEvent.S_VOICEMAIL=ZmId.APP_VOICE;
ZmItem.VOICEMAIL=ZmId.ITEM_VOICEMAIL;
ZmEvent.S_CALL=ZmId.ITEM_CALL;
ZmItem.CALL=ZmEvent.S_CALL;
ZmOrganizer.VOICE=ZmEvent.S_VOICEMAIL;
ZmApp.VOICE="Voice";
ZmApp.CLASS[ZmApp.VOICE]="ZmVoiceApp";
ZmApp.SETTING[ZmApp.VOICE]=ZmSetting.VOICE_ENABLED;
ZmApp.UPSELL_SETTING[ZmApp.VOICE]=ZmSetting.VOICE_UPSELL_ENABLED;
ZmApp.LOAD_SORT[ZmApp.VOICE]=80;
ZmApp.QS_ARG[ZmApp.VOICE]="voice";
ZmVoiceApp.overviewFallbackApp=ZmApp.PORTAL;
ZmVoiceApp.prototype=new ZmApp;
ZmVoiceApp.prototype.constructor=ZmVoiceApp;
ZmVoiceApp.prototype.isZmVoiceApp=true;
ZmVoiceApp.prototype.toString=function(){
return"ZmVoiceApp"
};
ZmVoiceApp.AUDIO_MP3_FORMAT="audio/mpeg";
ZmVoiceApp.AUDIO_WAV_FORMAT="audio/wav";
ZmVoiceApp.ERROR_CODE_AUTH="voice.UNABLE_TO_AUTH";
ZmVoiceApp.audioType=ZmVoiceApp.AUDIO_MP3_FORMAT;
ZmVoiceApp.hasTrashFolder=false;
ZmVoiceApp.prototype._defineAPI=function(){
AjxDispatcher.setPackageLoadFunction("Voicemail",new AjxCallback(this,this._postLoadCore));
AjxDispatcher.registerMethod("GetVoiceController","Voicemail",new AjxCallback(this,this.getVoiceController));
AjxDispatcher.registerMethod("GetCallListController","Voicemail",new AjxCallback(this,this.getCallListController))
};
ZmVoiceApp.prototype._registerItems=function(){
ZmItem.registerItem(ZmItem.VOICEMAIL,{
app:ZmApp.VOICE,nameKey:"voicemail",icon:"Voicemail",soapCmd:"VoiceMsgAction",itemClass:"ZmVoicemail",node:"vm",organizer:ZmOrganizer.VOICE,dropTargets:[ZmOrganizer.VOICE],searchType:"voicemail",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("Voicemail");
return new ZmVoiceList(ZmItem.VOICEMAIL,e)
}
,this)}
);
ZmItem.registerItem(ZmItem.CALL,{
app:ZmApp.VOICE,nameKey:"call",icon:"Voicemail",soapCmd:"VoiceMsgAction",itemClass:"ZmCall",node:"cl",organizer:ZmOrganizer.VOICE,searchType:"calllog",resultsList:AjxCallback.simpleClosure(function(e){
AjxDispatcher.require("Voicemail");
return new ZmVoiceList(ZmItem.CALL,e)
}
,this)}
)
};
ZmVoiceApp.prototype._registerOperations=function(){
ZmOperation.registerOp(ZmId.OP_CALL_BACK,{
textKey:"callBack",image:"CallManager",tooltipKey:"callBackTooltip"}
);
ZmOperation.registerOp(ZmId.OP_MARK_HEARD,{
textKey:"markAsHeard",image:"MarkAsHeard",shortcut:ZmKeyMap.MARK_HEARD}
);
ZmOperation.registerOp(ZmId.OP_MARK_UNHEARD,{
textKey:"markAsUnheard",image:"MarkAsUnheard",shortcut:ZmKeyMap.MARK_UNHEARD}
);
ZmOperation.registerOp(ZmId.OP_VIEW_BY_DATE,{
textKey:"viewByDate"}
);
ZmOperation.registerOp(ZmId.OP_REPLY_BY_EMAIL,{
textKey:"replyByEmail",tooltipKey:"replyByEmailTooltip",image:"Reply"}
);
ZmOperation.registerOp(ZmId.OP_FORWARD_BY_EMAIL,{
textKey:"forwardByEmail",tooltipKey:"forwardByEmailTooltip",image:"Forward"}
);
ZmOperation.registerOp(ZmId.OP_DOWNLOAD_VOICEMAIL,{
textKey:"downloadVoicemail",tooltipKey:"downloadVoicemailTooltip",image:"Save"}
);
ZmOperation.registerOp(ZmId.OP_NEW_CALL,{
textKey:"newCall",tooltipKey:"newCallTooltip",shortcut:ZmKeyMap.NEW_CALL,image:"PlacedCalls"}
)
};
ZmVoiceApp.prototype._registerOrganizers=function(){
ZmOrganizer.registerOrg(ZmOrganizer.VOICE,{
app:ZmApp.VOICE,nameKey:"voicemailFolder",defaultFolder:0,firstUserId:256,orgClass:"ZmVoiceFolder",orgPackage:"Voicemail",treeController:"ZmVoiceTreeController",labelKey:"voicemail",itemsKey:"messages",views:["voicemail"],createFunc:"ZmOrganizer.create",compareFunc:"ZmVoiceFolder.sortCompare",displayOrder:100,deferrable:false}
)
};
ZmVoiceApp.prototype._registerApp=function(){
var e={};
e[ZmOperation.NEW_CALL]="call";
ZmApp.registerApp(ZmApp.VOICE,{
mainPkg:"Voicemail",nameKey:"voice",icon:"VoicemailApp",qsArg:"voicemail",chooserTooltipKey:"goToVoice",defaultSearch:ZmId.SEARCH_MAIL,overviewTrees:[ZmOrganizer.VOICE],searchTypes:[ZmItem.VOICEMAIL],gotoActionCode:ZmKeyMap.GOTO_VOICE,chooserSort:15,defaultSort:15,newItemOps:e,upsellUrl:ZmSetting.VOICE_UPSELL_URL}
)
};
ZmVoiceApp.prototype._registerPrefs=function(){};
ZmVoiceApp.prototype._registerSettings=function(e){
e=e||appCtxt.getSettings();
e.registerSetting("VOICE_PAGE_SIZE",{
name:"zimbraPrefVoiceItemsPerPage",type:ZmSetting.T_PREF,dataType:ZmSetting.D_INT,defaultValue:25}
);
e.registerSetting("VOICE_PAGE_SIZE_MAX",{
name:"zimbraMaxVoiceItemsPerPage",type:ZmSetting.T_COS,dataType:ZmSetting.D_INT,defaultValue:100}
)
};
ZmVoiceApp.prototype.handleOp=function(e){
switch(e){
case ZmOperation.NEW_CALL:this.displayClickToCallDlg();
break;
default:}};
ZmVoiceApp.prototype.deleteNotify=function(e){
this._handleDeletes(e)
};
ZmVoiceApp.prototype.createNotify=function(e){
this._handleCreates(e)
};
ZmVoiceApp.prototype.modifyNotify=function(e){
this._handleModifies(e)
};
ZmVoiceApp.prototype.getOverviewId=function(){
var e=this.accordionItem?this.accordionItem.data.phone.name:"";
return[this._name,e].join(":")
};
ZmVoiceApp.prototype.getOverviewContainer=function(){
if(!this._overviewContainer){
var e=[ZmApp.OVERVIEW_ID,this._name].join("_");
var t={
appName:this._name,containerId:e,posStyle:Dwt.ABSOLUTE_STYLE,parent:appCtxt.getShell(),controller:appCtxt.getOverviewController()};
t.id=ZmId.getOverviewContainerId(e);
this._overviewContainer=appCtxt.getOverviewController()._overviewContainer[e]=new ZmVoiceOverviewContainer(t)
}
return this._overviewContainer
};
ZmVoiceApp.prototype.getNewButtonProps=function(){
return{
text:ZmMsg.newCall,tooltip:ZmMsg.newCallTooltip,icon:"PlacedCalls",iconDis:"PlacedCallsDis",defaultId:ZmOperation.NEW_CALL}
};
ZmVoiceApp.prototype.getVoiceInfo=function(s,e,t){
if(!this.phones.length){
if(!this._gettingVoiceInfo){
var a=AjxSoapDoc.create("GetVoiceInfoRequest","urn:zimbraVoice");
var n=new AjxCallback(this,this._handleResponseVoiceInfo);
var i=new AjxCallback(this,this._handleErrorResponseVoiceInfo);
var o={
soapDoc:a,asyncMode:true,noBusyOverlay:t,callback:n,errorCallback:i};
appCtxt.getAppController().sendRequest(o);
this._gettingVoiceInfo=true
}
if(s){
this._voiceInfoCallbacks=this._voiceInfoCallbacks||[];
this._voiceInfoCallbacks.push(s)
}
if(e){
this._voiceInfoErrorCallbacks=this._voiceInfoErrorCallbacks||[];
this._voiceInfoErrorCallbacks.push(e)
}}else{
if(s){
s.run()
}}};
ZmVoiceApp.prototype._handleResponseVoiceInfo=function(e){
var t=new AjxCallback(this,this._handleResponseVoiceInfo2,[e]);
AjxPackage.require({
name:"Voicemail",callback:t}
)
};
ZmVoiceApp.prototype._handleResponseVoiceInfo2=function(t){
var s=t._data.GetVoiceInfoResponse;
this._storeprincipal=s.storeprincipal[0];
this._setAudioType(s);
this.soapInfo.additional={
storeprincipal:this._storeprincipal};
var a=s.phone;
for(var o=0,n=a.length;
o<n;
o++){
var r=a[o];
var e=new ZmPhone();
e._loadFromDom(r);
this.phones.push(e);
this._nameToPhone[e.name]=e;
if(r.folder&&r.folder.length){
e.folderTree=new ZmVoiceFolderTree();
if(o==0){
this._setHasTrashFolder(r.folder[0].folder)
}
e.folderTree.loadFromJs(r.folder[0],e)
}}
if(this._voiceInfoCallbacks){
for(o=0,n=this._voiceInfoCallbacks.length;
o<n;
o++){
this._voiceInfoCallbacks[o].run(t)
}}
this._voiceInfoCallbacks=null;
this._voiceInfoErrorCallbacks=null;
this._gettingVoiceInfo=false
};
ZmVoiceApp.prototype._setAudioType=function(e){
if(e.audioType&&e.audioType[0]&&e.audioType[0]._content){
ZmVoiceApp.audioType=e.audioType[0]._content
}};
ZmVoiceApp.prototype._setHasTrashFolder=function(a){
if(a&&a.length){
var e=a.length;
for(var t=0;
t<e;
t++){
if(a[t].id.indexOf(ZmVoiceFolder.TRASH_ID)==0){
ZmVoiceApp.hasTrashFolder=true;
return
}}}};
ZmVoiceApp.prototype._handleErrorResponseVoiceInfo=function(e){
var a=false;
if(this._voiceInfoErrorCallbacks){
for(var t=0,o=this._voiceInfoErrorCallbacks.length;
t<o;
t++){
a=this._voiceInfoErrorCallbacks[t].run(e)||a
}}
this._voiceInfoCallbacks=null;
this._voiceInfoErrorCallbacks=null;
this._gettingVoiceInfo=false;
if(!a){
this.processErrors(e)
}
return true
};
ZmVoiceApp.prototype.refreshFolders=function(o,e){
if(this.phones.length){
var t=AjxSoapDoc.create("GetVoiceFolderRequest","urn:zimbraVoice");
this.setStorePrincipal(t);
var i=new AjxCallback(this,this._handleResponseUpdateFolders,[o]);
var a={
soapDoc:t,asyncMode:true,callback:i,errorCallback:e};
appCtxt.getAppController().sendRequest(a)
}else{
if(o){
o.run()
}}};
ZmVoiceApp.prototype._handleResponseUpdateFolders=function(r,t){
var a=t._data.GetVoiceFolderResponse.phone;
for(var o=0,n=a.length;
o<n;
o++){
var s=a[o];
var e=this._nameToPhone[s.name];
if(e){
this._updateFolders(e,s.folder[0].folder)
}}
if(r){
r.run()
}};
ZmVoiceApp.prototype._updateFolders=function(t,r){
var s=t.folderTree;
for(var a=0,n=r.length;
a<n;
a++){
var e=r[a];
var o=s.getByName(e.name);
if(o){
o.notifyModify(e)
}}};
ZmVoiceApp.prototype.search=function(i,s,n){
var e=(i.getSearchType()==ZmItem.VOICEMAIL)?ZmId.VIEW_VOICEMAIL:ZmId.VIEW_CALL_LIST;
if((e==ZmId.VIEW_VOICEMAIL)&&!i.phone.hasVoiceMail){
AjxDispatcher.run("GetVoiceController").show(null,i);
this._setupOverviewContainer();
if(s){
s.run(null)
}}else{
if(!n){
n=appCtxt.get(ZmSetting.SORTING_PREF,e)
}
var o={
soapInfo:this.soapInfo,types:AjxVector.fromArray([i.getSearchType()]),sortBy:n,query:i.getSearchQuery(),limit:this.getLimit()};
var t=new ZmSearch(o);
var a=new AjxCallback(this,this._handleResponseSearch,[i,s]);
t.execute({
callback:a}
)
}};
ZmVoiceApp.prototype._handleResponseSearch=function(e,h,t){
var i=t._data;
var o=i.getResults(e.getSearchType());
o.folder=e;
var s=(e.getSearchType()==ZmItem.VOICEMAIL)?AjxDispatcher.run("GetVoiceController"):AjxDispatcher.run("GetCallListController");
s.show(i,e);
this._setupOverviewContainer();
this.selectFolderInOverview(e);
var a=i.getAttribute("vfi");
if(a){
e.notifyModify(a[0])
}
if(this._paramId){
var n=s.getList();
var l=n.getById(this._paramId);
if(l){
var r=s.getListView();
r.setSelection(l,true);
r.setPlaying(l)
}}
if(h){
h.run(i)
}};
ZmVoiceApp.prototype._setupOverviewContainer=function(){
this.getOverviewContainer();
if(!this._overviewContainer.initialized){
var e=this._getOverviewParams();
e.overviewTrees=this._getOverviewTrees();
e.phones=this.phones;
this._overviewContainer.initialize(e)
}};
ZmVoiceApp.prototype.markItemsHeard=function(t,a,o,e){
var i=a?"read":"!read";
this._performAction(t,i,null,o,e)
};
ZmVoiceApp.prototype._performAction=function(l,r,o,d,s){
if(!l.length){
if(d){
d.run(l)
}
return
}
var e=[];
for(var n=0,h=l.length;
n<h;
n++){
e[n]=l[n].id
}
var c=AjxSoapDoc.create("VoiceMsgActionRequest","urn:zimbraVoice");
this.setStorePrincipal(c);
var t=c.set("action");
t.setAttribute("op",r);
t.setAttribute("id",e.join(","));
t.setAttribute("phone",l[0].getPhone().name);
for(var n in o){
t.setAttribute(n,o[n])
}
var a={
soapDoc:c,asyncMode:true,callback:d,errorCallback:s};
appCtxt.getAppController().sendRequest(a)
};
ZmVoiceApp.prototype.launch=function(e,t){
this._showApp(e,t)
};
ZmVoiceApp.prototype._showApp=function(t,a){
this._paramId=(t.qsParams?t.qsParams.id:null);
var e=new AjxCallback(this,this._handleLoadLaunch,[a]);
AjxDispatcher.require("Voicemail",true,e,null,true)
};
ZmVoiceApp.prototype._handleLoadLaunch=function(a){
var t=new AjxCallback(this,this._handleResponseLoadLaunchGotInfo,a);
var e=new AjxCallback(this,this._handleErrorLoadLaunchGotInfo,a);
this.getVoiceInfo(t,e)
};
ZmVoiceApp.prototype._handleErrorLoadLaunchGotInfo=function(i,e){
var a;
this._loadError=true;
switch(e.code){
case"voice.SECONDARY_NOT_ALLOWED":case"voice.ACCOUNT_NOT_CPNI_COMPLIANT":case"voice.ACCOUNT_CPNI_NOT_AVAILABLE":this._showUpsellMessage(e.code);
a=true;
break;
case"voice.UNABLE_TO_RETRIEVE_PROFILE_SUMMARY":default:var t=appCtxt.getApp(ZmVoiceApp.overviewFallbackApp);
if(t){
t.launch()
}
a=false;
break
}
this.setOverviewPanelContent(false);
if(i instanceof AjxCallback){
i.run()
}
return a
};
ZmVoiceApp.prototype._showUpsellMessage=function(t){
if(!this._showingSecondaryMessage){
this._showingSecondaryMessage=true;
var e=new DwtControl({
parent:appCtxt.getShell(),posStyle:Dwt.ABSOLUTE_STYLE}
);
e.setScrollStyle(DwtControl.SCROLL);
var i=null;
if(t=="voice.ACCOUNT_NOT_CPNI_COMPLIANT"||t=="voice.ACCOUNT_CPNI_NOT_AVAILABLE"){
i=ZMsg[t+"_PREFS"]
}
e.getHtmlElement().innerHTML=i||ZMsg["voice.SECONDARY_NOT_ALLOWED_VOICE"];
var o={};
o[ZmAppViewMgr.C_APP_CONTENT]=e;
var a=[ZmAppViewMgr.C_TREE,ZmAppViewMgr.C_TREE_FOOTER,ZmAppViewMgr.C_TOOLBAR_TOP,ZmAppViewMgr.C_SASH];
var n="VoiceMessage";
this.createView({
viewId:n,appName:this._name,controller:appCtxt.getAppController(),elements:o,hide:a,isFullScreen:true,isAppView:true}
);
this.pushView(n,true)
}};
ZmVoiceApp.prototype._handleResponseLoadLaunchGotInfo=function(a,e){
this._loadError=false;
var t=this.getStartFolder();
if(t){
this.search(t,a)
}else{
if(a){
a.run()
}}};
ZmVoiceApp.prototype.setStartPhone=function(e,a){
this._startPhone=e;
if(a){
var t=this.getStartFolder();
if(this.view!=ZmId.VIEW_VOICEMAIL){
this.pushView(ZmId.VIEW_VOICEMAIL)
}
if(this.getVoiceController().getFolder()!=t){
this.search(t);
this.getVoiceController().setFolder(t,true)
}
this.selectFolderInOverview(t)
}};
ZmVoiceApp.prototype.getStartFolder=function(t){
var n=0;
var a=0;
var o=t||this._startPhone;
if(o){
for(a=0;
a<this.phones.length;
a++){
var e=this.phones[a];
if(e.name==o){
n=a
}}}else{
for(a=0;
a<this.phones.length;
a++){
var e=this.phones[a];
if(e.hasVoiceMail){
n=a;
break
}}}
return this.phones[n].folderTree.getByName(ZmVoiceFolder.VOICEMAIL)
};
ZmVoiceApp.prototype.selectFolderInOverview=function(e){
var a=this.getOverviewContainer().getOverviews();
for(id in a){
var t=a[id];
if(t.phone==e.phone){
t.setSelected(e.id,"Voice")
}else{
t.itemSelected(null)
}}};
ZmVoiceApp.prototype.getVoiceController=function(){
if(!this._voiceController){
this._voiceController=new ZmVoicemailListController(this._container,this)
}
return this._voiceController
};
ZmVoiceApp.prototype.getCallListController=function(){
if(!this._callListController){
this._callListController=new ZmCallListController(this._container,this)
}
return this._callListController
};
ZmVoiceApp.prototype.setStorePrincipal=function(t){
var a=t.set("storeprincipal");
for(var e in this._storeprincipal){
a.setAttribute(e,this._storeprincipal[e])
}};
ZmVoiceApp.prototype.setOverviewPanelContent=function(t){
if((this._showingSecondaryMessage||this._loadError)&&ZmVoiceApp.overviewFallbackApp){
var e=appCtxt.getApp(ZmVoiceApp.overviewFallbackApp);
if(e){
return e.setOverviewPanelContent(t)
}}
return ZmApp.prototype.setOverviewPanelContent.call(this,t)
};
ZmVoiceApp.prototype.redoSearch=function(){
var t=appCtxt.getAppViewMgr().getAppView(ZmApp.VOICE);
if(t){
var e;
if(t==ZmId.VIEW_VOICEMAIL){
e=AjxDispatcher.run("GetVoiceController")
}else{
if(t==ZmId.VIEW_CALL_LIST){
e=AjxDispatcher.run("GetCallListController")
}}
if(e){
this.search(e.getFolder())
}}};
ZmVoiceApp.prototype._handleDeletes=function(e){};
ZmVoiceApp.prototype._handleCreates=function(e){};
ZmVoiceApp.prototype._handleModifies=function(e){};
ZmVoiceApp.prototype._getOverviewTrees=function(){
return[ZmOrganizer.VOICE]
};
ZmVoiceApp.prototype.registerUCProvider=function(e){
this._UCProvider=e
};
ZmVoiceApp.prototype.displayClickToCallDlg=function(e){
if(this._UCProvider){
this._UCProvider.display(e)
}};
ZmVoiceApp.prototype.processErrors=function(a){
var e=ZmMsg.voicemailErrorUnknown;
if(!a.code){
return
}
if(a.code==ZmVoiceApp.ERROR_CODE_AUTH){
e=ZmMsg.voicemailErrorAuthFailure
}
if(this._UCProvider){
e=this._UCProvider.getErrorDescription(a)||e
}
var t=appCtxt.getErrorDialog();
t.setMessage(e,e,DwtMessageDialog.CRITICAL_STYLE);
t.popup();
return
};
ZmVoiceApp.prototype.hasVoicePIN=function(e){
if(this._UCProvider){
return this._UCProvider.hasVoicePIN()
}
return true
}
}}
if(AjxPackage.define("dwt.Widgets")){
AjxTemplate.register("dwt.Widgets#DwtAlert",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" width=100%><tr><td width=1%><div id=\'';
e[a++]=o.id;
e[a++]="_icon' style='margin-right:5px;'></div></td><td width=99%><table role=\"presentation\"><tr><td id='";
e[a++]=o.id;
e[a++]="_title' class='DwtAlertTitle'></td></tr><tr><td id='";
e[a++]=o.id;
e[a++]="_content' class='DwtAlertContent'></td></tr></table></td><td width=1%><div id='";
e[a++]=o.id;
e[a++]="_dismiss' style='margin-left:5px;'></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtAlert"}
,false);
AjxTemplate.register("dwt.Widgets",AjxTemplate.getTemplate("dwt.Widgets#DwtAlert"),AjxTemplate.getParams("dwt.Widgets#DwtAlert"));
AjxTemplate.register("dwt.Widgets#DwtCheckbox",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZCheckboxTable'><tr><td><label id='";
e[a++]=o.id;
e[a++]="_text_left' for='";
e[a++]=o.id;
e[a++]="_input' class='Text' style='text-align:right'></label></td><td><input id='";
e[a++]=o.id;
e[a++]="_input' name='";
e[a++]=o.name;
e[a++]="' value='";
e[a++]=o.value;
e[a++]="' type='checkbox' ";
e[a++]=o.checked;
e[a++]="></td><td><label id='";
e[a++]=o.id;
e[a++]="_text_right' for='";
e[a++]=o.id;
e[a++]="_input' class='Text' style='text-align:left'></label></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtCheckbox"}
,false);
AjxTemplate.register("dwt.Widgets#DwtRadioButton",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZRadioButtonTable'><tr><td><label id='";
e[a++]=o.id;
e[a++]="_text_left' for='";
e[a++]=o.id;
e[a++]="_input' class='Text' style='text-align:right'></label></td><td><input id='";
e[a++]=o.id;
e[a++]="_input' name='";
e[a++]=o.name;
e[a++]="' value='";
e[a++]=o.value;
e[a++]="' type='radio' ";
e[a++]=o.checked;
e[a++]="></td><td><label id='";
e[a++]=o.id;
e[a++]="_text_right' for='";
e[a++]=o.id;
e[a++]="_input' class='Text' style='text-align:left'></label></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtRadioButton"}
,false);
AjxTemplate.register("dwt.Widgets#DwtBaseDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='DwtDialog WindowOuterContainer'><table role=\"presentation\"><tr id='";
e[a++]=o.dragId;
e[a++]="'><td class='minWidth'>";
e[a++]=o.icon;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_title' class='DwtDialogTitle'>";
e[a++]=o.title;
e[a++]="</td><td class='minWidth'><div class='";
e[a++]=o.closeIcon2;
e[a++]="'></div></td><td class='minWidth'><div class='";
e[a++]=o.closeIcon1;
e[a++]="'></div></td></tr><tr><td class='WindowInnerContainer' colspan='4'><div id='";
e[a++]=o.id;
e[a++]="_content' class='DwtDialogBody'></div>";
if(o.controlsTemplateId){
e[a++]=AjxTemplate.expand(o.controlsTemplateId,o)
}
e[a++]="</td></tr></table></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtBaseDialog",height:"32",width:"20"}
,false);
AjxTemplate.register("dwt.Widgets#DwtDialogControls",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='horizSep' id=\"";
e[a++]=o.id;
e[a++]="_buttonsSep\"></div><div id='";
e[a++]=o.id;
e[a++]="_buttons' class='DwtDialogButtonBar'>";
if(AjxEnv.isNav){
e[a++]="<input type='button' id='";
e[a++]=o.id;
e[a++]="_focus' style='height:0px;width:0px;display:none;'>"
}
e[a++]="</div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtDialogControls"}
,false);
AjxTemplate.register("dwt.Widgets#DwtSemiModalDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='DwtDialog LightWindowOuterContainer'><table role=\"presentation\" style='cursor:move;'><tr id='";
e[a++]=o.dragId;
e[a++]="'><td class='minWidth'>";
e[a++]=o.icon;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_title' class='DwtDialogTitle'>";
e[a++]=o.title;
e[a++]="</td><td class='minWidth'><div class='";
e[a++]=o.closeIcon2;
e[a++]="'></div></td><td class='minWidth'><div class='";
e[a++]=o.closeIcon1;
e[a++]="'></div></td></tr><tr><td class='LightWindowInnerContainer full_size' colspan='4'><div id='";
e[a++]=o.id;
e[a++]="_content' class='DwtDialogBody'></div><div class='horizSep'></div><div id='";
e[a++]=o.id;
e[a++]="_buttons' class='DwtDialogButtonBar'>";
if(AjxEnv.isNav){
e[a++]="<input type='button' id='";
e[a++]=o.id;
e[a++]="_focus' style='height:0px;width:0px;display:none;'>"
}
e[a++]="</div></td></tr></table></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtSemiModalDialog",height:"32",width:"20"}
,false);
AjxTemplate.register("dwt.Widgets#DwtToolTip",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='tooltipContents' class='DwtToolTipBody'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtToolTip",height:"5",width:"5"}
,false);
AjxTemplate.register("dwt.Widgets#DwtVerticalSash",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='DwtVerticalSash'><div class='VSashContainer'><div class='VSashThumb ImgVSash_thumb'></div></div></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtVerticalSash",height:"0",width:"0"}
,false);
AjxTemplate.register("dwt.Widgets#DwtHorizontalSash",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='DwtHorizontalSash'><div class='HSashContainer'><div class='HSashThumb ImgHSash_thumb'></div></div></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtHorizontalSash",height:"0",width:"0"}
,false);
AjxTemplate.register("dwt.Widgets#DwtMissingSoundPlayer",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='DwtMissingSoundPlayer'><tr><td nowrap class='ImgCritical'>&nbsp;</td><td nowrap>";
e[a++]=ZmMsg.missingPlugin;
e[a++]="</td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtMissingSoundPlayer"}
,false);
AjxTemplate.register("dwt.Widgets#DwtVerticalSlider",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_button' class='DwtThumb DwtSliderThumb'><div class='DwtSliderThumbBorder'><div class='ImgVerticalSliderThumb'></div></div></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtVerticalSlider","class":"DwtSlider DwtVerticalSlider"}
,false);
AjxTemplate.register("dwt.Widgets#DwtHorizontalSlider",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_button' class='DwtThumb DwtSliderThumb'><div class='DwtSliderThumbBorder'><div class='ImgHorizontalSliderThumb'></div></div></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtHorizontalSlider","class":"DwtSlider DwtHorizontalSlider"}
,false);
AjxTemplate.register("dwt.Widgets#ZLabel",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZWidgetTable ZLabelBorder'><tr><td id='";
e[a++]=o.id;
e[a++]="_left_icon'  \tclass='ZLeftIcon ZWidgetIcon'></td><td id='";
e[a++]=o.id;
e[a++]="_title'\t\tclass='ZWidgetTitle'></td><td id='";
e[a++]=o.id;
e[a++]="_right_icon' \tclass='ZRightIcon ZWidgetIcon'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZLabel","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZButton",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"Button";
t[i++]='<table role="presentation" class=\'ZWidgetTable Z';
t[i++]=e;
t[i++]="Table Z";
t[i++]=e;
t[i++]="Border' style='table-layout:auto;' cellspacing='0'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon'  \tclass='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_title'\t\tclass='ZWidgetTitle'></td><td id='";
t[i++]=n.id;
t[i++]="_right_icon' \tclass='ZRightIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_dropdown' \tclass='ZDropDown'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"dwt.Widgets#ZButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZImageOnlyButton",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_left_icon'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZImageOnlyButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarButton",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
o.buttonClass=o.buttonClass||"ToolbarButton";
e[a++]=AjxTemplate.expand("#ZButton",o);
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZBorderlessButton",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"Button";
t[i++]='<table role="presentation" class=\'ZWidgetTable Z';
t[i++]=e;
t[i++]="Table' style='table-layout:auto;'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon'  \tclass='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_title'\t\tclass='ZWidgetTitle'></td><td id='";
t[i++]=n.id;
t[i++]="_right_icon' \tclass='ZRightIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_dropdown' \tclass='ZDropDown'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"dwt.Widgets#ZBorderlessButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZLinkButton",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
if(o.noDropDown){
e[a++]="<a href='javascript:;' onclick='return false;' id='";
e[a++]=o.id;
e[a++]="_title'></a>"
}else{
e[a++]="<table role=\"presentation\" class='DwtLinkButtonTable' style='table-layout:auto;'><tr><td class='ZWidgetTitle'><a href='javascript:;' onclick='return false;' id='";
e[a++]=o.id;
e[a++]="_title'></a></td><td id='";
e[a++]=o.id;
e[a++]="_dropdown' class='DwtLinkButtonDropDownArrowTd'><div class='DwtLinkButtonDropDownArrow'><center><div class='DwtLinkButtonDropDownArrowRow' style='width:7px;'>&nbsp;</div><div class='DwtLinkButtonDropDownArrowRow' style='width:5px;'>&nbsp;</div><div class='DwtLinkButtonDropDownArrowRow' style='width:3px;'>&nbsp;</div><div class='DwtLinkButtonDropDownArrowRow' style='width:1px;'>&nbsp;</div></center></div></td></tr></table>"
}
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZLinkButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZButtonColorDisplay",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_color' class='DwtButtonColorPicker-display' unselectable></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZButtonColorDisplay"}
,false);
AjxTemplate.register("dwt.Widgets#DwtComboBox",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td width=*><div id=\'';
e[a++]=o.id;
e[a++]="_input'></div></td><td><div id='";
e[a++]=o.id;
e[a++]="_button'></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtComboBox","class":"DwtComboBox"}
,false);
AjxTemplate.register("dwt.Widgets#DwtComboBoxButton",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"Button";
t[i++]='<table role="presentation" class=\'Z';
t[i++]=e;
t[i++]="Border'><tr><td id='";
t[i++]=n.id;
t[i++]="_dropdown' class='ZDropDown'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"dwt.Widgets#DwtComboBoxButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabView",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_tabbar'></div><div id='";
e[a++]=o.id;
e[a++]="_page'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabView","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabBar",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" width='100%'><tr valign='bottom' id='";
e[a++]=o.id;
e[a++]="_items'>";
e[a++]=AjxTemplate.expand("#ZTabBarPrefix",o);
e[a++]=AjxTemplate.expand("#ZTabBarSuffix",o);
e[a++]="</tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabBar","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabBarPrefix",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<td id='";
e[a++]=o.id;
e[a++]="_prefix'><div class='ZTabBarPrefix'></div></td>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabBarPrefix"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabBarSuffix",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<td id='";
e[a++]=o.id;
e[a++]="_suffix' width='100%'><div class='ZTabBarSuffix'></div></td>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabBarSuffix"}
,false);
AjxTemplate.register("dwt.Widgets#ZTab",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"Tab";
t[i++]='<table role="presentation" id=\'';
t[i++]=n.id;
t[i++]="_select' class='Z";
t[i++]=e;
t[i++]="Table Z";
t[i++]=e;
t[i++]="Border ZWidgetTable ZWidgetBorder'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon' class='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_title' class='ZWidgetTitle'></td><td id='";
t[i++]=n.id;
t[i++]="_right_icon' class='ZRightIcon ZWidgetIcon'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"dwt.Widgets#ZTab","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabBarFloat",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_items'>";
e[a++]=AjxTemplate.expand("#ZTabBarPrefixFloat",o);
e[a++]=AjxTemplate.expand("#ZTabBarSuffixFloat",o);
e[a++]="</div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabBarFloat","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabBarPrefixFloat",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_prefix' class='ZTabBarPrefix'>&nbsp;</div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabBarPrefixFloat"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabBarSuffixFloat",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_suffix' class='ZTabBarSuffix'>&nbsp;</div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabBarSuffixFloat"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabFloat",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"Tab";
t[i++]='<table role="presentation" id=\'';
t[i++]=n.id;
t[i++]="_select' class='Z";
t[i++]=e;
t[i++]="Table Z";
t[i++]=e;
t[i++]="Border ZWidgetBorder'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon' class='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_title' class='ZWidgetTitle'></td><td id='";
t[i++]=n.id;
t[i++]="_right_icon' class='ZRightIcon ZWidgetIcon'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"dwt.Widgets#ZTabFloat","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTabPage",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTabPage","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZSelectAutoSizingContainer",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id="';
e[a++]=o.id;
e[a++]='_select_container">';
e[a++]=AjxTemplate.expand(o.selectTemplateId,o.selectData);
e[a++]='</td></tr><tr><td><table role="presentation" id="';
e[a++]=o.id;
e[a++]='_pseudoitems_container"></table></td></tr></table>';
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZSelectAutoSizingContainer"}
,false);
AjxTemplate.register("dwt.Widgets#ZSelect",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]=AjxTemplate.expand("#ZButton",o);
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZSelect","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZSelectMenu",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]=AjxTemplate.expand("#ZMenu",o);
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZSelectMenu","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZSelectMenuItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]=AjxTemplate.expand("#ZMenuItem",o);
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZSelectMenuItem","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbar",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZToolbarTable'><tr id='";
e[a++]=o.id;
e[a++]="_items'>";
e[a++]=AjxTemplate.expand("#ZToolbarPrefix",o);
e[a++]=AjxTemplate.expand("#ZToolbarSuffix",o);
e[a++]="</tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbar","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarPrefix",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarPrefix"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarSuffix",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarSuffix"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id=\'';
e[a++]=o.itemId;
e[a++]="'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarItem"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarSeparator",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id=\'';
e[a++]=o.itemId;
e[a++]="' class='ZToolbarSeparator'>&nbsp;</td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarSeparator"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarSpacer",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id=\'';
e[a++]=o.itemId;
e[a++]="' class='ZToolbarSpacer'>&nbsp;</td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarSpacer"}
,false);
AjxTemplate.register("dwt.Widgets#ZToolbarFiller",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id=\'';
e[a++]=o.itemId;
e[a++]="' class='ZToolbarFiller' width='100%'>&nbsp;</td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZToolbarFiller"}
,false);
AjxTemplate.register("dwt.Widgets#ZField",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<input id='";
e[a++]=o.id;
e[a++]="_field' class='ZFieldInput'>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZField","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZTreeItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='";
e[a++]=o.divClassName;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_div'><table role=\"presentation\" id='";
e[a++]=o.id;
e[a++]='_table\' style="table-layout:fixed; width:100%"><tr><td style="width:20px" align=center nowrap id=\'';
e[a++]=o.id;
e[a++]="_nodeCell'></td>";
if(o.isCheckedStyle){
e[a++]='<td style="width:20px" nowrap id=\'';
e[a++]=o.id;
e[a++]='_checkboxCell\' class="ZTreeItemCheckboxCell"><div class="ZTreeItemCheckbox" id=\'';
e[a++]=o.id;
e[a++]="_checkbox'><div class=\"ZTreeItemCheckboxImg\" id='";
e[a++]=o.id;
e[a++]="_checkboxImg'>";
e[a++]=AjxImg.getImageHtml("MenuCheck");
e[a++]="</div></div></td>"
}
e[a++]="<td style=\"width:20px\" nowrap class='imageCell' id='";
e[a++]=o.id;
e[a++]="_imageCell'></td><td nowrap class='";
e[a++]=o.textClassName;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_textCell'></td><td class='imageCell' id='";
e[a++]=o.id;
e[a++]="_extraCell'></td></tr></table></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZTreeItem"}
,false);
AjxTemplate.register("dwt.Widgets#ZHeaderTreeItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='";
e[a++]=o.divClassName;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_div'><table role=\"presentation\" id='";
e[a++]=o.id;
e[a++]="_table'><tr>";
if(!o.noNodeCell){
e[a++]="<td align=center nowrap id='";
e[a++]=o.id;
e[a++]="_nodeCell'></td>"
}
e[a++]="<td nowrap class='imageCell' id='";
e[a++]=o.id;
e[a++]="_imageCell'></td><td nowrap class='";
e[a++]=o.textClassName;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_textCell' width=\"100%\"></td><td class='";
e[a++]=o.textClassName;
e[a++]=" FakeAnchor' id='";
e[a++]=o.id;
e[a++]="_optCell'><div id='";
e[a++]=o.id;
e[a++]="_optButton'/></td></tr></table></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZHeaderTreeItem"}
,false);
AjxTemplate.register("dwt.Widgets#ZAccordion",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_div'><table role=\"presentation\" class='ZAccordionTable ZWidget' id='";
e[a++]=o.id;
e[a++]="_accordion_table'></table></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZAccordion"}
,false);
AjxTemplate.register("dwt.Widgets#ZAccordionItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_header_";
e[a++]=o.itemNum;
e[a++]="' class='ZAccordionHeader'><table role=\"presentation\" class='ZAccordionHeaderBorder ZWidgetTable'><tr><td><div class='";
e[a++]=o.icon;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_icon_";
e[a++]=o.itemNum;
e[a++]="'></div></td><td><div class='ZAccordionTitle' id='";
e[a++]=o.id;
e[a++]="_title_";
e[a++]=o.itemNum;
e[a++]="'>";
e[a++]=o.title;
e[a++]="</div></td><td><div class='ImgAccordionClosed' id='";
e[a++]=o.id;
e[a++]="_status_";
e[a++]=o.itemNum;
e[a++]="'></div></td></tr></table></div><div class='ZAccordionBody' id='";
e[a++]=o.id;
e[a++]="_body_";
e[a++]=o.itemNum;
e[a++]="'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZAccordionItem"}
,false);
AjxTemplate.register("dwt.Widgets#DwtTabView",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" width='100%' backgroundColor='";
e[a++]=o.bgcolor;
e[a++]="'><tr align='left' valign='middle'><td id='";
e[a++]=o.id;
e[a++]="_tabs' class='DwtTabTable' nowrap align='left' valign='middle' width='100%'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtTabView"}
,false);
AjxTemplate.register("dwt.Widgets#DwtTabBar",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<!-- TODO -->";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtTabBar"}
,false);
AjxTemplate.register("dwt.Widgets#DwtTabSpacer",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" width='100%'><tr></tr><tr></tr><tr><td><div class='ImgTabSpacer'></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtTabSpacer"}
,false);
AjxTemplate.register("dwt.Widgets#ZMenu",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_container' class='ZMenuBorder'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZMenu","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZMenuItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZWidgetTable ZMenuItemTable ZMenuItemBorder'><tr><td id='";
e[a++]=o.id;
e[a++]="_check' class='ZCheckIcon'><div></div></td><td id='";
e[a++]=o.id;
e[a++]="_left_icon' class='ZLeftIcon ZWidgetIcon'></td><td id='";
e[a++]=o.id;
e[a++]="_title' class='ZWidgetTitle'></td><td id='";
e[a++]=o.id;
e[a++]="_dropdown' class='ZDropDown'><div></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZMenuItem","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZMenuItemSeparator",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZWidgetTable ZMenuItemTable ZMenuItemBorder ZMenuItemSeparatorBorder'><tr><td id='";
e[a++]=o.id;
e[a++]="_title' class='ZWidgetTitle'><div class='ZMenuItem-Separator'></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZMenuItemSeparator","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#ZMenuItemBlankCheck",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ZMenuItem-BlankCheck'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZMenuItemBlankCheck"}
,false);
AjxTemplate.register("dwt.Widgets#ZMenuItemBlankIcon",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ZMenuItem-BlankIcon'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZMenuItemBlankIcon"}
,false);
AjxTemplate.register("dwt.Widgets#ZMenuItemBlankCascade",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ZMenuItem-BlankCascade'></div>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#ZMenuItemBlankCascade"}
,false);
AjxTemplate.register("dwt.Widgets#DwtListView-NoResults",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" width='100%'><tr><td class='NoResults'>\n";
e[a++]="\t\t\t\t";
e[a++]=o.message;
e[a++]="\n";
e[a++]="\t\t\t</td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtListView-NoResults"}
,false);
AjxTemplate.register("dwt.Widgets#DwtPasswordField",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td><div id=\'';
e[a++]=o.id;
e[a++]="_input'></div></td><td><div id='";
e[a++]=o.id;
e[a++]="_show_password'></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtPasswordField"}
,false);
AjxTemplate.register("dwt.Widgets#DwtFormRows",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" class="ZPropertySheet" cellspacing="6"><tbody id="';
e[a++]=o.id;
e[a++]='_rows" tabindex="100"></tbody></table>';
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtFormRows"}
,false);
AjxTemplate.register("dwt.Widgets#DwtFormRow",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr id="';
e[a++]=o.id;
e[a++]='_row" class="DwtFormRow"><td><div id="';
e[a++]=o.id;
e[a++]='" tabindex="100"></div></td><td><div id="';
e[a++]=o.id;
e[a++]='_add" class="DwtFormRowAdd" tabindex="200"></div></td><td><div id="';
e[a++]=o.id;
e[a++]='_remove" class="DwtFormRowRemove" tabindex="300"></div></td></tr></table>';
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtFormRow"}
,false);
AjxTemplate.register("dwt.Widgets#DwtColorPicker",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_colors'><div class='Text'>";
e[a++]=AjxMsg.colorsStandard;
e[a++]="</div><div class='Colors First'><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorRed;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorOrange;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorYellow;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorGreen;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorCyan;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorBlue;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorPurple;
e[a++]=";'></div><div class='Color' style='background-color:";
e[a++]=AjxMsg.colorPink;
e[a++]=";'></div><div class='Color' style='background-color:white;'></div><div class='Color' style='background-color:black;'></div></div><div class='Text'>";
e[a++]=AjxMsg.colorsCustom;
e[a++]="</div><div class='Colors First'><div class='Color' style='background-color:#ff8686;'></div><div class='Color' style='background-color:#ff9966;'></div><div class='Color' style='background-color:#ffff99;'></div><div class='Color' style='background-color:#ccffcc;'></div><div class='Color' style='background-color:#ccffff;'></div><div class='Color' style='background-color:#99ccff;'></div><div class='Color' style='background-color:#ccccff;'></div><div class='Color' style='background-color:#ffccff;'></div><div class='Color' style='background-color:#ededed;'></div><div class='Color' style='background-color:#808080;'></div></div><div class='Colors'><div class='Color' style='background-color:#ff0000;'></div><div class='Color' style='background-color:#ff6600;'></div><div class='Color' style='background-color:#ffcc33;'></div><div class='Color' style='background-color:#66cc66;'></div><div class='Color' style='background-color:#00cccc;'></div><div class='Color' style='background-color:#3366ff;'></div><div class='Color' style='background-color:#6666ff;'></div><div class='Color' style='background-color:#cc33cc;'></div><div class='Color' style='background-color:#d5d5d5;'></div><div class='Color' style='background-color:#666666;'></div></div><div class='Colors'><div class='Color' style='background-color:#cc0000;'></div><div class='Color' style='background-color:#cc6600;'></div><div class='Color' style='background-color:#cc9933;'></div><div class='Color' style='background-color:#009900;'></div><div class='Color' style='background-color:#339999;'></div><div class='Color' style='background-color:#3333ff;'></div><div class='Color' style='background-color:#6633ff;'></div><div class='Color' style='background-color:#993399;'></div><div class='Color' style='background-color:#cccccc;'></div><div class='Color' style='background-color:#4d4d4d;'></div></div><div class='Colors'><div class='Color' style='background-color:#990000;'></div><div class='Color' style='background-color:#993300;'></div><div class='Color' style='background-color:#996633;'></div><div class='Color' style='background-color:#006600;'></div><div class='Color' style='background-color:#336666;'></div><div class='Color' style='background-color:#000099;'></div><div class='Color' style='background-color:#330099;'></div><div class='Color' style='background-color:#663366;'></div><div class='Color' style='background-color:#b3b3b3;'></div><div class='Color' style='background-color:#333333;'></div></div><div class='Colors'><div class='Color' style='background-color:#330000;'></div><div class='Color' style='background-color:#663300;'></div><div class='Color' style='background-color:#333300;'></div><div class='Color' style='background-color:#003300;'></div><div class='Color' style='background-color:#003333;'></div><div class='Color' style='background-color:#000066;'></div><div class='Color' style='background-color:#330066;'></div><div class='Color' style='background-color:#330033;'></div><div class='Color' style='background-color:#aaaaaa;'></div><div class='Color' style='background-color:#1a1a1a;'></div></div></div>";
if(!o.hideNoFill){
e[a++]="<div class='Text' style='margin-top:4px;'><div id='";
e[a++]=o.id;
e[a++]="_default'></div></div>"
}
if(o.allowColorInput){
e[a++]="<div class='Text' style='margin-top:4px;'><table role=\"presentation\" border=\"0\" width='100%'><tr><td><div id='";
e[a++]=o.id;
e[a++]="_input'></div></td><td><div id='";
e[a++]=o.id;
e[a++]='_button\'></div></td></tr></table><table role="presentation" class=\'DwtColorPickerLabel\' border="0"><tr><td><div>';
e[a++]=AjxMsg.previewResult;
e[a++]="</div></td><td><div id='";
e[a++]=o.id;
e[a++]="_preview' class='Color'></div></td><td><div id='";
e[a++]=o.id;
e[a++]="_error'></div></td></tr></table></div>"
}
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtColorPicker"}
,false);
AjxTemplate.register("dwt.Widgets#DwtColorPickerButton",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZWidgetTable ZMenuItemTable ZMenuItemBorder'><tr><td><div id='";
e[a++]=o.id;
e[a++]="_color' class='Color'></div></td><td id='";
e[a++]=o.id;
e[a++]="_title' class='ZWidgetTitle'\n";
e[a++]="\t\t\t";
if(AjxEnv.isIE){
e[a++]="\n";
e[a++]="\t\t\t\tstyle='width:auto;'\n";
e[a++]="\t\t\t"
}
e[a++]="\n";
e[a++]="\t\t\t></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#DwtColorPickerButton","class":"ZWidget"}
,false);
AjxTemplate.register("dwt.Widgets#SVGGradient",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<?xml version="1.0" ?><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%"\n';
e[a++]='\t     viewBox="0 0 1 1" preserveAspectRatio="none"><linearGradient id="thegradient"\n';
e[a++]='\t\t                gradientUnits="userSpaceOnUse"\n';
e[a++]='\t\t                x1="';
e[a++]=o.x1;
e[a++]='" y1="';
e[a++]=o.y1;
e[a++]='" x2="';
e[a++]=o.x2;
e[a++]='" y2="';
e[a++]=o.y2;
e[a++]='"><stop offset="0%" stop-color="';
e[a++]=o.startColor;
e[a++]='"\n';
e[a++]='\t\t\t            stop-opacity="1"/><stop offset="100%" stop-color="';
e[a++]=o.endColor;
e[a++]='"\n';
e[a++]='\t\t\t            stop-opacity="1"/></linearGradient><rect x="0" y="0" width="1" height="1"\n';
e[a++]='\t\tfill="url(#thegradient)" /></svg>';
return i?e.length:e.join("")
}
,{
id:"dwt.Widgets#SVGGradient"}
,false)
}
if(AjxPackage.define("share.App")){
AjxTemplate.register("share.App#Loading",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" style='width:100%; height=100%'><tr><td align='center' valign='middle'><br><br><br>";
e[a++]=ZmMsg.loading;
e[a++]="<br><br><div class='Imgwait_64'></div><br><br><br></td></tr><tr><td style='height:100%'>&nbsp;</td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.App#Loading"}
,false);
AjxTemplate.register("share.App",AjxTemplate.getTemplate("share.App#Loading"),AjxTemplate.getParams("share.App#Loading"));
AjxTemplate.register("share.App#Banner",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" style='width:100%; height:100%'><tr><td align='center' valign='middle'><a";
if(o.url&&o.url!=""){
e[a++]=" href='";
e[a++]=o.url;
e[a++]="' target='_blank'"
}
e[a++]="><div class='ImgAppBanner' ";
if(o.isOffline){
e[a++]=" style='width:220px;' "
}
e[a++]="></div></a></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.App#Banner"}
,false);
AjxTemplate.register("share.App#UserInfo",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='skin_table'><!--\n";
e[a++]="\t";
if(o.showOfflineLink){
e[a++]='<tr><td id=\'skin_td_switch_offline\' colspan=3><a href="http://www.zimbra.com/products/desktop.html" target="_blank">';
e[a++]=ZmMsg.switchToOfflineClientEx;
e[a++]="</a></td></tr>"
}
e[a++]="\n";
e[a++]="--><tr>";
if(o.adminUrl){
e[a++]='<td id="skin_container_adminlink"><a target="_blank" href="';
e[a++]=o.adminUrl;
e[a++]='">';
e[a++]=ZmMsg.adminLinkLabel;
e[a++]="</a></td>"
}
e[a++]="<td id='skin_container_help'><span id='skin_container_help_button'></span></td><td id='skin_container_logoff'><a href='javascript:;' onclick='ZmZimbraMail._onClickLogOff();'>";
e[a++]=o.logoutText;
e[a++]="</a></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.App#UserInfo"}
,false);
AjxTemplate.register("share.App#PrintView",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<html><head><title>";
e[a++]=ZmMsg.zimbraLabel;
e[a++]=" ";
e[a++]=o.username;
e[a++]="</title><link rel='stylesheet' href='";
e[a++]=o.appContextPath;
e[a++]="/css/msgview,zm.css?v=";
e[a++]=o.cacheKillerVersion;
e[a++]="' media='screen'></link>";
if(o.onloadStr){
e[a++]="<script language='javascript'>\n";
e[a++]="\t\t\t\t\tfunction handleOnload() {\n";
e[a++]="\t\t\t\t\t\t";
e[a++]=o.onloadStr;
e[a++]=";\n";
e[a++]="\t\t\t\t\t}\n";
e[a++]="\t\t\t\t<\/script></head><body onload='handleOnload();'>"
}else{
e[a++]="</head><body>"
}
e[a++]="<table role=\"presentation\" width=100%><tr><td class='ZmPrintView-company'>";
e[a++]=ZmMsg.zimbraTitle;
e[a++]=" ";
e[a++]=ZmMsg.splashScreenAppName;
e[a++]="</td><td class='ZmPrintView-username' align=right>";
e[a++]=o.username;
e[a++]="</td></tr></table><hr><div style='padding:10px'>";
e[a++]=o.content;
e[a++]="</div></body></html>";
return i?e.length:e.join("")
}
,{
id:"share.App#PrintView"}
,false);
AjxTemplate.register("share.App#FolderTooltip",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
if(AjxEnv.isIE&&(o.name.length>65)){
e[a++]='<table role="presentation" style="width:350px;">'
}else{
e[a++]='<table role="presentation">'
}
e[a++]="<tr><th colspan=2 style='padding-bottom:5px; text-align:left; max-width:350px;'><div id='tt_f_name' style='overflow-x:hidden;'>";
e[a++]=AjxStringUtil.htmlEncode(o.name);
e[a++]="</div></th></tr><tr><td id='tt_m_label' valign='top' style='padding-right:20px'>";
e[a++]=AjxMessageFormat.format(ZmMsg.makeLabel,o.itemText);
e[a++]="</td><td id='tt_m_count' valign='top'>";
e[a++]=o.numTotal;
e[a++]="</td></tr>";
if(o.numUnread){
e[a++]="<tr><td id='tt_u_label' valign='top'>";
e[a++]=AjxMessageFormat.format(ZmMsg.makeLabel,o.unreadLabel);
e[a++]="</td><td id='tt_u_count' valign='top' style='font-weight:bold'>";
e[a++]=o.numUnread;
e[a++]="</td></tr>"
}
if(o.sizeTotal){
e[a++]="<tr><td id='tt_s_label' valign='top'>";
e[a++]=ZmMsg.sizeLabel;
e[a++]="</td><td id='tt_s_value' valign='top'>";
e[a++]=AjxUtil.formatSize(o.sizeTotal);
e[a++]="</td></tr>"
}
e[a++]="</table>";
return i?e.length:e.join("")
}
,{
id:"share.App#FolderTooltip"}
,false);
AjxTemplate.register("share.App#ZimbraAccountTooltip",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation">';
if(o.lastSync&&o.lastSync!=""){
e[a++]="<tr><td class='nobreak' align=right>";
e[a++]=ZmMsg.lastSync;
e[a++]=":</td><td class='nobreak'>";
e[a++]=o.lastSync;
e[a++]="</td></tr>"
}else{
if(o.hasNotSynced){
e[a++]="<tr><td class='nobreak' colspan=2>";
e[a++]=ZmMsg.neverSynced;
e[a++]="</td></tr>"
}}
if(o.status&&o.status!=""){
e[a++]="<tr><td align=right valign=top>";
e[a++]=ZmMsg.status;
e[a++]=":</td><td>";
e[a++]=o.status;
e[a++]="</td></tr>"
}
if(!o.hasNotSynced){
e[a++]="<tr><td align=right valign=top>";
e[a++]=ZmMsg.offlineQuota;
e[a++]="</td><td>";
e[a++]=o.quota;
e[a++]="</td></tr>"
}
e[a++]="</table>";
return i?e.length:e.join("")
}
,{
id:"share.App#ZimbraAccountTooltip"}
,false);
AjxTemplate.register("share.App#presenceButton",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"ToolbarButton";
t[i++]='<table role="presentation" class=\'ZWidgetTable Z';
t[i++]=e;
t[i++]="Table Z";
t[i++]=e;
t[i++]="Border' style='table-layout:auto;'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon'  \tclass='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_title'\t\tclass='ZWidgetTitle'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"share.App#presenceButton","class":"ZWidget"}
,false);
AjxTemplate.register("share.App#ZmTaskbarItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_button' class='ZmTaskbarButtonParent'></div><div id='";
e[a++]=o.id;
e[a++]="_content' class='ZmTaskbarContentParent' style='display:none;'></div>";
return i?e.length:e.join("")
}
,{
id:"share.App#ZmTaskbarItem","class":"ZWidget"}
,false);
AjxTemplate.register("share.App#ZmStatusImageButton",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"ToolbarButton";
t[i++]='<table role="presentation" class=\'ZWidgetTable Z';
t[i++]=e;
t[i++]="Table Z";
t[i++]=e;
t[i++]="Border' style='table-layout:auto;'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon'  \tclass='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_status_icon'\tclass='ZLeftIcon ZWidgetIcon'><div></div></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"share.App#ZmStatusImageButton","class":"ZWidget"}
,false);
AjxTemplate.register("share.App#NetworkStatus",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" width=90><tr><td class="ZmNetworkStatusIcon" onclick="ZmZimbraMail.handleNetworkStatusClick();" id="';
e[a++]=o.id;
e[a++]='_networkStatusText"></td><td class="ZmNetworkStatusIcon" align=right width=18 onclick="ZmZimbraMail.handleNetworkStatusClick();" id="';
e[a++]=o.id;
e[a++]='_networkStatusIcon"></td></tr></table>';
return i?e.length:e.join("")
}
,{
id:"share.App#NetworkStatus"}
,false)
}
if(AjxPackage.define("share.Dialogs")){
AjxTemplate.register("share.Dialogs#TableProperties",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" class="ZmHEDialog"><tr><td><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.description;
e[a++]='</legend><table role="presentation" width="100%"><tr><td class="Label" style="width:auto">';
e[a++]=ZmMsg.caption;
e[a++]='</td><td width="100%" id="';
e[a++]=o.id;
e[a++]='_Caption"></td></tr><tr><td class="Label" style="width:auto">';
e[a++]=ZmMsg.summary;
e[a++]='</td><td width="100%" id="';
e[a++]=o.id;
e[a++]='_Summary"></td></tr></table></fieldset><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.layout;
e[a++]='</legend><table role="presentation"><tr><td class="Label">';
e[a++]=ZmMsg.tableWidth;
e[a++]='</td><td colspan="4"><table role="presentation"><tr><td style="padding-right:2px"><input id="';
e[a++]=o.id;
e[a++]='_WidthAuto" checked="checked" name="';
e[a++]=o.id;
e[a++]='_WidthAuto" type="radio" /></td><td style="padding-right:2em" colspan="2"><label for="';
e[a++]=o.id;
e[a++]='_WidthAuto">';
e[a++]=ZmMsg.auto;
e[a++]='</label></td></tr><tr><td style="padding-right:2px"><input id="';
e[a++]=o.id;
e[a++]='_WidthAuto1" name="';
e[a++]=o.id;
e[a++]='_WidthAuto" type="radio" /></td><td style="padding-right:3px" id="';
e[a++]=o.id;
e[a++]='_Width"></td><td id="';
e[a++]=o.id;
e[a++]='_WidthUnit"></td></tr></table></td></tr></table><table role="presentation" id="';
e[a++]=o.id;
e[a++]='_AdvancedMode1" style="margin-top:4px; display:none"><tr><td class="Label">';
e[a++]=ZmMsg.tableAlignment;
e[a++]='</td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_Align"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td><table role="presentation" class="ZPropertySheet" cellspacing="6"><tr><td><input type="checkbox" id="';
e[a++]=o.id;
e[a++]='_FixedLayout" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_FixedLayout">';
e[a++]=ZmMsg.fixedCellWidth;
e[a++]='</label></td></tr></table></td></tr></table></fieldset><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.textStyle;
e[a++]='</legend><table role="presentation"><tr><td class="Label">';
e[a++]=ZmMsg.textAlign;
e[a++]='</td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_TextAlign"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label">';
e[a++]=ZmMsg.fontColorLabel;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_ForegroundColor"></td></tr><tr><td class="Label">';
e[a++]=ZmMsg.verticalAlign;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_TextVAlign"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label">';
e[a++]=ZmMsg.fontBackgroundLabel;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_BackgroundColor"></td></tr></table></fieldset><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.borderStyle;
e[a++]='</legend><table role="presentation"><tr><td class="Label">';
e[a++]=ZmMsg.borderWidth;
e[a++]='</td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_BorderWidth"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label">';
e[a++]=ZmMsg.borderColorLabel;
e[a++]='</td><td><table role="presentation"><tr><td id="';
e[a++]=o.id;
e[a++]='_BorderColor"></td></tr></table></td></tr><tr><td class="Label">';
e[a++]=ZmMsg.cellPadding;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_CellPadding"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label">';
e[a++]=ZmMsg.borderStyleLabel;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_BorderStyle"></td></tr><tr id="';
e[a++]=o.id;
e[a++]='_AdvancedMode2" style="display:none"><td class="Label">';
e[a++]=ZmMsg.cellSpacing;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_BorderSpacing"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td colspan="2" style="padding:2px 0"><table role="presentation" align="center" class="ZPropertySheet" cellspacing="6"><tr><td><input type="checkbox" id="';
e[a++]=o.id;
e[a++]='_BorderCollapse" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_BorderCollapse">';
e[a++]=ZmMsg.collapsedBorders;
e[a++]="</label></td></tr></table></td></tr></table></fieldset></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#TableProperties"}
,false);
AjxTemplate.register("share.Dialogs",AjxTemplate.getTemplate("share.Dialogs#TableProperties"),AjxTemplate.getParams("share.Dialogs#TableProperties"));
AjxTemplate.register("share.Dialogs#CellProperties",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" class="ZmHEDialog"><tr><td><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.borderStyle;
e[a++]='</legend><table role="presentation" width="100%"><tr><td style="width:19em"><!-- If you\'re wondering why this has to be so complex, check out this bug:\n';
e[a++]='\t\t\t\t\t\t\t\thttps://bugzilla.mozilla.org/show_bug.cgi?id=258255 --><div style="padding-left:1em; padding-top:1em">';
e[a++]=ZmMsg.clickToDrawABorder;
e[a++]='</div><div style="margin-top:10px;"><table role="presentation" align="center"><tr><td>';
e[a++]=ZmMsg.styleLabel;
e[a++]="</td><td>";
e[a++]=ZmMsg.colorLabel;
e[a++]="</td><td>";
e[a++]=ZmMsg.widthLabel;
e[a++]='</td></tr><tr><td id="';
e[a++]=o.id;
e[a++]='_BorderStyle"></td><td><!-- embedded in a table so the widget doesn\'t enlarge --><table role="presentation"><tr><td id="';
e[a++]=o.id;
e[a++]='_BorderColor"></td></tr></table></td><td id="';
e[a++]=o.id;
e[a++]='_BorderWidth"></td></tr></table></div><table role="presentation" id="';
e[a++]=o.id;
e[a++]='_PreviewGridHolder" style="width:100px; height:100px;" align="center"><tr><td><table role="presentation" align="center"><tr><td><table role="presentation" id="';
e[a++]=o.id;
e[a++]='_PreviewGrid" style="background-color:white; border:1px dashed #ccc;"><tr><td style="border:1px dashed #ccc;"><div style="width:30px; height:30px;"></div></td><td style="border:1px dashed #ccc;"><div style="width:30px; height:30px;"></div></td></tr><tr><td style="border:1px dashed #ccc;"><div style="width:30px; height:30px;"></div></td><td style="border:1px dashed #ccc;"><div style="width:30px; height:30px;"></div></td></tr></table></td></tr></table></td></tr></table></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td valign="top"><div style="padding-left:1em; padding-top:1em; padding-bottom:1em">';
e[a++]=ZmMsg.orPickAStyleBelow;
e[a++]='</div><table role="presentation" align="center" id="';
e[a++]=o.id;
e[a++]='_QuickBorders"><tr><td></td><td></td><td></td><td></td><td></td></tr></table></td></tr></table></fieldset><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.layout;
e[a++]='</legend><table role="presentation"><tr><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableWidth" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableWidth">';
e[a++]=ZmMsg.widthLabel;
e[a++]='</label></td></tr></table></td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_Width"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableHorizPadding" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableHorizPadding">';
e[a++]=ZmMsg.paddingHorizontal;
e[a++]='</label></td></tr></table></td><td id="';
e[a++]=o.id;
e[a++]='_HorizPadding"></td></tr><tr><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableHeight" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableHeight">';
e[a++]=ZmMsg.heightLabel;
e[a++]='</label></td></tr></table></td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_Height"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableVertPadding" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableVertPadding">';
e[a++]=ZmMsg.paddingVertical;
e[a++]='</label></td></tr></table></td><td id="';
e[a++]=o.id;
e[a++]='_VertPadding"></td></tr></table></fieldset><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.textStyle;
e[a++]='</legend><table role="presentation"><tr><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableTextAlign" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableTextAlign">';
e[a++]=ZmMsg.textAlign;
e[a++]='</label></td></tr></table></td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_TextAlign"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableForegroundColor" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableForegroundColor">';
e[a++]=ZmMsg.fontColorLabel;
e[a++]='</label></td></tr></table></td><td id="';
e[a++]=o.id;
e[a++]='_ForegroundColor"></td></tr><tr><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableTextVAlign" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableTextVAlign">';
e[a++]=ZmMsg.verticalAlign;
e[a++]='</label></td></tr></table></td><td class="col2" id="';
e[a++]=o.id;
e[a++]='_TextVAlign"></td><td class="VSep-L">&nbsp;</td><td class="VSep-R">&nbsp;</td><td class="Label"><table role="presentation" align="right"><tr><td style="padding-right:3px"><input id="';
e[a++]=o.id;
e[a++]='_EnableBackgroundColor" type="checkbox" /></td><td><label for="';
e[a++]=o.id;
e[a++]='_EnableBackgroundColor">';
e[a++]=ZmMsg.fontBackgroundLabel;
e[a++]='</label></td></tr></table></td><td id="';
e[a++]=o.id;
e[a++]='_BackgroundColor"></td></tr></table></fieldset></td></tr></table>';
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#CellProperties"}
,false);
AjxTemplate.register("share.Dialogs#EditorInsertLink",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" class="ZmHEDialog"><tr><td><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.linkText;
e[a++]="</legend>";
e[a++]=ZmMsg.linkTextDesc;
e[a++]='<br /><div id="';
e[a++]=o.id;
e[a++]='_linkTextCont"></div></fieldset><fieldset class="ZmFieldset"><legend class="ZmLegend">';
e[a++]=ZmMsg.linkTarget;
e[a++]="</legend>";
e[a++]=ZmMsg.linkTargetDesc;
e[a++]='<br /><table role="presentation"><tr><td id="';
e[a++]=o.id;
e[a++]='_linkTargetCont" style="padding-right:5px"></td><td id="';
e[a++]=o.id;
e[a++]='_testBtnCont"></td></tr></table></fieldset></td></tr></table>';
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#EditorInsertLink"}
,false);
AjxTemplate.register("share.Dialogs#NewSearch",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" ';
e[a++]=AjxEnv.isWebKitBased?"width='320'>":">";
e[a++]="<tr><td class='Label' colspan=2 style='padding:0px 0px 5px 0px;'>";
e[a++]=ZmMsg.searchName;
e[a++]=" </td></tr><tr><td><input autocomplete=OFF type='text' class='Field' id='";
e[a++]=o.id;
e[a++]="_nameField' /></td></tr><tr><td>&nbsp;</td></tr><tr><td><div id='";
e[a++]=o.id;
e[a++]='_overviewDiv\'><div class="Label">';
e[a++]=ZmMsg.newSearchParent;
e[a++]="</div><div id='";
e[a++]=o.id;
e[a++]="_folderTreeCell'></div></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#NewSearch"}
,false);
AjxTemplate.register("share.Dialogs#ZmMountFolderDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" border=0 width=375><tr><td colspan=2>';
e[a++]=ZmMsg.mountInstructions1;
e[a++]='</td></tr><tr><td width=50 style="text-align:right;">';
e[a++]=ZmMsg.emailLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]='_email\'></td></tr><tr><td width=50 style="text-align:right;">';
e[a++]=ZmMsg.folderLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_folder'></td></tr><tr><td><br></td></tr><tr><td colspan=2>";
e[a++]=ZmMsg.mountInstructions2;
e[a++]='</td></tr><tr><td width=50 style="text-align:right;">';
e[a++]=ZmMsg.nameLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]='_name\'></td></tr><tr><td width=50 style="text-align:right;">';
e[a++]=ZmMsg.colorLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_color'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmMountFolderDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmPromptDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr><td class='Label' id='";
e[a++]=o.id;
e[a++]="_label'/></tr><tr><td><input type=";
e[a++]=o.type;
e[a++]=" autocomplete=OFF class='Field' id='";
e[a++]=o.id;
e[a++]="_name' /></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmPromptDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmNewTagDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr><td class='Label'>";
e[a++]=ZmMsg.tagName;
e[a++]=":</td>";
if(appCtxt.multiAccounts){
e[a++]="<td class='Label'>";
e[a++]=ZmMsg.colorLabel;
e[a++]="</td><td class='Label'>";
e[a++]=ZmMsg.accountLabel;
e[a++]="</td>"
}
e[a++]="</tr><tr><td><input type=text autocomplete=OFF id='";
e[a++]=o.id;
e[a++]="_name' /></td><td id='";
e[a++]=o.id;
e[a++]="_tagColor' style=\"padding-right:16px;\"></td><td id='";
e[a++]=o.id;
e[a++]="_account'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmNewTagDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmContactGroupDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr><td class='Label'>";
e[a++]=ZmMsg.groupNameLabel;
e[a++]=":</td></tr><tr><td><input type=text autocomplete=OFF id='";
e[a++]=o.id;
e[a++]="_name' size='25' /></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmContactGroupDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmTimezonePicker",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr><td colspan='2' class='Label'>";
e[a++]=ZmMsg.selectTimezoneInfo;
e[a++]='</td></tr><tr><td width=50 style="text-align:right;">';
e[a++]=ZmMsg.selectTimezoneLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_tzSelect'></td></tr><tr><td></td><td id='";
e[a++]=o.id;
e[a++]="_tzShowAll'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmTimezonePicker"}
,false);
AjxTemplate.register("share.Dialogs#ZmAttachDialog-MyComputerTab",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div style='overflow:auto'><form accept-charset='utf-8' method='POST' action='";
e[a++]=o.uri;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_uploadForm' enctype='multipart/form-data'><input type='hidden' name='_charset_' /><table role=\"presentation\" id='";
e[a++]=o.id;
e[a++]="_attachmentTable' class='iframeTable'></table></form></div><div><table role=\"presentation\" id='";
e[a++]=o.id;
e[a++]="_attachmentButtonTable'></table></div>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmAttachDialog-MyComputerTab"}
,false);
AjxTemplate.register("share.Dialogs#ZmAttachDialog-MyComputerTab-AddAttachment",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr><td><div class='attachText'>";
e[a++]=ZmMsg.attach;
e[a++]=":</div></td><td class='nobreak'><input id='";
e[a++]=o.id;
e[a++]="_input' type='file' multiple name='";
e[a++]=o.uploadName;
e[a++]="' size=40>&nbsp;\n";
e[a++]="\t\t\t\t<span id='";
e[a++]=o.id;
e[a++]='_remove\' onmouseover=\'this.style.cursor="pointer"\' onmouseout=\'this.style.cursor="default"\' class="ZmAttachDialog-removeLink">';
e[a++]=ZmMsg.remove;
e[a++]="</span><span id='";
e[a++]=o.id;
e[a++]="_size'>&nbsp;</span></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmAttachDialog-MyComputerTab-AddAttachment"}
,false);
AjxTemplate.register("share.Dialogs#ZmNewOrgDialogRemote",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr><td class='Label'>";
e[a++]=ZmMsg.feedLabel;
e[a++]="</td><td><table role=\"presentation\"><tr><td><input type='checkbox' id='";
e[a++]=o.id;
e[a++]="_remote' style='width:initial;' /></td><td class='Label'><label for='";
e[a++]=o.id;
e[a++]="_remote'> ";
e[a++]=o.remoteLabel;
e[a++]=" </label></td></tr></table></td></tr><tr style='display:none;' id='";
e[a++]=o.id;
e[a++]="_remoteURLrow'><td class='Label' id='";
e[a++]=o.id;
e[a++]="_remoteURLlbl'>";
e[a++]=ZmMsg.urlLabel;
e[a++]="</td><td><input autocomplete='off' type='text' class='Field' id='";
e[a++]=o.id;
e[a++]="_remoteURLfield' aria-labelledby='";
e[a++]=o.id;
e[a++]="_remoteURLlbl' /></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmNewOrgDialogRemote"}
,false);
AjxTemplate.register("share.Dialogs#ZmNewOrgDialogName",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr valign='center'><td class='Label' id ='";
e[a++]=o.id;
e[a++]="_lblName'>";
e[a++]=ZmMsg.nameLabel;
e[a++]="</td><td><input autocomplete='off' type='text' class='Field' id='";
e[a++]=o.id;
e[a++]="_name' aria-labelledby='";
e[a++]=o.id;
e[a++]="_lblName' /></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmNewOrgDialogName"}
,false);
AjxTemplate.register("share.Dialogs#ZmNewOrgDialogColor",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr><td class='Label' id ='";
e[a++]=o.id;
e[a++]="_lblColor'>";
e[a++]=ZmMsg.colorLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_colorSelect'></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmNewOrgDialogColor"}
,false);
AjxTemplate.register("share.Dialogs#ZmNewOrgDialogFolder",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr><td class='Label' id='";
e[a++]=o.id;
e[a++]="_parentLabel'></td><td id='";
e[a++]=o.id;
e[a++]="_parentValue'></td></tr><tr><td colspan=2 id='";
e[a++]=o.id;
e[a++]="_folderTree'></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmNewOrgDialogFolder"}
,false);
AjxTemplate.register("share.Dialogs#ZmNewCalDialogFreeBusy",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr><td colspan=2><table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr valign='center'><td style='width:2em;'><input type='checkbox' id='";
e[a++]=o.id;
e[a++]="_excludeFbCheckbox' /></td><td class='Label'><label for='";
e[a++]=o.id;
e[a++]="_excludeFbCheckbox'> ";
e[a++]=ZmMsg.excludeFromFreeBusy;
e[a++]=" </label></td></tr></table></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmNewCalDialogFreeBusy"}
,false);
AjxTemplate.register("share.Dialogs#ZmRenameDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr><td class='ZmFieldLabel'><span id='";
e[a++]=o.id;
e[a++]="_renameLabel'>";
e[a++]=o.newLabel;
e[a++]=":</span></td></tr><tr><td><input type='text' autocomplete='off' class='Field' id='";
e[a++]=o.id;
e[a++]="_name' aria-labelledby='";
e[a++]=o.id;
e[a++]="_renameLabel' /></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmRenameDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmPasswordUpdateDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" class=\'ZPropertySheet\' cellspacing=\'6\'><tr><td colspan="2" id="';
e[a++]=o.id;
e[a++]="_desc\"></td></tr><tr><td class='Label' style='padding:0; text-align:right;'>";
e[a++]=o.labelAcct;
e[a++]=': </td><td id="';
e[a++]=o.id;
e[a++]="_acct\"></td></tr><tr><td class='Label' style='padding:0; text-align:right;'>";
e[a++]=o.labelPasswd;
e[a++]=": </td><td><input type='password' style='padding:0;' autocomplete='off' class='Field' id='";
e[a++]=o.id;
e[a++]="_name' /></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmPasswordUpdateDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmTimeDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_description' style='padding:3px 3px 10px;'>";
e[a++]=o.description;
e[a++]="</div><table role=\"presentation\" class='ZPropertySheet' cellspacing='6' width='330'><tr><td class='ZmFieldLabelRight'>";
e[a++]=o.label;
e[a++]=':</td><td><table role="presentation"><tr><td>';
e[a++]=AjxTemplate.expand("#DateField",{
id:o.id+"_date"}
);
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_miniCal' class=\"miniCalendarButton\" style='padding-right:1em;'></td><td id='";
e[a++]=o.id;
e[a++]="_time'></td></tr></table></td></tr><tr><td class='ZmFieldLabelRight'>";
e[a++]=ZmMsg.selectTimezoneLabel;
e[a++]="</td><td id='";
e[a++]=o.id;
e[a++]="_tzSelect'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmTimeDialog"}
,false);
AjxTemplate.register("share.Dialogs#DateField",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<input autocomplete='off' style='height:22px;' type='text' size=14 id='";
e[a++]=o.id;
e[a++]="' value='";
e[a++]=o.value;
e[a++]="'>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#DateField"}
,false);
AjxTemplate.register("share.Dialogs#UploadDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<div><div id="';
e[a++]=o.id;
e[a++]='_label" style="margin-bottom:0.5em;">';
e[a++]=ZmMsg.uploadChoose;
e[a++]="</div><div style=\"margin-bottom:0.5em;margin-left:1em;\"><form accept-charset='utf-8' method='POST' action='";
e[a++]=o.uri;
e[a++]="' id='";
e[a++]=o.id;
e[a++]="_form' enctype='multipart/form-data'><table role=\"presentation\" id='";
e[a++]=o.id;
e[a++]="_table' class='ZPropertySheet' cellspacing='6'></table></form></div><table role=\"presentation\" class='ZPropertySheet' cellspacing='6'><tr id=\"";
e[a++]=o.id;
e[a++]='_actionRow"><td>';
e[a++]=ZmMsg.uploadAction;
e[a++]='</td><td id="';
e[a++]=o.id;
e[a++]='_conflict"></td></tr><tr><td colspan="2" id="';
e[a++]=o.id;
e[a++]='_notesTD"><div>';
e[a++]=ZmMsg.notesLabel;
e[a++]='</div><textarea id="';
e[a++]=o.id;
e[a++]='_notes" style="height:80px; width:450px;"></textarea></td></tr><tr><td colspan="2" id="';
e[a++]=o.id;
e[a++]='_info"></td></tr><tr><td colspan="2" id="';
e[a++]=o.id;
e[a++]='_msg" style="width:450px;"></td></tr></table></div>';
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#UploadDialog"}
,false);
AjxTemplate.register("share.Dialogs#ZmFolderRetentionView",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation" style=\'margin:10px;\'><tr><td><input id="';
e[a++]=o.id;
e[a++]="_keepCheckbox\" type='checkbox'></td><td class='ZmFolderRetentionLabel' colspan=2><label for=\"";
e[a++]=o.id;
e[a++]='_keepCheckbox">';
e[a++]=ZmMsg.messageRetentionEnable;
e[a++]="</label></td></tr><tr><td></td><td colspan=2 style='padding-bottom:.5em;'>";
e[a++]=ZmMsg.messageRetentionExplanation;
e[a++]="</td></tr><tr><td></td><td class='ZmFieldLabelRight'><span id='";
e[a++]=o.id;
e[a++]="_retentionLabel'>";
e[a++]=ZmMsg.messageRetentionRange;
e[a++]="</span></td><td class='ZmFolderPolicySelection'><select id='";
e[a++]=o.id;
e[a++]="_keep' aria-label='";
e[a++]=ZmMsg.type;
e[a++]="' class='ZmFolderPolicySelect'/><input id='";
e[a++]=o.id;
e[a++]="_keepValue' class='ZmFolderPolicyAmountInput' type='text' aria-labelledby='";
e[a++]=o.id;
e[a++]="_retentionLabel' /><select id='";
e[a++]=o.id;
e[a++]="_keepUnit' aria-label='";
e[a++]=ZmMsg.unit;
e[a++]="' class='ZmFolderPolicyUnitSelect' /></td></tr><tr><td colspan=3>&nbsp;</td></tr><tr><td><input id=\"";
e[a++]=o.id;
e[a++]="_purgeCheckbox\" type='checkbox'></td><td class='ZmFolderRetentionLabel' colspan=2><label for=\"";
e[a++]=o.id;
e[a++]='_purgeCheckbox">';
e[a++]=ZmMsg.messageDisposalEnable;
e[a++]="</label></td></tr><tr><td></td><td colspan=2 style='padding-bottom:.5em;'>";
e[a++]=ZmMsg.messageDisposalExplanation;
e[a++]="</td></tr><tr><td></td><td class='ZmFieldLabelRight'><span id='";
e[a++]=o.id;
e[a++]="_disposalLabel'>";
e[a++]=ZmMsg.messageDisposalThreshold;
e[a++]="</span></td><td class='ZmFolderPolicySelection'><select id='";
e[a++]=o.id;
e[a++]="_purge' aria-label='";
e[a++]=ZmMsg.type;
e[a++]="' class='ZmFolderPolicySelect'/><input id='";
e[a++]=o.id;
e[a++]="_purgeValue' class='ZmFolderPolicyAmountInput' type='text' aria-labelledby='";
e[a++]=o.id;
e[a++]="_disposalLabel' /><select id='";
e[a++]=o.id;
e[a++]="_purgeUnit' aria-label='";
e[a++]=ZmMsg.unit;
e[a++]="' class='ZmFolderPolicyUnitSelect' /></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Dialogs#ZmFolderRetentionView"}
,false)
}
if(AjxPackage.define("share.Quota")){
AjxTemplate.register("share.Quota#UsedLimited",function(t,s,n,e){
var o=Boolean(e);
n=(typeof n=="string"?{
id:n}
:n)||{};
e=e||[];
var i=e.length;
var a="quotaUsed";
if(n.percent<85&&n.percent>65){
a="quotaWarning"
}else{
if(n.percent>=85){
a="quotaCritical"
}}
e[i++]="<div class='BannerBar'><div class='quotabar'><div style='width:";
e[i++]=n.percent;
e[i++]="%' class='";
e[i++]=a;
e[i++]="'></div></div></div>";
return o?e.length:e.join("")
}
,{
id:"share.Quota#UsedLimited","class":"BannerBar"}
,false);
AjxTemplate.register("share.Quota",AjxTemplate.getTemplate("share.Quota#UsedLimited"),AjxTemplate.getParams("share.Quota#UsedLimited"));
AjxTemplate.register("share.Quota#UsedUnlimited",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='BannerTextQuota' style='display:none;'>";
e[a++]=o.desc;
e[a++]="</div>";
return i?e.length:e.join("")
}
,{
id:"share.Quota#UsedUnlimited"}
,false);
AjxTemplate.register("share.Quota#Tooltip",function(t,s,n,e){
var o=Boolean(e);
n=(typeof n=="string"?{
id:n}
:n)||{};
e=e||[];
var i=e.length;
if(n.username!=n.login){
e[i++]='<div style="text-align:center;">';
e[i++]=n.login;
e[i++]="</div>"
}
e[i++]='<div style="text-align:center;margin-top:3px;">';
if(n.quota){
var a=AjxMessageFormat.format(ZmMsg.usingDescLimited,[n.size,"("+n.percent+"%)",n.limit]);
e[i++]=a
}else{
e[i++]="\n";
e[i++]="                    ";
e[i++]=n.desc;
e[i++]="\n";
e[i++]="                "
}
e[i++]="</div>";
return o?e.length:e.join("")
}
,{
id:"share.Quota#Tooltip"}
,false)
}
if(AjxPackage.define("share.Widgets")){
AjxTemplate.register("share.Widgets#ZmToolBarSeparator",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id=\'';
e[a++]=o.itemId;
e[a++]="' valign='middle'><div class='vertSep'></div></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmToolBarSeparator"}
,false);
AjxTemplate.register("share.Widgets",AjxTemplate.getTemplate("share.Widgets#ZmToolBarSeparator"),AjxTemplate.getParams("share.Widgets#ZmToolBarSeparator"));
AjxTemplate.register("share.Widgets#ZmAppChooser",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZToolbarTable'><tr valign='middle' id='";
e[a++]=o.id;
e[a++]="_items'><td id='";
e[a++]=o.id;
e[a++]='_suffix\' valign=bottom><div class=\'ZAppTabSpacer\'></div></td><td width="100%" valign="middle" align="right" style="padding-right: 10px;" id="admin_link_container">\n';
e[a++]="                &nbsp;\n";
e[a++]="            </td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmAppChooser","class":"ZWidget"}
,false);
AjxTemplate.register("share.Widgets#ZmAppChooserItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]=AjxTemplate.expand("dwt.Widgets#ZToolbarItem",o);
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmAppChooserItem"}
,false);
AjxTemplate.register("share.Widgets#ZmAppChooserButton",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"AppTab";
t[i++]='<table role="presentation" class=\'ZWidgetTable Z';
t[i++]=e;
t[i++]="Table Z";
t[i++]=e;
t[i++]="Border'style='table-layout:auto;'><tr><td id='";
t[i++]=n.id;
t[i++]="_left_icon'  \tclass='ZLeftIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_title'\t\tclass='ZWidgetTitle'></td><td id='";
t[i++]=n.id;
t[i++]="_right_icon' \tclass='ZRightIcon ZWidgetIcon'></td><td id='";
t[i++]=n.id;
t[i++]="_dropdown' \tclass='ZDropDown'></td></tr></table>";
return o?t.length:t.join("")
}
,{
id:"share.Widgets#ZmAppChooserButton","class":"ZAppTab"}
,false);
AjxTemplate.register("share.Widgets#ZmAppChooserSpacer",function(a,s,n,t){
var o=Boolean(t);
n=(typeof n=="string"?{
id:n}
:n)||{};
t=t||[];
var i=t.length;
var e=n.buttonClass||"AppTab";
t[i++]="<div class='Z";
t[i++]=e;
t[i++]="Spacer'></div>";
return o?t.length:t.join("")
}
,{
id:"share.Widgets#ZmAppChooserSpacer"}
,false);
AjxTemplate.register("share.Widgets#ZToast",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ZToastBG'><div class='ZToastContent'><div id='";
e[a++]=o.id;
e[a++]="_icon' class='ZToastIcon'></div><div id='";
e[a++]=o.id;
e[a++]="_text' class='ZToastText'></div></div></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZToast","class":"ZToastInfo"}
,false);
AjxTemplate.register("share.Widgets#ZmSearchToolBar",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZmSearchToolbarTable'><tr><td id='";
e[a++]=o.id;
e[a++]="_searchMenuButton' class='ZmSearchToolbarCell'></td><td><div class='ZmSearchToolbarDiv'><div id='";
e[a++]=o.id;
e[a++]="_inputField' class='ZmSearchInput'></div><div id='";
e[a++]=o.id;
e[a++]="_searchButton' class='ZmSearchButton' hint='icon'></div></div></td><!-- UNCOMMENT THIS IF YOU WANT CUSTOM SEARCH TO APPEAR AS A SEPARATE BUTTON ON SEARCH TOOLBAR\n";
e[a++]="\t\t\t<td class='ZmSearchToolbarSeparatorCell'><div id='";
e[a++]=o.id;
e[a++]="_customSearchButtonSep' class='vertSep' style='display:none'></div></td><td id='";
e[a++]=o.id;
e[a++]="_customSearchButton' class='ZmSearchToolbarCell'></td><td class='ZmSearchToolbarSeparatorCell'><div class='vertSep'></div></td><td id='";
e[a++]=o.id;
e[a++]="_saveButton' hint='icon' class='ZmSearchToolbarCell'></td>\n";
e[a++]="\t\t\t--><!-- UNCOMMENT THIS FOR THE ADVANCED BUTTONS TO APPEAR\n";
e[a++]="\t\t\t<td class='ZmSearchToolbarSeparatorCell'><div class='vertSep'></div></td><td id='";
e[a++]=o.id;
e[a++]="_advancedButton' hint='text' class='ZmSearchToolbarCell'></td>\n";
e[a++]="\t\t\t--></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmSearchToolBar"}
,false);
AjxTemplate.register("share.Widgets#ZmSearchResultsToolBar",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZmSearchToolbarTable'><tr><td class='ZmSearchResultText'><div id='";
e[a++]=o.id;
e[a++]="_icon' class='ImgWarning_12' style='display:none; margin-right:5px;'></div><span id='";
e[a++]=o.id;
e[a++]="_label'></span></td><td><table role=\"presentation\"><tr><td id='";
e[a++]=o.id;
e[a++]="_inputFieldCell' class='ZmSearchResultInputField'></td><td id='";
e[a++]=o.id;
e[a++]="_searchButton'   class='ZmSearchResultButton'></td><td id='";
e[a++]=o.id;
e[a++]="_saveButton'     class='ZmSearchResultButton'></td></tr></table></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmSearchResultsToolBar"}
,false);
AjxTemplate.register("share.Widgets#ZmSearchResultsFilterPanel",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_basicPanel'><div class='header'>";
e[a++]=ZmMsg.basicFilters;
e[a++]="</div><div id='";
e[a++]=o.id;
e[a++]="_basic'></div></div><div id='";
e[a++]=o.id;
e[a++]="_advancedPanel'><div class='header'>";
e[a++]=ZmMsg.advancedFilters;
e[a++]="</div><div id='";
e[a++]=o.id;
e[a++]="_advanced'></div></div><div><div class='header'>";
e[a++]=ZmMsg.conditionals;
e[a++]="</div><div style='margin:5px;'>";
e[a++]=ZmMsg.conditionalsDesc;
e[a++]="</div><div id='";
e[a++]=o.id;
e[a++]="_conditionals'></div></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmSearchResultsFilterPanel"}
,false);
AjxTemplate.register("share.Widgets#ZmPeopleAutocompleteListView",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr id='";
e[a++]=o.rowId;
e[a++]='\'><td><table role="presentation" style="{padding-top:4px; padding-bottom:4px}"><tr>';
if(o.photoUrl){
e[a++]='<td><img src="';
e[a++]=o.photoUrl;
e[a++]='" width=32 height=32></img></td>'
}else{
e[a++]="<td>";
e[a++]=AjxImg.getImageHtml("Person_32");
e[a++]="</td>"
}
e[a++]="<td><div class='ZmPeopleSearch-fullname' id='";
e[a++]=o.rowId;
e[a++]="-fullName'></div>";
if(o.title){
e[a++]="<div class='ZmPeopleSearch-title' id='";
e[a++]=o.rowId;
e[a++]="-title'>";
e[a++]=o.title;
e[a++]="</div>"
}
e[a++]="<? if (data.email){ ?><div id='";
e[a++]=o.rowId;
e[a++]="-email'></div><? } ?><? if (data.phone} { ?><div class='ZmPeopleSearch-phone' id='";
e[a++]=o.rowId;
e[a++]="-phone'>";
e[a++]=o.phone;
e[a++]="</div><? } ?></td></tr></table></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmPeopleAutocompleteListView"}
,false);
AjxTemplate.register("share.Widgets#ZmPeopleAutocompleteListView-NoResults",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr id='";
e[a++]=o.rowId;
e[a++]='\'><td class="ZmPeopleSearch-noresults">';
e[a++]=ZmMsg.noCallResults;
e[a++]="</td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmPeopleAutocompleteListView-NoResults"}
,false);
AjxTemplate.register("share.Widgets#ZmPeopleAutocompleteListView-MoreResults",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<tr><td><table role=\"presentation\"><tr><td width='32'>&nbsp;</td><td>";
e[a++]=ZmMsg.morePeopleResults;
e[a++]="</td></tr></table></td></tr>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmPeopleAutocompleteListView-MoreResults"}
,false);
AjxTemplate.register("share.Widgets#ZmChooseFolderDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ChooserDialog'><span id='";
e[a++]=o.id;
e[a++]="_folderDescDivId' style='margin: 0; margin-bottom: 2px'></span><div>";
e[a++]=ZmMsg.chooserDescription;
e[a++]="</div><div id='";
e[a++]=o.id;
e[a++]="_inputDivId'></div><div class='overview' id='";
e[a++]=o.id;
e[a++]="_folderTreeDivId'></div></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmChooseFolderDialog"}
,false);
AjxTemplate.register("share.Widgets#ZmChooseAccountDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ChooserDialog' style='width:300px'><table role=\"presentation\" width=100%><tr><td><center><div id='";
e[a++]=o.id;
e[a++]="_chooseAccountMsg'></div><div id='";
e[a++]=o.id;
e[a++]="_accountSelectId'></div></center></td></tr></table></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmChooseAccountDialog"}
,false);
AjxTemplate.register("share.Widgets#ZmPickTagDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='ChooserDialog'><div style='width:300px'>";
e[a++]=ZmMsg.chooserDescription;
e[a++]="</div><div id='";
e[a++]=o.id;
e[a++]="_inputDivId'></div><div style='background-color:white; width:100%; overflow:auto' id='";
e[a++]=o.id;
e[a++]="_tagTreeDivId'></div></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmPickTagDialog"}
,false);
AjxTemplate.register("share.Widgets#ZmDebugLogDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div class='DebugLogDialog-desc' id='";
e[a++]=o.id;
e[a++]="_desc'></div><div class='DebugLogDialog-log' id='";
e[a++]=o.id;
e[a++]="_log'></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmDebugLogDialog"}
,false);
AjxTemplate.register("share.Widgets#ZmDumpsterDialog",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<table role="presentation"><tr><td id=\'';
e[a++]=o.id;
e[a++]="_inputContainerId' class=\"DumpsterSearchInput\"></td><td id='";
e[a++]=o.id;
e[a++]="_searchButtonContainerId'></td></tr></table><div id='";
e[a++]=o.id;
e[a++]="_toolbar'></div><div id='";
e[a++]=o.id;
e[a++]="_listview'></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmDumpsterDialog"}
,false);
AjxTemplate.register("share.Widgets#ZmShareProxyToolTip",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<div style="width:250px"><div class="Img';
e[a++]=o.icon;
e[a++]='" style="float:left;vertical-align:top"></div><div style="font-weight:bold;font-size:1.1em;padding:3px;">';
e[a++]=AjxStringUtil.htmlEncode(o.normalizedFolderPath);
e[a++]='</div><div style="clear:both;"><table role="presentation" class="ZPropertySheet" cellspacing="6"><tr valign="top"><th align="right">';
e[a++]=ZmMsg.ownerLabel;
e[a++]="</th><td>";
e[a++]=AjxStringUtil.htmlEncode(o.normalizedOwnerName);
e[a++]='</td></tr><tr valign="top"><th align="right">';
e[a++]=ZmMsg.granteeLabel;
e[a++]="</th><td>";
e[a++]=AjxStringUtil.htmlEncode(o.normalizedGranteeName);
e[a++]='</td></tr><tr valign="top"><th align="right">';
e[a++]=ZmMsg.roleLabel;
e[a++]="</th><td>";
e[a++]=o.roleName;
e[a++]=" (";
e[a++]=o.roleActions;
e[a++]=')</td></tr><tr height="4"><td></td><td></td></tr><tr valign="top"><th align="right">';
e[a++]=ZmMsg.noteLabel;
e[a++]='</th><td><div style="margin-top:4px;font-size:.9em;">';
e[a++]=AjxMessageFormat.format(ZmMsg.sharedFoldersLinkHint,[AjxStringUtil.htmlEncode(o.defaultMountpointName)]);
e[a++]="</div></td></tr></table></div></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmShareProxyToolTip"}
,false);
AjxTemplate.register("share.Widgets#ZmShareSearchView",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]='<div class="FilterTree" style="width:300px;"><div id="';
e[a++]=o.id;
e[a++]='_FILTER" tabindex="100"></div><div id="';
e[a++]=o.id;
e[a++]='_TREE" tabindex="200"></div></div><table role="presentation" width="100%" class="ZPropertySheet" cellspacing="6"><tr><td>';
e[a++]=ZmMsg.sharedFoldersFindLabel;
e[a++]='</td><td><div id="';
e[a++]=o.id;
e[a++]='_EMAIL" tabindex="300"></div></td><td><div id="';
e[a++]=o.id;
e[a++]='_SEARCH" tabindex="400"></div></td></tr><tr><td>';
e[a++]=ZmMsg.includeLabel;
e[a++]=":</td><td colspan='2'><div id=\"";
e[a++]=o.id;
e[a++]='_APP" tabindex="500"></div></td></tr></table>';
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmShareSearchView"}
,false);
AjxTemplate.register("share.Widgets#ZmAddressInputField",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.holderId;
e[a++]="' class='addrBubbleHolder-empty'><span id='";
e[a++]=o.dragInsertionBarId;
e[a++]="' style='display:none' class='addrBubbleInsertionBar'>&nbsp;</span><";
e[a++]=o.inputTagName;
e[a++]=" autocomplete='off' aria-autocomplete='true' class='addrInputField user_font_system' id='";
e[a++]=o.inputId;
e[a++]="'\n";
e[a++]="\t\t";
if(o.label){
e[a++]=" aria-label='";
e[a++]=o.label;
e[a++]="' "
}
e[a++]="\n";
e[a++]="\t\t /></div>";
return i?e.length:e.join("")
}
,{
id:"share.Widgets#ZmAddressInputField"}
,false)
}
if(AjxPackage.define("zimbra.Widgets")){
AjxTemplate.register("zimbra.Widgets#ZmErrorDialogControls",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<div id='";
e[a++]=o.id;
e[a++]="_buttons' class='DwtDialogButtonBar'>";
if(AjxEnv.isNav){
e[a++]="<input type='button' id='";
e[a++]=o.id;
e[a++]="_focus' style='height:0px;width:0px;display:none;'>"
}
e[a++]="</div>";
return i?e.length:e.join("")
}
,{
id:"zimbra.Widgets#ZmErrorDialogControls",height:"32",width:"20"}
,false);
AjxTemplate.register("zimbra.Widgets",AjxTemplate.getTemplate("zimbra.Widgets#ZmErrorDialogControls"),AjxTemplate.getParams("zimbra.Widgets#ZmErrorDialogControls"));
AjxTemplate.register("zimbra.Widgets#ZmErrorDialogContent",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" width='100%' height='100%'><tr><td>";
e[a++]=o.message;
e[a++]="</td></tr>";
if(o.showDetails){
e[a++]="<tr><td><hr/></td></tr><tr><td style='height:100%;vertical-align:top;'>\n";
e[a++]="\t\t\t\t";
e[a++]=o.detail;
e[a++]="\n";
e[a++]="\t\t\t</td></tr>"
}
e[a++]="</table>";
return i?e.length:e.join("")
}
,{
id:"zimbra.Widgets#ZmErrorDialogContent"}
,false);
AjxTemplate.register("zimbra.Widgets#ZmColorMenuItem",function(t,n,o,e){
var i=Boolean(e);
o=(typeof o=="string"?{
id:o}
:o)||{};
e=e||[];
var a=e.length;
e[a++]="<table role=\"presentation\" class='ZWidgetTable ZMenuItemTable ZMenuItemBorder'><tr><td id='";
e[a++]=o.id;
e[a++]="_title' class='ZWidgetTitle'></td></tr></table>";
return i?e.length:e.join("")
}
,{
id:"zimbra.Widgets#ZmColorMenuItem","class":"ZWidget"}
,false)
};
